/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const Ed = globalThis, C_ = Ed.ShadowRoot && (Ed.ShadyCSS === void 0 || Ed.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, A_ = Symbol(), o0 = /* @__PURE__ */ new WeakMap();
let HA = class {
  constructor(e, r, n) {
    if (this._$cssResult$ = !0, n !== A_) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
    this.cssText = e, this.t = r;
  }
  get styleSheet() {
    let e = this.o;
    const r = this.t;
    if (C_ && e === void 0) {
      const n = r !== void 0 && r.length === 1;
      n && (e = o0.get(r)), e === void 0 && ((this.o = e = new CSSStyleSheet()).replaceSync(this.cssText), n && o0.set(r, e));
    }
    return e;
  }
  toString() {
    return this.cssText;
  }
};
const VL = (t) => new HA(typeof t == "string" ? t : t + "", void 0, A_), Qte = (t, ...e) => {
  const r = t.length === 1 ? t[0] : e.reduce((n, a, i) => n + ((o) => {
    if (o._$cssResult$ === !0) return o.cssText;
    if (typeof o == "number") return o;
    throw Error("Value passed to 'css' function must be a 'css' function result: " + o + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
  })(a) + t[i + 1], t[0]);
  return new HA(r, t, A_);
}, $L = (t, e) => {
  if (C_) t.adoptedStyleSheets = e.map((r) => r instanceof CSSStyleSheet ? r : r.styleSheet);
  else for (const r of e) {
    const n = document.createElement("style"), a = Ed.litNonce;
    a !== void 0 && n.setAttribute("nonce", a), n.textContent = r.cssText, t.appendChild(n);
  }
}, s0 = C_ ? (t) => t : (t) => t instanceof CSSStyleSheet ? ((e) => {
  let r = "";
  for (const n of e.cssRules) r += n.cssText;
  return VL(r);
})(t) : t;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const { is: HL, defineProperty: WL, getOwnPropertyDescriptor: qL, getOwnPropertyNames: YL, getOwnPropertySymbols: KL, getPrototypeOf: ZL } = Object, Ua = globalThis, l0 = Ua.trustedTypes, XL = l0 ? l0.emptyScript : "", Kf = Ua.reactiveElementPolyfillSupport, Ll = (t, e) => t, qd = { toAttribute(t, e) {
  switch (e) {
    case Boolean:
      t = t ? XL : null;
      break;
    case Object:
    case Array:
      t = t == null ? t : JSON.stringify(t);
  }
  return t;
}, fromAttribute(t, e) {
  let r = t;
  switch (e) {
    case Boolean:
      r = t !== null;
      break;
    case Number:
      r = t === null ? null : Number(t);
      break;
    case Object:
    case Array:
      try {
        r = JSON.parse(t);
      } catch {
        r = null;
      }
  }
  return r;
} }, w_ = (t, e) => !HL(t, e), u0 = { attribute: !0, type: String, converter: qd, reflect: !1, hasChanged: w_ };
Symbol.metadata ?? (Symbol.metadata = Symbol("metadata")), Ua.litPropertyMetadata ?? (Ua.litPropertyMetadata = /* @__PURE__ */ new WeakMap());
class Ko extends HTMLElement {
  static addInitializer(e) {
    this._$Ei(), (this.l ?? (this.l = [])).push(e);
  }
  static get observedAttributes() {
    return this.finalize(), this._$Eh && [...this._$Eh.keys()];
  }
  static createProperty(e, r = u0) {
    if (r.state && (r.attribute = !1), this._$Ei(), this.elementProperties.set(e, r), !r.noAccessor) {
      const n = Symbol(), a = this.getPropertyDescriptor(e, n, r);
      a !== void 0 && WL(this.prototype, e, a);
    }
  }
  static getPropertyDescriptor(e, r, n) {
    const { get: a, set: i } = qL(this.prototype, e) ?? { get() {
      return this[r];
    }, set(o) {
      this[r] = o;
    } };
    return { get() {
      return a == null ? void 0 : a.call(this);
    }, set(o) {
      const s = a == null ? void 0 : a.call(this);
      i.call(this, o), this.requestUpdate(e, s, n);
    }, configurable: !0, enumerable: !0 };
  }
  static getPropertyOptions(e) {
    return this.elementProperties.get(e) ?? u0;
  }
  static _$Ei() {
    if (this.hasOwnProperty(Ll("elementProperties"))) return;
    const e = ZL(this);
    e.finalize(), e.l !== void 0 && (this.l = [...e.l]), this.elementProperties = new Map(e.elementProperties);
  }
  static finalize() {
    if (this.hasOwnProperty(Ll("finalized"))) return;
    if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(Ll("properties"))) {
      const r = this.properties, n = [...YL(r), ...KL(r)];
      for (const a of n) this.createProperty(a, r[a]);
    }
    const e = this[Symbol.metadata];
    if (e !== null) {
      const r = litPropertyMetadata.get(e);
      if (r !== void 0) for (const [n, a] of r) this.elementProperties.set(n, a);
    }
    this._$Eh = /* @__PURE__ */ new Map();
    for (const [r, n] of this.elementProperties) {
      const a = this._$Eu(r, n);
      a !== void 0 && this._$Eh.set(a, r);
    }
    this.elementStyles = this.finalizeStyles(this.styles);
  }
  static finalizeStyles(e) {
    const r = [];
    if (Array.isArray(e)) {
      const n = new Set(e.flat(1 / 0).reverse());
      for (const a of n) r.unshift(s0(a));
    } else e !== void 0 && r.push(s0(e));
    return r;
  }
  static _$Eu(e, r) {
    const n = r.attribute;
    return n === !1 ? void 0 : typeof n == "string" ? n : typeof e == "string" ? e.toLowerCase() : void 0;
  }
  constructor() {
    super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();
  }
  _$Ev() {
    var e;
    this._$ES = new Promise((r) => this.enableUpdating = r), this._$AL = /* @__PURE__ */ new Map(), this._$E_(), this.requestUpdate(), (e = this.constructor.l) == null || e.forEach((r) => r(this));
  }
  addController(e) {
    var r;
    (this._$EO ?? (this._$EO = /* @__PURE__ */ new Set())).add(e), this.renderRoot !== void 0 && this.isConnected && ((r = e.hostConnected) == null || r.call(e));
  }
  removeController(e) {
    var r;
    (r = this._$EO) == null || r.delete(e);
  }
  _$E_() {
    const e = /* @__PURE__ */ new Map(), r = this.constructor.elementProperties;
    for (const n of r.keys()) this.hasOwnProperty(n) && (e.set(n, this[n]), delete this[n]);
    e.size > 0 && (this._$Ep = e);
  }
  createRenderRoot() {
    const e = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
    return $L(e, this.constructor.elementStyles), e;
  }
  connectedCallback() {
    var e;
    this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), (e = this._$EO) == null || e.forEach((r) => {
      var n;
      return (n = r.hostConnected) == null ? void 0 : n.call(r);
    });
  }
  enableUpdating(e) {
  }
  disconnectedCallback() {
    var e;
    (e = this._$EO) == null || e.forEach((r) => {
      var n;
      return (n = r.hostDisconnected) == null ? void 0 : n.call(r);
    });
  }
  attributeChangedCallback(e, r, n) {
    this._$AK(e, n);
  }
  _$EC(e, r) {
    var i;
    const n = this.constructor.elementProperties.get(e), a = this.constructor._$Eu(e, n);
    if (a !== void 0 && n.reflect === !0) {
      const o = (((i = n.converter) == null ? void 0 : i.toAttribute) !== void 0 ? n.converter : qd).toAttribute(r, n.type);
      this._$Em = e, o == null ? this.removeAttribute(a) : this.setAttribute(a, o), this._$Em = null;
    }
  }
  _$AK(e, r) {
    var i;
    const n = this.constructor, a = n._$Eh.get(e);
    if (a !== void 0 && this._$Em !== a) {
      const o = n.getPropertyOptions(a), s = typeof o.converter == "function" ? { fromAttribute: o.converter } : ((i = o.converter) == null ? void 0 : i.fromAttribute) !== void 0 ? o.converter : qd;
      this._$Em = a, this[a] = s.fromAttribute(r, o.type), this._$Em = null;
    }
  }
  requestUpdate(e, r, n) {
    if (e !== void 0) {
      if (n ?? (n = this.constructor.getPropertyOptions(e)), !(n.hasChanged ?? w_)(this[e], r)) return;
      this.P(e, r, n);
    }
    this.isUpdatePending === !1 && (this._$ES = this._$ET());
  }
  P(e, r, n) {
    this._$AL.has(e) || this._$AL.set(e, r), n.reflect === !0 && this._$Em !== e && (this._$Ej ?? (this._$Ej = /* @__PURE__ */ new Set())).add(e);
  }
  async _$ET() {
    this.isUpdatePending = !0;
    try {
      await this._$ES;
    } catch (r) {
      Promise.reject(r);
    }
    const e = this.scheduleUpdate();
    return e != null && await e, !this.isUpdatePending;
  }
  scheduleUpdate() {
    return this.performUpdate();
  }
  performUpdate() {
    var n;
    if (!this.isUpdatePending) return;
    if (!this.hasUpdated) {
      if (this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this._$Ep) {
        for (const [i, o] of this._$Ep) this[i] = o;
        this._$Ep = void 0;
      }
      const a = this.constructor.elementProperties;
      if (a.size > 0) for (const [i, o] of a) o.wrapped !== !0 || this._$AL.has(i) || this[i] === void 0 || this.P(i, this[i], o);
    }
    let e = !1;
    const r = this._$AL;
    try {
      e = this.shouldUpdate(r), e ? (this.willUpdate(r), (n = this._$EO) == null || n.forEach((a) => {
        var i;
        return (i = a.hostUpdate) == null ? void 0 : i.call(a);
      }), this.update(r)) : this._$EU();
    } catch (a) {
      throw e = !1, this._$EU(), a;
    }
    e && this._$AE(r);
  }
  willUpdate(e) {
  }
  _$AE(e) {
    var r;
    (r = this._$EO) == null || r.forEach((n) => {
      var a;
      return (a = n.hostUpdated) == null ? void 0 : a.call(n);
    }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(e)), this.updated(e);
  }
  _$EU() {
    this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = !1;
  }
  get updateComplete() {
    return this.getUpdateComplete();
  }
  getUpdateComplete() {
    return this._$ES;
  }
  shouldUpdate(e) {
    return !0;
  }
  update(e) {
    this._$Ej && (this._$Ej = this._$Ej.forEach((r) => this._$EC(r, this[r]))), this._$EU();
  }
  updated(e) {
  }
  firstUpdated(e) {
  }
}
Ko.elementStyles = [], Ko.shadowRootOptions = { mode: "open" }, Ko[Ll("elementProperties")] = /* @__PURE__ */ new Map(), Ko[Ll("finalized")] = /* @__PURE__ */ new Map(), Kf == null || Kf({ ReactiveElement: Ko }), (Ua.reactiveElementVersions ?? (Ua.reactiveElementVersions = [])).push("2.0.4");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const Pl = globalThis, Yd = Pl.trustedTypes, c0 = Yd ? Yd.createPolicy("lit-html", { createHTML: (t) => t }) : void 0, WA = "$lit$", Da = `lit$${Math.random().toFixed(9).slice(2)}$`, qA = "?" + Da, QL = `<${qA}>`, ao = document, Jl = () => ao.createComment(""), eu = (t) => t === null || typeof t != "object" && typeof t != "function", D_ = Array.isArray, jL = (t) => D_(t) || typeof (t == null ? void 0 : t[Symbol.iterator]) == "function", Zf = `[ 	
\f\r]`, Hs = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, d0 = /-->/g, p0 = />/g, ai = RegExp(`>|${Zf}(?:([^\\s"'>=/]+)(${Zf}*=${Zf}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), f0 = /'/g, h0 = /"/g, YA = /^(?:script|style|textarea|title)$/i, JL = (t) => (e, ...r) => ({ _$litType$: t, strings: e, values: r }), jte = JL(1), ea = Symbol.for("lit-noChange"), bt = Symbol.for("lit-nothing"), g0 = /* @__PURE__ */ new WeakMap(), Ui = ao.createTreeWalker(ao, 129);
function KA(t, e) {
  if (!D_(t) || !t.hasOwnProperty("raw")) throw Error("invalid template strings array");
  return c0 !== void 0 ? c0.createHTML(e) : e;
}
const eP = (t, e) => {
  const r = t.length - 1, n = [];
  let a, i = e === 2 ? "<svg>" : e === 3 ? "<math>" : "", o = Hs;
  for (let s = 0; s < r; s++) {
    const l = t[s];
    let u, c, d = -1, p = 0;
    for (; p < l.length && (o.lastIndex = p, c = o.exec(l), c !== null); ) p = o.lastIndex, o === Hs ? c[1] === "!--" ? o = d0 : c[1] !== void 0 ? o = p0 : c[2] !== void 0 ? (YA.test(c[2]) && (a = RegExp("</" + c[2], "g")), o = ai) : c[3] !== void 0 && (o = ai) : o === ai ? c[0] === ">" ? (o = a ?? Hs, d = -1) : c[1] === void 0 ? d = -2 : (d = o.lastIndex - c[2].length, u = c[1], o = c[3] === void 0 ? ai : c[3] === '"' ? h0 : f0) : o === h0 || o === f0 ? o = ai : o === d0 || o === p0 ? o = Hs : (o = ai, a = void 0);
    const f = o === ai && t[s + 1].startsWith("/>") ? " " : "";
    i += o === Hs ? l + QL : d >= 0 ? (n.push(u), l.slice(0, d) + WA + l.slice(d) + Da + f) : l + Da + (d === -2 ? s : f);
  }
  return [KA(t, i + (t[r] || "<?>") + (e === 2 ? "</svg>" : e === 3 ? "</math>" : "")), n];
};
class tu {
  constructor({ strings: e, _$litType$: r }, n) {
    let a;
    this.parts = [];
    let i = 0, o = 0;
    const s = e.length - 1, l = this.parts, [u, c] = eP(e, r);
    if (this.el = tu.createElement(u, n), Ui.currentNode = this.el.content, r === 2 || r === 3) {
      const d = this.el.content.firstChild;
      d.replaceWith(...d.childNodes);
    }
    for (; (a = Ui.nextNode()) !== null && l.length < s; ) {
      if (a.nodeType === 1) {
        if (a.hasAttributes()) for (const d of a.getAttributeNames()) if (d.endsWith(WA)) {
          const p = c[o++], f = a.getAttribute(d).split(Da), h = /([.?@])?(.*)/.exec(p);
          l.push({ type: 1, index: i, name: h[2], strings: f, ctor: h[1] === "." ? rP : h[1] === "?" ? nP : h[1] === "@" ? aP : Yp }), a.removeAttribute(d);
        } else d.startsWith(Da) && (l.push({ type: 6, index: i }), a.removeAttribute(d));
        if (YA.test(a.tagName)) {
          const d = a.textContent.split(Da), p = d.length - 1;
          if (p > 0) {
            a.textContent = Yd ? Yd.emptyScript : "";
            for (let f = 0; f < p; f++) a.append(d[f], Jl()), Ui.nextNode(), l.push({ type: 2, index: ++i });
            a.append(d[p], Jl());
          }
        }
      } else if (a.nodeType === 8) if (a.data === qA) l.push({ type: 2, index: i });
      else {
        let d = -1;
        for (; (d = a.data.indexOf(Da, d + 1)) !== -1; ) l.push({ type: 7, index: i }), d += Da.length - 1;
      }
      i++;
    }
  }
  static createElement(e, r) {
    const n = ao.createElement("template");
    return n.innerHTML = e, n;
  }
}
function ps(t, e, r = t, n) {
  var o, s;
  if (e === ea) return e;
  let a = n !== void 0 ? (o = r._$Co) == null ? void 0 : o[n] : r._$Cl;
  const i = eu(e) ? void 0 : e._$litDirective$;
  return (a == null ? void 0 : a.constructor) !== i && ((s = a == null ? void 0 : a._$AO) == null || s.call(a, !1), i === void 0 ? a = void 0 : (a = new i(t), a._$AT(t, r, n)), n !== void 0 ? (r._$Co ?? (r._$Co = []))[n] = a : r._$Cl = a), a !== void 0 && (e = ps(t, a._$AS(t, e.values), a, n)), e;
}
class tP {
  constructor(e, r) {
    this._$AV = [], this._$AN = void 0, this._$AD = e, this._$AM = r;
  }
  get parentNode() {
    return this._$AM.parentNode;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  u(e) {
    const { el: { content: r }, parts: n } = this._$AD, a = ((e == null ? void 0 : e.creationScope) ?? ao).importNode(r, !0);
    Ui.currentNode = a;
    let i = Ui.nextNode(), o = 0, s = 0, l = n[0];
    for (; l !== void 0; ) {
      if (o === l.index) {
        let u;
        l.type === 2 ? u = new Pu(i, i.nextSibling, this, e) : l.type === 1 ? u = new l.ctor(i, l.name, l.strings, this, e) : l.type === 6 && (u = new iP(i, this, e)), this._$AV.push(u), l = n[++s];
      }
      o !== (l == null ? void 0 : l.index) && (i = Ui.nextNode(), o++);
    }
    return Ui.currentNode = ao, a;
  }
  p(e) {
    let r = 0;
    for (const n of this._$AV) n !== void 0 && (n.strings !== void 0 ? (n._$AI(e, n, r), r += n.strings.length - 2) : n._$AI(e[r])), r++;
  }
}
class Pu {
  get _$AU() {
    var e;
    return ((e = this._$AM) == null ? void 0 : e._$AU) ?? this._$Cv;
  }
  constructor(e, r, n, a) {
    this.type = 2, this._$AH = bt, this._$AN = void 0, this._$AA = e, this._$AB = r, this._$AM = n, this.options = a, this._$Cv = (a == null ? void 0 : a.isConnected) ?? !0;
  }
  get parentNode() {
    let e = this._$AA.parentNode;
    const r = this._$AM;
    return r !== void 0 && (e == null ? void 0 : e.nodeType) === 11 && (e = r.parentNode), e;
  }
  get startNode() {
    return this._$AA;
  }
  get endNode() {
    return this._$AB;
  }
  _$AI(e, r = this) {
    e = ps(this, e, r), eu(e) ? e === bt || e == null || e === "" ? (this._$AH !== bt && this._$AR(), this._$AH = bt) : e !== this._$AH && e !== ea && this._(e) : e._$litType$ !== void 0 ? this.$(e) : e.nodeType !== void 0 ? this.T(e) : jL(e) ? this.k(e) : this._(e);
  }
  O(e) {
    return this._$AA.parentNode.insertBefore(e, this._$AB);
  }
  T(e) {
    this._$AH !== e && (this._$AR(), this._$AH = this.O(e));
  }
  _(e) {
    this._$AH !== bt && eu(this._$AH) ? this._$AA.nextSibling.data = e : this.T(ao.createTextNode(e)), this._$AH = e;
  }
  $(e) {
    var i;
    const { values: r, _$litType$: n } = e, a = typeof n == "number" ? this._$AC(e) : (n.el === void 0 && (n.el = tu.createElement(KA(n.h, n.h[0]), this.options)), n);
    if (((i = this._$AH) == null ? void 0 : i._$AD) === a) this._$AH.p(r);
    else {
      const o = new tP(a, this), s = o.u(this.options);
      o.p(r), this.T(s), this._$AH = o;
    }
  }
  _$AC(e) {
    let r = g0.get(e.strings);
    return r === void 0 && g0.set(e.strings, r = new tu(e)), r;
  }
  k(e) {
    D_(this._$AH) || (this._$AH = [], this._$AR());
    const r = this._$AH;
    let n, a = 0;
    for (const i of e) a === r.length ? r.push(n = new Pu(this.O(Jl()), this.O(Jl()), this, this.options)) : n = r[a], n._$AI(i), a++;
    a < r.length && (this._$AR(n && n._$AB.nextSibling, a), r.length = a);
  }
  _$AR(e = this._$AA.nextSibling, r) {
    var n;
    for ((n = this._$AP) == null ? void 0 : n.call(this, !1, !0, r); e && e !== this._$AB; ) {
      const a = e.nextSibling;
      e.remove(), e = a;
    }
  }
  setConnected(e) {
    var r;
    this._$AM === void 0 && (this._$Cv = e, (r = this._$AP) == null || r.call(this, e));
  }
}
let Yp = class {
  get tagName() {
    return this.element.tagName;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  constructor(e, r, n, a, i) {
    this.type = 1, this._$AH = bt, this._$AN = void 0, this.element = e, this.name = r, this._$AM = a, this.options = i, n.length > 2 || n[0] !== "" || n[1] !== "" ? (this._$AH = Array(n.length - 1).fill(new String()), this.strings = n) : this._$AH = bt;
  }
  _$AI(e, r = this, n, a) {
    const i = this.strings;
    let o = !1;
    if (i === void 0) e = ps(this, e, r, 0), o = !eu(e) || e !== this._$AH && e !== ea, o && (this._$AH = e);
    else {
      const s = e;
      let l, u;
      for (e = i[0], l = 0; l < i.length - 1; l++) u = ps(this, s[n + l], r, l), u === ea && (u = this._$AH[l]), o || (o = !eu(u) || u !== this._$AH[l]), u === bt ? e = bt : e !== bt && (e += (u ?? "") + i[l + 1]), this._$AH[l] = u;
    }
    o && !a && this.j(e);
  }
  j(e) {
    e === bt ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, e ?? "");
  }
};
class rP extends Yp {
  constructor() {
    super(...arguments), this.type = 3;
  }
  j(e) {
    this.element[this.name] = e === bt ? void 0 : e;
  }
}
class nP extends Yp {
  constructor() {
    super(...arguments), this.type = 4;
  }
  j(e) {
    this.element.toggleAttribute(this.name, !!e && e !== bt);
  }
}
class aP extends Yp {
  constructor(e, r, n, a, i) {
    super(e, r, n, a, i), this.type = 5;
  }
  _$AI(e, r = this) {
    if ((e = ps(this, e, r, 0) ?? bt) === ea) return;
    const n = this._$AH, a = e === bt && n !== bt || e.capture !== n.capture || e.once !== n.once || e.passive !== n.passive, i = e !== bt && (n === bt || a);
    a && this.element.removeEventListener(this.name, this, n), i && this.element.addEventListener(this.name, this, e), this._$AH = e;
  }
  handleEvent(e) {
    var r;
    typeof this._$AH == "function" ? this._$AH.call(((r = this.options) == null ? void 0 : r.host) ?? this.element, e) : this._$AH.handleEvent(e);
  }
}
class iP {
  constructor(e, r, n) {
    this.element = e, this.type = 6, this._$AN = void 0, this._$AM = r, this.options = n;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AI(e) {
    ps(this, e);
  }
}
const Xf = Pl.litHtmlPolyfillSupport;
Xf == null || Xf(tu, Pu), (Pl.litHtmlVersions ?? (Pl.litHtmlVersions = [])).push("3.2.1");
const oP = (t, e, r) => {
  const n = (r == null ? void 0 : r.renderBefore) ?? e;
  let a = n._$litPart$;
  if (a === void 0) {
    const i = (r == null ? void 0 : r.renderBefore) ?? null;
    n._$litPart$ = a = new Pu(e.insertBefore(Jl(), i), i, void 0, r ?? {});
  }
  return a._$AI(t), a;
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
let Td = class extends Ko {
  constructor() {
    super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
  }
  createRenderRoot() {
    var r;
    const e = super.createRenderRoot();
    return (r = this.renderOptions).renderBefore ?? (r.renderBefore = e.firstChild), e;
  }
  update(e) {
    const r = this.render();
    this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(e), this._$Do = oP(r, this.renderRoot, this.renderOptions);
  }
  connectedCallback() {
    var e;
    super.connectedCallback(), (e = this._$Do) == null || e.setConnected(!0);
  }
  disconnectedCallback() {
    var e;
    super.disconnectedCallback(), (e = this._$Do) == null || e.setConnected(!1);
  }
  render() {
    return ea;
  }
};
var $A;
Td._$litElement$ = !0, Td.finalized = !0, ($A = globalThis.litElementHydrateSupport) == null || $A.call(globalThis, { LitElement: Td });
const Qf = globalThis.litElementPolyfillSupport;
Qf == null || Qf({ LitElement: Td });
(globalThis.litElementVersions ?? (globalThis.litElementVersions = [])).push("4.1.1");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const ZA = { CHILD: 2 }, XA = (t) => (...e) => ({ _$litDirective$: t, values: e });
let QA = class {
  constructor(e) {
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AT(e, r, n) {
    this._$Ct = e, this._$AM = r, this._$Ci = n;
  }
  _$AS(e, r) {
    return this.update(e, r);
  }
  update(e, r) {
    return this.render(...r);
  }
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
let Rv = class extends QA {
  constructor(e) {
    if (super(e), this.it = bt, e.type !== ZA.CHILD) throw Error(this.constructor.directiveName + "() can only be used in child bindings");
  }
  render(e) {
    if (e === bt || e == null) return this._t = void 0, this.it = e;
    if (e === ea) return e;
    if (typeof e != "string") throw Error(this.constructor.directiveName + "() called with a non-string value");
    if (e === this.it) return this._t;
    this.it = e;
    const r = [e];
    return r.raw = r, this._t = { _$litType$: this.constructor.resultType, strings: r, values: [] };
  }
};
Rv.directiveName = "unsafeHTML", Rv.resultType = 1;
const nre = XA(Rv);
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const sP = (t) => t === null || typeof t != "object" && typeof t != "function", lP = (t) => t.strings === void 0;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const kl = (t, e) => {
  var n;
  const r = t._$AN;
  if (r === void 0) return !1;
  for (const a of r) (n = a._$AO) == null || n.call(a, e, !1), kl(a, e);
  return !0;
}, Kd = (t) => {
  let e, r;
  do {
    if ((e = t._$AM) === void 0) break;
    r = e._$AN, r.delete(t), t = e;
  } while ((r == null ? void 0 : r.size) === 0);
}, jA = (t) => {
  for (let e; e = t._$AM; t = e) {
    let r = e._$AN;
    if (r === void 0) e._$AN = r = /* @__PURE__ */ new Set();
    else if (r.has(t)) break;
    r.add(t), dP(e);
  }
};
function uP(t) {
  this._$AN !== void 0 ? (Kd(this), this._$AM = t, jA(this)) : this._$AM = t;
}
function cP(t, e = !1, r = 0) {
  const n = this._$AH, a = this._$AN;
  if (a !== void 0 && a.size !== 0) if (e) if (Array.isArray(n)) for (let i = r; i < n.length; i++) kl(n[i], !1), Kd(n[i]);
  else n != null && (kl(n, !1), Kd(n));
  else kl(this, t);
}
const dP = (t) => {
  t.type == ZA.CHILD && (t._$AP ?? (t._$AP = cP), t._$AQ ?? (t._$AQ = uP));
};
class pP extends QA {
  constructor() {
    super(...arguments), this._$AN = void 0;
  }
  _$AT(e, r, n) {
    super._$AT(e, r, n), jA(this), this.isConnected = e._$AU;
  }
  _$AO(e, r = !0) {
    var n, a;
    e !== this.isConnected && (this.isConnected = e, e ? (n = this.reconnected) == null || n.call(this) : (a = this.disconnected) == null || a.call(this)), r && (kl(this, e), Kd(this));
  }
  setValue(e) {
    if (lP(this._$Ct)) this._$Ct._$AI(e, this);
    else {
      const r = [...this._$Ct._$AH];
      r[this._$Ci] = e, this._$Ct._$AI(r, this, 0);
    }
  }
  disconnected() {
  }
  reconnected() {
  }
}
/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
class fP {
  constructor(e) {
    this.Y = e;
  }
  disconnect() {
    this.Y = void 0;
  }
  reconnect(e) {
    this.Y = e;
  }
  deref() {
    return this.Y;
  }
}
let hP = class {
  constructor() {
    this.Z = void 0, this.q = void 0;
  }
  get() {
    return this.Z;
  }
  pause() {
    this.Z ?? (this.Z = new Promise((e) => this.q = e));
  }
  resume() {
    var e;
    (e = this.q) == null || e.call(this), this.Z = this.q = void 0;
  }
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const v0 = (t) => !sP(t) && typeof t.then == "function", m0 = 1073741823;
let gP = class extends pP {
  constructor() {
    super(...arguments), this._$Cwt = m0, this._$Cbt = [], this._$CK = new fP(this), this._$CX = new hP();
  }
  render(...e) {
    return e.find((r) => !v0(r)) ?? ea;
  }
  update(e, r) {
    const n = this._$Cbt;
    let a = n.length;
    this._$Cbt = r;
    const i = this._$CK, o = this._$CX;
    this.isConnected || this.disconnected();
    for (let s = 0; s < r.length && !(s > this._$Cwt); s++) {
      const l = r[s];
      if (!v0(l)) return this._$Cwt = s, l;
      s < a && l === n[s] || (this._$Cwt = m0, a = 0, Promise.resolve(l).then(async (u) => {
        for (; o.get(); ) await o.get();
        const c = i.deref();
        if (c !== void 0) {
          const d = c._$Cbt.indexOf(l);
          d > -1 && d < c._$Cwt && (c._$Cwt = d, c.setValue(u));
        }
      }));
    }
    return ea;
  }
  disconnected() {
    this._$CK.disconnect(), this._$CX.pause();
  }
  reconnected() {
    this._$CK.reconnect(this), this._$CX.resume();
  }
};
const ore = XA(gP);
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const sre = (t) => (e, r) => {
  r !== void 0 ? r.addInitializer(() => {
    customElements.define(t, e);
  }) : customElements.define(t, e);
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const vP = { attribute: !0, type: String, converter: qd, reflect: !1, hasChanged: w_ }, mP = (t = vP, e, r) => {
  const { kind: n, metadata: a } = r;
  let i = globalThis.litPropertyMetadata.get(a);
  if (i === void 0 && globalThis.litPropertyMetadata.set(a, i = /* @__PURE__ */ new Map()), i.set(r.name, t), n === "accessor") {
    const { name: o } = r;
    return { set(s) {
      const l = e.get.call(this);
      e.set.call(this, s), this.requestUpdate(o, l, t);
    }, init(s) {
      return s !== void 0 && this.P(o, void 0, t), s;
    } };
  }
  if (n === "setter") {
    const { name: o } = r;
    return function(s) {
      const l = this[o];
      e.call(this, s), this.requestUpdate(o, l, t);
    };
  }
  throw Error("Unsupported decorator location: " + n);
};
function _P(t) {
  return (e, r) => typeof r == "object" ? mP(t, e, r) : ((n, a, i) => {
    const o = a.hasOwnProperty(i);
    return a.constructor.createProperty(i, o ? { ...n, wrapped: !0 } : n), o ? Object.getOwnPropertyDescriptor(a, i) : void 0;
  })(t, e, r);
}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
function lre(t) {
  return _P({ ...t, state: !0, attribute: !1 });
}
const _0 = {};
function yP(t) {
  let e = _0[t];
  if (e)
    return e;
  e = _0[t] = [];
  for (let r = 0; r < 128; r++) {
    const n = String.fromCharCode(r);
    e.push(n);
  }
  for (let r = 0; r < t.length; r++) {
    const n = t.charCodeAt(r);
    e[n] = "%" + ("0" + n.toString(16).toUpperCase()).slice(-2);
  }
  return e;
}
function fs(t, e) {
  typeof e != "string" && (e = fs.defaultChars);
  const r = yP(e);
  return t.replace(/(%[a-f0-9]{2})+/gi, function(n) {
    let a = "";
    for (let i = 0, o = n.length; i < o; i += 3) {
      const s = parseInt(n.slice(i + 1, i + 3), 16);
      if (s < 128) {
        a += r[s];
        continue;
      }
      if ((s & 224) === 192 && i + 3 < o) {
        const l = parseInt(n.slice(i + 4, i + 6), 16);
        if ((l & 192) === 128) {
          const u = s << 6 & 1984 | l & 63;
          u < 128 ? a += "��" : a += String.fromCharCode(u), i += 3;
          continue;
        }
      }
      if ((s & 240) === 224 && i + 6 < o) {
        const l = parseInt(n.slice(i + 4, i + 6), 16), u = parseInt(n.slice(i + 7, i + 9), 16);
        if ((l & 192) === 128 && (u & 192) === 128) {
          const c = s << 12 & 61440 | l << 6 & 4032 | u & 63;
          c < 2048 || c >= 55296 && c <= 57343 ? a += "���" : a += String.fromCharCode(c), i += 6;
          continue;
        }
      }
      if ((s & 248) === 240 && i + 9 < o) {
        const l = parseInt(n.slice(i + 4, i + 6), 16), u = parseInt(n.slice(i + 7, i + 9), 16), c = parseInt(n.slice(i + 10, i + 12), 16);
        if ((l & 192) === 128 && (u & 192) === 128 && (c & 192) === 128) {
          let d = s << 18 & 1835008 | l << 12 & 258048 | u << 6 & 4032 | c & 63;
          d < 65536 || d > 1114111 ? a += "����" : (d -= 65536, a += String.fromCharCode(55296 + (d >> 10), 56320 + (d & 1023))), i += 9;
          continue;
        }
      }
      a += "�";
    }
    return a;
  });
}
fs.defaultChars = ";/?:@&=+$,#";
fs.componentChars = "";
const y0 = {};
function bP(t) {
  let e = y0[t];
  if (e)
    return e;
  e = y0[t] = [];
  for (let r = 0; r < 128; r++) {
    const n = String.fromCharCode(r);
    /^[0-9a-z]$/i.test(n) ? e.push(n) : e.push("%" + ("0" + r.toString(16).toUpperCase()).slice(-2));
  }
  for (let r = 0; r < t.length; r++)
    e[t.charCodeAt(r)] = t[r];
  return e;
}
function ku(t, e, r) {
  typeof e != "string" && (r = e, e = ku.defaultChars), typeof r > "u" && (r = !0);
  const n = bP(e);
  let a = "";
  for (let i = 0, o = t.length; i < o; i++) {
    const s = t.charCodeAt(i);
    if (r && s === 37 && i + 2 < o && /^[0-9a-f]{2}$/i.test(t.slice(i + 1, i + 3))) {
      a += t.slice(i, i + 3), i += 2;
      continue;
    }
    if (s < 128) {
      a += n[s];
      continue;
    }
    if (s >= 55296 && s <= 57343) {
      if (s >= 55296 && s <= 56319 && i + 1 < o) {
        const l = t.charCodeAt(i + 1);
        if (l >= 56320 && l <= 57343) {
          a += encodeURIComponent(t[i] + t[i + 1]), i++;
          continue;
        }
      }
      a += "%EF%BF%BD";
      continue;
    }
    a += encodeURIComponent(t[i]);
  }
  return a;
}
ku.defaultChars = ";/?:@&=+$,-_.!~*'()#";
ku.componentChars = "-_.!~*'()";
function M_(t) {
  let e = "";
  return e += t.protocol || "", e += t.slashes ? "//" : "", e += t.auth ? t.auth + "@" : "", t.hostname && t.hostname.indexOf(":") !== -1 ? e += "[" + t.hostname + "]" : e += t.hostname || "", e += t.port ? ":" + t.port : "", e += t.pathname || "", e += t.search || "", e += t.hash || "", e;
}
function Zd() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
const SP = /^([a-z0-9.+-]+:)/i, EP = /:[0-9]*$/, TP = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, xP = ["<", ">", '"', "`", " ", "\r", `
`, "	"], CP = ["{", "}", "|", "\\", "^", "`"].concat(xP), AP = ["'"].concat(CP), b0 = ["%", "/", "?", ";", "#"].concat(AP), S0 = ["/", "?", "#"], wP = 255, E0 = /^[+a-z0-9A-Z_-]{0,63}$/, DP = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, T0 = {
  javascript: !0,
  "javascript:": !0
}, x0 = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function I_(t, e) {
  if (t && t instanceof Zd) return t;
  const r = new Zd();
  return r.parse(t, e), r;
}
Zd.prototype.parse = function(t, e) {
  let r, n, a, i = t;
  if (i = i.trim(), !e && t.split("#").length === 1) {
    const u = TP.exec(i);
    if (u)
      return this.pathname = u[1], u[2] && (this.search = u[2]), this;
  }
  let o = SP.exec(i);
  if (o && (o = o[0], r = o.toLowerCase(), this.protocol = o, i = i.substr(o.length)), (e || o || i.match(/^\/\/[^@\/]+@[^@\/]+/)) && (a = i.substr(0, 2) === "//", a && !(o && T0[o]) && (i = i.substr(2), this.slashes = !0)), !T0[o] && (a || o && !x0[o])) {
    let u = -1;
    for (let h = 0; h < S0.length; h++)
      n = i.indexOf(S0[h]), n !== -1 && (u === -1 || n < u) && (u = n);
    let c, d;
    u === -1 ? d = i.lastIndexOf("@") : d = i.lastIndexOf("@", u), d !== -1 && (c = i.slice(0, d), i = i.slice(d + 1), this.auth = c), u = -1;
    for (let h = 0; h < b0.length; h++)
      n = i.indexOf(b0[h]), n !== -1 && (u === -1 || n < u) && (u = n);
    u === -1 && (u = i.length), i[u - 1] === ":" && u--;
    const p = i.slice(0, u);
    i = i.slice(u), this.parseHost(p), this.hostname = this.hostname || "";
    const f = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!f) {
      const h = this.hostname.split(/\./);
      for (let g = 0, v = h.length; g < v; g++) {
        const m = h[g];
        if (m && !m.match(E0)) {
          let _ = "";
          for (let y = 0, b = m.length; y < b; y++)
            m.charCodeAt(y) > 127 ? _ += "x" : _ += m[y];
          if (!_.match(E0)) {
            const y = h.slice(0, g), b = h.slice(g + 1), S = m.match(DP);
            S && (y.push(S[1]), b.unshift(S[2])), b.length && (i = b.join(".") + i), this.hostname = y.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > wP && (this.hostname = ""), f && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  const s = i.indexOf("#");
  s !== -1 && (this.hash = i.substr(s), i = i.slice(0, s));
  const l = i.indexOf("?");
  return l !== -1 && (this.search = i.substr(l), i = i.slice(0, l)), i && (this.pathname = i), x0[r] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
Zd.prototype.parseHost = function(t) {
  let e = EP.exec(t);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), t = t.substr(0, t.length - e.length)), t && (this.hostname = t);
};
const MP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: fs,
  encode: ku,
  format: M_,
  parse: I_
}, Symbol.toStringTag, { value: "Module" })), JA = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, ew = /[\0-\x1F\x7F-\x9F]/, IP = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/, N_ = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, tw = /[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/, rw = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, NP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Any: JA,
  Cc: ew,
  Cf: IP,
  P: N_,
  S: tw,
  Z: rw
}, Symbol.toStringTag, { value: "Module" })), RP = new Uint16Array(
  // prettier-ignore
  'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((t) => t.charCodeAt(0))
), OP = new Uint16Array(
  // prettier-ignore
  "Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((t) => t.charCodeAt(0))
);
var jf;
const LP = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]), PP = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
  (jf = String.fromCodePoint) !== null && jf !== void 0 ? jf : function(t) {
    let e = "";
    return t > 65535 && (t -= 65536, e += String.fromCharCode(t >>> 10 & 1023 | 55296), t = 56320 | t & 1023), e += String.fromCharCode(t), e;
  }
);
function kP(t) {
  var e;
  return t >= 55296 && t <= 57343 || t > 1114111 ? 65533 : (e = LP.get(t)) !== null && e !== void 0 ? e : t;
}
var Lt;
(function(t) {
  t[t.NUM = 35] = "NUM", t[t.SEMI = 59] = "SEMI", t[t.EQUALS = 61] = "EQUALS", t[t.ZERO = 48] = "ZERO", t[t.NINE = 57] = "NINE", t[t.LOWER_A = 97] = "LOWER_A", t[t.LOWER_F = 102] = "LOWER_F", t[t.LOWER_X = 120] = "LOWER_X", t[t.LOWER_Z = 122] = "LOWER_Z", t[t.UPPER_A = 65] = "UPPER_A", t[t.UPPER_F = 70] = "UPPER_F", t[t.UPPER_Z = 90] = "UPPER_Z";
})(Lt || (Lt = {}));
const BP = 32;
var Ia;
(function(t) {
  t[t.VALUE_LENGTH = 49152] = "VALUE_LENGTH", t[t.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", t[t.JUMP_TABLE = 127] = "JUMP_TABLE";
})(Ia || (Ia = {}));
function Ov(t) {
  return t >= Lt.ZERO && t <= Lt.NINE;
}
function FP(t) {
  return t >= Lt.UPPER_A && t <= Lt.UPPER_F || t >= Lt.LOWER_A && t <= Lt.LOWER_F;
}
function GP(t) {
  return t >= Lt.UPPER_A && t <= Lt.UPPER_Z || t >= Lt.LOWER_A && t <= Lt.LOWER_Z || Ov(t);
}
function UP(t) {
  return t === Lt.EQUALS || GP(t);
}
var Rt;
(function(t) {
  t[t.EntityStart = 0] = "EntityStart", t[t.NumericStart = 1] = "NumericStart", t[t.NumericDecimal = 2] = "NumericDecimal", t[t.NumericHex = 3] = "NumericHex", t[t.NamedEntity = 4] = "NamedEntity";
})(Rt || (Rt = {}));
var Ma;
(function(t) {
  t[t.Legacy = 0] = "Legacy", t[t.Strict = 1] = "Strict", t[t.Attribute = 2] = "Attribute";
})(Ma || (Ma = {}));
class zP {
  constructor(e, r, n) {
    this.decodeTree = e, this.emitCodePoint = r, this.errors = n, this.state = Rt.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = Ma.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(e) {
    this.decodeMode = e, this.state = Rt.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(e, r) {
    switch (this.state) {
      case Rt.EntityStart:
        return e.charCodeAt(r) === Lt.NUM ? (this.state = Rt.NumericStart, this.consumed += 1, this.stateNumericStart(e, r + 1)) : (this.state = Rt.NamedEntity, this.stateNamedEntity(e, r));
      case Rt.NumericStart:
        return this.stateNumericStart(e, r);
      case Rt.NumericDecimal:
        return this.stateNumericDecimal(e, r);
      case Rt.NumericHex:
        return this.stateNumericHex(e, r);
      case Rt.NamedEntity:
        return this.stateNamedEntity(e, r);
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(e, r) {
    return r >= e.length ? -1 : (e.charCodeAt(r) | BP) === Lt.LOWER_X ? (this.state = Rt.NumericHex, this.consumed += 1, this.stateNumericHex(e, r + 1)) : (this.state = Rt.NumericDecimal, this.stateNumericDecimal(e, r));
  }
  addToNumericResult(e, r, n, a) {
    if (r !== n) {
      const i = n - r;
      this.result = this.result * Math.pow(a, i) + parseInt(e.substr(r, i), a), this.consumed += i;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(e, r) {
    const n = r;
    for (; r < e.length; ) {
      const a = e.charCodeAt(r);
      if (Ov(a) || FP(a))
        r += 1;
      else
        return this.addToNumericResult(e, n, r, 16), this.emitNumericEntity(a, 3);
    }
    return this.addToNumericResult(e, n, r, 16), -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(e, r) {
    const n = r;
    for (; r < e.length; ) {
      const a = e.charCodeAt(r);
      if (Ov(a))
        r += 1;
      else
        return this.addToNumericResult(e, n, r, 10), this.emitNumericEntity(a, 2);
    }
    return this.addToNumericResult(e, n, r, 10), -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(e, r) {
    var n;
    if (this.consumed <= r)
      return (n = this.errors) === null || n === void 0 || n.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
    if (e === Lt.SEMI)
      this.consumed += 1;
    else if (this.decodeMode === Ma.Strict)
      return 0;
    return this.emitCodePoint(kP(this.result), this.consumed), this.errors && (e !== Lt.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(e, r) {
    const { decodeTree: n } = this;
    let a = n[this.treeIndex], i = (a & Ia.VALUE_LENGTH) >> 14;
    for (; r < e.length; r++, this.excess++) {
      const o = e.charCodeAt(r);
      if (this.treeIndex = VP(n, a, this.treeIndex + Math.max(1, i), o), this.treeIndex < 0)
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === Ma.Attribute && // We shouldn't have consumed any characters after the entity,
        (i === 0 || // And there should be no invalid characters.
        UP(o)) ? 0 : this.emitNotTerminatedNamedEntity();
      if (a = n[this.treeIndex], i = (a & Ia.VALUE_LENGTH) >> 14, i !== 0) {
        if (o === Lt.SEMI)
          return this.emitNamedEntityData(this.treeIndex, i, this.consumed + this.excess);
        this.decodeMode !== Ma.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0);
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var e;
    const { result: r, decodeTree: n } = this, a = (n[r] & Ia.VALUE_LENGTH) >> 14;
    return this.emitNamedEntityData(r, a, this.consumed), (e = this.errors) === null || e === void 0 || e.missingSemicolonAfterCharacterReference(), this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(e, r, n) {
    const { decodeTree: a } = this;
    return this.emitCodePoint(r === 1 ? a[e] & ~Ia.VALUE_LENGTH : a[e + 1], n), r === 3 && this.emitCodePoint(a[e + 2], n), n;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var e;
    switch (this.state) {
      case Rt.NamedEntity:
        return this.result !== 0 && (this.decodeMode !== Ma.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      // Otherwise, emit a numeric entity if we have one.
      case Rt.NumericDecimal:
        return this.emitNumericEntity(0, 2);
      case Rt.NumericHex:
        return this.emitNumericEntity(0, 3);
      case Rt.NumericStart:
        return (e = this.errors) === null || e === void 0 || e.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
      case Rt.EntityStart:
        return 0;
    }
  }
}
function nw(t) {
  let e = "";
  const r = new zP(t, (n) => e += PP(n));
  return function(a, i) {
    let o = 0, s = 0;
    for (; (s = a.indexOf("&", s)) >= 0; ) {
      e += a.slice(o, s), r.startEntity(i);
      const u = r.write(
        a,
        // Skip the "&"
        s + 1
      );
      if (u < 0) {
        o = s + r.end();
        break;
      }
      o = s + u, s = u === 0 ? o + 1 : o;
    }
    const l = e + a.slice(o);
    return e = "", l;
  };
}
function VP(t, e, r, n) {
  const a = (e & Ia.BRANCH_LENGTH) >> 7, i = e & Ia.JUMP_TABLE;
  if (a === 0)
    return i !== 0 && n === i ? r : -1;
  if (i) {
    const l = n - i;
    return l < 0 || l >= a ? -1 : t[r + l] - 1;
  }
  let o = r, s = o + a - 1;
  for (; o <= s; ) {
    const l = o + s >>> 1, u = t[l];
    if (u < n)
      o = l + 1;
    else if (u > n)
      s = l - 1;
    else
      return t[l + a];
  }
  return -1;
}
const $P = nw(RP);
nw(OP);
function aw(t, e = Ma.Legacy) {
  return $P(t, e);
}
function HP(t) {
  return Object.prototype.toString.call(t);
}
function R_(t) {
  return HP(t) === "[object String]";
}
const WP = Object.prototype.hasOwnProperty;
function qP(t, e) {
  return WP.call(t, e);
}
function Kp(t) {
  return Array.prototype.slice.call(arguments, 1).forEach(function(r) {
    if (r) {
      if (typeof r != "object")
        throw new TypeError(r + "must be object");
      Object.keys(r).forEach(function(n) {
        t[n] = r[n];
      });
    }
  }), t;
}
function iw(t, e, r) {
  return [].concat(t.slice(0, e), r, t.slice(e + 1));
}
function O_(t) {
  return !(t >= 55296 && t <= 57343 || t >= 64976 && t <= 65007 || (t & 65535) === 65535 || (t & 65535) === 65534 || t >= 0 && t <= 8 || t === 11 || t >= 14 && t <= 31 || t >= 127 && t <= 159 || t > 1114111);
}
function Xd(t) {
  if (t > 65535) {
    t -= 65536;
    const e = 55296 + (t >> 10), r = 56320 + (t & 1023);
    return String.fromCharCode(e, r);
  }
  return String.fromCharCode(t);
}
const ow = /\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g, YP = /&([a-z#][a-z0-9]{1,31});/gi, KP = new RegExp(ow.source + "|" + YP.source, "gi"), ZP = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;
function XP(t, e) {
  if (e.charCodeAt(0) === 35 && ZP.test(e)) {
    const n = e[1].toLowerCase() === "x" ? parseInt(e.slice(2), 16) : parseInt(e.slice(1), 10);
    return O_(n) ? Xd(n) : t;
  }
  const r = aw(t);
  return r !== t ? r : t;
}
function QP(t) {
  return t.indexOf("\\") < 0 ? t : t.replace(ow, "$1");
}
function hs(t) {
  return t.indexOf("\\") < 0 && t.indexOf("&") < 0 ? t : t.replace(KP, function(e, r, n) {
    return r || XP(e, n);
  });
}
const jP = /[&<>"]/, JP = /[&<>"]/g, e2 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function t2(t) {
  return e2[t];
}
function Wa(t) {
  return jP.test(t) ? t.replace(JP, t2) : t;
}
const r2 = /[.?*+^$[\]\\(){}|-]/g;
function n2(t) {
  return t.replace(r2, "\\$&");
}
function ot(t) {
  switch (t) {
    case 9:
    case 32:
      return !0;
  }
  return !1;
}
function ru(t) {
  if (t >= 8192 && t <= 8202)
    return !0;
  switch (t) {
    case 9:
    // \t
    case 10:
    // \n
    case 11:
    // \v
    case 12:
    // \f
    case 13:
    // \r
    case 32:
    case 160:
    case 5760:
    case 8239:
    case 8287:
    case 12288:
      return !0;
  }
  return !1;
}
function nu(t) {
  return N_.test(t) || tw.test(t);
}
function au(t) {
  switch (t) {
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 124:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
function Zp(t) {
  return t = t.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (t = t.replace(/ẞ/g, "ß")), t.toLowerCase().toUpperCase();
}
const a2 = { mdurl: MP, ucmicro: NP }, i2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  arrayReplaceAt: iw,
  assign: Kp,
  escapeHtml: Wa,
  escapeRE: n2,
  fromCodePoint: Xd,
  has: qP,
  isMdAsciiPunct: au,
  isPunctChar: nu,
  isSpace: ot,
  isString: R_,
  isValidEntityCode: O_,
  isWhiteSpace: ru,
  lib: a2,
  normalizeReference: Zp,
  unescapeAll: hs,
  unescapeMd: QP
}, Symbol.toStringTag, { value: "Module" }));
function o2(t, e, r) {
  let n, a, i, o;
  const s = t.posMax, l = t.pos;
  for (t.pos = e + 1, n = 1; t.pos < s; ) {
    if (i = t.src.charCodeAt(t.pos), i === 93 && (n--, n === 0)) {
      a = !0;
      break;
    }
    if (o = t.pos, t.md.inline.skipToken(t), i === 91) {
      if (o === t.pos - 1)
        n++;
      else if (r)
        return t.pos = l, -1;
    }
  }
  let u = -1;
  return a && (u = t.pos), t.pos = l, u;
}
function s2(t, e, r) {
  let n, a = e;
  const i = {
    ok: !1,
    pos: 0,
    str: ""
  };
  if (t.charCodeAt(a) === 60) {
    for (a++; a < r; ) {
      if (n = t.charCodeAt(a), n === 10 || n === 60)
        return i;
      if (n === 62)
        return i.pos = a + 1, i.str = hs(t.slice(e + 1, a)), i.ok = !0, i;
      if (n === 92 && a + 1 < r) {
        a += 2;
        continue;
      }
      a++;
    }
    return i;
  }
  let o = 0;
  for (; a < r && (n = t.charCodeAt(a), !(n === 32 || n < 32 || n === 127)); ) {
    if (n === 92 && a + 1 < r) {
      if (t.charCodeAt(a + 1) === 32)
        break;
      a += 2;
      continue;
    }
    if (n === 40 && (o++, o > 32))
      return i;
    if (n === 41) {
      if (o === 0)
        break;
      o--;
    }
    a++;
  }
  return e === a || o !== 0 || (i.str = hs(t.slice(e, a)), i.pos = a, i.ok = !0), i;
}
function l2(t, e, r, n) {
  let a, i = e;
  const o = {
    // if `true`, this is a valid link title
    ok: !1,
    // if `true`, this link can be continued on the next line
    can_continue: !1,
    // if `ok`, it's the position of the first character after the closing marker
    pos: 0,
    // if `ok`, it's the unescaped title
    str: "",
    // expected closing marker character code
    marker: 0
  };
  if (n)
    o.str = n.str, o.marker = n.marker;
  else {
    if (i >= r)
      return o;
    let s = t.charCodeAt(i);
    if (s !== 34 && s !== 39 && s !== 40)
      return o;
    e++, i++, s === 40 && (s = 41), o.marker = s;
  }
  for (; i < r; ) {
    if (a = t.charCodeAt(i), a === o.marker)
      return o.pos = i + 1, o.str += hs(t.slice(e, i)), o.ok = !0, o;
    if (a === 40 && o.marker === 41)
      return o;
    a === 92 && i + 1 < r && i++, i++;
  }
  return o.can_continue = !0, o.str += hs(t.slice(e, i)), o;
}
const u2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  parseLinkDestination: s2,
  parseLinkLabel: o2,
  parseLinkTitle: l2
}, Symbol.toStringTag, { value: "Module" })), kn = {};
kn.code_inline = function(t, e, r, n, a) {
  const i = t[e];
  return "<code" + a.renderAttrs(i) + ">" + Wa(i.content) + "</code>";
};
kn.code_block = function(t, e, r, n, a) {
  const i = t[e];
  return "<pre" + a.renderAttrs(i) + "><code>" + Wa(t[e].content) + `</code></pre>
`;
};
kn.fence = function(t, e, r, n, a) {
  const i = t[e], o = i.info ? hs(i.info).trim() : "";
  let s = "", l = "";
  if (o) {
    const c = o.split(/(\s+)/g);
    s = c[0], l = c.slice(2).join("");
  }
  let u;
  if (r.highlight ? u = r.highlight(i.content, s, l) || Wa(i.content) : u = Wa(i.content), u.indexOf("<pre") === 0)
    return u + `
`;
  if (o) {
    const c = i.attrIndex("class"), d = i.attrs ? i.attrs.slice() : [];
    c < 0 ? d.push(["class", r.langPrefix + s]) : (d[c] = d[c].slice(), d[c][1] += " " + r.langPrefix + s);
    const p = {
      attrs: d
    };
    return `<pre><code${a.renderAttrs(p)}>${u}</code></pre>
`;
  }
  return `<pre><code${a.renderAttrs(i)}>${u}</code></pre>
`;
};
kn.image = function(t, e, r, n, a) {
  const i = t[e];
  return i.attrs[i.attrIndex("alt")][1] = a.renderInlineAsText(i.children, r, n), a.renderToken(t, e, r);
};
kn.hardbreak = function(t, e, r) {
  return r.xhtmlOut ? `<br />
` : `<br>
`;
};
kn.softbreak = function(t, e, r) {
  return r.breaks ? r.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
kn.text = function(t, e) {
  return Wa(t[e].content);
};
kn.html_block = function(t, e) {
  return t[e].content;
};
kn.html_inline = function(t, e) {
  return t[e].content;
};
function As() {
  this.rules = Kp({}, kn);
}
As.prototype.renderAttrs = function(e) {
  let r, n, a;
  if (!e.attrs)
    return "";
  for (a = "", r = 0, n = e.attrs.length; r < n; r++)
    a += " " + Wa(e.attrs[r][0]) + '="' + Wa(e.attrs[r][1]) + '"';
  return a;
};
As.prototype.renderToken = function(e, r, n) {
  const a = e[r];
  let i = "";
  if (a.hidden)
    return "";
  a.block && a.nesting !== -1 && r && e[r - 1].hidden && (i += `
`), i += (a.nesting === -1 ? "</" : "<") + a.tag, i += this.renderAttrs(a), a.nesting === 0 && n.xhtmlOut && (i += " /");
  let o = !1;
  if (a.block && (o = !0, a.nesting === 1 && r + 1 < e.length)) {
    const s = e[r + 1];
    (s.type === "inline" || s.hidden || s.nesting === -1 && s.tag === a.tag) && (o = !1);
  }
  return i += o ? `>
` : ">", i;
};
As.prototype.renderInline = function(t, e, r) {
  let n = "";
  const a = this.rules;
  for (let i = 0, o = t.length; i < o; i++) {
    const s = t[i].type;
    typeof a[s] < "u" ? n += a[s](t, i, e, r, this) : n += this.renderToken(t, i, e);
  }
  return n;
};
As.prototype.renderInlineAsText = function(t, e, r) {
  let n = "";
  for (let a = 0, i = t.length; a < i; a++)
    switch (t[a].type) {
      case "text":
        n += t[a].content;
        break;
      case "image":
        n += this.renderInlineAsText(t[a].children, e, r);
        break;
      case "html_inline":
      case "html_block":
        n += t[a].content;
        break;
      case "softbreak":
      case "hardbreak":
        n += `
`;
        break;
    }
  return n;
};
As.prototype.render = function(t, e, r) {
  let n = "";
  const a = this.rules;
  for (let i = 0, o = t.length; i < o; i++) {
    const s = t[i].type;
    s === "inline" ? n += this.renderInline(t[i].children, e, r) : typeof a[s] < "u" ? n += a[s](t, i, e, r, this) : n += this.renderToken(t, i, e, r);
  }
  return n;
};
function hr() {
  this.__rules__ = [], this.__cache__ = null;
}
hr.prototype.__find__ = function(t) {
  for (let e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === t)
      return e;
  return -1;
};
hr.prototype.__compile__ = function() {
  const t = this, e = [""];
  t.__rules__.forEach(function(r) {
    r.enabled && r.alt.forEach(function(n) {
      e.indexOf(n) < 0 && e.push(n);
    });
  }), t.__cache__ = {}, e.forEach(function(r) {
    t.__cache__[r] = [], t.__rules__.forEach(function(n) {
      n.enabled && (r && n.alt.indexOf(r) < 0 || t.__cache__[r].push(n.fn));
    });
  });
};
hr.prototype.at = function(t, e, r) {
  const n = this.__find__(t), a = r || {};
  if (n === -1)
    throw new Error("Parser rule not found: " + t);
  this.__rules__[n].fn = e, this.__rules__[n].alt = a.alt || [], this.__cache__ = null;
};
hr.prototype.before = function(t, e, r, n) {
  const a = this.__find__(t), i = n || {};
  if (a === -1)
    throw new Error("Parser rule not found: " + t);
  this.__rules__.splice(a, 0, {
    name: e,
    enabled: !0,
    fn: r,
    alt: i.alt || []
  }), this.__cache__ = null;
};
hr.prototype.after = function(t, e, r, n) {
  const a = this.__find__(t), i = n || {};
  if (a === -1)
    throw new Error("Parser rule not found: " + t);
  this.__rules__.splice(a + 1, 0, {
    name: e,
    enabled: !0,
    fn: r,
    alt: i.alt || []
  }), this.__cache__ = null;
};
hr.prototype.push = function(t, e, r) {
  const n = r || {};
  this.__rules__.push({
    name: t,
    enabled: !0,
    fn: e,
    alt: n.alt || []
  }), this.__cache__ = null;
};
hr.prototype.enable = function(t, e) {
  Array.isArray(t) || (t = [t]);
  const r = [];
  return t.forEach(function(n) {
    const a = this.__find__(n);
    if (a < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + n);
    }
    this.__rules__[a].enabled = !0, r.push(n);
  }, this), this.__cache__ = null, r;
};
hr.prototype.enableOnly = function(t, e) {
  Array.isArray(t) || (t = [t]), this.__rules__.forEach(function(r) {
    r.enabled = !1;
  }), this.enable(t, e);
};
hr.prototype.disable = function(t, e) {
  Array.isArray(t) || (t = [t]);
  const r = [];
  return t.forEach(function(n) {
    const a = this.__find__(n);
    if (a < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + n);
    }
    this.__rules__[a].enabled = !1, r.push(n);
  }, this), this.__cache__ = null, r;
};
hr.prototype.getRules = function(t) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[t] || [];
};
function nn(t, e, r) {
  this.type = t, this.tag = e, this.attrs = null, this.map = null, this.nesting = r, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
nn.prototype.attrIndex = function(e) {
  if (!this.attrs)
    return -1;
  const r = this.attrs;
  for (let n = 0, a = r.length; n < a; n++)
    if (r[n][0] === e)
      return n;
  return -1;
};
nn.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
nn.prototype.attrSet = function(e, r) {
  const n = this.attrIndex(e), a = [e, r];
  n < 0 ? this.attrPush(a) : this.attrs[n] = a;
};
nn.prototype.attrGet = function(e) {
  const r = this.attrIndex(e);
  let n = null;
  return r >= 0 && (n = this.attrs[r][1]), n;
};
nn.prototype.attrJoin = function(e, r) {
  const n = this.attrIndex(e);
  n < 0 ? this.attrPush([e, r]) : this.attrs[n][1] = this.attrs[n][1] + " " + r;
};
function sw(t, e, r) {
  this.src = t, this.env = r, this.tokens = [], this.inlineMode = !1, this.md = e;
}
sw.prototype.Token = nn;
const c2 = /\r\n?|\n/g, d2 = /\0/g;
function p2(t) {
  let e;
  e = t.src.replace(c2, `
`), e = e.replace(d2, "�"), t.src = e;
}
function f2(t) {
  let e;
  t.inlineMode ? (e = new t.Token("inline", "", 0), e.content = t.src, e.map = [0, 1], e.children = [], t.tokens.push(e)) : t.md.block.parse(t.src, t.md, t.env, t.tokens);
}
function h2(t) {
  const e = t.tokens;
  for (let r = 0, n = e.length; r < n; r++) {
    const a = e[r];
    a.type === "inline" && t.md.inline.parse(a.content, t.md, t.env, a.children);
  }
}
function g2(t) {
  return /^<a[>\s]/i.test(t);
}
function v2(t) {
  return /^<\/a\s*>/i.test(t);
}
function m2(t) {
  const e = t.tokens;
  if (t.md.options.linkify)
    for (let r = 0, n = e.length; r < n; r++) {
      if (e[r].type !== "inline" || !t.md.linkify.pretest(e[r].content))
        continue;
      let a = e[r].children, i = 0;
      for (let o = a.length - 1; o >= 0; o--) {
        const s = a[o];
        if (s.type === "link_close") {
          for (o--; a[o].level !== s.level && a[o].type !== "link_open"; )
            o--;
          continue;
        }
        if (s.type === "html_inline" && (g2(s.content) && i > 0 && i--, v2(s.content) && i++), !(i > 0) && s.type === "text" && t.md.linkify.test(s.content)) {
          const l = s.content;
          let u = t.md.linkify.match(l);
          const c = [];
          let d = s.level, p = 0;
          u.length > 0 && u[0].index === 0 && o > 0 && a[o - 1].type === "text_special" && (u = u.slice(1));
          for (let f = 0; f < u.length; f++) {
            const h = u[f].url, g = t.md.normalizeLink(h);
            if (!t.md.validateLink(g))
              continue;
            let v = u[f].text;
            u[f].schema ? u[f].schema === "mailto:" && !/^mailto:/i.test(v) ? v = t.md.normalizeLinkText("mailto:" + v).replace(/^mailto:/, "") : v = t.md.normalizeLinkText(v) : v = t.md.normalizeLinkText("http://" + v).replace(/^http:\/\//, "");
            const m = u[f].index;
            if (m > p) {
              const S = new t.Token("text", "", 0);
              S.content = l.slice(p, m), S.level = d, c.push(S);
            }
            const _ = new t.Token("link_open", "a", 1);
            _.attrs = [["href", g]], _.level = d++, _.markup = "linkify", _.info = "auto", c.push(_);
            const y = new t.Token("text", "", 0);
            y.content = v, y.level = d, c.push(y);
            const b = new t.Token("link_close", "a", -1);
            b.level = --d, b.markup = "linkify", b.info = "auto", c.push(b), p = u[f].lastIndex;
          }
          if (p < l.length) {
            const f = new t.Token("text", "", 0);
            f.content = l.slice(p), f.level = d, c.push(f);
          }
          e[r].children = a = iw(a, o, c);
        }
      }
    }
}
const lw = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, _2 = /\((c|tm|r)\)/i, y2 = /\((c|tm|r)\)/ig, b2 = {
  c: "©",
  r: "®",
  tm: "™"
};
function S2(t, e) {
  return b2[e.toLowerCase()];
}
function E2(t) {
  let e = 0;
  for (let r = t.length - 1; r >= 0; r--) {
    const n = t[r];
    n.type === "text" && !e && (n.content = n.content.replace(y2, S2)), n.type === "link_open" && n.info === "auto" && e--, n.type === "link_close" && n.info === "auto" && e++;
  }
}
function T2(t) {
  let e = 0;
  for (let r = t.length - 1; r >= 0; r--) {
    const n = t[r];
    n.type === "text" && !e && lw.test(n.content) && (n.content = n.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), n.type === "link_open" && n.info === "auto" && e--, n.type === "link_close" && n.info === "auto" && e++;
  }
}
function x2(t) {
  let e;
  if (t.md.options.typographer)
    for (e = t.tokens.length - 1; e >= 0; e--)
      t.tokens[e].type === "inline" && (_2.test(t.tokens[e].content) && E2(t.tokens[e].children), lw.test(t.tokens[e].content) && T2(t.tokens[e].children));
}
const C2 = /['"]/, C0 = /['"]/g, A0 = "’";
function fc(t, e, r) {
  return t.slice(0, e) + r + t.slice(e + 1);
}
function A2(t, e) {
  let r;
  const n = [];
  for (let a = 0; a < t.length; a++) {
    const i = t[a], o = t[a].level;
    for (r = n.length - 1; r >= 0 && !(n[r].level <= o); r--)
      ;
    if (n.length = r + 1, i.type !== "text")
      continue;
    let s = i.content, l = 0, u = s.length;
    e:
      for (; l < u; ) {
        C0.lastIndex = l;
        const c = C0.exec(s);
        if (!c)
          break;
        let d = !0, p = !0;
        l = c.index + 1;
        const f = c[0] === "'";
        let h = 32;
        if (c.index - 1 >= 0)
          h = s.charCodeAt(c.index - 1);
        else
          for (r = a - 1; r >= 0 && !(t[r].type === "softbreak" || t[r].type === "hardbreak"); r--)
            if (t[r].content) {
              h = t[r].content.charCodeAt(t[r].content.length - 1);
              break;
            }
        let g = 32;
        if (l < u)
          g = s.charCodeAt(l);
        else
          for (r = a + 1; r < t.length && !(t[r].type === "softbreak" || t[r].type === "hardbreak"); r++)
            if (t[r].content) {
              g = t[r].content.charCodeAt(0);
              break;
            }
        const v = au(h) || nu(String.fromCharCode(h)), m = au(g) || nu(String.fromCharCode(g)), _ = ru(h), y = ru(g);
        if (y ? d = !1 : m && (_ || v || (d = !1)), _ ? p = !1 : v && (y || m || (p = !1)), g === 34 && c[0] === '"' && h >= 48 && h <= 57 && (p = d = !1), d && p && (d = v, p = m), !d && !p) {
          f && (i.content = fc(i.content, c.index, A0));
          continue;
        }
        if (p)
          for (r = n.length - 1; r >= 0; r--) {
            let b = n[r];
            if (n[r].level < o)
              break;
            if (b.single === f && n[r].level === o) {
              b = n[r];
              let S, E;
              f ? (S = e.md.options.quotes[2], E = e.md.options.quotes[3]) : (S = e.md.options.quotes[0], E = e.md.options.quotes[1]), i.content = fc(i.content, c.index, E), t[b.token].content = fc(
                t[b.token].content,
                b.pos,
                S
              ), l += E.length - 1, b.token === a && (l += S.length - 1), s = i.content, u = s.length, n.length = r;
              continue e;
            }
          }
        d ? n.push({
          token: a,
          pos: c.index,
          single: f,
          level: o
        }) : p && f && (i.content = fc(i.content, c.index, A0));
      }
  }
}
function w2(t) {
  if (t.md.options.typographer)
    for (let e = t.tokens.length - 1; e >= 0; e--)
      t.tokens[e].type !== "inline" || !C2.test(t.tokens[e].content) || A2(t.tokens[e].children, t);
}
function D2(t) {
  let e, r;
  const n = t.tokens, a = n.length;
  for (let i = 0; i < a; i++) {
    if (n[i].type !== "inline") continue;
    const o = n[i].children, s = o.length;
    for (e = 0; e < s; e++)
      o[e].type === "text_special" && (o[e].type = "text");
    for (e = r = 0; e < s; e++)
      o[e].type === "text" && e + 1 < s && o[e + 1].type === "text" ? o[e + 1].content = o[e].content + o[e + 1].content : (e !== r && (o[r] = o[e]), r++);
    e !== r && (o.length = r);
  }
}
const Jf = [
  ["normalize", p2],
  ["block", f2],
  ["inline", h2],
  ["linkify", m2],
  ["replacements", x2],
  ["smartquotes", w2],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", D2]
];
function L_() {
  this.ruler = new hr();
  for (let t = 0; t < Jf.length; t++)
    this.ruler.push(Jf[t][0], Jf[t][1]);
}
L_.prototype.process = function(t) {
  const e = this.ruler.getRules("");
  for (let r = 0, n = e.length; r < n; r++)
    e[r](t);
};
L_.prototype.State = sw;
function Bn(t, e, r, n) {
  this.src = t, this.md = e, this.env = r, this.tokens = n, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0;
  const a = this.src;
  for (let i = 0, o = 0, s = 0, l = 0, u = a.length, c = !1; o < u; o++) {
    const d = a.charCodeAt(o);
    if (!c)
      if (ot(d)) {
        s++, d === 9 ? l += 4 - l % 4 : l++;
        continue;
      } else
        c = !0;
    (d === 10 || o === u - 1) && (d !== 10 && o++, this.bMarks.push(i), this.eMarks.push(o), this.tShift.push(s), this.sCount.push(l), this.bsCount.push(0), c = !1, s = 0, l = 0, i = o + 1);
  }
  this.bMarks.push(a.length), this.eMarks.push(a.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
Bn.prototype.push = function(t, e, r) {
  const n = new nn(t, e, r);
  return n.block = !0, r < 0 && this.level--, n.level = this.level, r > 0 && this.level++, this.tokens.push(n), n;
};
Bn.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
Bn.prototype.skipEmptyLines = function(e) {
  for (let r = this.lineMax; e < r && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
Bn.prototype.skipSpaces = function(e) {
  for (let r = this.src.length; e < r; e++) {
    const n = this.src.charCodeAt(e);
    if (!ot(n))
      break;
  }
  return e;
};
Bn.prototype.skipSpacesBack = function(e, r) {
  if (e <= r)
    return e;
  for (; e > r; )
    if (!ot(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
Bn.prototype.skipChars = function(e, r) {
  for (let n = this.src.length; e < n && this.src.charCodeAt(e) === r; e++)
    ;
  return e;
};
Bn.prototype.skipCharsBack = function(e, r, n) {
  if (e <= n)
    return e;
  for (; e > n; )
    if (r !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
Bn.prototype.getLines = function(e, r, n, a) {
  if (e >= r)
    return "";
  const i = new Array(r - e);
  for (let o = 0, s = e; s < r; s++, o++) {
    let l = 0;
    const u = this.bMarks[s];
    let c = u, d;
    for (s + 1 < r || a ? d = this.eMarks[s] + 1 : d = this.eMarks[s]; c < d && l < n; ) {
      const p = this.src.charCodeAt(c);
      if (ot(p))
        p === 9 ? l += 4 - (l + this.bsCount[s]) % 4 : l++;
      else if (c - u < this.tShift[s])
        l++;
      else
        break;
      c++;
    }
    l > n ? i[o] = new Array(l - n + 1).join(" ") + this.src.slice(c, d) : i[o] = this.src.slice(c, d);
  }
  return i.join("");
};
Bn.prototype.Token = nn;
const M2 = 65536;
function eh(t, e) {
  const r = t.bMarks[e] + t.tShift[e], n = t.eMarks[e];
  return t.src.slice(r, n);
}
function w0(t) {
  const e = [], r = t.length;
  let n = 0, a = t.charCodeAt(n), i = !1, o = 0, s = "";
  for (; n < r; )
    a === 124 && (i ? (s += t.substring(o, n - 1), o = n) : (e.push(s + t.substring(o, n)), s = "", o = n + 1)), i = a === 92, n++, a = t.charCodeAt(n);
  return e.push(s + t.substring(o)), e;
}
function I2(t, e, r, n) {
  if (e + 2 > r)
    return !1;
  let a = e + 1;
  if (t.sCount[a] < t.blkIndent || t.sCount[a] - t.blkIndent >= 4)
    return !1;
  let i = t.bMarks[a] + t.tShift[a];
  if (i >= t.eMarks[a])
    return !1;
  const o = t.src.charCodeAt(i++);
  if (o !== 124 && o !== 45 && o !== 58 || i >= t.eMarks[a])
    return !1;
  const s = t.src.charCodeAt(i++);
  if (s !== 124 && s !== 45 && s !== 58 && !ot(s) || o === 45 && ot(s))
    return !1;
  for (; i < t.eMarks[a]; ) {
    const b = t.src.charCodeAt(i);
    if (b !== 124 && b !== 45 && b !== 58 && !ot(b))
      return !1;
    i++;
  }
  let l = eh(t, e + 1), u = l.split("|");
  const c = [];
  for (let b = 0; b < u.length; b++) {
    const S = u[b].trim();
    if (!S) {
      if (b === 0 || b === u.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(S))
      return !1;
    S.charCodeAt(S.length - 1) === 58 ? c.push(S.charCodeAt(0) === 58 ? "center" : "right") : S.charCodeAt(0) === 58 ? c.push("left") : c.push("");
  }
  if (l = eh(t, e).trim(), l.indexOf("|") === -1 || t.sCount[e] - t.blkIndent >= 4)
    return !1;
  u = w0(l), u.length && u[0] === "" && u.shift(), u.length && u[u.length - 1] === "" && u.pop();
  const d = u.length;
  if (d === 0 || d !== c.length)
    return !1;
  if (n)
    return !0;
  const p = t.parentType;
  t.parentType = "table";
  const f = t.md.block.ruler.getRules("blockquote"), h = t.push("table_open", "table", 1), g = [e, 0];
  h.map = g;
  const v = t.push("thead_open", "thead", 1);
  v.map = [e, e + 1];
  const m = t.push("tr_open", "tr", 1);
  m.map = [e, e + 1];
  for (let b = 0; b < u.length; b++) {
    const S = t.push("th_open", "th", 1);
    c[b] && (S.attrs = [["style", "text-align:" + c[b]]]);
    const E = t.push("inline", "", 0);
    E.content = u[b].trim(), E.children = [], t.push("th_close", "th", -1);
  }
  t.push("tr_close", "tr", -1), t.push("thead_close", "thead", -1);
  let _, y = 0;
  for (a = e + 2; a < r && !(t.sCount[a] < t.blkIndent); a++) {
    let b = !1;
    for (let E = 0, T = f.length; E < T; E++)
      if (f[E](t, a, r, !0)) {
        b = !0;
        break;
      }
    if (b || (l = eh(t, a).trim(), !l) || t.sCount[a] - t.blkIndent >= 4 || (u = w0(l), u.length && u[0] === "" && u.shift(), u.length && u[u.length - 1] === "" && u.pop(), y += d - u.length, y > M2))
      break;
    if (a === e + 2) {
      const E = t.push("tbody_open", "tbody", 1);
      E.map = _ = [e + 2, 0];
    }
    const S = t.push("tr_open", "tr", 1);
    S.map = [a, a + 1];
    for (let E = 0; E < d; E++) {
      const T = t.push("td_open", "td", 1);
      c[E] && (T.attrs = [["style", "text-align:" + c[E]]]);
      const x = t.push("inline", "", 0);
      x.content = u[E] ? u[E].trim() : "", x.children = [], t.push("td_close", "td", -1);
    }
    t.push("tr_close", "tr", -1);
  }
  return _ && (t.push("tbody_close", "tbody", -1), _[1] = a), t.push("table_close", "table", -1), g[1] = a, t.parentType = p, t.line = a, !0;
}
function N2(t, e, r) {
  if (t.sCount[e] - t.blkIndent < 4)
    return !1;
  let n = e + 1, a = n;
  for (; n < r; ) {
    if (t.isEmpty(n)) {
      n++;
      continue;
    }
    if (t.sCount[n] - t.blkIndent >= 4) {
      n++, a = n;
      continue;
    }
    break;
  }
  t.line = a;
  const i = t.push("code_block", "code", 0);
  return i.content = t.getLines(e, a, 4 + t.blkIndent, !1) + `
`, i.map = [e, t.line], !0;
}
function R2(t, e, r, n) {
  let a = t.bMarks[e] + t.tShift[e], i = t.eMarks[e];
  if (t.sCount[e] - t.blkIndent >= 4 || a + 3 > i)
    return !1;
  const o = t.src.charCodeAt(a);
  if (o !== 126 && o !== 96)
    return !1;
  let s = a;
  a = t.skipChars(a, o);
  let l = a - s;
  if (l < 3)
    return !1;
  const u = t.src.slice(s, a), c = t.src.slice(a, i);
  if (o === 96 && c.indexOf(String.fromCharCode(o)) >= 0)
    return !1;
  if (n)
    return !0;
  let d = e, p = !1;
  for (; d++, !(d >= r || (a = s = t.bMarks[d] + t.tShift[d], i = t.eMarks[d], a < i && t.sCount[d] < t.blkIndent)); )
    if (t.src.charCodeAt(a) === o && !(t.sCount[d] - t.blkIndent >= 4) && (a = t.skipChars(a, o), !(a - s < l) && (a = t.skipSpaces(a), !(a < i)))) {
      p = !0;
      break;
    }
  l = t.sCount[e], t.line = d + (p ? 1 : 0);
  const f = t.push("fence", "code", 0);
  return f.info = c, f.content = t.getLines(e + 1, d, l, !0), f.markup = u, f.map = [e, t.line], !0;
}
function O2(t, e, r, n) {
  let a = t.bMarks[e] + t.tShift[e], i = t.eMarks[e];
  const o = t.lineMax;
  if (t.sCount[e] - t.blkIndent >= 4 || t.src.charCodeAt(a) !== 62)
    return !1;
  if (n)
    return !0;
  const s = [], l = [], u = [], c = [], d = t.md.block.ruler.getRules("blockquote"), p = t.parentType;
  t.parentType = "blockquote";
  let f = !1, h;
  for (h = e; h < r; h++) {
    const y = t.sCount[h] < t.blkIndent;
    if (a = t.bMarks[h] + t.tShift[h], i = t.eMarks[h], a >= i)
      break;
    if (t.src.charCodeAt(a++) === 62 && !y) {
      let S = t.sCount[h] + 1, E, T;
      t.src.charCodeAt(a) === 32 ? (a++, S++, T = !1, E = !0) : t.src.charCodeAt(a) === 9 ? (E = !0, (t.bsCount[h] + S) % 4 === 3 ? (a++, S++, T = !1) : T = !0) : E = !1;
      let x = S;
      for (s.push(t.bMarks[h]), t.bMarks[h] = a; a < i; ) {
        const C = t.src.charCodeAt(a);
        if (ot(C))
          C === 9 ? x += 4 - (x + t.bsCount[h] + (T ? 1 : 0)) % 4 : x++;
        else
          break;
        a++;
      }
      f = a >= i, l.push(t.bsCount[h]), t.bsCount[h] = t.sCount[h] + 1 + (E ? 1 : 0), u.push(t.sCount[h]), t.sCount[h] = x - S, c.push(t.tShift[h]), t.tShift[h] = a - t.bMarks[h];
      continue;
    }
    if (f)
      break;
    let b = !1;
    for (let S = 0, E = d.length; S < E; S++)
      if (d[S](t, h, r, !0)) {
        b = !0;
        break;
      }
    if (b) {
      t.lineMax = h, t.blkIndent !== 0 && (s.push(t.bMarks[h]), l.push(t.bsCount[h]), c.push(t.tShift[h]), u.push(t.sCount[h]), t.sCount[h] -= t.blkIndent);
      break;
    }
    s.push(t.bMarks[h]), l.push(t.bsCount[h]), c.push(t.tShift[h]), u.push(t.sCount[h]), t.sCount[h] = -1;
  }
  const g = t.blkIndent;
  t.blkIndent = 0;
  const v = t.push("blockquote_open", "blockquote", 1);
  v.markup = ">";
  const m = [e, 0];
  v.map = m, t.md.block.tokenize(t, e, h);
  const _ = t.push("blockquote_close", "blockquote", -1);
  _.markup = ">", t.lineMax = o, t.parentType = p, m[1] = t.line;
  for (let y = 0; y < c.length; y++)
    t.bMarks[y + e] = s[y], t.tShift[y + e] = c[y], t.sCount[y + e] = u[y], t.bsCount[y + e] = l[y];
  return t.blkIndent = g, !0;
}
function L2(t, e, r, n) {
  const a = t.eMarks[e];
  if (t.sCount[e] - t.blkIndent >= 4)
    return !1;
  let i = t.bMarks[e] + t.tShift[e];
  const o = t.src.charCodeAt(i++);
  if (o !== 42 && o !== 45 && o !== 95)
    return !1;
  let s = 1;
  for (; i < a; ) {
    const u = t.src.charCodeAt(i++);
    if (u !== o && !ot(u))
      return !1;
    u === o && s++;
  }
  if (s < 3)
    return !1;
  if (n)
    return !0;
  t.line = e + 1;
  const l = t.push("hr", "hr", 0);
  return l.map = [e, t.line], l.markup = Array(s + 1).join(String.fromCharCode(o)), !0;
}
function D0(t, e) {
  const r = t.eMarks[e];
  let n = t.bMarks[e] + t.tShift[e];
  const a = t.src.charCodeAt(n++);
  if (a !== 42 && a !== 45 && a !== 43)
    return -1;
  if (n < r) {
    const i = t.src.charCodeAt(n);
    if (!ot(i))
      return -1;
  }
  return n;
}
function M0(t, e) {
  const r = t.bMarks[e] + t.tShift[e], n = t.eMarks[e];
  let a = r;
  if (a + 1 >= n)
    return -1;
  let i = t.src.charCodeAt(a++);
  if (i < 48 || i > 57)
    return -1;
  for (; ; ) {
    if (a >= n)
      return -1;
    if (i = t.src.charCodeAt(a++), i >= 48 && i <= 57) {
      if (a - r >= 10)
        return -1;
      continue;
    }
    if (i === 41 || i === 46)
      break;
    return -1;
  }
  return a < n && (i = t.src.charCodeAt(a), !ot(i)) ? -1 : a;
}
function P2(t, e) {
  const r = t.level + 2;
  for (let n = e + 2, a = t.tokens.length - 2; n < a; n++)
    t.tokens[n].level === r && t.tokens[n].type === "paragraph_open" && (t.tokens[n + 2].hidden = !0, t.tokens[n].hidden = !0, n += 2);
}
function k2(t, e, r, n) {
  let a, i, o, s, l = e, u = !0;
  if (t.sCount[l] - t.blkIndent >= 4 || t.listIndent >= 0 && t.sCount[l] - t.listIndent >= 4 && t.sCount[l] < t.blkIndent)
    return !1;
  let c = !1;
  n && t.parentType === "paragraph" && t.sCount[l] >= t.blkIndent && (c = !0);
  let d, p, f;
  if ((f = M0(t, l)) >= 0) {
    if (d = !0, o = t.bMarks[l] + t.tShift[l], p = Number(t.src.slice(o, f - 1)), c && p !== 1) return !1;
  } else if ((f = D0(t, l)) >= 0)
    d = !1;
  else
    return !1;
  if (c && t.skipSpaces(f) >= t.eMarks[l])
    return !1;
  if (n)
    return !0;
  const h = t.src.charCodeAt(f - 1), g = t.tokens.length;
  d ? (s = t.push("ordered_list_open", "ol", 1), p !== 1 && (s.attrs = [["start", p]])) : s = t.push("bullet_list_open", "ul", 1);
  const v = [l, 0];
  s.map = v, s.markup = String.fromCharCode(h);
  let m = !1;
  const _ = t.md.block.ruler.getRules("list"), y = t.parentType;
  for (t.parentType = "list"; l < r; ) {
    i = f, a = t.eMarks[l];
    const b = t.sCount[l] + f - (t.bMarks[l] + t.tShift[l]);
    let S = b;
    for (; i < a; ) {
      const R = t.src.charCodeAt(i);
      if (R === 9)
        S += 4 - (S + t.bsCount[l]) % 4;
      else if (R === 32)
        S++;
      else
        break;
      i++;
    }
    const E = i;
    let T;
    E >= a ? T = 1 : T = S - b, T > 4 && (T = 1);
    const x = b + T;
    s = t.push("list_item_open", "li", 1), s.markup = String.fromCharCode(h);
    const C = [l, 0];
    s.map = C, d && (s.info = t.src.slice(o, f - 1));
    const A = t.tight, D = t.tShift[l], M = t.sCount[l], I = t.listIndent;
    if (t.listIndent = t.blkIndent, t.blkIndent = x, t.tight = !0, t.tShift[l] = E - t.bMarks[l], t.sCount[l] = S, E >= a && t.isEmpty(l + 1) ? t.line = Math.min(t.line + 2, r) : t.md.block.tokenize(t, l, r, !0), (!t.tight || m) && (u = !1), m = t.line - l > 1 && t.isEmpty(t.line - 1), t.blkIndent = t.listIndent, t.listIndent = I, t.tShift[l] = D, t.sCount[l] = M, t.tight = A, s = t.push("list_item_close", "li", -1), s.markup = String.fromCharCode(h), l = t.line, C[1] = l, l >= r || t.sCount[l] < t.blkIndent || t.sCount[l] - t.blkIndent >= 4)
      break;
    let N = !1;
    for (let R = 0, O = _.length; R < O; R++)
      if (_[R](t, l, r, !0)) {
        N = !0;
        break;
      }
    if (N)
      break;
    if (d) {
      if (f = M0(t, l), f < 0)
        break;
      o = t.bMarks[l] + t.tShift[l];
    } else if (f = D0(t, l), f < 0)
      break;
    if (h !== t.src.charCodeAt(f - 1))
      break;
  }
  return d ? s = t.push("ordered_list_close", "ol", -1) : s = t.push("bullet_list_close", "ul", -1), s.markup = String.fromCharCode(h), v[1] = l, t.line = l, t.parentType = y, u && P2(t, g), !0;
}
function B2(t, e, r, n) {
  let a = t.bMarks[e] + t.tShift[e], i = t.eMarks[e], o = e + 1;
  if (t.sCount[e] - t.blkIndent >= 4 || t.src.charCodeAt(a) !== 91)
    return !1;
  function s(_) {
    const y = t.lineMax;
    if (_ >= y || t.isEmpty(_))
      return null;
    let b = !1;
    if (t.sCount[_] - t.blkIndent > 3 && (b = !0), t.sCount[_] < 0 && (b = !0), !b) {
      const T = t.md.block.ruler.getRules("reference"), x = t.parentType;
      t.parentType = "reference";
      let C = !1;
      for (let A = 0, D = T.length; A < D; A++)
        if (T[A](t, _, y, !0)) {
          C = !0;
          break;
        }
      if (t.parentType = x, C)
        return null;
    }
    const S = t.bMarks[_] + t.tShift[_], E = t.eMarks[_];
    return t.src.slice(S, E + 1);
  }
  let l = t.src.slice(a, i + 1);
  i = l.length;
  let u = -1;
  for (a = 1; a < i; a++) {
    const _ = l.charCodeAt(a);
    if (_ === 91)
      return !1;
    if (_ === 93) {
      u = a;
      break;
    } else if (_ === 10) {
      const y = s(o);
      y !== null && (l += y, i = l.length, o++);
    } else if (_ === 92 && (a++, a < i && l.charCodeAt(a) === 10)) {
      const y = s(o);
      y !== null && (l += y, i = l.length, o++);
    }
  }
  if (u < 0 || l.charCodeAt(u + 1) !== 58)
    return !1;
  for (a = u + 2; a < i; a++) {
    const _ = l.charCodeAt(a);
    if (_ === 10) {
      const y = s(o);
      y !== null && (l += y, i = l.length, o++);
    } else if (!ot(_)) break;
  }
  const c = t.md.helpers.parseLinkDestination(l, a, i);
  if (!c.ok)
    return !1;
  const d = t.md.normalizeLink(c.str);
  if (!t.md.validateLink(d))
    return !1;
  a = c.pos;
  const p = a, f = o, h = a;
  for (; a < i; a++) {
    const _ = l.charCodeAt(a);
    if (_ === 10) {
      const y = s(o);
      y !== null && (l += y, i = l.length, o++);
    } else if (!ot(_)) break;
  }
  let g = t.md.helpers.parseLinkTitle(l, a, i);
  for (; g.can_continue; ) {
    const _ = s(o);
    if (_ === null) break;
    l += _, a = i, i = l.length, o++, g = t.md.helpers.parseLinkTitle(l, a, i, g);
  }
  let v;
  for (a < i && h !== a && g.ok ? (v = g.str, a = g.pos) : (v = "", a = p, o = f); a < i; ) {
    const _ = l.charCodeAt(a);
    if (!ot(_))
      break;
    a++;
  }
  if (a < i && l.charCodeAt(a) !== 10 && v)
    for (v = "", a = p, o = f; a < i; ) {
      const _ = l.charCodeAt(a);
      if (!ot(_))
        break;
      a++;
    }
  if (a < i && l.charCodeAt(a) !== 10)
    return !1;
  const m = Zp(l.slice(1, u));
  return m ? (n || (typeof t.env.references > "u" && (t.env.references = {}), typeof t.env.references[m] > "u" && (t.env.references[m] = { title: v, href: d }), t.line = o), !0) : !1;
}
const F2 = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], G2 = "[a-zA-Z_:][a-zA-Z0-9:._-]*", U2 = "[^\"'=<>`\\x00-\\x20]+", z2 = "'[^']*'", V2 = '"[^"]*"', $2 = "(?:" + U2 + "|" + z2 + "|" + V2 + ")", H2 = "(?:\\s+" + G2 + "(?:\\s*=\\s*" + $2 + ")?)", uw = "<[A-Za-z][A-Za-z0-9\\-]*" + H2 + "*\\s*\\/?>", cw = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", W2 = "<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->", q2 = "<[?][\\s\\S]*?[?]>", Y2 = "<![A-Za-z][^>]*>", K2 = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", Z2 = new RegExp("^(?:" + uw + "|" + cw + "|" + W2 + "|" + q2 + "|" + Y2 + "|" + K2 + ")"), X2 = new RegExp("^(?:" + uw + "|" + cw + ")"), Co = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + F2.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(X2.source + "\\s*$"), /^$/, !1]
];
function Q2(t, e, r, n) {
  let a = t.bMarks[e] + t.tShift[e], i = t.eMarks[e];
  if (t.sCount[e] - t.blkIndent >= 4 || !t.md.options.html || t.src.charCodeAt(a) !== 60)
    return !1;
  let o = t.src.slice(a, i), s = 0;
  for (; s < Co.length && !Co[s][0].test(o); s++)
    ;
  if (s === Co.length)
    return !1;
  if (n)
    return Co[s][2];
  let l = e + 1;
  if (!Co[s][1].test(o)) {
    for (; l < r && !(t.sCount[l] < t.blkIndent); l++)
      if (a = t.bMarks[l] + t.tShift[l], i = t.eMarks[l], o = t.src.slice(a, i), Co[s][1].test(o)) {
        o.length !== 0 && l++;
        break;
      }
  }
  t.line = l;
  const u = t.push("html_block", "", 0);
  return u.map = [e, l], u.content = t.getLines(e, l, t.blkIndent, !0), !0;
}
function j2(t, e, r, n) {
  let a = t.bMarks[e] + t.tShift[e], i = t.eMarks[e];
  if (t.sCount[e] - t.blkIndent >= 4)
    return !1;
  let o = t.src.charCodeAt(a);
  if (o !== 35 || a >= i)
    return !1;
  let s = 1;
  for (o = t.src.charCodeAt(++a); o === 35 && a < i && s <= 6; )
    s++, o = t.src.charCodeAt(++a);
  if (s > 6 || a < i && !ot(o))
    return !1;
  if (n)
    return !0;
  i = t.skipSpacesBack(i, a);
  const l = t.skipCharsBack(i, 35, a);
  l > a && ot(t.src.charCodeAt(l - 1)) && (i = l), t.line = e + 1;
  const u = t.push("heading_open", "h" + String(s), 1);
  u.markup = "########".slice(0, s), u.map = [e, t.line];
  const c = t.push("inline", "", 0);
  c.content = t.src.slice(a, i).trim(), c.map = [e, t.line], c.children = [];
  const d = t.push("heading_close", "h" + String(s), -1);
  return d.markup = "########".slice(0, s), !0;
}
function J2(t, e, r) {
  const n = t.md.block.ruler.getRules("paragraph");
  if (t.sCount[e] - t.blkIndent >= 4)
    return !1;
  const a = t.parentType;
  t.parentType = "paragraph";
  let i = 0, o, s = e + 1;
  for (; s < r && !t.isEmpty(s); s++) {
    if (t.sCount[s] - t.blkIndent > 3)
      continue;
    if (t.sCount[s] >= t.blkIndent) {
      let f = t.bMarks[s] + t.tShift[s];
      const h = t.eMarks[s];
      if (f < h && (o = t.src.charCodeAt(f), (o === 45 || o === 61) && (f = t.skipChars(f, o), f = t.skipSpaces(f), f >= h))) {
        i = o === 61 ? 1 : 2;
        break;
      }
    }
    if (t.sCount[s] < 0)
      continue;
    let p = !1;
    for (let f = 0, h = n.length; f < h; f++)
      if (n[f](t, s, r, !0)) {
        p = !0;
        break;
      }
    if (p)
      break;
  }
  if (!i)
    return !1;
  const l = t.getLines(e, s, t.blkIndent, !1).trim();
  t.line = s + 1;
  const u = t.push("heading_open", "h" + String(i), 1);
  u.markup = String.fromCharCode(o), u.map = [e, t.line];
  const c = t.push("inline", "", 0);
  c.content = l, c.map = [e, t.line - 1], c.children = [];
  const d = t.push("heading_close", "h" + String(i), -1);
  return d.markup = String.fromCharCode(o), t.parentType = a, !0;
}
function ek(t, e, r) {
  const n = t.md.block.ruler.getRules("paragraph"), a = t.parentType;
  let i = e + 1;
  for (t.parentType = "paragraph"; i < r && !t.isEmpty(i); i++) {
    if (t.sCount[i] - t.blkIndent > 3 || t.sCount[i] < 0)
      continue;
    let u = !1;
    for (let c = 0, d = n.length; c < d; c++)
      if (n[c](t, i, r, !0)) {
        u = !0;
        break;
      }
    if (u)
      break;
  }
  const o = t.getLines(e, i, t.blkIndent, !1).trim();
  t.line = i;
  const s = t.push("paragraph_open", "p", 1);
  s.map = [e, t.line];
  const l = t.push("inline", "", 0);
  return l.content = o, l.map = [e, t.line], l.children = [], t.push("paragraph_close", "p", -1), t.parentType = a, !0;
}
const hc = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", I2, ["paragraph", "reference"]],
  ["code", N2],
  ["fence", R2, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", O2, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", L2, ["paragraph", "reference", "blockquote", "list"]],
  ["list", k2, ["paragraph", "reference", "blockquote"]],
  ["reference", B2],
  ["html_block", Q2, ["paragraph", "reference", "blockquote"]],
  ["heading", j2, ["paragraph", "reference", "blockquote"]],
  ["lheading", J2],
  ["paragraph", ek]
];
function Xp() {
  this.ruler = new hr();
  for (let t = 0; t < hc.length; t++)
    this.ruler.push(hc[t][0], hc[t][1], { alt: (hc[t][2] || []).slice() });
}
Xp.prototype.tokenize = function(t, e, r) {
  const n = this.ruler.getRules(""), a = n.length, i = t.md.options.maxNesting;
  let o = e, s = !1;
  for (; o < r && (t.line = o = t.skipEmptyLines(o), !(o >= r || t.sCount[o] < t.blkIndent)); ) {
    if (t.level >= i) {
      t.line = r;
      break;
    }
    const l = t.line;
    let u = !1;
    for (let c = 0; c < a; c++)
      if (u = n[c](t, o, r, !1), u) {
        if (l >= t.line)
          throw new Error("block rule didn't increment state.line");
        break;
      }
    if (!u) throw new Error("none of the block rules matched");
    t.tight = !s, t.isEmpty(t.line - 1) && (s = !0), o = t.line, o < r && t.isEmpty(o) && (s = !0, o++, t.line = o);
  }
};
Xp.prototype.parse = function(t, e, r, n) {
  if (!t)
    return;
  const a = new this.State(t, e, r, n);
  this.tokenize(a, a.line, a.lineMax);
};
Xp.prototype.State = Bn;
function Bu(t, e, r, n) {
  this.src = t, this.env = r, this.md = e, this.tokens = n, this.tokens_meta = Array(n.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
Bu.prototype.pushPending = function() {
  const t = new nn("text", "", 0);
  return t.content = this.pending, t.level = this.pendingLevel, this.tokens.push(t), this.pending = "", t;
};
Bu.prototype.push = function(t, e, r) {
  this.pending && this.pushPending();
  const n = new nn(t, e, r);
  let a = null;
  return r < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), n.level = this.level, r > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], a = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(n), this.tokens_meta.push(a), n;
};
Bu.prototype.scanDelims = function(t, e) {
  const r = this.posMax, n = this.src.charCodeAt(t), a = t > 0 ? this.src.charCodeAt(t - 1) : 32;
  let i = t;
  for (; i < r && this.src.charCodeAt(i) === n; )
    i++;
  const o = i - t, s = i < r ? this.src.charCodeAt(i) : 32, l = au(a) || nu(String.fromCharCode(a)), u = au(s) || nu(String.fromCharCode(s)), c = ru(a), d = ru(s), p = !d && (!u || c || l), f = !c && (!l || d || u);
  return { can_open: p && (e || !f || l), can_close: f && (e || !p || u), length: o };
};
Bu.prototype.Token = nn;
function tk(t) {
  switch (t) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
function rk(t, e) {
  let r = t.pos;
  for (; r < t.posMax && !tk(t.src.charCodeAt(r)); )
    r++;
  return r === t.pos ? !1 : (e || (t.pending += t.src.slice(t.pos, r)), t.pos = r, !0);
}
const nk = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;
function ak(t, e) {
  if (!t.md.options.linkify || t.linkLevel > 0) return !1;
  const r = t.pos, n = t.posMax;
  if (r + 3 > n || t.src.charCodeAt(r) !== 58 || t.src.charCodeAt(r + 1) !== 47 || t.src.charCodeAt(r + 2) !== 47) return !1;
  const a = t.pending.match(nk);
  if (!a) return !1;
  const i = a[1], o = t.md.linkify.matchAtStart(t.src.slice(r - i.length));
  if (!o) return !1;
  let s = o.url;
  if (s.length <= i.length) return !1;
  s = s.replace(/\*+$/, "");
  const l = t.md.normalizeLink(s);
  if (!t.md.validateLink(l)) return !1;
  if (!e) {
    t.pending = t.pending.slice(0, -i.length);
    const u = t.push("link_open", "a", 1);
    u.attrs = [["href", l]], u.markup = "linkify", u.info = "auto";
    const c = t.push("text", "", 0);
    c.content = t.md.normalizeLinkText(s);
    const d = t.push("link_close", "a", -1);
    d.markup = "linkify", d.info = "auto";
  }
  return t.pos += s.length - i.length, !0;
}
function ik(t, e) {
  let r = t.pos;
  if (t.src.charCodeAt(r) !== 10)
    return !1;
  const n = t.pending.length - 1, a = t.posMax;
  if (!e)
    if (n >= 0 && t.pending.charCodeAt(n) === 32)
      if (n >= 1 && t.pending.charCodeAt(n - 1) === 32) {
        let i = n - 1;
        for (; i >= 1 && t.pending.charCodeAt(i - 1) === 32; ) i--;
        t.pending = t.pending.slice(0, i), t.push("hardbreak", "br", 0);
      } else
        t.pending = t.pending.slice(0, -1), t.push("softbreak", "br", 0);
    else
      t.push("softbreak", "br", 0);
  for (r++; r < a && ot(t.src.charCodeAt(r)); )
    r++;
  return t.pos = r, !0;
}
const P_ = [];
for (let t = 0; t < 256; t++)
  P_.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(t) {
  P_[t.charCodeAt(0)] = 1;
});
function ok(t, e) {
  let r = t.pos;
  const n = t.posMax;
  if (t.src.charCodeAt(r) !== 92 || (r++, r >= n)) return !1;
  let a = t.src.charCodeAt(r);
  if (a === 10) {
    for (e || t.push("hardbreak", "br", 0), r++; r < n && (a = t.src.charCodeAt(r), !!ot(a)); )
      r++;
    return t.pos = r, !0;
  }
  let i = t.src[r];
  if (a >= 55296 && a <= 56319 && r + 1 < n) {
    const s = t.src.charCodeAt(r + 1);
    s >= 56320 && s <= 57343 && (i += t.src[r + 1], r++);
  }
  const o = "\\" + i;
  if (!e) {
    const s = t.push("text_special", "", 0);
    a < 256 && P_[a] !== 0 ? s.content = i : s.content = o, s.markup = o, s.info = "escape";
  }
  return t.pos = r + 1, !0;
}
function sk(t, e) {
  let r = t.pos;
  if (t.src.charCodeAt(r) !== 96)
    return !1;
  const a = r;
  r++;
  const i = t.posMax;
  for (; r < i && t.src.charCodeAt(r) === 96; )
    r++;
  const o = t.src.slice(a, r), s = o.length;
  if (t.backticksScanned && (t.backticks[s] || 0) <= a)
    return e || (t.pending += o), t.pos += s, !0;
  let l = r, u;
  for (; (u = t.src.indexOf("`", l)) !== -1; ) {
    for (l = u + 1; l < i && t.src.charCodeAt(l) === 96; )
      l++;
    const c = l - u;
    if (c === s) {
      if (!e) {
        const d = t.push("code_inline", "code", 0);
        d.markup = o, d.content = t.src.slice(r, u).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
      }
      return t.pos = l, !0;
    }
    t.backticks[c] = u;
  }
  return t.backticksScanned = !0, e || (t.pending += o), t.pos += s, !0;
}
function lk(t, e) {
  const r = t.pos, n = t.src.charCodeAt(r);
  if (e || n !== 126)
    return !1;
  const a = t.scanDelims(t.pos, !0);
  let i = a.length;
  const o = String.fromCharCode(n);
  if (i < 2)
    return !1;
  let s;
  i % 2 && (s = t.push("text", "", 0), s.content = o, i--);
  for (let l = 0; l < i; l += 2)
    s = t.push("text", "", 0), s.content = o + o, t.delimiters.push({
      marker: n,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: t.tokens.length - 1,
      end: -1,
      open: a.can_open,
      close: a.can_close
    });
  return t.pos += a.length, !0;
}
function I0(t, e) {
  let r;
  const n = [], a = e.length;
  for (let i = 0; i < a; i++) {
    const o = e[i];
    if (o.marker !== 126 || o.end === -1)
      continue;
    const s = e[o.end];
    r = t.tokens[o.token], r.type = "s_open", r.tag = "s", r.nesting = 1, r.markup = "~~", r.content = "", r = t.tokens[s.token], r.type = "s_close", r.tag = "s", r.nesting = -1, r.markup = "~~", r.content = "", t.tokens[s.token - 1].type === "text" && t.tokens[s.token - 1].content === "~" && n.push(s.token - 1);
  }
  for (; n.length; ) {
    const i = n.pop();
    let o = i + 1;
    for (; o < t.tokens.length && t.tokens[o].type === "s_close"; )
      o++;
    o--, i !== o && (r = t.tokens[o], t.tokens[o] = t.tokens[i], t.tokens[i] = r);
  }
}
function uk(t) {
  const e = t.tokens_meta, r = t.tokens_meta.length;
  I0(t, t.delimiters);
  for (let n = 0; n < r; n++)
    e[n] && e[n].delimiters && I0(t, e[n].delimiters);
}
const dw = {
  tokenize: lk,
  postProcess: uk
};
function ck(t, e) {
  const r = t.pos, n = t.src.charCodeAt(r);
  if (e || n !== 95 && n !== 42)
    return !1;
  const a = t.scanDelims(t.pos, n === 42);
  for (let i = 0; i < a.length; i++) {
    const o = t.push("text", "", 0);
    o.content = String.fromCharCode(n), t.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: n,
      // Total length of these series of delimiters.
      //
      length: a.length,
      // A position of the token this delimiter corresponds to.
      //
      token: t.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: a.can_open,
      close: a.can_close
    });
  }
  return t.pos += a.length, !0;
}
function N0(t, e) {
  const r = e.length;
  for (let n = r - 1; n >= 0; n--) {
    const a = e[n];
    if (a.marker !== 95 && a.marker !== 42 || a.end === -1)
      continue;
    const i = e[a.end], o = n > 0 && e[n - 1].end === a.end + 1 && // check that first two markers match and adjacent
    e[n - 1].marker === a.marker && e[n - 1].token === a.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[a.end + 1].token === i.token + 1, s = String.fromCharCode(a.marker), l = t.tokens[a.token];
    l.type = o ? "strong_open" : "em_open", l.tag = o ? "strong" : "em", l.nesting = 1, l.markup = o ? s + s : s, l.content = "";
    const u = t.tokens[i.token];
    u.type = o ? "strong_close" : "em_close", u.tag = o ? "strong" : "em", u.nesting = -1, u.markup = o ? s + s : s, u.content = "", o && (t.tokens[e[n - 1].token].content = "", t.tokens[e[a.end + 1].token].content = "", n--);
  }
}
function dk(t) {
  const e = t.tokens_meta, r = t.tokens_meta.length;
  N0(t, t.delimiters);
  for (let n = 0; n < r; n++)
    e[n] && e[n].delimiters && N0(t, e[n].delimiters);
}
const pw = {
  tokenize: ck,
  postProcess: dk
};
function pk(t, e) {
  let r, n, a, i, o = "", s = "", l = t.pos, u = !0;
  if (t.src.charCodeAt(t.pos) !== 91)
    return !1;
  const c = t.pos, d = t.posMax, p = t.pos + 1, f = t.md.helpers.parseLinkLabel(t, t.pos, !0);
  if (f < 0)
    return !1;
  let h = f + 1;
  if (h < d && t.src.charCodeAt(h) === 40) {
    for (u = !1, h++; h < d && (r = t.src.charCodeAt(h), !(!ot(r) && r !== 10)); h++)
      ;
    if (h >= d)
      return !1;
    if (l = h, a = t.md.helpers.parseLinkDestination(t.src, h, t.posMax), a.ok) {
      for (o = t.md.normalizeLink(a.str), t.md.validateLink(o) ? h = a.pos : o = "", l = h; h < d && (r = t.src.charCodeAt(h), !(!ot(r) && r !== 10)); h++)
        ;
      if (a = t.md.helpers.parseLinkTitle(t.src, h, t.posMax), h < d && l !== h && a.ok)
        for (s = a.str, h = a.pos; h < d && (r = t.src.charCodeAt(h), !(!ot(r) && r !== 10)); h++)
          ;
    }
    (h >= d || t.src.charCodeAt(h) !== 41) && (u = !0), h++;
  }
  if (u) {
    if (typeof t.env.references > "u")
      return !1;
    if (h < d && t.src.charCodeAt(h) === 91 ? (l = h + 1, h = t.md.helpers.parseLinkLabel(t, h), h >= 0 ? n = t.src.slice(l, h++) : h = f + 1) : h = f + 1, n || (n = t.src.slice(p, f)), i = t.env.references[Zp(n)], !i)
      return t.pos = c, !1;
    o = i.href, s = i.title;
  }
  if (!e) {
    t.pos = p, t.posMax = f;
    const g = t.push("link_open", "a", 1), v = [["href", o]];
    g.attrs = v, s && v.push(["title", s]), t.linkLevel++, t.md.inline.tokenize(t), t.linkLevel--, t.push("link_close", "a", -1);
  }
  return t.pos = h, t.posMax = d, !0;
}
function fk(t, e) {
  let r, n, a, i, o, s, l, u, c = "";
  const d = t.pos, p = t.posMax;
  if (t.src.charCodeAt(t.pos) !== 33 || t.src.charCodeAt(t.pos + 1) !== 91)
    return !1;
  const f = t.pos + 2, h = t.md.helpers.parseLinkLabel(t, t.pos + 1, !1);
  if (h < 0)
    return !1;
  if (i = h + 1, i < p && t.src.charCodeAt(i) === 40) {
    for (i++; i < p && (r = t.src.charCodeAt(i), !(!ot(r) && r !== 10)); i++)
      ;
    if (i >= p)
      return !1;
    for (u = i, s = t.md.helpers.parseLinkDestination(t.src, i, t.posMax), s.ok && (c = t.md.normalizeLink(s.str), t.md.validateLink(c) ? i = s.pos : c = ""), u = i; i < p && (r = t.src.charCodeAt(i), !(!ot(r) && r !== 10)); i++)
      ;
    if (s = t.md.helpers.parseLinkTitle(t.src, i, t.posMax), i < p && u !== i && s.ok)
      for (l = s.str, i = s.pos; i < p && (r = t.src.charCodeAt(i), !(!ot(r) && r !== 10)); i++)
        ;
    else
      l = "";
    if (i >= p || t.src.charCodeAt(i) !== 41)
      return t.pos = d, !1;
    i++;
  } else {
    if (typeof t.env.references > "u")
      return !1;
    if (i < p && t.src.charCodeAt(i) === 91 ? (u = i + 1, i = t.md.helpers.parseLinkLabel(t, i), i >= 0 ? a = t.src.slice(u, i++) : i = h + 1) : i = h + 1, a || (a = t.src.slice(f, h)), o = t.env.references[Zp(a)], !o)
      return t.pos = d, !1;
    c = o.href, l = o.title;
  }
  if (!e) {
    n = t.src.slice(f, h);
    const g = [];
    t.md.inline.parse(
      n,
      t.md,
      t.env,
      g
    );
    const v = t.push("image", "img", 0), m = [["src", c], ["alt", ""]];
    v.attrs = m, v.children = g, v.content = n, l && m.push(["title", l]);
  }
  return t.pos = i, t.posMax = p, !0;
}
const hk = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, gk = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;
function vk(t, e) {
  let r = t.pos;
  if (t.src.charCodeAt(r) !== 60)
    return !1;
  const n = t.pos, a = t.posMax;
  for (; ; ) {
    if (++r >= a) return !1;
    const o = t.src.charCodeAt(r);
    if (o === 60) return !1;
    if (o === 62) break;
  }
  const i = t.src.slice(n + 1, r);
  if (gk.test(i)) {
    const o = t.md.normalizeLink(i);
    if (!t.md.validateLink(o))
      return !1;
    if (!e) {
      const s = t.push("link_open", "a", 1);
      s.attrs = [["href", o]], s.markup = "autolink", s.info = "auto";
      const l = t.push("text", "", 0);
      l.content = t.md.normalizeLinkText(i);
      const u = t.push("link_close", "a", -1);
      u.markup = "autolink", u.info = "auto";
    }
    return t.pos += i.length + 2, !0;
  }
  if (hk.test(i)) {
    const o = t.md.normalizeLink("mailto:" + i);
    if (!t.md.validateLink(o))
      return !1;
    if (!e) {
      const s = t.push("link_open", "a", 1);
      s.attrs = [["href", o]], s.markup = "autolink", s.info = "auto";
      const l = t.push("text", "", 0);
      l.content = t.md.normalizeLinkText(i);
      const u = t.push("link_close", "a", -1);
      u.markup = "autolink", u.info = "auto";
    }
    return t.pos += i.length + 2, !0;
  }
  return !1;
}
function mk(t) {
  return /^<a[>\s]/i.test(t);
}
function _k(t) {
  return /^<\/a\s*>/i.test(t);
}
function yk(t) {
  const e = t | 32;
  return e >= 97 && e <= 122;
}
function bk(t, e) {
  if (!t.md.options.html)
    return !1;
  const r = t.posMax, n = t.pos;
  if (t.src.charCodeAt(n) !== 60 || n + 2 >= r)
    return !1;
  const a = t.src.charCodeAt(n + 1);
  if (a !== 33 && a !== 63 && a !== 47 && !yk(a))
    return !1;
  const i = t.src.slice(n).match(Z2);
  if (!i)
    return !1;
  if (!e) {
    const o = t.push("html_inline", "", 0);
    o.content = i[0], mk(o.content) && t.linkLevel++, _k(o.content) && t.linkLevel--;
  }
  return t.pos += i[0].length, !0;
}
const Sk = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, Ek = /^&([a-z][a-z0-9]{1,31});/i;
function Tk(t, e) {
  const r = t.pos, n = t.posMax;
  if (t.src.charCodeAt(r) !== 38 || r + 1 >= n) return !1;
  if (t.src.charCodeAt(r + 1) === 35) {
    const i = t.src.slice(r).match(Sk);
    if (i) {
      if (!e) {
        const o = i[1][0].toLowerCase() === "x" ? parseInt(i[1].slice(1), 16) : parseInt(i[1], 10), s = t.push("text_special", "", 0);
        s.content = O_(o) ? Xd(o) : Xd(65533), s.markup = i[0], s.info = "entity";
      }
      return t.pos += i[0].length, !0;
    }
  } else {
    const i = t.src.slice(r).match(Ek);
    if (i) {
      const o = aw(i[0]);
      if (o !== i[0]) {
        if (!e) {
          const s = t.push("text_special", "", 0);
          s.content = o, s.markup = i[0], s.info = "entity";
        }
        return t.pos += i[0].length, !0;
      }
    }
  }
  return !1;
}
function R0(t) {
  const e = {}, r = t.length;
  if (!r) return;
  let n = 0, a = -2;
  const i = [];
  for (let o = 0; o < r; o++) {
    const s = t[o];
    if (i.push(0), (t[n].marker !== s.marker || a !== s.token - 1) && (n = o), a = s.token, s.length = s.length || 0, !s.close) continue;
    e.hasOwnProperty(s.marker) || (e[s.marker] = [-1, -1, -1, -1, -1, -1]);
    const l = e[s.marker][(s.open ? 3 : 0) + s.length % 3];
    let u = n - i[n] - 1, c = u;
    for (; u > l; u -= i[u] + 1) {
      const d = t[u];
      if (d.marker === s.marker && d.open && d.end < 0) {
        let p = !1;
        if ((d.close || s.open) && (d.length + s.length) % 3 === 0 && (d.length % 3 !== 0 || s.length % 3 !== 0) && (p = !0), !p) {
          const f = u > 0 && !t[u - 1].open ? i[u - 1] + 1 : 0;
          i[o] = o - u + f, i[u] = f, s.open = !1, d.end = o, d.close = !1, c = -1, a = -2;
          break;
        }
      }
    }
    c !== -1 && (e[s.marker][(s.open ? 3 : 0) + (s.length || 0) % 3] = c);
  }
}
function xk(t) {
  const e = t.tokens_meta, r = t.tokens_meta.length;
  R0(t.delimiters);
  for (let n = 0; n < r; n++)
    e[n] && e[n].delimiters && R0(e[n].delimiters);
}
function Ck(t) {
  let e, r, n = 0;
  const a = t.tokens, i = t.tokens.length;
  for (e = r = 0; e < i; e++)
    a[e].nesting < 0 && n--, a[e].level = n, a[e].nesting > 0 && n++, a[e].type === "text" && e + 1 < i && a[e + 1].type === "text" ? a[e + 1].content = a[e].content + a[e + 1].content : (e !== r && (a[r] = a[e]), r++);
  e !== r && (a.length = r);
}
const th = [
  ["text", rk],
  ["linkify", ak],
  ["newline", ik],
  ["escape", ok],
  ["backticks", sk],
  ["strikethrough", dw.tokenize],
  ["emphasis", pw.tokenize],
  ["link", pk],
  ["image", fk],
  ["autolink", vk],
  ["html_inline", bk],
  ["entity", Tk]
], rh = [
  ["balance_pairs", xk],
  ["strikethrough", dw.postProcess],
  ["emphasis", pw.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", Ck]
];
function Fu() {
  this.ruler = new hr();
  for (let t = 0; t < th.length; t++)
    this.ruler.push(th[t][0], th[t][1]);
  this.ruler2 = new hr();
  for (let t = 0; t < rh.length; t++)
    this.ruler2.push(rh[t][0], rh[t][1]);
}
Fu.prototype.skipToken = function(t) {
  const e = t.pos, r = this.ruler.getRules(""), n = r.length, a = t.md.options.maxNesting, i = t.cache;
  if (typeof i[e] < "u") {
    t.pos = i[e];
    return;
  }
  let o = !1;
  if (t.level < a) {
    for (let s = 0; s < n; s++)
      if (t.level++, o = r[s](t, !0), t.level--, o) {
        if (e >= t.pos)
          throw new Error("inline rule didn't increment state.pos");
        break;
      }
  } else
    t.pos = t.posMax;
  o || t.pos++, i[e] = t.pos;
};
Fu.prototype.tokenize = function(t) {
  const e = this.ruler.getRules(""), r = e.length, n = t.posMax, a = t.md.options.maxNesting;
  for (; t.pos < n; ) {
    const i = t.pos;
    let o = !1;
    if (t.level < a) {
      for (let s = 0; s < r; s++)
        if (o = e[s](t, !1), o) {
          if (i >= t.pos)
            throw new Error("inline rule didn't increment state.pos");
          break;
        }
    }
    if (o) {
      if (t.pos >= n)
        break;
      continue;
    }
    t.pending += t.src[t.pos++];
  }
  t.pending && t.pushPending();
};
Fu.prototype.parse = function(t, e, r, n) {
  const a = new this.State(t, e, r, n);
  this.tokenize(a);
  const i = this.ruler2.getRules(""), o = i.length;
  for (let s = 0; s < o; s++)
    i[s](a);
};
Fu.prototype.State = Bu;
function Ak(t) {
  const e = {};
  t = t || {}, e.src_Any = JA.source, e.src_Cc = ew.source, e.src_Z = rw.source, e.src_P = N_.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
  const r = "[><｜]";
  return e.src_pseudo_letter = "(?:(?!" + r + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + r + "|" + e.src_ZPCc + ")(?!" + (t["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + r + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (t["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + // allow `,,,` in paths
  ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
  "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + r + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
}
function Lv(t) {
  return Array.prototype.slice.call(arguments, 1).forEach(function(r) {
    r && Object.keys(r).forEach(function(n) {
      t[n] = r[n];
    });
  }), t;
}
function Qp(t) {
  return Object.prototype.toString.call(t);
}
function wk(t) {
  return Qp(t) === "[object String]";
}
function Dk(t) {
  return Qp(t) === "[object Object]";
}
function Mk(t) {
  return Qp(t) === "[object RegExp]";
}
function O0(t) {
  return Qp(t) === "[object Function]";
}
function Ik(t) {
  return t.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
const fw = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function Nk(t) {
  return Object.keys(t || {}).reduce(function(e, r) {
    return e || fw.hasOwnProperty(r);
  }, !1);
}
const Rk = {
  "http:": {
    validate: function(t, e, r) {
      const n = t.slice(e);
      return r.re.http || (r.re.http = new RegExp(
        "^\\/\\/" + r.re.src_auth + r.re.src_host_port_strict + r.re.src_path,
        "i"
      )), r.re.http.test(n) ? n.match(r.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(t, e, r) {
      const n = t.slice(e);
      return r.re.no_http || (r.re.no_http = new RegExp(
        "^" + r.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + r.re.src_domain + ")\\.)+" + r.re.src_domain_root + ")" + r.re.src_port + r.re.src_host_terminator + r.re.src_path,
        "i"
      )), r.re.no_http.test(n) ? e >= 3 && t[e - 3] === ":" || e >= 3 && t[e - 3] === "/" ? 0 : n.match(r.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(t, e, r) {
      const n = t.slice(e);
      return r.re.mailto || (r.re.mailto = new RegExp(
        "^" + r.re.src_email_name + "@" + r.re.src_host_strict,
        "i"
      )), r.re.mailto.test(n) ? n.match(r.re.mailto)[0].length : 0;
    }
  }
}, Ok = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", Lk = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function Pk(t) {
  t.__index__ = -1, t.__text_cache__ = "";
}
function kk(t) {
  return function(e, r) {
    const n = e.slice(r);
    return t.test(n) ? n.match(t)[0].length : 0;
  };
}
function L0() {
  return function(t, e) {
    e.normalize(t);
  };
}
function Qd(t) {
  const e = t.re = Ak(t.__opts__), r = t.__tlds__.slice();
  t.onCompile(), t.__tlds_replaced__ || r.push(Ok), r.push(e.src_xn), e.src_tlds = r.join("|");
  function n(s) {
    return s.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(n(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(n(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(n(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(n(e.tpl_host_fuzzy_test), "i");
  const a = [];
  t.__compiled__ = {};
  function i(s, l) {
    throw new Error('(LinkifyIt) Invalid schema "' + s + '": ' + l);
  }
  Object.keys(t.__schemas__).forEach(function(s) {
    const l = t.__schemas__[s];
    if (l === null)
      return;
    const u = { validate: null, link: null };
    if (t.__compiled__[s] = u, Dk(l)) {
      Mk(l.validate) ? u.validate = kk(l.validate) : O0(l.validate) ? u.validate = l.validate : i(s, l), O0(l.normalize) ? u.normalize = l.normalize : l.normalize ? i(s, l) : u.normalize = L0();
      return;
    }
    if (wk(l)) {
      a.push(s);
      return;
    }
    i(s, l);
  }), a.forEach(function(s) {
    t.__compiled__[t.__schemas__[s]] && (t.__compiled__[s].validate = t.__compiled__[t.__schemas__[s]].validate, t.__compiled__[s].normalize = t.__compiled__[t.__schemas__[s]].normalize);
  }), t.__compiled__[""] = { validate: null, normalize: L0() };
  const o = Object.keys(t.__compiled__).filter(function(s) {
    return s.length > 0 && t.__compiled__[s];
  }).map(Ik).join("|");
  t.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + o + ")", "i"), t.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + o + ")", "ig"), t.re.schema_at_start = RegExp("^" + t.re.schema_search.source, "i"), t.re.pretest = RegExp(
    "(" + t.re.schema_test.source + ")|(" + t.re.host_fuzzy_test.source + ")|@",
    "i"
  ), Pk(t);
}
function Bk(t, e) {
  const r = t.__index__, n = t.__last_index__, a = t.__text_cache__.slice(r, n);
  this.schema = t.__schema__.toLowerCase(), this.index = r + e, this.lastIndex = n + e, this.raw = a, this.text = a, this.url = a;
}
function Pv(t, e) {
  const r = new Bk(t, e);
  return t.__compiled__[r.schema].normalize(r, t), r;
}
function Er(t, e) {
  if (!(this instanceof Er))
    return new Er(t, e);
  e || Nk(t) && (e = t, t = {}), this.__opts__ = Lv({}, fw, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = Lv({}, Rk, t), this.__compiled__ = {}, this.__tlds__ = Lk, this.__tlds_replaced__ = !1, this.re = {}, Qd(this);
}
Er.prototype.add = function(e, r) {
  return this.__schemas__[e] = r, Qd(this), this;
};
Er.prototype.set = function(e) {
  return this.__opts__ = Lv(this.__opts__, e), this;
};
Er.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  let r, n, a, i, o, s, l, u, c;
  if (this.re.schema_test.test(e)) {
    for (l = this.re.schema_search, l.lastIndex = 0; (r = l.exec(e)) !== null; )
      if (i = this.testSchemaAt(e, r[2], l.lastIndex), i) {
        this.__schema__ = r[2], this.__index__ = r.index + r[1].length, this.__last_index__ = r.index + r[0].length + i;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (u = e.search(this.re.host_fuzzy_test), u >= 0 && (this.__index__ < 0 || u < this.__index__) && (n = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (o = n.index + n[1].length, (this.__index__ < 0 || o < this.__index__) && (this.__schema__ = "", this.__index__ = o, this.__last_index__ = n.index + n[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (c = e.indexOf("@"), c >= 0 && (a = e.match(this.re.email_fuzzy)) !== null && (o = a.index + a[1].length, s = a.index + a[0].length, (this.__index__ < 0 || o < this.__index__ || o === this.__index__ && s > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = o, this.__last_index__ = s))), this.__index__ >= 0;
};
Er.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
Er.prototype.testSchemaAt = function(e, r, n) {
  return this.__compiled__[r.toLowerCase()] ? this.__compiled__[r.toLowerCase()].validate(e, n, this) : 0;
};
Er.prototype.match = function(e) {
  const r = [];
  let n = 0;
  this.__index__ >= 0 && this.__text_cache__ === e && (r.push(Pv(this, n)), n = this.__last_index__);
  let a = n ? e.slice(n) : e;
  for (; this.test(a); )
    r.push(Pv(this, n)), a = a.slice(this.__last_index__), n += this.__last_index__;
  return r.length ? r : null;
};
Er.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length) return null;
  const r = this.re.schema_at_start.exec(e);
  if (!r) return null;
  const n = this.testSchemaAt(e, r[2], r[0].length);
  return n ? (this.__schema__ = r[2], this.__index__ = r.index + r[1].length, this.__last_index__ = r.index + r[0].length + n, Pv(this, 0)) : null;
};
Er.prototype.tlds = function(e, r) {
  return e = Array.isArray(e) ? e : [e], r ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(n, a, i) {
    return n !== i[a - 1];
  }).reverse(), Qd(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, Qd(this), this);
};
Er.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
Er.prototype.onCompile = function() {
};
const is = 2147483647, En = 36, k_ = 1, iu = 26, Fk = 38, Gk = 700, hw = 72, gw = 128, vw = "-", Uk = /^xn--/, zk = /[^\0-\x7F]/, Vk = /[\x2E\u3002\uFF0E\uFF61]/g, $k = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, nh = En - k_, Tn = Math.floor, ah = String.fromCharCode;
function Ca(t) {
  throw new RangeError($k[t]);
}
function Hk(t, e) {
  const r = [];
  let n = t.length;
  for (; n--; )
    r[n] = e(t[n]);
  return r;
}
function mw(t, e) {
  const r = t.split("@");
  let n = "";
  r.length > 1 && (n = r[0] + "@", t = r[1]), t = t.replace(Vk, ".");
  const a = t.split("."), i = Hk(a, e).join(".");
  return n + i;
}
function Wk(t) {
  const e = [];
  let r = 0;
  const n = t.length;
  for (; r < n; ) {
    const a = t.charCodeAt(r++);
    if (a >= 55296 && a <= 56319 && r < n) {
      const i = t.charCodeAt(r++);
      (i & 64512) == 56320 ? e.push(((a & 1023) << 10) + (i & 1023) + 65536) : (e.push(a), r--);
    } else
      e.push(a);
  }
  return e;
}
const qk = function(t) {
  return t >= 48 && t < 58 ? 26 + (t - 48) : t >= 65 && t < 91 ? t - 65 : t >= 97 && t < 123 ? t - 97 : En;
}, P0 = function(t, e) {
  return t + 22 + 75 * (t < 26) - ((e != 0) << 5);
}, _w = function(t, e, r) {
  let n = 0;
  for (t = r ? Tn(t / Gk) : t >> 1, t += Tn(t / e); t > nh * iu >> 1; n += En)
    t = Tn(t / nh);
  return Tn(n + (nh + 1) * t / (t + Fk));
}, Yk = function(t) {
  const e = [], r = t.length;
  let n = 0, a = gw, i = hw, o = t.lastIndexOf(vw);
  o < 0 && (o = 0);
  for (let s = 0; s < o; ++s)
    t.charCodeAt(s) >= 128 && Ca("not-basic"), e.push(t.charCodeAt(s));
  for (let s = o > 0 ? o + 1 : 0; s < r; ) {
    const l = n;
    for (let c = 1, d = En; ; d += En) {
      s >= r && Ca("invalid-input");
      const p = qk(t.charCodeAt(s++));
      p >= En && Ca("invalid-input"), p > Tn((is - n) / c) && Ca("overflow"), n += p * c;
      const f = d <= i ? k_ : d >= i + iu ? iu : d - i;
      if (p < f)
        break;
      const h = En - f;
      c > Tn(is / h) && Ca("overflow"), c *= h;
    }
    const u = e.length + 1;
    i = _w(n - l, u, l == 0), Tn(n / u) > is - a && Ca("overflow"), a += Tn(n / u), n %= u, e.splice(n++, 0, a);
  }
  return String.fromCodePoint(...e);
}, Kk = function(t) {
  const e = [];
  t = Wk(t);
  const r = t.length;
  let n = gw, a = 0, i = hw;
  for (const l of t)
    l < 128 && e.push(ah(l));
  const o = e.length;
  let s = o;
  for (o && e.push(vw); s < r; ) {
    let l = is;
    for (const c of t)
      c >= n && c < l && (l = c);
    const u = s + 1;
    l - n > Tn((is - a) / u) && Ca("overflow"), a += (l - n) * u, n = l;
    for (const c of t)
      if (c < n && ++a > is && Ca("overflow"), c === n) {
        let d = a;
        for (let p = En; ; p += En) {
          const f = p <= i ? k_ : p >= i + iu ? iu : p - i;
          if (d < f)
            break;
          const h = d - f, g = En - f;
          e.push(
            ah(P0(f + h % g, 0))
          ), d = Tn(h / g);
        }
        e.push(ah(P0(d, 0))), i = _w(a, u, s === o), a = 0, ++s;
      }
    ++a, ++n;
  }
  return e.join("");
}, Zk = function(t) {
  return mw(t, function(e) {
    return Uk.test(e) ? Yk(e.slice(4).toLowerCase()) : e;
  });
}, Xk = function(t) {
  return mw(t, function(e) {
    return zk.test(e) ? "xn--" + Kk(e) : e;
  });
}, yw = {
  toASCII: Xk,
  toUnicode: Zk
}, Qk = {
  options: {
    // Enable HTML tags in source
    html: !1,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !1,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 100
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, jk = {
  options: {
    // Enable HTML tags in source
    html: !1,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !1,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, Jk = {
  options: {
    // Enable HTML tags in source
    html: !0,
    // Use '/' to close single tags (<br />)
    xhtmlOut: !0,
    // Convert '\n' in paragraphs into <br>
    breaks: !1,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: !1,
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, eB = {
  default: Qk,
  zero: jk,
  commonmark: Jk
}, tB = /^(vbscript|javascript|file|data):/, rB = /^data:image\/(gif|png|jpeg|webp);/;
function nB(t) {
  const e = t.trim().toLowerCase();
  return tB.test(e) ? rB.test(e) : !0;
}
const bw = ["http:", "https:", "mailto:"];
function aB(t) {
  const e = I_(t, !0);
  if (e.hostname && (!e.protocol || bw.indexOf(e.protocol) >= 0))
    try {
      e.hostname = yw.toASCII(e.hostname);
    } catch {
    }
  return ku(M_(e));
}
function iB(t) {
  const e = I_(t, !0);
  if (e.hostname && (!e.protocol || bw.indexOf(e.protocol) >= 0))
    try {
      e.hostname = yw.toUnicode(e.hostname);
    } catch {
    }
  return fs(M_(e), fs.defaultChars + "%");
}
function en(t, e) {
  if (!(this instanceof en))
    return new en(t, e);
  e || R_(t) || (e = t || {}, t = "default"), this.inline = new Fu(), this.block = new Xp(), this.core = new L_(), this.renderer = new As(), this.linkify = new Er(), this.validateLink = nB, this.normalizeLink = aB, this.normalizeLinkText = iB, this.utils = i2, this.helpers = Kp({}, u2), this.options = {}, this.configure(t), e && this.set(e);
}
en.prototype.set = function(t) {
  return Kp(this.options, t), this;
};
en.prototype.configure = function(t) {
  const e = this;
  if (R_(t)) {
    const r = t;
    if (t = eB[r], !t)
      throw new Error('Wrong `markdown-it` preset "' + r + '", check name');
  }
  if (!t)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return t.options && e.set(t.options), t.components && Object.keys(t.components).forEach(function(r) {
    t.components[r].rules && e[r].ruler.enableOnly(t.components[r].rules), t.components[r].rules2 && e[r].ruler2.enableOnly(t.components[r].rules2);
  }), this;
};
en.prototype.enable = function(t, e) {
  let r = [];
  Array.isArray(t) || (t = [t]), ["core", "block", "inline"].forEach(function(a) {
    r = r.concat(this[a].ruler.enable(t, !0));
  }, this), r = r.concat(this.inline.ruler2.enable(t, !0));
  const n = t.filter(function(a) {
    return r.indexOf(a) < 0;
  });
  if (n.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + n);
  return this;
};
en.prototype.disable = function(t, e) {
  let r = [];
  Array.isArray(t) || (t = [t]), ["core", "block", "inline"].forEach(function(a) {
    r = r.concat(this[a].ruler.disable(t, !0));
  }, this), r = r.concat(this.inline.ruler2.disable(t, !0));
  const n = t.filter(function(a) {
    return r.indexOf(a) < 0;
  });
  if (n.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + n);
  return this;
};
en.prototype.use = function(t) {
  const e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return t.apply(t, e), this;
};
en.prototype.parse = function(t, e) {
  if (typeof t != "string")
    throw new Error("Input data should be a String");
  const r = new this.core.State(t, this, e);
  return this.core.process(r), r.tokens;
};
en.prototype.render = function(t, e) {
  return e = e || {}, this.renderer.render(this.parse(t, e), this.options, e);
};
en.prototype.parseInline = function(t, e) {
  const r = new this.core.State(t, this, e);
  return r.inlineMode = !0, this.core.process(r), r.tokens;
};
en.prototype.renderInline = function(t, e) {
  return e = e || {}, this.renderer.render(this.parseInline(t, e), this.options, e);
};
const ure = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
function oB(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var ih, k0;
function sB() {
  if (k0) return ih;
  k0 = 1;
  function t(P) {
    return P instanceof Map ? P.clear = P.delete = P.set = function() {
      throw new Error("map is read-only");
    } : P instanceof Set && (P.add = P.clear = P.delete = function() {
      throw new Error("set is read-only");
    }), Object.freeze(P), Object.getOwnPropertyNames(P).forEach((W) => {
      const te = P[W], Ie = typeof te;
      (Ie === "object" || Ie === "function") && !Object.isFrozen(te) && t(te);
    }), P;
  }
  class e {
    /**
     * @param {CompiledMode} mode
     */
    constructor(W) {
      W.data === void 0 && (W.data = {}), this.data = W.data, this.isMatchIgnored = !1;
    }
    ignoreMatch() {
      this.isMatchIgnored = !0;
    }
  }
  function r(P) {
    return P.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
  }
  function n(P, ...W) {
    const te = /* @__PURE__ */ Object.create(null);
    for (const Ie in P)
      te[Ie] = P[Ie];
    return W.forEach(function(Ie) {
      for (const ft in Ie)
        te[ft] = Ie[ft];
    }), /** @type {T} */
    te;
  }
  const a = "</span>", i = (P) => !!P.scope, o = (P, { prefix: W }) => {
    if (P.startsWith("language:"))
      return P.replace("language:", "language-");
    if (P.includes(".")) {
      const te = P.split(".");
      return [
        `${W}${te.shift()}`,
        ...te.map((Ie, ft) => `${Ie}${"_".repeat(ft + 1)}`)
      ].join(" ");
    }
    return `${W}${P}`;
  };
  class s {
    /**
     * Creates a new HTMLRenderer
     *
     * @param {Tree} parseTree - the parse tree (must support `walk` API)
     * @param {{classPrefix: string}} options
     */
    constructor(W, te) {
      this.buffer = "", this.classPrefix = te.classPrefix, W.walk(this);
    }
    /**
     * Adds texts to the output stream
     *
     * @param {string} text */
    addText(W) {
      this.buffer += r(W);
    }
    /**
     * Adds a node open to the output stream (if needed)
     *
     * @param {Node} node */
    openNode(W) {
      if (!i(W)) return;
      const te = o(
        W.scope,
        { prefix: this.classPrefix }
      );
      this.span(te);
    }
    /**
     * Adds a node close to the output stream (if needed)
     *
     * @param {Node} node */
    closeNode(W) {
      i(W) && (this.buffer += a);
    }
    /**
     * returns the accumulated buffer
    */
    value() {
      return this.buffer;
    }
    // helpers
    /**
     * Builds a span element
     *
     * @param {string} className */
    span(W) {
      this.buffer += `<span class="${W}">`;
    }
  }
  const l = (P = {}) => {
    const W = { children: [] };
    return Object.assign(W, P), W;
  };
  class u {
    constructor() {
      this.rootNode = l(), this.stack = [this.rootNode];
    }
    get top() {
      return this.stack[this.stack.length - 1];
    }
    get root() {
      return this.rootNode;
    }
    /** @param {Node} node */
    add(W) {
      this.top.children.push(W);
    }
    /** @param {string} scope */
    openNode(W) {
      const te = l({ scope: W });
      this.add(te), this.stack.push(te);
    }
    closeNode() {
      if (this.stack.length > 1)
        return this.stack.pop();
    }
    closeAllNodes() {
      for (; this.closeNode(); ) ;
    }
    toJSON() {
      return JSON.stringify(this.rootNode, null, 4);
    }
    /**
     * @typedef { import("./html_renderer").Renderer } Renderer
     * @param {Renderer} builder
     */
    walk(W) {
      return this.constructor._walk(W, this.rootNode);
    }
    /**
     * @param {Renderer} builder
     * @param {Node} node
     */
    static _walk(W, te) {
      return typeof te == "string" ? W.addText(te) : te.children && (W.openNode(te), te.children.forEach((Ie) => this._walk(W, Ie)), W.closeNode(te)), W;
    }
    /**
     * @param {Node} node
     */
    static _collapse(W) {
      typeof W != "string" && W.children && (W.children.every((te) => typeof te == "string") ? W.children = [W.children.join("")] : W.children.forEach((te) => {
        u._collapse(te);
      }));
    }
  }
  class c extends u {
    /**
     * @param {*} options
     */
    constructor(W) {
      super(), this.options = W;
    }
    /**
     * @param {string} text
     */
    addText(W) {
      W !== "" && this.add(W);
    }
    /** @param {string} scope */
    startScope(W) {
      this.openNode(W);
    }
    endScope() {
      this.closeNode();
    }
    /**
     * @param {Emitter & {root: DataNode}} emitter
     * @param {string} name
     */
    __addSublanguage(W, te) {
      const Ie = W.root;
      te && (Ie.scope = `language:${te}`), this.add(Ie);
    }
    toHTML() {
      return new s(this, this.options).value();
    }
    finalize() {
      return this.closeAllNodes(), !0;
    }
  }
  function d(P) {
    return P ? typeof P == "string" ? P : P.source : null;
  }
  function p(P) {
    return g("(?=", P, ")");
  }
  function f(P) {
    return g("(?:", P, ")*");
  }
  function h(P) {
    return g("(?:", P, ")?");
  }
  function g(...P) {
    return P.map((te) => d(te)).join("");
  }
  function v(P) {
    const W = P[P.length - 1];
    return typeof W == "object" && W.constructor === Object ? (P.splice(P.length - 1, 1), W) : {};
  }
  function m(...P) {
    return "(" + (v(P).capture ? "" : "?:") + P.map((Ie) => d(Ie)).join("|") + ")";
  }
  function _(P) {
    return new RegExp(P.toString() + "|").exec("").length - 1;
  }
  function y(P, W) {
    const te = P && P.exec(W);
    return te && te.index === 0;
  }
  const b = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
  function S(P, { joinWith: W }) {
    let te = 0;
    return P.map((Ie) => {
      te += 1;
      const ft = te;
      let ht = d(Ie), he = "";
      for (; ht.length > 0; ) {
        const ue = b.exec(ht);
        if (!ue) {
          he += ht;
          break;
        }
        he += ht.substring(0, ue.index), ht = ht.substring(ue.index + ue[0].length), ue[0][0] === "\\" && ue[1] ? he += "\\" + String(Number(ue[1]) + ft) : (he += ue[0], ue[0] === "(" && te++);
      }
      return he;
    }).map((Ie) => `(${Ie})`).join(W);
  }
  const E = /\b\B/, T = "[a-zA-Z]\\w*", x = "[a-zA-Z_]\\w*", C = "\\b\\d+(\\.\\d+)?", A = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", D = "\\b(0b[01]+)", M = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", I = (P = {}) => {
    const W = /^#![ ]*\//;
    return P.binary && (P.begin = g(
      W,
      /.*\b/,
      P.binary,
      /\b.*/
    )), n({
      scope: "meta",
      begin: W,
      end: /$/,
      relevance: 0,
      /** @type {ModeCallback} */
      "on:begin": (te, Ie) => {
        te.index !== 0 && Ie.ignoreMatch();
      }
    }, P);
  }, N = {
    begin: "\\\\[\\s\\S]",
    relevance: 0
  }, R = {
    scope: "string",
    begin: "'",
    end: "'",
    illegal: "\\n",
    contains: [N]
  }, O = {
    scope: "string",
    begin: '"',
    end: '"',
    illegal: "\\n",
    contains: [N]
  }, B = {
    begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
  }, L = function(P, W, te = {}) {
    const Ie = n(
      {
        scope: "comment",
        begin: P,
        end: W,
        contains: []
      },
      te
    );
    Ie.contains.push({
      scope: "doctag",
      // hack to avoid the space from being included. the space is necessary to
      // match here to prevent the plain text rule below from gobbling up doctags
      begin: "[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",
      end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,
      excludeBegin: !0,
      relevance: 0
    });
    const ft = m(
      // list of common 1 and 2 letter words in English
      "I",
      "a",
      "is",
      "so",
      "us",
      "to",
      "at",
      "if",
      "in",
      "it",
      "on",
      // note: this is not an exhaustive list of contractions, just popular ones
      /[A-Za-z]+['](d|ve|re|ll|t|s|n)/,
      // contractions - can't we'd they're let's, etc
      /[A-Za-z]+[-][a-z]+/,
      // `no-way`, etc.
      /[A-Za-z][a-z]{2,}/
      // allow capitalized words at beginning of sentences
    );
    return Ie.contains.push(
      {
        // TODO: how to include ", (, ) without breaking grammars that use these for
        // comment delimiters?
        // begin: /[ ]+([()"]?([A-Za-z'-]{3,}|is|a|I|so|us|[tT][oO]|at|if|in|it|on)[.]?[()":]?([.][ ]|[ ]|\))){3}/
        // ---
        // this tries to find sequences of 3 english words in a row (without any
        // "programming" type syntax) this gives us a strong signal that we've
        // TRULY found a comment - vs perhaps scanning with the wrong language.
        // It's possible to find something that LOOKS like the start of the
        // comment - but then if there is no readable text - good chance it is a
        // false match and not a comment.
        //
        // for a visual example please see:
        // https://github.com/highlightjs/highlight.js/issues/2827
        begin: g(
          /[ ]+/,
          // necessary to prevent us gobbling up doctags like /* @author Bob Mcgill */
          "(",
          ft,
          /[.]?[:]?([.][ ]|[ ])/,
          "){3}"
        )
        // look for 3 words in a row
      }
    ), Ie;
  }, F = L("//", "$"), U = L("/\\*", "\\*/"), z = L("#", "$"), H = {
    scope: "number",
    begin: C,
    relevance: 0
  }, Z = {
    scope: "number",
    begin: A,
    relevance: 0
  }, ee = {
    scope: "number",
    begin: D,
    relevance: 0
  }, oe = {
    scope: "regexp",
    begin: /\/(?=[^/\n]*\/)/,
    end: /\/[gimuy]*/,
    contains: [
      N,
      {
        begin: /\[/,
        end: /\]/,
        relevance: 0,
        contains: [N]
      }
    ]
  }, Le = {
    scope: "title",
    begin: T,
    relevance: 0
  }, Xe = {
    scope: "title",
    begin: x,
    relevance: 0
  }, fe = {
    // excludes method names from keyword processing
    begin: "\\.\\s*" + x,
    relevance: 0
  };
  var ve = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    APOS_STRING_MODE: R,
    BACKSLASH_ESCAPE: N,
    BINARY_NUMBER_MODE: ee,
    BINARY_NUMBER_RE: D,
    COMMENT: L,
    C_BLOCK_COMMENT_MODE: U,
    C_LINE_COMMENT_MODE: F,
    C_NUMBER_MODE: Z,
    C_NUMBER_RE: A,
    END_SAME_AS_BEGIN: function(P) {
      return Object.assign(
        P,
        {
          /** @type {ModeCallback} */
          "on:begin": (W, te) => {
            te.data._beginMatch = W[1];
          },
          /** @type {ModeCallback} */
          "on:end": (W, te) => {
            te.data._beginMatch !== W[1] && te.ignoreMatch();
          }
        }
      );
    },
    HASH_COMMENT_MODE: z,
    IDENT_RE: T,
    MATCH_NOTHING_RE: E,
    METHOD_GUARD: fe,
    NUMBER_MODE: H,
    NUMBER_RE: C,
    PHRASAL_WORDS_MODE: B,
    QUOTE_STRING_MODE: O,
    REGEXP_MODE: oe,
    RE_STARTERS_RE: M,
    SHEBANG: I,
    TITLE_MODE: Le,
    UNDERSCORE_IDENT_RE: x,
    UNDERSCORE_TITLE_MODE: Xe
  });
  function j(P, W) {
    P.input[P.index - 1] === "." && W.ignoreMatch();
  }
  function ce(P, W) {
    P.className !== void 0 && (P.scope = P.className, delete P.className);
  }
  function qe(P, W) {
    W && P.beginKeywords && (P.begin = "\\b(" + P.beginKeywords.split(" ").join("|") + ")(?!\\.)(?=\\b|\\s)", P.__beforeBegin = j, P.keywords = P.keywords || P.beginKeywords, delete P.beginKeywords, P.relevance === void 0 && (P.relevance = 0));
  }
  function Ge(P, W) {
    Array.isArray(P.illegal) && (P.illegal = m(...P.illegal));
  }
  function We(P, W) {
    if (P.match) {
      if (P.begin || P.end) throw new Error("begin & end are not supported with match");
      P.begin = P.match, delete P.match;
    }
  }
  function ye(P, W) {
    P.relevance === void 0 && (P.relevance = 1);
  }
  const nt = (P, W) => {
    if (!P.beforeMatch) return;
    if (P.starts) throw new Error("beforeMatch cannot be used with starts");
    const te = Object.assign({}, P);
    Object.keys(P).forEach((Ie) => {
      delete P[Ie];
    }), P.keywords = te.keywords, P.begin = g(te.beforeMatch, p(te.begin)), P.starts = {
      relevance: 0,
      contains: [
        Object.assign(te, { endsParent: !0 })
      ]
    }, P.relevance = 0, delete te.beforeMatch;
  }, pt = [
    "of",
    "and",
    "for",
    "in",
    "not",
    "or",
    "if",
    "then",
    "parent",
    // common variable name
    "list",
    // common variable name
    "value"
    // common variable name
  ], It = "keyword";
  function sn(P, W, te = It) {
    const Ie = /* @__PURE__ */ Object.create(null);
    return typeof P == "string" ? ft(te, P.split(" ")) : Array.isArray(P) ? ft(te, P) : Object.keys(P).forEach(function(ht) {
      Object.assign(
        Ie,
        sn(P[ht], W, ht)
      );
    }), Ie;
    function ft(ht, he) {
      W && (he = he.map((ue) => ue.toLowerCase())), he.forEach(function(ue) {
        const we = ue.split("|");
        Ie[we[0]] = [ht, ln(we[0], we[1])];
      });
    }
  }
  function ln(P, W) {
    return W ? Number(W) : oc(P) ? 0 : 1;
  }
  function oc(P) {
    return pt.includes(P.toLowerCase());
  }
  const Eo = {}, ri = (P) => {
    console.error(P);
  }, qb = (P, ...W) => {
    console.log(`WARN: ${P}`, ...W);
  }, To = (P, W) => {
    Eo[`${P}/${W}`] || (console.log(`Deprecated as of ${P}. ${W}`), Eo[`${P}/${W}`] = !0);
  }, sc = new Error();
  function Yb(P, W, { key: te }) {
    let Ie = 0;
    const ft = P[te], ht = {}, he = {};
    for (let ue = 1; ue <= W.length; ue++)
      he[ue + Ie] = ft[ue], ht[ue + Ie] = !0, Ie += _(W[ue - 1]);
    P[te] = he, P[te]._emit = ht, P[te]._multi = !0;
  }
  function gL(P) {
    if (Array.isArray(P.begin)) {
      if (P.skip || P.excludeBegin || P.returnBegin)
        throw ri("skip, excludeBegin, returnBegin not compatible with beginScope: {}"), sc;
      if (typeof P.beginScope != "object" || P.beginScope === null)
        throw ri("beginScope must be object"), sc;
      Yb(P, P.begin, { key: "beginScope" }), P.begin = S(P.begin, { joinWith: "" });
    }
  }
  function vL(P) {
    if (Array.isArray(P.end)) {
      if (P.skip || P.excludeEnd || P.returnEnd)
        throw ri("skip, excludeEnd, returnEnd not compatible with endScope: {}"), sc;
      if (typeof P.endScope != "object" || P.endScope === null)
        throw ri("endScope must be object"), sc;
      Yb(P, P.end, { key: "endScope" }), P.end = S(P.end, { joinWith: "" });
    }
  }
  function mL(P) {
    P.scope && typeof P.scope == "object" && P.scope !== null && (P.beginScope = P.scope, delete P.scope);
  }
  function _L(P) {
    mL(P), typeof P.beginScope == "string" && (P.beginScope = { _wrap: P.beginScope }), typeof P.endScope == "string" && (P.endScope = { _wrap: P.endScope }), gL(P), vL(P);
  }
  function yL(P) {
    function W(he, ue) {
      return new RegExp(
        d(he),
        "m" + (P.case_insensitive ? "i" : "") + (P.unicodeRegex ? "u" : "") + (ue ? "g" : "")
      );
    }
    class te {
      constructor() {
        this.matchIndexes = {}, this.regexes = [], this.matchAt = 1, this.position = 0;
      }
      // @ts-ignore
      addRule(ue, we) {
        we.position = this.position++, this.matchIndexes[this.matchAt] = we, this.regexes.push([we, ue]), this.matchAt += _(ue) + 1;
      }
      compile() {
        this.regexes.length === 0 && (this.exec = () => null);
        const ue = this.regexes.map((we) => we[1]);
        this.matcherRe = W(S(ue, { joinWith: "|" }), !0), this.lastIndex = 0;
      }
      /** @param {string} s */
      exec(ue) {
        this.matcherRe.lastIndex = this.lastIndex;
        const we = this.matcherRe.exec(ue);
        if (!we)
          return null;
        const Nt = we.findIndex(($s, Vf) => Vf > 0 && $s !== void 0), yt = this.matchIndexes[Nt];
        return we.splice(0, Nt), Object.assign(we, yt);
      }
    }
    class Ie {
      constructor() {
        this.rules = [], this.multiRegexes = [], this.count = 0, this.lastIndex = 0, this.regexIndex = 0;
      }
      // @ts-ignore
      getMatcher(ue) {
        if (this.multiRegexes[ue]) return this.multiRegexes[ue];
        const we = new te();
        return this.rules.slice(ue).forEach(([Nt, yt]) => we.addRule(Nt, yt)), we.compile(), this.multiRegexes[ue] = we, we;
      }
      resumingScanAtSamePosition() {
        return this.regexIndex !== 0;
      }
      considerAll() {
        this.regexIndex = 0;
      }
      // @ts-ignore
      addRule(ue, we) {
        this.rules.push([ue, we]), we.type === "begin" && this.count++;
      }
      /** @param {string} s */
      exec(ue) {
        const we = this.getMatcher(this.regexIndex);
        we.lastIndex = this.lastIndex;
        let Nt = we.exec(ue);
        if (this.resumingScanAtSamePosition() && !(Nt && Nt.index === this.lastIndex)) {
          const yt = this.getMatcher(0);
          yt.lastIndex = this.lastIndex + 1, Nt = yt.exec(ue);
        }
        return Nt && (this.regexIndex += Nt.position + 1, this.regexIndex === this.count && this.considerAll()), Nt;
      }
    }
    function ft(he) {
      const ue = new Ie();
      return he.contains.forEach((we) => ue.addRule(we.begin, { rule: we, type: "begin" })), he.terminatorEnd && ue.addRule(he.terminatorEnd, { type: "end" }), he.illegal && ue.addRule(he.illegal, { type: "illegal" }), ue;
    }
    function ht(he, ue) {
      const we = (
        /** @type CompiledMode */
        he
      );
      if (he.isCompiled) return we;
      [
        ce,
        // do this early so compiler extensions generally don't have to worry about
        // the distinction between match/begin
        We,
        _L,
        nt
      ].forEach((yt) => yt(he, ue)), P.compilerExtensions.forEach((yt) => yt(he, ue)), he.__beforeBegin = null, [
        qe,
        // do this later so compiler extensions that come earlier have access to the
        // raw array if they wanted to perhaps manipulate it, etc.
        Ge,
        // default to 1 relevance if not specified
        ye
      ].forEach((yt) => yt(he, ue)), he.isCompiled = !0;
      let Nt = null;
      return typeof he.keywords == "object" && he.keywords.$pattern && (he.keywords = Object.assign({}, he.keywords), Nt = he.keywords.$pattern, delete he.keywords.$pattern), Nt = Nt || /\w+/, he.keywords && (he.keywords = sn(he.keywords, P.case_insensitive)), we.keywordPatternRe = W(Nt, !0), ue && (he.begin || (he.begin = /\B|\b/), we.beginRe = W(we.begin), !he.end && !he.endsWithParent && (he.end = /\B|\b/), he.end && (we.endRe = W(we.end)), we.terminatorEnd = d(we.end) || "", he.endsWithParent && ue.terminatorEnd && (we.terminatorEnd += (he.end ? "|" : "") + ue.terminatorEnd)), he.illegal && (we.illegalRe = W(
        /** @type {RegExp | string} */
        he.illegal
      )), he.contains || (he.contains = []), he.contains = [].concat(...he.contains.map(function(yt) {
        return bL(yt === "self" ? he : yt);
      })), he.contains.forEach(function(yt) {
        ht(
          /** @type Mode */
          yt,
          we
        );
      }), he.starts && ht(he.starts, ue), we.matcher = ft(we), we;
    }
    if (P.compilerExtensions || (P.compilerExtensions = []), P.contains && P.contains.includes("self"))
      throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
    return P.classNameAliases = n(P.classNameAliases || {}), ht(
      /** @type Mode */
      P
    );
  }
  function Kb(P) {
    return P ? P.endsWithParent || Kb(P.starts) : !1;
  }
  function bL(P) {
    return P.variants && !P.cachedVariants && (P.cachedVariants = P.variants.map(function(W) {
      return n(P, { variants: null }, W);
    })), P.cachedVariants ? P.cachedVariants : Kb(P) ? n(P, { starts: P.starts ? n(P.starts) : null }) : Object.isFrozen(P) ? n(P) : P;
  }
  var SL = "11.11.1";
  class EL extends Error {
    constructor(W, te) {
      super(W), this.name = "HTMLInjectionError", this.html = te;
    }
  }
  const zf = r, Zb = n, Xb = Symbol("nomatch"), TL = 7, Qb = function(P) {
    const W = /* @__PURE__ */ Object.create(null), te = /* @__PURE__ */ Object.create(null), Ie = [];
    let ft = !0;
    const ht = "Could not find the language '{}', did you forget to load/include a language module?", he = { disableAutodetect: !0, name: "Plain text", contains: [] };
    let ue = {
      ignoreUnescapedHTML: !1,
      throwUnescapedHTML: !1,
      noHighlightRe: /^(no-?highlight)$/i,
      languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
      classPrefix: "hljs-",
      cssSelector: "pre code",
      languages: null,
      // beta configuration options, subject to change, welcome to discuss
      // https://github.com/highlightjs/highlight.js/issues/1086
      __emitter: c
    };
    function we(X) {
      return ue.noHighlightRe.test(X);
    }
    function Nt(X) {
      let Se = X.className + " ";
      Se += X.parentNode ? X.parentNode.className : "";
      const Ve = ue.languageDetectRe.exec(Se);
      if (Ve) {
        const at = pa(Ve[1]);
        return at || (qb(ht.replace("{}", Ve[1])), qb("Falling back to no-highlight mode for this block.", X)), at ? Ve[1] : "no-highlight";
      }
      return Se.split(/\s+/).find((at) => we(at) || pa(at));
    }
    function yt(X, Se, Ve) {
      let at = "", Tt = "";
      typeof Se == "object" ? (at = X, Ve = Se.ignoreIllegals, Tt = Se.language) : (To("10.7.0", "highlight(lang, code, ...args) has been deprecated."), To("10.7.0", `Please use highlight(code, options) instead.
https://github.com/highlightjs/highlight.js/issues/2277`), Tt = X, at = Se), Ve === void 0 && (Ve = !0);
      const Vr = {
        code: at,
        language: Tt
      };
      uc("before:highlight", Vr);
      const fa = Vr.result ? Vr.result : $s(Vr.language, Vr.code, Ve);
      return fa.code = Vr.code, uc("after:highlight", fa), fa;
    }
    function $s(X, Se, Ve, at) {
      const Tt = /* @__PURE__ */ Object.create(null);
      function Vr(ne, me) {
        return ne.keywords[me];
      }
      function fa() {
        if (!Ne.keywords) {
          Ft.addText(it);
          return;
        }
        let ne = 0;
        Ne.keywordPatternRe.lastIndex = 0;
        let me = Ne.keywordPatternRe.exec(it), Be = "";
        for (; me; ) {
          Be += it.substring(ne, me.index);
          const Qe = cn.case_insensitive ? me[0].toLowerCase() : me[0], $t = Vr(Ne, Qe);
          if ($t) {
            const [zn, UL] = $t;
            if (Ft.addText(Be), Be = "", Tt[Qe] = (Tt[Qe] || 0) + 1, Tt[Qe] <= TL && (pc += UL), zn.startsWith("_"))
              Be += me[0];
            else {
              const zL = cn.classNameAliases[zn] || zn;
              un(me[0], zL);
            }
          } else
            Be += me[0];
          ne = Ne.keywordPatternRe.lastIndex, me = Ne.keywordPatternRe.exec(it);
        }
        Be += it.substring(ne), Ft.addText(Be);
      }
      function cc() {
        if (it === "") return;
        let ne = null;
        if (typeof Ne.subLanguage == "string") {
          if (!W[Ne.subLanguage]) {
            Ft.addText(it);
            return;
          }
          ne = $s(Ne.subLanguage, it, !0, i0[Ne.subLanguage]), i0[Ne.subLanguage] = /** @type {CompiledMode} */
          ne._top;
        } else
          ne = $f(it, Ne.subLanguage.length ? Ne.subLanguage : null);
        Ne.relevance > 0 && (pc += ne.relevance), Ft.__addSublanguage(ne._emitter, ne.language);
      }
      function vr() {
        Ne.subLanguage != null ? cc() : fa(), it = "";
      }
      function un(ne, me) {
        ne !== "" && (Ft.startScope(me), Ft.addText(ne), Ft.endScope());
      }
      function t0(ne, me) {
        let Be = 1;
        const Qe = me.length - 1;
        for (; Be <= Qe; ) {
          if (!ne._emit[Be]) {
            Be++;
            continue;
          }
          const $t = cn.classNameAliases[ne[Be]] || ne[Be], zn = me[Be];
          $t ? un(zn, $t) : (it = zn, fa(), it = ""), Be++;
        }
      }
      function r0(ne, me) {
        return ne.scope && typeof ne.scope == "string" && Ft.openNode(cn.classNameAliases[ne.scope] || ne.scope), ne.beginScope && (ne.beginScope._wrap ? (un(it, cn.classNameAliases[ne.beginScope._wrap] || ne.beginScope._wrap), it = "") : ne.beginScope._multi && (t0(ne.beginScope, me), it = "")), Ne = Object.create(ne, { parent: { value: Ne } }), Ne;
      }
      function n0(ne, me, Be) {
        let Qe = y(ne.endRe, Be);
        if (Qe) {
          if (ne["on:end"]) {
            const $t = new e(ne);
            ne["on:end"](me, $t), $t.isMatchIgnored && (Qe = !1);
          }
          if (Qe) {
            for (; ne.endsParent && ne.parent; )
              ne = ne.parent;
            return ne;
          }
        }
        if (ne.endsWithParent)
          return n0(ne.parent, me, Be);
      }
      function PL(ne) {
        return Ne.matcher.regexIndex === 0 ? (it += ne[0], 1) : (Yf = !0, 0);
      }
      function kL(ne) {
        const me = ne[0], Be = ne.rule, Qe = new e(Be), $t = [Be.__beforeBegin, Be["on:begin"]];
        for (const zn of $t)
          if (zn && (zn(ne, Qe), Qe.isMatchIgnored))
            return PL(me);
        return Be.skip ? it += me : (Be.excludeBegin && (it += me), vr(), !Be.returnBegin && !Be.excludeBegin && (it = me)), r0(Be, ne), Be.returnBegin ? 0 : me.length;
      }
      function BL(ne) {
        const me = ne[0], Be = Se.substring(ne.index), Qe = n0(Ne, ne, Be);
        if (!Qe)
          return Xb;
        const $t = Ne;
        Ne.endScope && Ne.endScope._wrap ? (vr(), un(me, Ne.endScope._wrap)) : Ne.endScope && Ne.endScope._multi ? (vr(), t0(Ne.endScope, ne)) : $t.skip ? it += me : ($t.returnEnd || $t.excludeEnd || (it += me), vr(), $t.excludeEnd && (it = me));
        do
          Ne.scope && Ft.closeNode(), !Ne.skip && !Ne.subLanguage && (pc += Ne.relevance), Ne = Ne.parent;
        while (Ne !== Qe.parent);
        return Qe.starts && r0(Qe.starts, ne), $t.returnEnd ? 0 : me.length;
      }
      function FL() {
        const ne = [];
        for (let me = Ne; me !== cn; me = me.parent)
          me.scope && ne.unshift(me.scope);
        ne.forEach((me) => Ft.openNode(me));
      }
      let dc = {};
      function a0(ne, me) {
        const Be = me && me[0];
        if (it += ne, Be == null)
          return vr(), 0;
        if (dc.type === "begin" && me.type === "end" && dc.index === me.index && Be === "") {
          if (it += Se.slice(me.index, me.index + 1), !ft) {
            const Qe = new Error(`0 width match regex (${X})`);
            throw Qe.languageName = X, Qe.badRule = dc.rule, Qe;
          }
          return 1;
        }
        if (dc = me, me.type === "begin")
          return kL(me);
        if (me.type === "illegal" && !Ve) {
          const Qe = new Error('Illegal lexeme "' + Be + '" for mode "' + (Ne.scope || "<unnamed>") + '"');
          throw Qe.mode = Ne, Qe;
        } else if (me.type === "end") {
          const Qe = BL(me);
          if (Qe !== Xb)
            return Qe;
        }
        if (me.type === "illegal" && Be === "")
          return it += `
`, 1;
        if (qf > 1e5 && qf > me.index * 3)
          throw new Error("potential infinite loop, way more iterations than matches");
        return it += Be, Be.length;
      }
      const cn = pa(X);
      if (!cn)
        throw ri(ht.replace("{}", X)), new Error('Unknown language: "' + X + '"');
      const GL = yL(cn);
      let Wf = "", Ne = at || GL;
      const i0 = {}, Ft = new ue.__emitter(ue);
      FL();
      let it = "", pc = 0, ni = 0, qf = 0, Yf = !1;
      try {
        if (cn.__emitTokens)
          cn.__emitTokens(Se, Ft);
        else {
          for (Ne.matcher.considerAll(); ; ) {
            qf++, Yf ? Yf = !1 : Ne.matcher.considerAll(), Ne.matcher.lastIndex = ni;
            const ne = Ne.matcher.exec(Se);
            if (!ne) break;
            const me = Se.substring(ni, ne.index), Be = a0(me, ne);
            ni = ne.index + Be;
          }
          a0(Se.substring(ni));
        }
        return Ft.finalize(), Wf = Ft.toHTML(), {
          language: X,
          value: Wf,
          relevance: pc,
          illegal: !1,
          _emitter: Ft,
          _top: Ne
        };
      } catch (ne) {
        if (ne.message && ne.message.includes("Illegal"))
          return {
            language: X,
            value: zf(Se),
            illegal: !0,
            relevance: 0,
            _illegalBy: {
              message: ne.message,
              index: ni,
              context: Se.slice(ni - 100, ni + 100),
              mode: ne.mode,
              resultSoFar: Wf
            },
            _emitter: Ft
          };
        if (ft)
          return {
            language: X,
            value: zf(Se),
            illegal: !1,
            relevance: 0,
            errorRaised: ne,
            _emitter: Ft,
            _top: Ne
          };
        throw ne;
      }
    }
    function Vf(X) {
      const Se = {
        value: zf(X),
        illegal: !1,
        relevance: 0,
        _top: he,
        _emitter: new ue.__emitter(ue)
      };
      return Se._emitter.addText(X), Se;
    }
    function $f(X, Se) {
      Se = Se || ue.languages || Object.keys(W);
      const Ve = Vf(X), at = Se.filter(pa).filter(e0).map(
        (vr) => $s(vr, X, !1)
      );
      at.unshift(Ve);
      const Tt = at.sort((vr, un) => {
        if (vr.relevance !== un.relevance) return un.relevance - vr.relevance;
        if (vr.language && un.language) {
          if (pa(vr.language).supersetOf === un.language)
            return 1;
          if (pa(un.language).supersetOf === vr.language)
            return -1;
        }
        return 0;
      }), [Vr, fa] = Tt, cc = Vr;
      return cc.secondBest = fa, cc;
    }
    function xL(X, Se, Ve) {
      const at = Se && te[Se] || Ve;
      X.classList.add("hljs"), X.classList.add(`language-${at}`);
    }
    function Hf(X) {
      let Se = null;
      const Ve = Nt(X);
      if (we(Ve)) return;
      if (uc(
        "before:highlightElement",
        { el: X, language: Ve }
      ), X.dataset.highlighted) {
        console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.", X);
        return;
      }
      if (X.children.length > 0 && (ue.ignoreUnescapedHTML || (console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."), console.warn("https://github.com/highlightjs/highlight.js/wiki/security"), console.warn("The element with unescaped HTML:"), console.warn(X)), ue.throwUnescapedHTML))
        throw new EL(
          "One of your code blocks includes unescaped HTML.",
          X.innerHTML
        );
      Se = X;
      const at = Se.textContent, Tt = Ve ? yt(at, { language: Ve, ignoreIllegals: !0 }) : $f(at);
      X.innerHTML = Tt.value, X.dataset.highlighted = "yes", xL(X, Ve, Tt.language), X.result = {
        language: Tt.language,
        // TODO: remove with version 11.0
        re: Tt.relevance,
        relevance: Tt.relevance
      }, Tt.secondBest && (X.secondBest = {
        language: Tt.secondBest.language,
        relevance: Tt.secondBest.relevance
      }), uc("after:highlightElement", { el: X, result: Tt, text: at });
    }
    function CL(X) {
      ue = Zb(ue, X);
    }
    const AL = () => {
      lc(), To("10.6.0", "initHighlighting() deprecated.  Use highlightAll() now.");
    };
    function wL() {
      lc(), To("10.6.0", "initHighlightingOnLoad() deprecated.  Use highlightAll() now.");
    }
    let jb = !1;
    function lc() {
      function X() {
        lc();
      }
      if (document.readyState === "loading") {
        jb || window.addEventListener("DOMContentLoaded", X, !1), jb = !0;
        return;
      }
      document.querySelectorAll(ue.cssSelector).forEach(Hf);
    }
    function DL(X, Se) {
      let Ve = null;
      try {
        Ve = Se(P);
      } catch (at) {
        if (ri("Language definition for '{}' could not be registered.".replace("{}", X)), ft)
          ri(at);
        else
          throw at;
        Ve = he;
      }
      Ve.name || (Ve.name = X), W[X] = Ve, Ve.rawDefinition = Se.bind(null, P), Ve.aliases && Jb(Ve.aliases, { languageName: X });
    }
    function ML(X) {
      delete W[X];
      for (const Se of Object.keys(te))
        te[Se] === X && delete te[Se];
    }
    function IL() {
      return Object.keys(W);
    }
    function pa(X) {
      return X = (X || "").toLowerCase(), W[X] || W[te[X]];
    }
    function Jb(X, { languageName: Se }) {
      typeof X == "string" && (X = [X]), X.forEach((Ve) => {
        te[Ve.toLowerCase()] = Se;
      });
    }
    function e0(X) {
      const Se = pa(X);
      return Se && !Se.disableAutodetect;
    }
    function NL(X) {
      X["before:highlightBlock"] && !X["before:highlightElement"] && (X["before:highlightElement"] = (Se) => {
        X["before:highlightBlock"](
          Object.assign({ block: Se.el }, Se)
        );
      }), X["after:highlightBlock"] && !X["after:highlightElement"] && (X["after:highlightElement"] = (Se) => {
        X["after:highlightBlock"](
          Object.assign({ block: Se.el }, Se)
        );
      });
    }
    function RL(X) {
      NL(X), Ie.push(X);
    }
    function OL(X) {
      const Se = Ie.indexOf(X);
      Se !== -1 && Ie.splice(Se, 1);
    }
    function uc(X, Se) {
      const Ve = X;
      Ie.forEach(function(at) {
        at[Ve] && at[Ve](Se);
      });
    }
    function LL(X) {
      return To("10.7.0", "highlightBlock will be removed entirely in v12.0"), To("10.7.0", "Please use highlightElement now."), Hf(X);
    }
    Object.assign(P, {
      highlight: yt,
      highlightAuto: $f,
      highlightAll: lc,
      highlightElement: Hf,
      // TODO: Remove with v12 API
      highlightBlock: LL,
      configure: CL,
      initHighlighting: AL,
      initHighlightingOnLoad: wL,
      registerLanguage: DL,
      unregisterLanguage: ML,
      listLanguages: IL,
      getLanguage: pa,
      registerAliases: Jb,
      autoDetection: e0,
      inherit: Zb,
      addPlugin: RL,
      removePlugin: OL
    }), P.debugMode = function() {
      ft = !1;
    }, P.safeMode = function() {
      ft = !0;
    }, P.versionString = SL, P.regex = {
      concat: g,
      lookahead: p,
      either: m,
      optional: h,
      anyNumberOfTimes: f
    };
    for (const X in ve)
      typeof ve[X] == "object" && t(ve[X]);
    return Object.assign(P, ve), P;
  }, xo = Qb({});
  return xo.newInstance = () => Qb({}), ih = xo, xo.HighlightJS = xo, xo.default = xo, ih;
}
var lB = /* @__PURE__ */ sB();
const cre = /* @__PURE__ */ oB(lB);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var kv = function(t, e) {
  return kv = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, n) {
    r.__proto__ = n;
  } || function(r, n) {
    for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (r[a] = n[a]);
  }, kv(t, e);
};
function k(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
  kv(t, e);
  function r() {
    this.constructor = t;
  }
  t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
}
var uB = /* @__PURE__ */ function() {
  function t() {
    this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1;
  }
  return t;
}(), cB = /* @__PURE__ */ function() {
  function t() {
    this.browser = new uB(), this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = typeof window < "u";
  }
  return t;
}(), Ae = new cB();
typeof wx == "object" && typeof wx.getSystemInfoSync == "function" ? (Ae.wxa = !0, Ae.touchEventsSupported = !0) : typeof document > "u" && typeof self < "u" ? Ae.worker = !0 : !Ae.hasGlobalWindow || "Deno" in window ? (Ae.node = !0, Ae.svgSupported = !0) : dB(navigator.userAgent, Ae);
function dB(t, e) {
  var r = e.browser, n = t.match(/Firefox\/([\d.]+)/), a = t.match(/MSIE\s([\d.]+)/) || t.match(/Trident\/.+?rv:(([\d.]+))/), i = t.match(/Edge?\/([\d.]+)/), o = /micromessenger/i.test(t);
  n && (r.firefox = !0, r.version = n[1]), a && (r.ie = !0, r.version = a[1]), i && (r.edge = !0, r.version = i[1], r.newEdge = +i[1].split(".")[0] > 18), o && (r.weChat = !0), e.svgSupported = typeof SVGRect < "u", e.touchEventsSupported = "ontouchstart" in window && !r.ie && !r.edge, e.pointerEventsSupported = "onpointerdown" in window && (r.edge || r.ie && +r.version >= 11), e.domSupported = typeof document < "u";
  var s = document.documentElement.style;
  e.transform3dSupported = (r.ie && "transition" in s || r.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in s) && !("OTransition" in s), e.transformSupported = e.transform3dSupported || r.ie && +r.version >= 9;
}
var B_ = 12, Sw = "sans-serif", qa = B_ + "px " + Sw, pB = 20, fB = 100, hB = "007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N";
function gB(t) {
  var e = {};
  if (typeof JSON > "u")
    return e;
  for (var r = 0; r < t.length; r++) {
    var n = String.fromCharCode(r + 32), a = (t.charCodeAt(r) - pB) / fB;
    e[n] = a;
  }
  return e;
}
var vB = gB(hB), Ya = {
  createCanvas: function() {
    return typeof document < "u" && document.createElement("canvas");
  },
  measureText: /* @__PURE__ */ function() {
    var t, e;
    return function(r, n) {
      if (!t) {
        var a = Ya.createCanvas();
        t = a && a.getContext("2d");
      }
      if (t)
        return e !== n && (e = t.font = n || qa), t.measureText(r);
      r = r || "", n = n || qa;
      var i = /((?:\d+)?\.?\d*)px/.exec(n), o = i && +i[1] || B_, s = 0;
      if (n.indexOf("mono") >= 0)
        s = o * r.length;
      else
        for (var l = 0; l < r.length; l++) {
          var u = vB[r[l]];
          s += u == null ? o : u * o;
        }
      return { width: s };
    };
  }(),
  loadImage: function(t, e, r) {
    var n = new Image();
    return n.onload = e, n.onerror = r, n.src = t, n;
  }
}, Ew = Nn([
  "Function",
  "RegExp",
  "Date",
  "Error",
  "CanvasGradient",
  "CanvasPattern",
  "Image",
  "Canvas"
], function(t, e) {
  return t["[object " + e + "]"] = !0, t;
}, {}), Tw = Nn([
  "Int8",
  "Uint8",
  "Uint8Clamped",
  "Int16",
  "Uint16",
  "Int32",
  "Uint32",
  "Float32",
  "Float64"
], function(t, e) {
  return t["[object " + e + "Array]"] = !0, t;
}, {}), ws = Object.prototype.toString, jp = Array.prototype, mB = jp.forEach, _B = jp.filter, F_ = jp.slice, yB = jp.map, B0 = (function() {
}).constructor, gc = B0 ? B0.prototype : null, G_ = "__proto__", bB = 2311;
function xw() {
  return bB++;
}
function U_() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  typeof console < "u" && console.error.apply(console, t);
}
function le(t) {
  if (t == null || typeof t != "object")
    return t;
  var e = t, r = ws.call(t);
  if (r === "[object Array]") {
    if (!Bl(t)) {
      e = [];
      for (var n = 0, a = t.length; n < a; n++)
        e[n] = le(t[n]);
    }
  } else if (Tw[r]) {
    if (!Bl(t)) {
      var i = t.constructor;
      if (i.from)
        e = i.from(t);
      else {
        e = new i(t.length);
        for (var n = 0, a = t.length; n < a; n++)
          e[n] = t[n];
      }
    }
  } else if (!Ew[r] && !Bl(t) && !gs(t)) {
    e = {};
    for (var o in t)
      t.hasOwnProperty(o) && o !== G_ && (e[o] = le(t[o]));
  }
  return e;
}
function be(t, e, r) {
  if (!se(e) || !se(t))
    return r ? le(e) : t;
  for (var n in e)
    if (e.hasOwnProperty(n) && n !== G_) {
      var a = t[n], i = e[n];
      se(i) && se(a) && !V(i) && !V(a) && !gs(i) && !gs(a) && !F0(i) && !F0(a) && !Bl(i) && !Bl(a) ? be(a, i, r) : (r || !(n in t)) && (t[n] = le(e[n]));
    }
  return t;
}
function z_(t, e) {
  for (var r = t[0], n = 1, a = t.length; n < a; n++)
    r = be(r, t[n], e);
  return r;
}
function G(t, e) {
  if (Object.assign)
    Object.assign(t, e);
  else
    for (var r in e)
      e.hasOwnProperty(r) && r !== G_ && (t[r] = e[r]);
  return t;
}
function ie(t, e, r) {
  for (var n = Me(e), a = 0, i = n.length; a < i; a++) {
    var o = n[a];
    (r ? e[o] != null : t[o] == null) && (t[o] = e[o]);
  }
  return t;
}
function xe(t, e) {
  if (t) {
    if (t.indexOf)
      return t.indexOf(e);
    for (var r = 0, n = t.length; r < n; r++)
      if (t[r] === e)
        return r;
  }
  return -1;
}
function SB(t, e) {
  var r = t.prototype;
  function n() {
  }
  n.prototype = e.prototype, t.prototype = new n();
  for (var a in r)
    r.hasOwnProperty(a) && (t.prototype[a] = r[a]);
  t.prototype.constructor = t, t.superClass = e;
}
function _t(t, e, r) {
  if (t = "prototype" in t ? t.prototype : t, e = "prototype" in e ? e.prototype : e, Object.getOwnPropertyNames)
    for (var n = Object.getOwnPropertyNames(e), a = 0; a < n.length; a++) {
      var i = n[a];
      i !== "constructor" && (r ? e[i] != null : t[i] == null) && (t[i] = e[i]);
    }
  else
    ie(t, e, r);
}
function Kt(t) {
  return !t || typeof t == "string" ? !1 : typeof t.length == "number";
}
function w(t, e, r) {
  if (t && e)
    if (t.forEach && t.forEach === mB)
      t.forEach(e, r);
    else if (t.length === +t.length)
      for (var n = 0, a = t.length; n < a; n++)
        e.call(r, t[n], n, t);
    else
      for (var i in t)
        t.hasOwnProperty(i) && e.call(r, t[i], i, t);
}
function $(t, e, r) {
  if (!t)
    return [];
  if (!e)
    return V_(t);
  if (t.map && t.map === yB)
    return t.map(e, r);
  for (var n = [], a = 0, i = t.length; a < i; a++)
    n.push(e.call(r, t[a], a, t));
  return n;
}
function Nn(t, e, r, n) {
  if (t && e) {
    for (var a = 0, i = t.length; a < i; a++)
      r = e.call(n, r, t[a], a, t);
    return r;
  }
}
function ze(t, e, r) {
  if (!t)
    return [];
  if (!e)
    return V_(t);
  if (t.filter && t.filter === _B)
    return t.filter(e, r);
  for (var n = [], a = 0, i = t.length; a < i; a++)
    e.call(r, t[a], a, t) && n.push(t[a]);
  return n;
}
function EB(t, e, r) {
  if (t && e) {
    for (var n = 0, a = t.length; n < a; n++)
      if (e.call(r, t[n], n, t))
        return t[n];
  }
}
function Me(t) {
  if (!t)
    return [];
  if (Object.keys)
    return Object.keys(t);
  var e = [];
  for (var r in t)
    t.hasOwnProperty(r) && e.push(r);
  return e;
}
function TB(t, e) {
  for (var r = [], n = 2; n < arguments.length; n++)
    r[n - 2] = arguments[n];
  return function() {
    return t.apply(e, r.concat(F_.call(arguments)));
  };
}
var K = gc && ae(gc.bind) ? gc.call.bind(gc.bind) : TB;
function _e(t) {
  for (var e = [], r = 1; r < arguments.length; r++)
    e[r - 1] = arguments[r];
  return function() {
    return t.apply(this, e.concat(F_.call(arguments)));
  };
}
function V(t) {
  return Array.isArray ? Array.isArray(t) : ws.call(t) === "[object Array]";
}
function ae(t) {
  return typeof t == "function";
}
function Y(t) {
  return typeof t == "string";
}
function Bv(t) {
  return ws.call(t) === "[object String]";
}
function ke(t) {
  return typeof t == "number";
}
function se(t) {
  var e = typeof t;
  return e === "function" || !!t && e === "object";
}
function F0(t) {
  return !!Ew[ws.call(t)];
}
function gr(t) {
  return !!Tw[ws.call(t)];
}
function gs(t) {
  return typeof t == "object" && typeof t.nodeType == "number" && typeof t.ownerDocument == "object";
}
function Jp(t) {
  return t.colorStops != null;
}
function xB(t) {
  return t.image != null;
}
function CB(t) {
  return ws.call(t) === "[object RegExp]";
}
function ou(t) {
  return t !== t;
}
function Pt() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  for (var r = 0, n = t.length; r < n; r++)
    if (t[r] != null)
      return t[r];
}
function ge(t, e) {
  return t ?? e;
}
function Dn(t, e, r) {
  return t ?? e ?? r;
}
function V_(t) {
  for (var e = [], r = 1; r < arguments.length; r++)
    e[r - 1] = arguments[r];
  return F_.apply(t, e);
}
function $_(t) {
  if (typeof t == "number")
    return [t, t, t, t];
  var e = t.length;
  return e === 2 ? [t[0], t[1], t[0], t[1]] : e === 3 ? [t[0], t[1], t[2], t[1]] : t;
}
function ar(t, e) {
  if (!t)
    throw new Error(e);
}
function Xr(t) {
  return t == null ? null : typeof t.trim == "function" ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
}
var Cw = "__ec_primitive__";
function jd(t) {
  t[Cw] = !0;
}
function Bl(t) {
  return t[Cw];
}
var AB = function() {
  function t() {
    this.data = {};
  }
  return t.prototype.delete = function(e) {
    var r = this.has(e);
    return r && delete this.data[e], r;
  }, t.prototype.has = function(e) {
    return this.data.hasOwnProperty(e);
  }, t.prototype.get = function(e) {
    return this.data[e];
  }, t.prototype.set = function(e, r) {
    return this.data[e] = r, this;
  }, t.prototype.keys = function() {
    return Me(this.data);
  }, t.prototype.forEach = function(e) {
    var r = this.data;
    for (var n in r)
      r.hasOwnProperty(n) && e(r[n], n);
  }, t;
}(), Aw = typeof Map == "function";
function wB() {
  return Aw ? /* @__PURE__ */ new Map() : new AB();
}
var DB = function() {
  function t(e) {
    var r = V(e);
    this.data = wB();
    var n = this;
    e instanceof t ? e.each(a) : e && w(e, a);
    function a(i, o) {
      r ? n.set(i, o) : n.set(o, i);
    }
  }
  return t.prototype.hasKey = function(e) {
    return this.data.has(e);
  }, t.prototype.get = function(e) {
    return this.data.get(e);
  }, t.prototype.set = function(e, r) {
    return this.data.set(e, r), r;
  }, t.prototype.each = function(e, r) {
    this.data.forEach(function(n, a) {
      e.call(r, n, a);
    });
  }, t.prototype.keys = function() {
    var e = this.data.keys();
    return Aw ? Array.from(e) : e;
  }, t.prototype.removeKey = function(e) {
    this.data.delete(e);
  }, t;
}();
function J(t) {
  return new DB(t);
}
function su(t, e) {
  for (var r = new t.constructor(t.length + e.length), n = 0; n < t.length; n++)
    r[n] = t[n];
  for (var a = t.length, n = 0; n < e.length; n++)
    r[n + a] = e[n];
  return r;
}
function ef(t, e) {
  var r;
  if (Object.create)
    r = Object.create(t);
  else {
    var n = function() {
    };
    n.prototype = t, r = new n();
  }
  return e && G(r, e), r;
}
function ww(t) {
  var e = t.style;
  e.webkitUserSelect = "none", e.userSelect = "none", e.webkitTapHighlightColor = "rgba(0,0,0,0)", e["-webkit-touch-callout"] = "none";
}
function Q(t, e) {
  return t.hasOwnProperty(e);
}
function dt() {
}
var xd = 180 / Math.PI;
function fo(t, e) {
  return t == null && (t = 0), e == null && (e = 0), [t, e];
}
function Qt(t, e) {
  return t[0] = e[0], t[1] = e[1], t;
}
function Zn(t) {
  return [t[0], t[1]];
}
function MB(t, e, r) {
  return t[0] = e, t[1] = r, t;
}
function G0(t, e, r) {
  return t[0] = e[0] + r[0], t[1] = e[1] + r[1], t;
}
function Fv(t, e, r, n) {
  return t[0] = e[0] + r[0] * n, t[1] = e[1] + r[1] * n, t;
}
function zi(t, e, r) {
  return t[0] = e[0] - r[0], t[1] = e[1] - r[1], t;
}
function Gv(t) {
  return Math.sqrt(IB(t));
}
function IB(t) {
  return t[0] * t[0] + t[1] * t[1];
}
function Cd(t, e, r) {
  return t[0] = e[0] * r, t[1] = e[1] * r, t;
}
function Ds(t, e) {
  var r = Gv(e);
  return r === 0 ? (t[0] = 0, t[1] = 0) : (t[0] = e[0] / r, t[1] = e[1] / r), t;
}
function Uv(t, e) {
  return Math.sqrt((t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]));
}
var Na = Uv;
function NB(t, e) {
  return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]);
}
var Zi = NB;
function Ad(t, e, r, n) {
  return t[0] = e[0] + n * (r[0] - e[0]), t[1] = e[1] + n * (r[1] - e[1]), t;
}
function Ut(t, e, r) {
  var n = e[0], a = e[1];
  return t[0] = r[0] * n + r[2] * a + r[4], t[1] = r[1] * n + r[3] * a + r[5], t;
}
function Ra(t, e, r) {
  return t[0] = Math.min(e[0], r[0]), t[1] = Math.min(e[1], r[1]), t;
}
function Oa(t, e, r) {
  return t[0] = Math.max(e[0], r[0]), t[1] = Math.max(e[1], r[1]), t;
}
var Ao = /* @__PURE__ */ function() {
  function t(e, r) {
    this.target = e, this.topTarget = r && r.topTarget;
  }
  return t;
}(), RB = function() {
  function t(e) {
    this.handler = e, e.on("mousedown", this._dragStart, this), e.on("mousemove", this._drag, this), e.on("mouseup", this._dragEnd, this);
  }
  return t.prototype._dragStart = function(e) {
    for (var r = e.target; r && !r.draggable; )
      r = r.parent || r.__hostTarget;
    r && (this._draggingTarget = r, r.dragging = !0, this._x = e.offsetX, this._y = e.offsetY, this.handler.dispatchToElement(new Ao(r, e), "dragstart", e.event));
  }, t.prototype._drag = function(e) {
    var r = this._draggingTarget;
    if (r) {
      var n = e.offsetX, a = e.offsetY, i = n - this._x, o = a - this._y;
      this._x = n, this._y = a, r.drift(i, o, e), this.handler.dispatchToElement(new Ao(r, e), "drag", e.event);
      var s = this.handler.findHover(n, a, r).target, l = this._dropTarget;
      this._dropTarget = s, r !== s && (l && s !== l && this.handler.dispatchToElement(new Ao(l, e), "dragleave", e.event), s && s !== l && this.handler.dispatchToElement(new Ao(s, e), "dragenter", e.event));
    }
  }, t.prototype._dragEnd = function(e) {
    var r = this._draggingTarget;
    r && (r.dragging = !1), this.handler.dispatchToElement(new Ao(r, e), "dragend", e.event), this._dropTarget && this.handler.dispatchToElement(new Ao(this._dropTarget, e), "drop", e.event), this._draggingTarget = null, this._dropTarget = null;
  }, t;
}(), Gr = function() {
  function t(e) {
    e && (this._$eventProcessor = e);
  }
  return t.prototype.on = function(e, r, n, a) {
    this._$handlers || (this._$handlers = {});
    var i = this._$handlers;
    if (typeof r == "function" && (a = n, n = r, r = null), !n || !e)
      return this;
    var o = this._$eventProcessor;
    r != null && o && o.normalizeQuery && (r = o.normalizeQuery(r)), i[e] || (i[e] = []);
    for (var s = 0; s < i[e].length; s++)
      if (i[e][s].h === n)
        return this;
    var l = {
      h: n,
      query: r,
      ctx: a || this,
      callAtLast: n.zrEventfulCallAtLast
    }, u = i[e].length - 1, c = i[e][u];
    return c && c.callAtLast ? i[e].splice(u, 0, l) : i[e].push(l), this;
  }, t.prototype.isSilent = function(e) {
    var r = this._$handlers;
    return !r || !r[e] || !r[e].length;
  }, t.prototype.off = function(e, r) {
    var n = this._$handlers;
    if (!n)
      return this;
    if (!e)
      return this._$handlers = {}, this;
    if (r) {
      if (n[e]) {
        for (var a = [], i = 0, o = n[e].length; i < o; i++)
          n[e][i].h !== r && a.push(n[e][i]);
        n[e] = a;
      }
      n[e] && n[e].length === 0 && delete n[e];
    } else
      delete n[e];
    return this;
  }, t.prototype.trigger = function(e) {
    for (var r = [], n = 1; n < arguments.length; n++)
      r[n - 1] = arguments[n];
    if (!this._$handlers)
      return this;
    var a = this._$handlers[e], i = this._$eventProcessor;
    if (a)
      for (var o = r.length, s = a.length, l = 0; l < s; l++) {
        var u = a[l];
        if (!(i && i.filter && u.query != null && !i.filter(e, u.query)))
          switch (o) {
            case 0:
              u.h.call(u.ctx);
              break;
            case 1:
              u.h.call(u.ctx, r[0]);
              break;
            case 2:
              u.h.call(u.ctx, r[0], r[1]);
              break;
            default:
              u.h.apply(u.ctx, r);
              break;
          }
      }
    return i && i.afterTrigger && i.afterTrigger(e), this;
  }, t.prototype.triggerWithContext = function(e) {
    for (var r = [], n = 1; n < arguments.length; n++)
      r[n - 1] = arguments[n];
    if (!this._$handlers)
      return this;
    var a = this._$handlers[e], i = this._$eventProcessor;
    if (a)
      for (var o = r.length, s = r[o - 1], l = a.length, u = 0; u < l; u++) {
        var c = a[u];
        if (!(i && i.filter && c.query != null && !i.filter(e, c.query)))
          switch (o) {
            case 0:
              c.h.call(s);
              break;
            case 1:
              c.h.call(s, r[0]);
              break;
            case 2:
              c.h.call(s, r[0], r[1]);
              break;
            default:
              c.h.apply(s, r.slice(1, o - 1));
              break;
          }
      }
    return i && i.afterTrigger && i.afterTrigger(e), this;
  }, t;
}(), OB = Math.log(2);
function zv(t, e, r, n, a, i) {
  var o = n + "-" + a, s = t.length;
  if (i.hasOwnProperty(o))
    return i[o];
  if (e === 1) {
    var l = Math.round(Math.log((1 << s) - 1 & ~a) / OB);
    return t[r][l];
  }
  for (var u = n | 1 << r, c = r + 1; n & 1 << c; )
    c++;
  for (var d = 0, p = 0, f = 0; p < s; p++) {
    var h = 1 << p;
    h & a || (d += (f % 2 ? -1 : 1) * t[r][p] * zv(t, e - 1, c, u, a | h, i), f++);
  }
  return i[o] = d, d;
}
function U0(t, e) {
  var r = [
    [t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]],
    [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]],
    [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]],
    [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]],
    [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]],
    [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]],
    [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]],
    [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]]
  ], n = {}, a = zv(r, 8, 0, 0, 0, n);
  if (a !== 0) {
    for (var i = [], o = 0; o < 8; o++)
      for (var s = 0; s < 8; s++)
        i[s] == null && (i[s] = 0), i[s] += ((o + s) % 2 ? -1 : 1) * zv(r, 7, o === 0 ? 1 : 0, 1 << o, 1 << s, n) / a * e[o];
    return function(l, u, c) {
      var d = u * i[6] + c * i[7] + 1;
      l[0] = (u * i[0] + c * i[1] + i[2]) / d, l[1] = (u * i[3] + c * i[4] + i[5]) / d;
    };
  }
}
var z0 = "___zrEVENTSAVED", oh = [];
function LB(t, e, r, n, a) {
  return Vv(oh, e, n, a, !0) && Vv(t, r, oh[0], oh[1]);
}
function Vv(t, e, r, n, a) {
  if (e.getBoundingClientRect && Ae.domSupported && !Dw(e)) {
    var i = e[z0] || (e[z0] = {}), o = PB(e, i), s = kB(o, i, a);
    if (s)
      return s(t, r, n), !0;
  }
  return !1;
}
function PB(t, e) {
  var r = e.markers;
  if (r)
    return r;
  r = e.markers = [];
  for (var n = ["left", "right"], a = ["top", "bottom"], i = 0; i < 4; i++) {
    var o = document.createElement("div"), s = o.style, l = i % 2, u = (i >> 1) % 2;
    s.cssText = [
      "position: absolute",
      "visibility: hidden",
      "padding: 0",
      "margin: 0",
      "border-width: 0",
      "user-select: none",
      "width:0",
      "height:0",
      n[l] + ":0",
      a[u] + ":0",
      n[1 - l] + ":auto",
      a[1 - u] + ":auto",
      ""
    ].join("!important;"), t.appendChild(o), r.push(o);
  }
  return r;
}
function kB(t, e, r) {
  for (var n = r ? "invTrans" : "trans", a = e[n], i = e.srcCoords, o = [], s = [], l = !0, u = 0; u < 4; u++) {
    var c = t[u].getBoundingClientRect(), d = 2 * u, p = c.left, f = c.top;
    o.push(p, f), l = l && i && p === i[d] && f === i[d + 1], s.push(t[u].offsetLeft, t[u].offsetTop);
  }
  return l && a ? a : (e.srcCoords = o, e[n] = r ? U0(s, o) : U0(o, s));
}
function Dw(t) {
  return t.nodeName.toUpperCase() === "CANVAS";
}
var BB = /([&<>"'])/g, FB = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function tr(t) {
  return t == null ? "" : (t + "").replace(BB, function(e, r) {
    return FB[r];
  });
}
var GB = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, sh = [], UB = Ae.browser.firefox && +Ae.browser.version.split(".")[0] < 39;
function $v(t, e, r, n) {
  return r = r || {}, n ? V0(t, e, r) : UB && e.layerX != null && e.layerX !== e.offsetX ? (r.zrX = e.layerX, r.zrY = e.layerY) : e.offsetX != null ? (r.zrX = e.offsetX, r.zrY = e.offsetY) : V0(t, e, r), r;
}
function V0(t, e, r) {
  if (Ae.domSupported && t.getBoundingClientRect) {
    var n = e.clientX, a = e.clientY;
    if (Dw(t)) {
      var i = t.getBoundingClientRect();
      r.zrX = n - i.left, r.zrY = a - i.top;
      return;
    } else if (Vv(sh, t, n, a)) {
      r.zrX = sh[0], r.zrY = sh[1];
      return;
    }
  }
  r.zrX = r.zrY = 0;
}
function H_(t) {
  return t || window.event;
}
function Dr(t, e, r) {
  if (e = H_(e), e.zrX != null)
    return e;
  var n = e.type, a = n && n.indexOf("touch") >= 0;
  if (a) {
    var o = n !== "touchend" ? e.targetTouches[0] : e.changedTouches[0];
    o && $v(t, o, e, r);
  } else {
    $v(t, e, e, r);
    var i = zB(e);
    e.zrDelta = i ? i / 120 : -(e.detail || 0) / 3;
  }
  var s = e.button;
  return e.which == null && s !== void 0 && GB.test(e.type) && (e.which = s & 1 ? 1 : s & 2 ? 3 : s & 4 ? 2 : 0), e;
}
function zB(t) {
  var e = t.wheelDelta;
  if (e)
    return e;
  var r = t.deltaX, n = t.deltaY;
  if (r == null || n == null)
    return e;
  var a = Math.abs(n !== 0 ? n : r), i = n > 0 ? -1 : n < 0 ? 1 : r > 0 ? -1 : 1;
  return 3 * a * i;
}
function Hv(t, e, r, n) {
  t.addEventListener(e, r, n);
}
function VB(t, e, r, n) {
  t.removeEventListener(e, r, n);
}
var ta = function(t) {
  t.preventDefault(), t.stopPropagation(), t.cancelBubble = !0;
};
function $0(t) {
  return t.which === 2 || t.which === 3;
}
var $B = function() {
  function t() {
    this._track = [];
  }
  return t.prototype.recognize = function(e, r, n) {
    return this._doTrack(e, r, n), this._recognize(e);
  }, t.prototype.clear = function() {
    return this._track.length = 0, this;
  }, t.prototype._doTrack = function(e, r, n) {
    var a = e.touches;
    if (a) {
      for (var i = {
        points: [],
        touches: [],
        target: r,
        event: e
      }, o = 0, s = a.length; o < s; o++) {
        var l = a[o], u = $v(n, l, {});
        i.points.push([u.zrX, u.zrY]), i.touches.push(l);
      }
      this._track.push(i);
    }
  }, t.prototype._recognize = function(e) {
    for (var r in lh)
      if (lh.hasOwnProperty(r)) {
        var n = lh[r](this._track, e);
        if (n)
          return n;
      }
  }, t;
}();
function H0(t) {
  var e = t[1][0] - t[0][0], r = t[1][1] - t[0][1];
  return Math.sqrt(e * e + r * r);
}
function HB(t) {
  return [
    (t[0][0] + t[1][0]) / 2,
    (t[0][1] + t[1][1]) / 2
  ];
}
var lh = {
  pinch: function(t, e) {
    var r = t.length;
    if (r) {
      var n = (t[r - 1] || {}).points, a = (t[r - 2] || {}).points || n;
      if (a && a.length > 1 && n && n.length > 1) {
        var i = H0(n) / H0(a);
        !isFinite(i) && (i = 1), e.pinchScale = i;
        var o = HB(n);
        return e.pinchX = o[0], e.pinchY = o[1], {
          type: "pinch",
          target: t[0].target,
          event: e
        };
      }
    }
  }
};
function yr() {
  return [1, 0, 0, 1, 0, 0];
}
function tf(t) {
  return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t;
}
function W_(t, e) {
  return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t;
}
function Xn(t, e, r) {
  var n = e[0] * r[0] + e[2] * r[1], a = e[1] * r[0] + e[3] * r[1], i = e[0] * r[2] + e[2] * r[3], o = e[1] * r[2] + e[3] * r[3], s = e[0] * r[4] + e[2] * r[5] + e[4], l = e[1] * r[4] + e[3] * r[5] + e[5];
  return t[0] = n, t[1] = a, t[2] = i, t[3] = o, t[4] = s, t[5] = l, t;
}
function Rn(t, e, r) {
  return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4] + r[0], t[5] = e[5] + r[1], t;
}
function ho(t, e, r, n) {
  n === void 0 && (n = [0, 0]);
  var a = e[0], i = e[2], o = e[4], s = e[1], l = e[3], u = e[5], c = Math.sin(r), d = Math.cos(r);
  return t[0] = a * d + s * c, t[1] = -a * c + s * d, t[2] = i * d + l * c, t[3] = -i * c + d * l, t[4] = d * (o - n[0]) + c * (u - n[1]) + n[0], t[5] = d * (u - n[1]) - c * (o - n[0]) + n[1], t;
}
function q_(t, e, r) {
  var n = r[0], a = r[1];
  return t[0] = e[0] * n, t[1] = e[1] * a, t[2] = e[2] * n, t[3] = e[3] * a, t[4] = e[4] * n, t[5] = e[5] * a, t;
}
function Ms(t, e) {
  var r = e[0], n = e[2], a = e[4], i = e[1], o = e[3], s = e[5], l = r * o - i * n;
  return l ? (l = 1 / l, t[0] = o * l, t[1] = -i * l, t[2] = -n * l, t[3] = r * l, t[4] = (n * s - o * a) * l, t[5] = (i * a - r * s) * l, t) : null;
}
function WB(t) {
  var e = yr();
  return W_(e, t), e;
}
var Ee = function() {
  function t(e, r) {
    this.x = e || 0, this.y = r || 0;
  }
  return t.prototype.copy = function(e) {
    return this.x = e.x, this.y = e.y, this;
  }, t.prototype.clone = function() {
    return new t(this.x, this.y);
  }, t.prototype.set = function(e, r) {
    return this.x = e, this.y = r, this;
  }, t.prototype.equal = function(e) {
    return e.x === this.x && e.y === this.y;
  }, t.prototype.add = function(e) {
    return this.x += e.x, this.y += e.y, this;
  }, t.prototype.scale = function(e) {
    this.x *= e, this.y *= e;
  }, t.prototype.scaleAndAdd = function(e, r) {
    this.x += e.x * r, this.y += e.y * r;
  }, t.prototype.sub = function(e) {
    return this.x -= e.x, this.y -= e.y, this;
  }, t.prototype.dot = function(e) {
    return this.x * e.x + this.y * e.y;
  }, t.prototype.len = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }, t.prototype.lenSquare = function() {
    return this.x * this.x + this.y * this.y;
  }, t.prototype.normalize = function() {
    var e = this.len();
    return this.x /= e, this.y /= e, this;
  }, t.prototype.distance = function(e) {
    var r = this.x - e.x, n = this.y - e.y;
    return Math.sqrt(r * r + n * n);
  }, t.prototype.distanceSquare = function(e) {
    var r = this.x - e.x, n = this.y - e.y;
    return r * r + n * n;
  }, t.prototype.negate = function() {
    return this.x = -this.x, this.y = -this.y, this;
  }, t.prototype.transform = function(e) {
    if (e) {
      var r = this.x, n = this.y;
      return this.x = e[0] * r + e[2] * n + e[4], this.y = e[1] * r + e[3] * n + e[5], this;
    }
  }, t.prototype.toArray = function(e) {
    return e[0] = this.x, e[1] = this.y, e;
  }, t.prototype.fromArray = function(e) {
    this.x = e[0], this.y = e[1];
  }, t.set = function(e, r, n) {
    e.x = r, e.y = n;
  }, t.copy = function(e, r) {
    e.x = r.x, e.y = r.y;
  }, t.len = function(e) {
    return Math.sqrt(e.x * e.x + e.y * e.y);
  }, t.lenSquare = function(e) {
    return e.x * e.x + e.y * e.y;
  }, t.dot = function(e, r) {
    return e.x * r.x + e.y * r.y;
  }, t.add = function(e, r, n) {
    e.x = r.x + n.x, e.y = r.y + n.y;
  }, t.sub = function(e, r, n) {
    e.x = r.x - n.x, e.y = r.y - n.y;
  }, t.scale = function(e, r, n) {
    e.x = r.x * n, e.y = r.y * n;
  }, t.scaleAndAdd = function(e, r, n, a) {
    e.x = r.x + n.x * a, e.y = r.y + n.y * a;
  }, t.lerp = function(e, r, n, a) {
    var i = 1 - a;
    e.x = i * r.x + a * n.x, e.y = i * r.y + a * n.y;
  }, t;
}(), vc = Math.min, mc = Math.max, ii = new Ee(), oi = new Ee(), si = new Ee(), li = new Ee(), Ws = new Ee(), qs = new Ee(), Te = function() {
  function t(e, r, n, a) {
    n < 0 && (e = e + n, n = -n), a < 0 && (r = r + a, a = -a), this.x = e, this.y = r, this.width = n, this.height = a;
  }
  return t.prototype.union = function(e) {
    var r = vc(e.x, this.x), n = vc(e.y, this.y);
    isFinite(this.x) && isFinite(this.width) ? this.width = mc(e.x + e.width, this.x + this.width) - r : this.width = e.width, isFinite(this.y) && isFinite(this.height) ? this.height = mc(e.y + e.height, this.y + this.height) - n : this.height = e.height, this.x = r, this.y = n;
  }, t.prototype.applyTransform = function(e) {
    t.applyTransform(this, this, e);
  }, t.prototype.calculateTransform = function(e) {
    var r = this, n = e.width / r.width, a = e.height / r.height, i = yr();
    return Rn(i, i, [-r.x, -r.y]), q_(i, i, [n, a]), Rn(i, i, [e.x, e.y]), i;
  }, t.prototype.intersect = function(e, r) {
    if (!e)
      return !1;
    e instanceof t || (e = t.create(e));
    var n = this, a = n.x, i = n.x + n.width, o = n.y, s = n.y + n.height, l = e.x, u = e.x + e.width, c = e.y, d = e.y + e.height, p = !(i < l || u < a || s < c || d < o);
    if (r) {
      var f = 1 / 0, h = 0, g = Math.abs(i - l), v = Math.abs(u - a), m = Math.abs(s - c), _ = Math.abs(d - o), y = Math.min(g, v), b = Math.min(m, _);
      i < l || u < a ? y > h && (h = y, g < v ? Ee.set(qs, -g, 0) : Ee.set(qs, v, 0)) : y < f && (f = y, g < v ? Ee.set(Ws, g, 0) : Ee.set(Ws, -v, 0)), s < c || d < o ? b > h && (h = b, m < _ ? Ee.set(qs, 0, -m) : Ee.set(qs, 0, _)) : y < f && (f = y, m < _ ? Ee.set(Ws, 0, m) : Ee.set(Ws, 0, -_));
    }
    return r && Ee.copy(r, p ? Ws : qs), p;
  }, t.prototype.contain = function(e, r) {
    var n = this;
    return e >= n.x && e <= n.x + n.width && r >= n.y && r <= n.y + n.height;
  }, t.prototype.clone = function() {
    return new t(this.x, this.y, this.width, this.height);
  }, t.prototype.copy = function(e) {
    t.copy(this, e);
  }, t.prototype.plain = function() {
    return {
      x: this.x,
      y: this.y,
      width: this.width,
      height: this.height
    };
  }, t.prototype.isFinite = function() {
    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
  }, t.prototype.isZero = function() {
    return this.width === 0 || this.height === 0;
  }, t.create = function(e) {
    return new t(e.x, e.y, e.width, e.height);
  }, t.copy = function(e, r) {
    e.x = r.x, e.y = r.y, e.width = r.width, e.height = r.height;
  }, t.applyTransform = function(e, r, n) {
    if (!n) {
      e !== r && t.copy(e, r);
      return;
    }
    if (n[1] < 1e-5 && n[1] > -1e-5 && n[2] < 1e-5 && n[2] > -1e-5) {
      var a = n[0], i = n[3], o = n[4], s = n[5];
      e.x = r.x * a + o, e.y = r.y * i + s, e.width = r.width * a, e.height = r.height * i, e.width < 0 && (e.x += e.width, e.width = -e.width), e.height < 0 && (e.y += e.height, e.height = -e.height);
      return;
    }
    ii.x = si.x = r.x, ii.y = li.y = r.y, oi.x = li.x = r.x + r.width, oi.y = si.y = r.y + r.height, ii.transform(n), li.transform(n), oi.transform(n), si.transform(n), e.x = vc(ii.x, oi.x, si.x, li.x), e.y = vc(ii.y, oi.y, si.y, li.y);
    var l = mc(ii.x, oi.x, si.x, li.x), u = mc(ii.y, oi.y, si.y, li.y);
    e.width = l - e.x, e.height = u - e.y;
  }, t;
}(), Mw = "silent";
function qB(t, e, r) {
  return {
    type: t,
    event: r,
    target: e.target,
    topTarget: e.topTarget,
    cancelBubble: !1,
    offsetX: r.zrX,
    offsetY: r.zrY,
    gestureEvent: r.gestureEvent,
    pinchX: r.pinchX,
    pinchY: r.pinchY,
    pinchScale: r.pinchScale,
    wheelDelta: r.zrDelta,
    zrByTouch: r.zrByTouch,
    which: r.which,
    stop: YB
  };
}
function YB() {
  ta(this.event);
}
var KB = function(t) {
  k(e, t);
  function e() {
    var r = t !== null && t.apply(this, arguments) || this;
    return r.handler = null, r;
  }
  return e.prototype.dispose = function() {
  }, e.prototype.setCursor = function() {
  }, e;
}(Gr), Ys = /* @__PURE__ */ function() {
  function t(e, r) {
    this.x = e, this.y = r;
  }
  return t;
}(), ZB = [
  "click",
  "dblclick",
  "mousewheel",
  "mouseout",
  "mouseup",
  "mousedown",
  "mousemove",
  "contextmenu"
], uh = new Te(0, 0, 0, 0), Iw = function(t) {
  k(e, t);
  function e(r, n, a, i, o) {
    var s = t.call(this) || this;
    return s._hovered = new Ys(0, 0), s.storage = r, s.painter = n, s.painterRoot = i, s._pointerSize = o, a = a || new KB(), s.proxy = null, s.setHandlerProxy(a), s._draggingMgr = new RB(s), s;
  }
  return e.prototype.setHandlerProxy = function(r) {
    this.proxy && this.proxy.dispose(), r && (w(ZB, function(n) {
      r.on && r.on(n, this[n], this);
    }, this), r.handler = this), this.proxy = r;
  }, e.prototype.mousemove = function(r) {
    var n = r.zrX, a = r.zrY, i = Nw(this, n, a), o = this._hovered, s = o.target;
    s && !s.__zr && (o = this.findHover(o.x, o.y), s = o.target);
    var l = this._hovered = i ? new Ys(n, a) : this.findHover(n, a), u = l.target, c = this.proxy;
    c.setCursor && c.setCursor(u ? u.cursor : "default"), s && u !== s && this.dispatchToElement(o, "mouseout", r), this.dispatchToElement(l, "mousemove", r), u && u !== s && this.dispatchToElement(l, "mouseover", r);
  }, e.prototype.mouseout = function(r) {
    var n = r.zrEventControl;
    n !== "only_globalout" && this.dispatchToElement(this._hovered, "mouseout", r), n !== "no_globalout" && this.trigger("globalout", { type: "globalout", event: r });
  }, e.prototype.resize = function() {
    this._hovered = new Ys(0, 0);
  }, e.prototype.dispatch = function(r, n) {
    var a = this[r];
    a && a.call(this, n);
  }, e.prototype.dispose = function() {
    this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
  }, e.prototype.setCursorStyle = function(r) {
    var n = this.proxy;
    n.setCursor && n.setCursor(r);
  }, e.prototype.dispatchToElement = function(r, n, a) {
    r = r || {};
    var i = r.target;
    if (!(i && i.silent)) {
      for (var o = "on" + n, s = qB(n, r, a); i && (i[o] && (s.cancelBubble = !!i[o].call(i, s)), i.trigger(n, s), i = i.__hostTarget ? i.__hostTarget : i.parent, !s.cancelBubble); )
        ;
      s.cancelBubble || (this.trigger(n, s), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function(l) {
        typeof l[o] == "function" && l[o].call(l, s), l.trigger && l.trigger(n, s);
      }));
    }
  }, e.prototype.findHover = function(r, n, a) {
    var i = this.storage.getDisplayList(), o = new Ys(r, n);
    if (W0(i, o, r, n, a), this._pointerSize && !o.target) {
      for (var s = [], l = this._pointerSize, u = l / 2, c = new Te(r - u, n - u, l, l), d = i.length - 1; d >= 0; d--) {
        var p = i[d];
        p !== a && !p.ignore && !p.ignoreCoarsePointer && (!p.parent || !p.parent.ignoreCoarsePointer) && (uh.copy(p.getBoundingRect()), p.transform && uh.applyTransform(p.transform), uh.intersect(c) && s.push(p));
      }
      if (s.length)
        for (var f = 4, h = Math.PI / 12, g = Math.PI * 2, v = 0; v < u; v += f)
          for (var m = 0; m < g; m += h) {
            var _ = r + v * Math.cos(m), y = n + v * Math.sin(m);
            if (W0(s, o, _, y, a), o.target)
              return o;
          }
    }
    return o;
  }, e.prototype.processGesture = function(r, n) {
    this._gestureMgr || (this._gestureMgr = new $B());
    var a = this._gestureMgr;
    n === "start" && a.clear();
    var i = a.recognize(r, this.findHover(r.zrX, r.zrY, null).target, this.proxy.dom);
    if (n === "end" && a.clear(), i) {
      var o = i.type;
      r.gestureEvent = o;
      var s = new Ys();
      s.target = i.target, this.dispatchToElement(s, o, i.event);
    }
  }, e;
}(Gr);
w(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(t) {
  Iw.prototype[t] = function(e) {
    var r = e.zrX, n = e.zrY, a = Nw(this, r, n), i, o;
    if ((t !== "mouseup" || !a) && (i = this.findHover(r, n), o = i.target), t === "mousedown")
      this._downEl = o, this._downPoint = [e.zrX, e.zrY], this._upEl = o;
    else if (t === "mouseup")
      this._upEl = o;
    else if (t === "click") {
      if (this._downEl !== this._upEl || !this._downPoint || Na(this._downPoint, [e.zrX, e.zrY]) > 4)
        return;
      this._downPoint = null;
    }
    this.dispatchToElement(i, t, e);
  };
});
function XB(t, e, r) {
  if (t[t.rectHover ? "rectContain" : "contain"](e, r)) {
    for (var n = t, a = void 0, i = !1; n; ) {
      if (n.ignoreClip && (i = !0), !i) {
        var o = n.getClipPath();
        if (o && !o.contain(e, r))
          return !1;
      }
      n.silent && (a = !0);
      var s = n.__hostTarget;
      n = s || n.parent;
    }
    return a ? Mw : !0;
  }
  return !1;
}
function W0(t, e, r, n, a) {
  for (var i = t.length - 1; i >= 0; i--) {
    var o = t[i], s = void 0;
    if (o !== a && !o.ignore && (s = XB(o, r, n)) && (!e.topTarget && (e.topTarget = o), s !== Mw)) {
      e.target = o;
      break;
    }
  }
}
function Nw(t, e, r) {
  var n = t.painter;
  return e < 0 || e > n.getWidth() || r < 0 || r > n.getHeight();
}
var Rw = 32, Ks = 7;
function QB(t) {
  for (var e = 0; t >= Rw; )
    e |= t & 1, t >>= 1;
  return t + e;
}
function q0(t, e, r, n) {
  var a = e + 1;
  if (a === r)
    return 1;
  if (n(t[a++], t[e]) < 0) {
    for (; a < r && n(t[a], t[a - 1]) < 0; )
      a++;
    jB(t, e, a);
  } else
    for (; a < r && n(t[a], t[a - 1]) >= 0; )
      a++;
  return a - e;
}
function jB(t, e, r) {
  for (r--; e < r; ) {
    var n = t[e];
    t[e++] = t[r], t[r--] = n;
  }
}
function Y0(t, e, r, n, a) {
  for (n === e && n++; n < r; n++) {
    for (var i = t[n], o = e, s = n, l; o < s; )
      l = o + s >>> 1, a(i, t[l]) < 0 ? s = l : o = l + 1;
    var u = n - o;
    switch (u) {
      case 3:
        t[o + 3] = t[o + 2];
      case 2:
        t[o + 2] = t[o + 1];
      case 1:
        t[o + 1] = t[o];
        break;
      default:
        for (; u > 0; )
          t[o + u] = t[o + u - 1], u--;
    }
    t[o] = i;
  }
}
function ch(t, e, r, n, a, i) {
  var o = 0, s = 0, l = 1;
  if (i(t, e[r + a]) > 0) {
    for (s = n - a; l < s && i(t, e[r + a + l]) > 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s), o += a, l += a;
  } else {
    for (s = a + 1; l < s && i(t, e[r + a - l]) <= 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s);
    var u = o;
    o = a - l, l = a - u;
  }
  for (o++; o < l; ) {
    var c = o + (l - o >>> 1);
    i(t, e[r + c]) > 0 ? o = c + 1 : l = c;
  }
  return l;
}
function dh(t, e, r, n, a, i) {
  var o = 0, s = 0, l = 1;
  if (i(t, e[r + a]) < 0) {
    for (s = a + 1; l < s && i(t, e[r + a - l]) < 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s);
    var u = o;
    o = a - l, l = a - u;
  } else {
    for (s = n - a; l < s && i(t, e[r + a + l]) >= 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s), o += a, l += a;
  }
  for (o++; o < l; ) {
    var c = o + (l - o >>> 1);
    i(t, e[r + c]) < 0 ? l = c : o = c + 1;
  }
  return l;
}
function JB(t, e) {
  var r = Ks, n, a, i = 0, o = [];
  n = [], a = [];
  function s(f, h) {
    n[i] = f, a[i] = h, i += 1;
  }
  function l() {
    for (; i > 1; ) {
      var f = i - 2;
      if (f >= 1 && a[f - 1] <= a[f] + a[f + 1] || f >= 2 && a[f - 2] <= a[f] + a[f - 1])
        a[f - 1] < a[f + 1] && f--;
      else if (a[f] > a[f + 1])
        break;
      c(f);
    }
  }
  function u() {
    for (; i > 1; ) {
      var f = i - 2;
      f > 0 && a[f - 1] < a[f + 1] && f--, c(f);
    }
  }
  function c(f) {
    var h = n[f], g = a[f], v = n[f + 1], m = a[f + 1];
    a[f] = g + m, f === i - 3 && (n[f + 1] = n[f + 2], a[f + 1] = a[f + 2]), i--;
    var _ = dh(t[v], t, h, g, 0, e);
    h += _, g -= _, g !== 0 && (m = ch(t[h + g - 1], t, v, m, m - 1, e), m !== 0 && (g <= m ? d(h, g, v, m) : p(h, g, v, m)));
  }
  function d(f, h, g, v) {
    var m = 0;
    for (m = 0; m < h; m++)
      o[m] = t[f + m];
    var _ = 0, y = g, b = f;
    if (t[b++] = t[y++], --v === 0) {
      for (m = 0; m < h; m++)
        t[b + m] = o[_ + m];
      return;
    }
    if (h === 1) {
      for (m = 0; m < v; m++)
        t[b + m] = t[y + m];
      t[b + v] = o[_];
      return;
    }
    for (var S = r, E, T, x; ; ) {
      E = 0, T = 0, x = !1;
      do
        if (e(t[y], o[_]) < 0) {
          if (t[b++] = t[y++], T++, E = 0, --v === 0) {
            x = !0;
            break;
          }
        } else if (t[b++] = o[_++], E++, T = 0, --h === 1) {
          x = !0;
          break;
        }
      while ((E | T) < S);
      if (x)
        break;
      do {
        if (E = dh(t[y], o, _, h, 0, e), E !== 0) {
          for (m = 0; m < E; m++)
            t[b + m] = o[_ + m];
          if (b += E, _ += E, h -= E, h <= 1) {
            x = !0;
            break;
          }
        }
        if (t[b++] = t[y++], --v === 0) {
          x = !0;
          break;
        }
        if (T = ch(o[_], t, y, v, 0, e), T !== 0) {
          for (m = 0; m < T; m++)
            t[b + m] = t[y + m];
          if (b += T, y += T, v -= T, v === 0) {
            x = !0;
            break;
          }
        }
        if (t[b++] = o[_++], --h === 1) {
          x = !0;
          break;
        }
        S--;
      } while (E >= Ks || T >= Ks);
      if (x)
        break;
      S < 0 && (S = 0), S += 2;
    }
    if (r = S, r < 1 && (r = 1), h === 1) {
      for (m = 0; m < v; m++)
        t[b + m] = t[y + m];
      t[b + v] = o[_];
    } else {
      if (h === 0)
        throw new Error();
      for (m = 0; m < h; m++)
        t[b + m] = o[_ + m];
    }
  }
  function p(f, h, g, v) {
    var m = 0;
    for (m = 0; m < v; m++)
      o[m] = t[g + m];
    var _ = f + h - 1, y = v - 1, b = g + v - 1, S = 0, E = 0;
    if (t[b--] = t[_--], --h === 0) {
      for (S = b - (v - 1), m = 0; m < v; m++)
        t[S + m] = o[m];
      return;
    }
    if (v === 1) {
      for (b -= h, _ -= h, E = b + 1, S = _ + 1, m = h - 1; m >= 0; m--)
        t[E + m] = t[S + m];
      t[b] = o[y];
      return;
    }
    for (var T = r; ; ) {
      var x = 0, C = 0, A = !1;
      do
        if (e(o[y], t[_]) < 0) {
          if (t[b--] = t[_--], x++, C = 0, --h === 0) {
            A = !0;
            break;
          }
        } else if (t[b--] = o[y--], C++, x = 0, --v === 1) {
          A = !0;
          break;
        }
      while ((x | C) < T);
      if (A)
        break;
      do {
        if (x = h - dh(o[y], t, f, h, h - 1, e), x !== 0) {
          for (b -= x, _ -= x, h -= x, E = b + 1, S = _ + 1, m = x - 1; m >= 0; m--)
            t[E + m] = t[S + m];
          if (h === 0) {
            A = !0;
            break;
          }
        }
        if (t[b--] = o[y--], --v === 1) {
          A = !0;
          break;
        }
        if (C = v - ch(t[_], o, 0, v, v - 1, e), C !== 0) {
          for (b -= C, y -= C, v -= C, E = b + 1, S = y + 1, m = 0; m < C; m++)
            t[E + m] = o[S + m];
          if (v <= 1) {
            A = !0;
            break;
          }
        }
        if (t[b--] = t[_--], --h === 0) {
          A = !0;
          break;
        }
        T--;
      } while (x >= Ks || C >= Ks);
      if (A)
        break;
      T < 0 && (T = 0), T += 2;
    }
    if (r = T, r < 1 && (r = 1), v === 1) {
      for (b -= h, _ -= h, E = b + 1, S = _ + 1, m = h - 1; m >= 0; m--)
        t[E + m] = t[S + m];
      t[b] = o[y];
    } else {
      if (v === 0)
        throw new Error();
      for (S = b - (v - 1), m = 0; m < v; m++)
        t[S + m] = o[m];
    }
  }
  return {
    mergeRuns: l,
    forceMergeRuns: u,
    pushRun: s
  };
}
function wd(t, e, r, n) {
  r || (r = 0), n || (n = t.length);
  var a = n - r;
  if (!(a < 2)) {
    var i = 0;
    if (a < Rw) {
      i = q0(t, r, n, e), Y0(t, r, n, r + i, e);
      return;
    }
    var o = JB(t, e), s = QB(a);
    do {
      if (i = q0(t, r, n, e), i < s) {
        var l = a;
        l > s && (l = s), Y0(t, r, r + l, r + i, e), i = l;
      }
      o.pushRun(r, i), o.mergeRuns(), a -= i, r += i;
    } while (a !== 0);
    o.forceMergeRuns();
  }
}
var Mn = 1, Dd = 2, El = 4, K0 = !1;
function ph() {
  K0 || (K0 = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
}
function Z0(t, e) {
  return t.zlevel === e.zlevel ? t.z === e.z ? t.z2 - e.z2 : t.z - e.z : t.zlevel - e.zlevel;
}
var eF = function() {
  function t() {
    this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = Z0;
  }
  return t.prototype.traverse = function(e, r) {
    for (var n = 0; n < this._roots.length; n++)
      this._roots[n].traverse(e, r);
  }, t.prototype.getDisplayList = function(e, r) {
    r = r || !1;
    var n = this._displayList;
    return (e || !n.length) && this.updateDisplayList(r), n;
  }, t.prototype.updateDisplayList = function(e) {
    this._displayListLen = 0;
    for (var r = this._roots, n = this._displayList, a = 0, i = r.length; a < i; a++)
      this._updateAndAddDisplayable(r[a], null, e);
    n.length = this._displayListLen, wd(n, Z0);
  }, t.prototype._updateAndAddDisplayable = function(e, r, n) {
    if (!(e.ignore && !n)) {
      e.beforeUpdate(), e.update(), e.afterUpdate();
      var a = e.getClipPath();
      if (e.ignoreClip)
        r = null;
      else if (a) {
        r ? r = r.slice() : r = [];
        for (var i = a, o = e; i; )
          i.parent = o, i.updateTransform(), r.push(i), o = i, i = i.getClipPath();
      }
      if (e.childrenRef) {
        for (var s = e.childrenRef(), l = 0; l < s.length; l++) {
          var u = s[l];
          e.__dirty && (u.__dirty |= Mn), this._updateAndAddDisplayable(u, r, n);
        }
        e.__dirty = 0;
      } else {
        var c = e;
        r && r.length ? c.__clipPaths = r : c.__clipPaths && c.__clipPaths.length > 0 && (c.__clipPaths = []), isNaN(c.z) && (ph(), c.z = 0), isNaN(c.z2) && (ph(), c.z2 = 0), isNaN(c.zlevel) && (ph(), c.zlevel = 0), this._displayList[this._displayListLen++] = c;
      }
      var d = e.getDecalElement && e.getDecalElement();
      d && this._updateAndAddDisplayable(d, r, n);
      var p = e.getTextGuideLine();
      p && this._updateAndAddDisplayable(p, r, n);
      var f = e.getTextContent();
      f && this._updateAndAddDisplayable(f, r, n);
    }
  }, t.prototype.addRoot = function(e) {
    e.__zr && e.__zr.storage === this || this._roots.push(e);
  }, t.prototype.delRoot = function(e) {
    if (e instanceof Array) {
      for (var r = 0, n = e.length; r < n; r++)
        this.delRoot(e[r]);
      return;
    }
    var a = xe(this._roots, e);
    a >= 0 && this._roots.splice(a, 1);
  }, t.prototype.delAllRoots = function() {
    this._roots = [], this._displayList = [], this._displayListLen = 0;
  }, t.prototype.getRoots = function() {
    return this._roots;
  }, t.prototype.dispose = function() {
    this._displayList = null, this._roots = null;
  }, t;
}(), Jd;
Jd = Ae.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(t) {
  return setTimeout(t, 16);
};
var Fl = {
  linear: function(t) {
    return t;
  },
  quadraticIn: function(t) {
    return t * t;
  },
  quadraticOut: function(t) {
    return t * (2 - t);
  },
  quadraticInOut: function(t) {
    return (t *= 2) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);
  },
  cubicIn: function(t) {
    return t * t * t;
  },
  cubicOut: function(t) {
    return --t * t * t + 1;
  },
  cubicInOut: function(t) {
    return (t *= 2) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);
  },
  quarticIn: function(t) {
    return t * t * t * t;
  },
  quarticOut: function(t) {
    return 1 - --t * t * t * t;
  },
  quarticInOut: function(t) {
    return (t *= 2) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);
  },
  quinticIn: function(t) {
    return t * t * t * t * t;
  },
  quinticOut: function(t) {
    return --t * t * t * t * t + 1;
  },
  quinticInOut: function(t) {
    return (t *= 2) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);
  },
  sinusoidalIn: function(t) {
    return 1 - Math.cos(t * Math.PI / 2);
  },
  sinusoidalOut: function(t) {
    return Math.sin(t * Math.PI / 2);
  },
  sinusoidalInOut: function(t) {
    return 0.5 * (1 - Math.cos(Math.PI * t));
  },
  exponentialIn: function(t) {
    return t === 0 ? 0 : Math.pow(1024, t - 1);
  },
  exponentialOut: function(t) {
    return t === 1 ? 1 : 1 - Math.pow(2, -10 * t);
  },
  exponentialInOut: function(t) {
    return t === 0 ? 0 : t === 1 ? 1 : (t *= 2) < 1 ? 0.5 * Math.pow(1024, t - 1) : 0.5 * (-Math.pow(2, -10 * (t - 1)) + 2);
  },
  circularIn: function(t) {
    return 1 - Math.sqrt(1 - t * t);
  },
  circularOut: function(t) {
    return Math.sqrt(1 - --t * t);
  },
  circularInOut: function(t) {
    return (t *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
  },
  elasticIn: function(t) {
    var e, r = 0.1, n = 0.4;
    return t === 0 ? 0 : t === 1 ? 1 : (!r || r < 1 ? (r = 1, e = n / 4) : e = n * Math.asin(1 / r) / (2 * Math.PI), -(r * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / n)));
  },
  elasticOut: function(t) {
    var e, r = 0.1, n = 0.4;
    return t === 0 ? 0 : t === 1 ? 1 : (!r || r < 1 ? (r = 1, e = n / 4) : e = n * Math.asin(1 / r) / (2 * Math.PI), r * Math.pow(2, -10 * t) * Math.sin((t - e) * (2 * Math.PI) / n) + 1);
  },
  elasticInOut: function(t) {
    var e, r = 0.1, n = 0.4;
    return t === 0 ? 0 : t === 1 ? 1 : (!r || r < 1 ? (r = 1, e = n / 4) : e = n * Math.asin(1 / r) / (2 * Math.PI), (t *= 2) < 1 ? -0.5 * (r * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / n)) : r * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / n) * 0.5 + 1);
  },
  backIn: function(t) {
    var e = 1.70158;
    return t * t * ((e + 1) * t - e);
  },
  backOut: function(t) {
    var e = 1.70158;
    return --t * t * ((e + 1) * t + e) + 1;
  },
  backInOut: function(t) {
    var e = 2.5949095;
    return (t *= 2) < 1 ? 0.5 * (t * t * ((e + 1) * t - e)) : 0.5 * ((t -= 2) * t * ((e + 1) * t + e) + 2);
  },
  bounceIn: function(t) {
    return 1 - Fl.bounceOut(1 - t);
  },
  bounceOut: function(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375 : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
  },
  bounceInOut: function(t) {
    return t < 0.5 ? Fl.bounceIn(t * 2) * 0.5 : Fl.bounceOut(t * 2 - 1) * 0.5 + 0.5;
  }
}, _c = Math.pow, za = Math.sqrt, Ow = 1e-8, Lw = 1e-4, X0 = za(3), yc = 1 / 3, bn = fo(), Rr = fo(), os = fo();
function La(t) {
  return t > -1e-8 && t < Ow;
}
function Pw(t) {
  return t > Ow || t < -1e-8;
}
function xt(t, e, r, n, a) {
  var i = 1 - a;
  return i * i * (i * t + 3 * a * e) + a * a * (a * n + 3 * i * r);
}
function Q0(t, e, r, n, a) {
  var i = 1 - a;
  return 3 * (((e - t) * i + 2 * (r - e) * a) * i + (n - r) * a * a);
}
function ep(t, e, r, n, a, i) {
  var o = n + 3 * (e - r) - t, s = 3 * (r - e * 2 + t), l = 3 * (e - t), u = t - a, c = s * s - 3 * o * l, d = s * l - 9 * o * u, p = l * l - 3 * s * u, f = 0;
  if (La(c) && La(d))
    if (La(s))
      i[0] = 0;
    else {
      var h = -l / s;
      h >= 0 && h <= 1 && (i[f++] = h);
    }
  else {
    var g = d * d - 4 * c * p;
    if (La(g)) {
      var v = d / c, h = -s / o + v, m = -v / 2;
      h >= 0 && h <= 1 && (i[f++] = h), m >= 0 && m <= 1 && (i[f++] = m);
    } else if (g > 0) {
      var _ = za(g), y = c * s + 1.5 * o * (-d + _), b = c * s + 1.5 * o * (-d - _);
      y < 0 ? y = -_c(-y, yc) : y = _c(y, yc), b < 0 ? b = -_c(-b, yc) : b = _c(b, yc);
      var h = (-s - (y + b)) / (3 * o);
      h >= 0 && h <= 1 && (i[f++] = h);
    } else {
      var S = (2 * c * s - 3 * o * d) / (2 * za(c * c * c)), E = Math.acos(S) / 3, T = za(c), x = Math.cos(E), h = (-s - 2 * T * x) / (3 * o), m = (-s + T * (x + X0 * Math.sin(E))) / (3 * o), C = (-s + T * (x - X0 * Math.sin(E))) / (3 * o);
      h >= 0 && h <= 1 && (i[f++] = h), m >= 0 && m <= 1 && (i[f++] = m), C >= 0 && C <= 1 && (i[f++] = C);
    }
  }
  return f;
}
function kw(t, e, r, n, a) {
  var i = 6 * r - 12 * e + 6 * t, o = 9 * e + 3 * n - 3 * t - 9 * r, s = 3 * e - 3 * t, l = 0;
  if (La(o)) {
    if (Pw(i)) {
      var u = -s / i;
      u >= 0 && u <= 1 && (a[l++] = u);
    }
  } else {
    var c = i * i - 4 * o * s;
    if (La(c))
      a[0] = -i / (2 * o);
    else if (c > 0) {
      var d = za(c), u = (-i + d) / (2 * o), p = (-i - d) / (2 * o);
      u >= 0 && u <= 1 && (a[l++] = u), p >= 0 && p <= 1 && (a[l++] = p);
    }
  }
  return l;
}
function Ka(t, e, r, n, a, i) {
  var o = (e - t) * a + t, s = (r - e) * a + e, l = (n - r) * a + r, u = (s - o) * a + o, c = (l - s) * a + s, d = (c - u) * a + u;
  i[0] = t, i[1] = o, i[2] = u, i[3] = d, i[4] = d, i[5] = c, i[6] = l, i[7] = n;
}
function Bw(t, e, r, n, a, i, o, s, l, u, c) {
  var d, p = 5e-3, f = 1 / 0, h, g, v, m;
  bn[0] = l, bn[1] = u;
  for (var _ = 0; _ < 1; _ += 0.05)
    Rr[0] = xt(t, r, a, o, _), Rr[1] = xt(e, n, i, s, _), v = Zi(bn, Rr), v < f && (d = _, f = v);
  f = 1 / 0;
  for (var y = 0; y < 32 && !(p < Lw); y++)
    h = d - p, g = d + p, Rr[0] = xt(t, r, a, o, h), Rr[1] = xt(e, n, i, s, h), v = Zi(Rr, bn), h >= 0 && v < f ? (d = h, f = v) : (os[0] = xt(t, r, a, o, g), os[1] = xt(e, n, i, s, g), m = Zi(os, bn), g <= 1 && m < f ? (d = g, f = m) : p *= 0.5);
  return c && (c[0] = xt(t, r, a, o, d), c[1] = xt(e, n, i, s, d)), za(f);
}
function tF(t, e, r, n, a, i, o, s, l) {
  for (var u = t, c = e, d = 0, p = 1 / l, f = 1; f <= l; f++) {
    var h = f * p, g = xt(t, r, a, o, h), v = xt(e, n, i, s, h), m = g - u, _ = v - c;
    d += Math.sqrt(m * m + _ * _), u = g, c = v;
  }
  return d;
}
function Ot(t, e, r, n) {
  var a = 1 - n;
  return a * (a * t + 2 * n * e) + n * n * r;
}
function Wv(t, e, r, n) {
  return 2 * ((1 - n) * (e - t) + n * (r - e));
}
function rF(t, e, r, n, a) {
  var i = t - 2 * e + r, o = 2 * (e - t), s = t - n, l = 0;
  if (La(i)) {
    if (Pw(o)) {
      var u = -s / o;
      u >= 0 && u <= 1 && (a[l++] = u);
    }
  } else {
    var c = o * o - 4 * i * s;
    if (La(c)) {
      var u = -o / (2 * i);
      u >= 0 && u <= 1 && (a[l++] = u);
    } else if (c > 0) {
      var d = za(c), u = (-o + d) / (2 * i), p = (-o - d) / (2 * i);
      u >= 0 && u <= 1 && (a[l++] = u), p >= 0 && p <= 1 && (a[l++] = p);
    }
  }
  return l;
}
function Fw(t, e, r) {
  var n = t + r - 2 * e;
  return n === 0 ? 0.5 : (t - e) / n;
}
function lu(t, e, r, n, a) {
  var i = (e - t) * n + t, o = (r - e) * n + e, s = (o - i) * n + i;
  a[0] = t, a[1] = i, a[2] = s, a[3] = s, a[4] = o, a[5] = r;
}
function Gw(t, e, r, n, a, i, o, s, l) {
  var u, c = 5e-3, d = 1 / 0;
  bn[0] = o, bn[1] = s;
  for (var p = 0; p < 1; p += 0.05) {
    Rr[0] = Ot(t, r, a, p), Rr[1] = Ot(e, n, i, p);
    var f = Zi(bn, Rr);
    f < d && (u = p, d = f);
  }
  d = 1 / 0;
  for (var h = 0; h < 32 && !(c < Lw); h++) {
    var g = u - c, v = u + c;
    Rr[0] = Ot(t, r, a, g), Rr[1] = Ot(e, n, i, g);
    var f = Zi(Rr, bn);
    if (g >= 0 && f < d)
      u = g, d = f;
    else {
      os[0] = Ot(t, r, a, v), os[1] = Ot(e, n, i, v);
      var m = Zi(os, bn);
      v <= 1 && m < d ? (u = v, d = m) : c *= 0.5;
    }
  }
  return l && (l[0] = Ot(t, r, a, u), l[1] = Ot(e, n, i, u)), za(d);
}
function nF(t, e, r, n, a, i, o) {
  for (var s = t, l = e, u = 0, c = 1 / o, d = 1; d <= o; d++) {
    var p = d * c, f = Ot(t, r, a, p), h = Ot(e, n, i, p), g = f - s, v = h - l;
    u += Math.sqrt(g * g + v * v), s = f, l = h;
  }
  return u;
}
var aF = /cubic-bezier\(([0-9,\.e ]+)\)/;
function Y_(t) {
  var e = t && aF.exec(t);
  if (e) {
    var r = e[1].split(","), n = +Xr(r[0]), a = +Xr(r[1]), i = +Xr(r[2]), o = +Xr(r[3]);
    if (isNaN(n + a + i + o))
      return;
    var s = [];
    return function(l) {
      return l <= 0 ? 0 : l >= 1 ? 1 : ep(0, n, i, 1, l, s) && xt(0, a, o, 1, s[0]);
    };
  }
}
var iF = function() {
  function t(e) {
    this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = e.life || 1e3, this._delay = e.delay || 0, this.loop = e.loop || !1, this.onframe = e.onframe || dt, this.ondestroy = e.ondestroy || dt, this.onrestart = e.onrestart || dt, e.easing && this.setEasing(e.easing);
  }
  return t.prototype.step = function(e, r) {
    if (this._inited || (this._startTime = e + this._delay, this._inited = !0), this._paused) {
      this._pausedTime += r;
      return;
    }
    var n = this._life, a = e - this._startTime - this._pausedTime, i = a / n;
    i < 0 && (i = 0), i = Math.min(i, 1);
    var o = this.easingFunc, s = o ? o(i) : i;
    if (this.onframe(s), i === 1)
      if (this.loop) {
        var l = a % n;
        this._startTime = e - l, this._pausedTime = 0, this.onrestart();
      } else
        return !0;
    return !1;
  }, t.prototype.pause = function() {
    this._paused = !0;
  }, t.prototype.resume = function() {
    this._paused = !1;
  }, t.prototype.setEasing = function(e) {
    this.easing = e, this.easingFunc = ae(e) ? e : Fl[e] || Y_(e);
  }, t;
}(), Uw = /* @__PURE__ */ function() {
  function t(e) {
    this.value = e;
  }
  return t;
}(), oF = function() {
  function t() {
    this._len = 0;
  }
  return t.prototype.insert = function(e) {
    var r = new Uw(e);
    return this.insertEntry(r), r;
  }, t.prototype.insertEntry = function(e) {
    this.head ? (this.tail.next = e, e.prev = this.tail, e.next = null, this.tail = e) : this.head = this.tail = e, this._len++;
  }, t.prototype.remove = function(e) {
    var r = e.prev, n = e.next;
    r ? r.next = n : this.head = n, n ? n.prev = r : this.tail = r, e.next = e.prev = null, this._len--;
  }, t.prototype.len = function() {
    return this._len;
  }, t.prototype.clear = function() {
    this.head = this.tail = null, this._len = 0;
  }, t;
}(), Gu = function() {
  function t(e) {
    this._list = new oF(), this._maxSize = 10, this._map = {}, this._maxSize = e;
  }
  return t.prototype.put = function(e, r) {
    var n = this._list, a = this._map, i = null;
    if (a[e] == null) {
      var o = n.len(), s = this._lastRemovedEntry;
      if (o >= this._maxSize && o > 0) {
        var l = n.head;
        n.remove(l), delete a[l.key], i = l.value, this._lastRemovedEntry = l;
      }
      s ? s.value = r : s = new Uw(r), s.key = e, n.insertEntry(s), a[e] = s;
    }
    return i;
  }, t.prototype.get = function(e) {
    var r = this._map[e], n = this._list;
    if (r != null)
      return r !== n.tail && (n.remove(r), n.insertEntry(r)), r.value;
  }, t.prototype.clear = function() {
    this._list.clear(), this._map = {};
  }, t.prototype.len = function() {
    return this._list.len();
  }, t;
}(), j0 = {
  transparent: [0, 0, 0, 0],
  aliceblue: [240, 248, 255, 1],
  antiquewhite: [250, 235, 215, 1],
  aqua: [0, 255, 255, 1],
  aquamarine: [127, 255, 212, 1],
  azure: [240, 255, 255, 1],
  beige: [245, 245, 220, 1],
  bisque: [255, 228, 196, 1],
  black: [0, 0, 0, 1],
  blanchedalmond: [255, 235, 205, 1],
  blue: [0, 0, 255, 1],
  blueviolet: [138, 43, 226, 1],
  brown: [165, 42, 42, 1],
  burlywood: [222, 184, 135, 1],
  cadetblue: [95, 158, 160, 1],
  chartreuse: [127, 255, 0, 1],
  chocolate: [210, 105, 30, 1],
  coral: [255, 127, 80, 1],
  cornflowerblue: [100, 149, 237, 1],
  cornsilk: [255, 248, 220, 1],
  crimson: [220, 20, 60, 1],
  cyan: [0, 255, 255, 1],
  darkblue: [0, 0, 139, 1],
  darkcyan: [0, 139, 139, 1],
  darkgoldenrod: [184, 134, 11, 1],
  darkgray: [169, 169, 169, 1],
  darkgreen: [0, 100, 0, 1],
  darkgrey: [169, 169, 169, 1],
  darkkhaki: [189, 183, 107, 1],
  darkmagenta: [139, 0, 139, 1],
  darkolivegreen: [85, 107, 47, 1],
  darkorange: [255, 140, 0, 1],
  darkorchid: [153, 50, 204, 1],
  darkred: [139, 0, 0, 1],
  darksalmon: [233, 150, 122, 1],
  darkseagreen: [143, 188, 143, 1],
  darkslateblue: [72, 61, 139, 1],
  darkslategray: [47, 79, 79, 1],
  darkslategrey: [47, 79, 79, 1],
  darkturquoise: [0, 206, 209, 1],
  darkviolet: [148, 0, 211, 1],
  deeppink: [255, 20, 147, 1],
  deepskyblue: [0, 191, 255, 1],
  dimgray: [105, 105, 105, 1],
  dimgrey: [105, 105, 105, 1],
  dodgerblue: [30, 144, 255, 1],
  firebrick: [178, 34, 34, 1],
  floralwhite: [255, 250, 240, 1],
  forestgreen: [34, 139, 34, 1],
  fuchsia: [255, 0, 255, 1],
  gainsboro: [220, 220, 220, 1],
  ghostwhite: [248, 248, 255, 1],
  gold: [255, 215, 0, 1],
  goldenrod: [218, 165, 32, 1],
  gray: [128, 128, 128, 1],
  green: [0, 128, 0, 1],
  greenyellow: [173, 255, 47, 1],
  grey: [128, 128, 128, 1],
  honeydew: [240, 255, 240, 1],
  hotpink: [255, 105, 180, 1],
  indianred: [205, 92, 92, 1],
  indigo: [75, 0, 130, 1],
  ivory: [255, 255, 240, 1],
  khaki: [240, 230, 140, 1],
  lavender: [230, 230, 250, 1],
  lavenderblush: [255, 240, 245, 1],
  lawngreen: [124, 252, 0, 1],
  lemonchiffon: [255, 250, 205, 1],
  lightblue: [173, 216, 230, 1],
  lightcoral: [240, 128, 128, 1],
  lightcyan: [224, 255, 255, 1],
  lightgoldenrodyellow: [250, 250, 210, 1],
  lightgray: [211, 211, 211, 1],
  lightgreen: [144, 238, 144, 1],
  lightgrey: [211, 211, 211, 1],
  lightpink: [255, 182, 193, 1],
  lightsalmon: [255, 160, 122, 1],
  lightseagreen: [32, 178, 170, 1],
  lightskyblue: [135, 206, 250, 1],
  lightslategray: [119, 136, 153, 1],
  lightslategrey: [119, 136, 153, 1],
  lightsteelblue: [176, 196, 222, 1],
  lightyellow: [255, 255, 224, 1],
  lime: [0, 255, 0, 1],
  limegreen: [50, 205, 50, 1],
  linen: [250, 240, 230, 1],
  magenta: [255, 0, 255, 1],
  maroon: [128, 0, 0, 1],
  mediumaquamarine: [102, 205, 170, 1],
  mediumblue: [0, 0, 205, 1],
  mediumorchid: [186, 85, 211, 1],
  mediumpurple: [147, 112, 219, 1],
  mediumseagreen: [60, 179, 113, 1],
  mediumslateblue: [123, 104, 238, 1],
  mediumspringgreen: [0, 250, 154, 1],
  mediumturquoise: [72, 209, 204, 1],
  mediumvioletred: [199, 21, 133, 1],
  midnightblue: [25, 25, 112, 1],
  mintcream: [245, 255, 250, 1],
  mistyrose: [255, 228, 225, 1],
  moccasin: [255, 228, 181, 1],
  navajowhite: [255, 222, 173, 1],
  navy: [0, 0, 128, 1],
  oldlace: [253, 245, 230, 1],
  olive: [128, 128, 0, 1],
  olivedrab: [107, 142, 35, 1],
  orange: [255, 165, 0, 1],
  orangered: [255, 69, 0, 1],
  orchid: [218, 112, 214, 1],
  palegoldenrod: [238, 232, 170, 1],
  palegreen: [152, 251, 152, 1],
  paleturquoise: [175, 238, 238, 1],
  palevioletred: [219, 112, 147, 1],
  papayawhip: [255, 239, 213, 1],
  peachpuff: [255, 218, 185, 1],
  peru: [205, 133, 63, 1],
  pink: [255, 192, 203, 1],
  plum: [221, 160, 221, 1],
  powderblue: [176, 224, 230, 1],
  purple: [128, 0, 128, 1],
  red: [255, 0, 0, 1],
  rosybrown: [188, 143, 143, 1],
  royalblue: [65, 105, 225, 1],
  saddlebrown: [139, 69, 19, 1],
  salmon: [250, 128, 114, 1],
  sandybrown: [244, 164, 96, 1],
  seagreen: [46, 139, 87, 1],
  seashell: [255, 245, 238, 1],
  sienna: [160, 82, 45, 1],
  silver: [192, 192, 192, 1],
  skyblue: [135, 206, 235, 1],
  slateblue: [106, 90, 205, 1],
  slategray: [112, 128, 144, 1],
  slategrey: [112, 128, 144, 1],
  snow: [255, 250, 250, 1],
  springgreen: [0, 255, 127, 1],
  steelblue: [70, 130, 180, 1],
  tan: [210, 180, 140, 1],
  teal: [0, 128, 128, 1],
  thistle: [216, 191, 216, 1],
  tomato: [255, 99, 71, 1],
  turquoise: [64, 224, 208, 1],
  violet: [238, 130, 238, 1],
  wheat: [245, 222, 179, 1],
  white: [255, 255, 255, 1],
  whitesmoke: [245, 245, 245, 1],
  yellow: [255, 255, 0, 1],
  yellowgreen: [154, 205, 50, 1]
};
function jr(t) {
  return t = Math.round(t), t < 0 ? 0 : t > 255 ? 255 : t;
}
function sF(t) {
  return t = Math.round(t), t < 0 ? 0 : t > 360 ? 360 : t;
}
function uu(t) {
  return t < 0 ? 0 : t > 1 ? 1 : t;
}
function fh(t) {
  var e = t;
  return e.length && e.charAt(e.length - 1) === "%" ? jr(parseFloat(e) / 100 * 255) : jr(parseInt(e, 10));
}
function Xi(t) {
  var e = t;
  return e.length && e.charAt(e.length - 1) === "%" ? uu(parseFloat(e) / 100) : uu(parseFloat(e));
}
function hh(t, e, r) {
  return r < 0 ? r += 1 : r > 1 && (r -= 1), r * 6 < 1 ? t + (e - t) * r * 6 : r * 2 < 1 ? e : r * 3 < 2 ? t + (e - t) * (2 / 3 - r) * 6 : t;
}
function Pa(t, e, r) {
  return t + (e - t) * r;
}
function wr(t, e, r, n, a) {
  return t[0] = e, t[1] = r, t[2] = n, t[3] = a, t;
}
function qv(t, e) {
  return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t;
}
var zw = new Gu(20), bc = null;
function wo(t, e) {
  bc && qv(bc, e), bc = zw.put(t, bc || e.slice());
}
function br(t, e) {
  if (t) {
    e = e || [];
    var r = zw.get(t);
    if (r)
      return qv(e, r);
    t = t + "";
    var n = t.replace(/ /g, "").toLowerCase();
    if (n in j0)
      return qv(e, j0[n]), wo(t, e), e;
    var a = n.length;
    if (n.charAt(0) === "#") {
      if (a === 4 || a === 5) {
        var i = parseInt(n.slice(1, 4), 16);
        if (!(i >= 0 && i <= 4095)) {
          wr(e, 0, 0, 0, 1);
          return;
        }
        return wr(e, (i & 3840) >> 4 | (i & 3840) >> 8, i & 240 | (i & 240) >> 4, i & 15 | (i & 15) << 4, a === 5 ? parseInt(n.slice(4), 16) / 15 : 1), wo(t, e), e;
      } else if (a === 7 || a === 9) {
        var i = parseInt(n.slice(1, 7), 16);
        if (!(i >= 0 && i <= 16777215)) {
          wr(e, 0, 0, 0, 1);
          return;
        }
        return wr(e, (i & 16711680) >> 16, (i & 65280) >> 8, i & 255, a === 9 ? parseInt(n.slice(7), 16) / 255 : 1), wo(t, e), e;
      }
      return;
    }
    var o = n.indexOf("("), s = n.indexOf(")");
    if (o !== -1 && s + 1 === a) {
      var l = n.substr(0, o), u = n.substr(o + 1, s - (o + 1)).split(","), c = 1;
      switch (l) {
        case "rgba":
          if (u.length !== 4)
            return u.length === 3 ? wr(e, +u[0], +u[1], +u[2], 1) : wr(e, 0, 0, 0, 1);
          c = Xi(u.pop());
        case "rgb":
          if (u.length >= 3)
            return wr(e, fh(u[0]), fh(u[1]), fh(u[2]), u.length === 3 ? c : Xi(u[3])), wo(t, e), e;
          wr(e, 0, 0, 0, 1);
          return;
        case "hsla":
          if (u.length !== 4) {
            wr(e, 0, 0, 0, 1);
            return;
          }
          return u[3] = Xi(u[3]), Yv(u, e), wo(t, e), e;
        case "hsl":
          if (u.length !== 3) {
            wr(e, 0, 0, 0, 1);
            return;
          }
          return Yv(u, e), wo(t, e), e;
        default:
          return;
      }
    }
    wr(e, 0, 0, 0, 1);
  }
}
function Yv(t, e) {
  var r = (parseFloat(t[0]) % 360 + 360) % 360 / 360, n = Xi(t[1]), a = Xi(t[2]), i = a <= 0.5 ? a * (n + 1) : a + n - a * n, o = a * 2 - i;
  return e = e || [], wr(e, jr(hh(o, i, r + 1 / 3) * 255), jr(hh(o, i, r) * 255), jr(hh(o, i, r - 1 / 3) * 255), 1), t.length === 4 && (e[3] = t[3]), e;
}
function lF(t) {
  if (t) {
    var e = t[0] / 255, r = t[1] / 255, n = t[2] / 255, a = Math.min(e, r, n), i = Math.max(e, r, n), o = i - a, s = (i + a) / 2, l, u;
    if (o === 0)
      l = 0, u = 0;
    else {
      s < 0.5 ? u = o / (i + a) : u = o / (2 - i - a);
      var c = ((i - e) / 6 + o / 2) / o, d = ((i - r) / 6 + o / 2) / o, p = ((i - n) / 6 + o / 2) / o;
      e === i ? l = p - d : r === i ? l = 1 / 3 + c - p : n === i && (l = 2 / 3 + d - c), l < 0 && (l += 1), l > 1 && (l -= 1);
    }
    var f = [l * 360, u, s];
    return t[3] != null && f.push(t[3]), f;
  }
}
function Kv(t, e) {
  var r = br(t);
  if (r) {
    for (var n = 0; n < 3; n++)
      e < 0 ? r[n] = r[n] * (1 - e) | 0 : r[n] = (255 - r[n]) * e + r[n] | 0, r[n] > 255 ? r[n] = 255 : r[n] < 0 && (r[n] = 0);
    return Qn(r, r.length === 4 ? "rgba" : "rgb");
  }
}
function gh(t, e, r) {
  if (!(!(e && e.length) || !(t >= 0 && t <= 1))) {
    r = r || [];
    var n = t * (e.length - 1), a = Math.floor(n), i = Math.ceil(n), o = e[a], s = e[i], l = n - a;
    return r[0] = jr(Pa(o[0], s[0], l)), r[1] = jr(Pa(o[1], s[1], l)), r[2] = jr(Pa(o[2], s[2], l)), r[3] = uu(Pa(o[3], s[3], l)), r;
  }
}
function uF(t, e, r) {
  if (!(!(e && e.length) || !(t >= 0 && t <= 1))) {
    var n = t * (e.length - 1), a = Math.floor(n), i = Math.ceil(n), o = br(e[a]), s = br(e[i]), l = n - a, u = Qn([
      jr(Pa(o[0], s[0], l)),
      jr(Pa(o[1], s[1], l)),
      jr(Pa(o[2], s[2], l)),
      uu(Pa(o[3], s[3], l))
    ], "rgba");
    return r ? {
      color: u,
      leftIndex: a,
      rightIndex: i,
      value: n
    } : u;
  }
}
function Gl(t, e, r, n) {
  var a = br(t);
  if (t)
    return a = lF(a), e != null && (a[0] = sF(e)), r != null && (a[1] = Xi(r)), n != null && (a[2] = Xi(n)), Qn(Yv(a), "rgba");
}
function tp(t, e) {
  var r = br(t);
  if (r && e != null)
    return r[3] = uu(e), Qn(r, "rgba");
}
function Qn(t, e) {
  if (!(!t || !t.length)) {
    var r = t[0] + "," + t[1] + "," + t[2];
    return (e === "rgba" || e === "hsva" || e === "hsla") && (r += "," + t[3]), e + "(" + r + ")";
  }
}
function rp(t, e) {
  var r = br(t);
  return r ? (0.299 * r[0] + 0.587 * r[1] + 0.114 * r[2]) * r[3] / 255 + (1 - r[3]) * e : 0;
}
var J0 = new Gu(100);
function Zv(t) {
  if (Y(t)) {
    var e = J0.get(t);
    return e || (e = Kv(t, -0.1), J0.put(t, e)), e;
  } else if (Jp(t)) {
    var r = G({}, t);
    return r.colorStops = $(t.colorStops, function(n) {
      return {
        offset: n.offset,
        color: Kv(n.color, -0.1)
      };
    }), r;
  }
  return t;
}
var np = Math.round;
function cu(t) {
  var e;
  if (!t || t === "transparent")
    t = "none";
  else if (typeof t == "string" && t.indexOf("rgba") > -1) {
    var r = br(t);
    r && (t = "rgb(" + r[0] + "," + r[1] + "," + r[2] + ")", e = r[3]);
  }
  return {
    color: t,
    opacity: e ?? 1
  };
}
var cF = 1e-4;
function ka(t) {
  return t < cF && t > -1e-4;
}
function Sc(t) {
  return np(t * 1e3) / 1e3;
}
function Xv(t) {
  return np(t * 1e4) / 1e4;
}
function dF(t) {
  return "matrix(" + Sc(t[0]) + "," + Sc(t[1]) + "," + Sc(t[2]) + "," + Sc(t[3]) + "," + Xv(t[4]) + "," + Xv(t[5]) + ")";
}
var pF = {
  left: "start",
  right: "end",
  center: "middle",
  middle: "middle"
};
function fF(t, e, r) {
  return r === "top" ? t += e / 2 : r === "bottom" && (t -= e / 2), t;
}
function hF(t) {
  return t && (t.shadowBlur || t.shadowOffsetX || t.shadowOffsetY);
}
function gF(t) {
  var e = t.style, r = t.getGlobalScale();
  return [
    e.shadowColor,
    (e.shadowBlur || 0).toFixed(2),
    (e.shadowOffsetX || 0).toFixed(2),
    (e.shadowOffsetY || 0).toFixed(2),
    r[0],
    r[1]
  ].join(",");
}
function Vw(t) {
  return t && !!t.image;
}
function vF(t) {
  return t && !!t.svgElement;
}
function K_(t) {
  return Vw(t) || vF(t);
}
function $w(t) {
  return t.type === "linear";
}
function Hw(t) {
  return t.type === "radial";
}
function Ww(t) {
  return t && (t.type === "linear" || t.type === "radial");
}
function rf(t) {
  return "url(#" + t + ")";
}
function qw(t) {
  var e = t.getGlobalScale(), r = Math.max(e[0], e[1]);
  return Math.max(Math.ceil(Math.log(r) / Math.log(10)), 1);
}
function Yw(t) {
  var e = t.x || 0, r = t.y || 0, n = (t.rotation || 0) * xd, a = ge(t.scaleX, 1), i = ge(t.scaleY, 1), o = t.skewX || 0, s = t.skewY || 0, l = [];
  return (e || r) && l.push("translate(" + e + "px," + r + "px)"), n && l.push("rotate(" + n + ")"), (a !== 1 || i !== 1) && l.push("scale(" + a + "," + i + ")"), (o || s) && l.push("skew(" + np(o * xd) + "deg, " + np(s * xd) + "deg)"), l.join(" ");
}
var mF = function() {
  return Ae.hasGlobalWindow && ae(window.btoa) ? function(t) {
    return window.btoa(unescape(encodeURIComponent(t)));
  } : typeof Buffer < "u" ? function(t) {
    return Buffer.from(t).toString("base64");
  } : function(t) {
    return null;
  };
}(), Qv = Array.prototype.slice;
function Wn(t, e, r) {
  return (e - t) * r + t;
}
function vh(t, e, r, n) {
  for (var a = e.length, i = 0; i < a; i++)
    t[i] = Wn(e[i], r[i], n);
  return t;
}
function _F(t, e, r, n) {
  for (var a = e.length, i = a && e[0].length, o = 0; o < a; o++) {
    t[o] || (t[o] = []);
    for (var s = 0; s < i; s++)
      t[o][s] = Wn(e[o][s], r[o][s], n);
  }
  return t;
}
function Ec(t, e, r, n) {
  for (var a = e.length, i = 0; i < a; i++)
    t[i] = e[i] + r[i] * n;
  return t;
}
function eS(t, e, r, n) {
  for (var a = e.length, i = a && e[0].length, o = 0; o < a; o++) {
    t[o] || (t[o] = []);
    for (var s = 0; s < i; s++)
      t[o][s] = e[o][s] + r[o][s] * n;
  }
  return t;
}
function yF(t, e) {
  for (var r = t.length, n = e.length, a = r > n ? e : t, i = Math.min(r, n), o = a[i - 1] || { color: [0, 0, 0, 0], offset: 0 }, s = i; s < Math.max(r, n); s++)
    a.push({
      offset: o.offset,
      color: o.color.slice()
    });
}
function bF(t, e, r) {
  var n = t, a = e;
  if (!(!n.push || !a.push)) {
    var i = n.length, o = a.length;
    if (i !== o) {
      var s = i > o;
      if (s)
        n.length = o;
      else
        for (var l = i; l < o; l++)
          n.push(r === 1 ? a[l] : Qv.call(a[l]));
    }
    for (var u = n[0] && n[0].length, l = 0; l < n.length; l++)
      if (r === 1)
        isNaN(n[l]) && (n[l] = a[l]);
      else
        for (var c = 0; c < u; c++)
          isNaN(n[l][c]) && (n[l][c] = a[l][c]);
  }
}
function Ul(t) {
  if (Kt(t)) {
    var e = t.length;
    if (Kt(t[0])) {
      for (var r = [], n = 0; n < e; n++)
        r.push(Qv.call(t[n]));
      return r;
    }
    return Qv.call(t);
  }
  return t;
}
function Md(t) {
  return t[0] = Math.floor(t[0]) || 0, t[1] = Math.floor(t[1]) || 0, t[2] = Math.floor(t[2]) || 0, t[3] = t[3] == null ? 1 : t[3], "rgba(" + t.join(",") + ")";
}
function SF(t) {
  return Kt(t && t[0]) ? 2 : 1;
}
var Tc = 0, Id = 1, Kw = 2, Tl = 3, jv = 4, Jv = 5, tS = 6;
function rS(t) {
  return t === jv || t === Jv;
}
function xc(t) {
  return t === Id || t === Kw;
}
var Zs = [0, 0, 0, 0], EF = function() {
  function t(e) {
    this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = e;
  }
  return t.prototype.isFinished = function() {
    return this._finished;
  }, t.prototype.setFinished = function() {
    this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished();
  }, t.prototype.needsAnimate = function() {
    return this.keyframes.length >= 1;
  }, t.prototype.getAdditiveTrack = function() {
    return this._additiveTrack;
  }, t.prototype.addKeyframe = function(e, r, n) {
    this._needsSort = !0;
    var a = this.keyframes, i = a.length, o = !1, s = tS, l = r;
    if (Kt(r)) {
      var u = SF(r);
      s = u, (u === 1 && !ke(r[0]) || u === 2 && !ke(r[0][0])) && (o = !0);
    } else if (ke(r) && !ou(r))
      s = Tc;
    else if (Y(r))
      if (!isNaN(+r))
        s = Tc;
      else {
        var c = br(r);
        c && (l = c, s = Tl);
      }
    else if (Jp(r)) {
      var d = G({}, l);
      d.colorStops = $(r.colorStops, function(f) {
        return {
          offset: f.offset,
          color: br(f.color)
        };
      }), $w(r) ? s = jv : Hw(r) && (s = Jv), l = d;
    }
    i === 0 ? this.valType = s : (s !== this.valType || s === tS) && (o = !0), this.discrete = this.discrete || o;
    var p = {
      time: e,
      value: l,
      rawValue: r,
      percent: 0
    };
    return n && (p.easing = n, p.easingFunc = ae(n) ? n : Fl[n] || Y_(n)), a.push(p), p;
  }, t.prototype.prepare = function(e, r) {
    var n = this.keyframes;
    this._needsSort && n.sort(function(g, v) {
      return g.time - v.time;
    });
    for (var a = this.valType, i = n.length, o = n[i - 1], s = this.discrete, l = xc(a), u = rS(a), c = 0; c < i; c++) {
      var d = n[c], p = d.value, f = o.value;
      d.percent = d.time / e, s || (l && c !== i - 1 ? bF(p, f, a) : u && yF(p.colorStops, f.colorStops));
    }
    if (!s && a !== Jv && r && this.needsAnimate() && r.needsAnimate() && a === r.valType && !r._finished) {
      this._additiveTrack = r;
      for (var h = n[0].value, c = 0; c < i; c++)
        a === Tc ? n[c].additiveValue = n[c].value - h : a === Tl ? n[c].additiveValue = Ec([], n[c].value, h, -1) : xc(a) && (n[c].additiveValue = a === Id ? Ec([], n[c].value, h, -1) : eS([], n[c].value, h, -1));
    }
  }, t.prototype.step = function(e, r) {
    if (!this._finished) {
      this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
      var n = this._additiveTrack != null, a = n ? "additiveValue" : "value", i = this.valType, o = this.keyframes, s = o.length, l = this.propName, u = i === Tl, c, d = this._lastFr, p = Math.min, f, h;
      if (s === 1)
        f = h = o[0];
      else {
        if (r < 0)
          c = 0;
        else if (r < this._lastFrP) {
          var g = p(d + 1, s - 1);
          for (c = g; c >= 0 && !(o[c].percent <= r); c--)
            ;
          c = p(c, s - 2);
        } else {
          for (c = d; c < s && !(o[c].percent > r); c++)
            ;
          c = p(c - 1, s - 2);
        }
        h = o[c + 1], f = o[c];
      }
      if (f && h) {
        this._lastFr = c, this._lastFrP = r;
        var v = h.percent - f.percent, m = v === 0 ? 1 : p((r - f.percent) / v, 1);
        h.easingFunc && (m = h.easingFunc(m));
        var _ = n ? this._additiveValue : u ? Zs : e[l];
        if ((xc(i) || u) && !_ && (_ = this._additiveValue = []), this.discrete)
          e[l] = m < 1 ? f.rawValue : h.rawValue;
        else if (xc(i))
          i === Id ? vh(_, f[a], h[a], m) : _F(_, f[a], h[a], m);
        else if (rS(i)) {
          var y = f[a], b = h[a], S = i === jv;
          e[l] = {
            type: S ? "linear" : "radial",
            x: Wn(y.x, b.x, m),
            y: Wn(y.y, b.y, m),
            colorStops: $(y.colorStops, function(T, x) {
              var C = b.colorStops[x];
              return {
                offset: Wn(T.offset, C.offset, m),
                color: Md(vh([], T.color, C.color, m))
              };
            }),
            global: b.global
          }, S ? (e[l].x2 = Wn(y.x2, b.x2, m), e[l].y2 = Wn(y.y2, b.y2, m)) : e[l].r = Wn(y.r, b.r, m);
        } else if (u)
          vh(_, f[a], h[a], m), n || (e[l] = Md(_));
        else {
          var E = Wn(f[a], h[a], m);
          n ? this._additiveValue = E : e[l] = E;
        }
        n && this._addToTarget(e);
      }
    }
  }, t.prototype._addToTarget = function(e) {
    var r = this.valType, n = this.propName, a = this._additiveValue;
    r === Tc ? e[n] = e[n] + a : r === Tl ? (br(e[n], Zs), Ec(Zs, Zs, a, 1), e[n] = Md(Zs)) : r === Id ? Ec(e[n], e[n], a, 1) : r === Kw && eS(e[n], e[n], a, 1);
  }, t;
}(), Z_ = function() {
  function t(e, r, n, a) {
    if (this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = e, this._loop = r, r && a) {
      U_("Can' use additive animation on looped animation.");
      return;
    }
    this._additiveAnimators = a, this._allowDiscrete = n;
  }
  return t.prototype.getMaxTime = function() {
    return this._maxTime;
  }, t.prototype.getDelay = function() {
    return this._delay;
  }, t.prototype.getLoop = function() {
    return this._loop;
  }, t.prototype.getTarget = function() {
    return this._target;
  }, t.prototype.changeTarget = function(e) {
    this._target = e;
  }, t.prototype.when = function(e, r, n) {
    return this.whenWithKeys(e, r, Me(r), n);
  }, t.prototype.whenWithKeys = function(e, r, n, a) {
    for (var i = this._tracks, o = 0; o < n.length; o++) {
      var s = n[o], l = i[s];
      if (!l) {
        l = i[s] = new EF(s);
        var u = void 0, c = this._getAdditiveTrack(s);
        if (c) {
          var d = c.keyframes, p = d[d.length - 1];
          u = p && p.value, c.valType === Tl && u && (u = Md(u));
        } else
          u = this._target[s];
        if (u == null)
          continue;
        e > 0 && l.addKeyframe(0, Ul(u), a), this._trackKeys.push(s);
      }
      l.addKeyframe(e, Ul(r[s]), a);
    }
    return this._maxTime = Math.max(this._maxTime, e), this;
  }, t.prototype.pause = function() {
    this._clip.pause(), this._paused = !0;
  }, t.prototype.resume = function() {
    this._clip.resume(), this._paused = !1;
  }, t.prototype.isPaused = function() {
    return !!this._paused;
  }, t.prototype.duration = function(e) {
    return this._maxTime = e, this._force = !0, this;
  }, t.prototype._doneCallback = function() {
    this._setTracksFinished(), this._clip = null;
    var e = this._doneCbs;
    if (e)
      for (var r = e.length, n = 0; n < r; n++)
        e[n].call(this);
  }, t.prototype._abortedCallback = function() {
    this._setTracksFinished();
    var e = this.animation, r = this._abortedCbs;
    if (e && e.removeClip(this._clip), this._clip = null, r)
      for (var n = 0; n < r.length; n++)
        r[n].call(this);
  }, t.prototype._setTracksFinished = function() {
    for (var e = this._tracks, r = this._trackKeys, n = 0; n < r.length; n++)
      e[r[n]].setFinished();
  }, t.prototype._getAdditiveTrack = function(e) {
    var r, n = this._additiveAnimators;
    if (n)
      for (var a = 0; a < n.length; a++) {
        var i = n[a].getTrack(e);
        i && (r = i);
      }
    return r;
  }, t.prototype.start = function(e) {
    if (!(this._started > 0)) {
      this._started = 1;
      for (var r = this, n = [], a = this._maxTime || 0, i = 0; i < this._trackKeys.length; i++) {
        var o = this._trackKeys[i], s = this._tracks[o], l = this._getAdditiveTrack(o), u = s.keyframes, c = u.length;
        if (s.prepare(a, l), s.needsAnimate())
          if (!this._allowDiscrete && s.discrete) {
            var d = u[c - 1];
            d && (r._target[s.propName] = d.rawValue), s.setFinished();
          } else
            n.push(s);
      }
      if (n.length || this._force) {
        var p = new iF({
          life: a,
          loop: this._loop,
          delay: this._delay || 0,
          onframe: function(f) {
            r._started = 2;
            var h = r._additiveAnimators;
            if (h) {
              for (var g = !1, v = 0; v < h.length; v++)
                if (h[v]._clip) {
                  g = !0;
                  break;
                }
              g || (r._additiveAnimators = null);
            }
            for (var v = 0; v < n.length; v++)
              n[v].step(r._target, f);
            var m = r._onframeCbs;
            if (m)
              for (var v = 0; v < m.length; v++)
                m[v](r._target, f);
          },
          ondestroy: function() {
            r._doneCallback();
          }
        });
        this._clip = p, this.animation && this.animation.addClip(p), e && p.setEasing(e);
      } else
        this._doneCallback();
      return this;
    }
  }, t.prototype.stop = function(e) {
    if (this._clip) {
      var r = this._clip;
      e && r.onframe(1), this._abortedCallback();
    }
  }, t.prototype.delay = function(e) {
    return this._delay = e, this;
  }, t.prototype.during = function(e) {
    return e && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(e)), this;
  }, t.prototype.done = function(e) {
    return e && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(e)), this;
  }, t.prototype.aborted = function(e) {
    return e && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(e)), this;
  }, t.prototype.getClip = function() {
    return this._clip;
  }, t.prototype.getTrack = function(e) {
    return this._tracks[e];
  }, t.prototype.getTracks = function() {
    var e = this;
    return $(this._trackKeys, function(r) {
      return e._tracks[r];
    });
  }, t.prototype.stopTracks = function(e, r) {
    if (!e.length || !this._clip)
      return !0;
    for (var n = this._tracks, a = this._trackKeys, i = 0; i < e.length; i++) {
      var o = n[e[i]];
      o && !o.isFinished() && (r ? o.step(this._target, 1) : this._started === 1 && o.step(this._target, 0), o.setFinished());
    }
    for (var s = !0, i = 0; i < a.length; i++)
      if (!n[a[i]].isFinished()) {
        s = !1;
        break;
      }
    return s && this._abortedCallback(), s;
  }, t.prototype.saveTo = function(e, r, n) {
    if (e) {
      r = r || this._trackKeys;
      for (var a = 0; a < r.length; a++) {
        var i = r[a], o = this._tracks[i];
        if (!(!o || o.isFinished())) {
          var s = o.keyframes, l = s[n ? 0 : s.length - 1];
          l && (e[i] = Ul(l.rawValue));
        }
      }
    }
  }, t.prototype.__changeFinalValue = function(e, r) {
    r = r || Me(e);
    for (var n = 0; n < r.length; n++) {
      var a = r[n], i = this._tracks[a];
      if (i) {
        var o = i.keyframes;
        if (o.length > 1) {
          var s = o.pop();
          i.addKeyframe(s.time, e[a]), i.prepare(this._maxTime, i.getAdditiveTrack());
        }
      }
    }
  }, t;
}();
function ts() {
  return (/* @__PURE__ */ new Date()).getTime();
}
var TF = function(t) {
  k(e, t);
  function e(r) {
    var n = t.call(this) || this;
    return n._running = !1, n._time = 0, n._pausedTime = 0, n._pauseStart = 0, n._paused = !1, r = r || {}, n.stage = r.stage || {}, n;
  }
  return e.prototype.addClip = function(r) {
    r.animation && this.removeClip(r), this._head ? (this._tail.next = r, r.prev = this._tail, r.next = null, this._tail = r) : this._head = this._tail = r, r.animation = this;
  }, e.prototype.addAnimator = function(r) {
    r.animation = this;
    var n = r.getClip();
    n && this.addClip(n);
  }, e.prototype.removeClip = function(r) {
    if (r.animation) {
      var n = r.prev, a = r.next;
      n ? n.next = a : this._head = a, a ? a.prev = n : this._tail = n, r.next = r.prev = r.animation = null;
    }
  }, e.prototype.removeAnimator = function(r) {
    var n = r.getClip();
    n && this.removeClip(n), r.animation = null;
  }, e.prototype.update = function(r) {
    for (var n = ts() - this._pausedTime, a = n - this._time, i = this._head; i; ) {
      var o = i.next, s = i.step(n, a);
      s && (i.ondestroy(), this.removeClip(i)), i = o;
    }
    this._time = n, r || (this.trigger("frame", a), this.stage.update && this.stage.update());
  }, e.prototype._startLoop = function() {
    var r = this;
    this._running = !0;
    function n() {
      r._running && (Jd(n), !r._paused && r.update());
    }
    Jd(n);
  }, e.prototype.start = function() {
    this._running || (this._time = ts(), this._pausedTime = 0, this._startLoop());
  }, e.prototype.stop = function() {
    this._running = !1;
  }, e.prototype.pause = function() {
    this._paused || (this._pauseStart = ts(), this._paused = !0);
  }, e.prototype.resume = function() {
    this._paused && (this._pausedTime += ts() - this._pauseStart, this._paused = !1);
  }, e.prototype.clear = function() {
    for (var r = this._head; r; ) {
      var n = r.next;
      r.prev = r.next = r.animation = null, r = n;
    }
    this._head = this._tail = null;
  }, e.prototype.isFinished = function() {
    return this._head == null;
  }, e.prototype.animate = function(r, n) {
    n = n || {}, this.start();
    var a = new Z_(r, n.loop);
    return this.addAnimator(a), a;
  }, e;
}(Gr), xF = 300, mh = Ae.domSupported, _h = function() {
  var t = [
    "click",
    "dblclick",
    "mousewheel",
    "wheel",
    "mouseout",
    "mouseup",
    "mousedown",
    "mousemove",
    "contextmenu"
  ], e = [
    "touchstart",
    "touchend",
    "touchmove"
  ], r = {
    pointerdown: 1,
    pointerup: 1,
    pointermove: 1,
    pointerout: 1
  }, n = $(t, function(a) {
    var i = a.replace("mouse", "pointer");
    return r.hasOwnProperty(i) ? i : a;
  });
  return {
    mouse: t,
    touch: e,
    pointer: n
  };
}(), nS = {
  mouse: ["mousemove", "mouseup"],
  pointer: ["pointermove", "pointerup"]
}, aS = !1;
function em(t) {
  var e = t.pointerType;
  return e === "pen" || e === "touch";
}
function CF(t) {
  t.touching = !0, t.touchTimer != null && (clearTimeout(t.touchTimer), t.touchTimer = null), t.touchTimer = setTimeout(function() {
    t.touching = !1, t.touchTimer = null;
  }, 700);
}
function yh(t) {
  t && (t.zrByTouch = !0);
}
function AF(t, e) {
  return Dr(t.dom, new wF(t, e), !0);
}
function Zw(t, e) {
  for (var r = e, n = !1; r && r.nodeType !== 9 && !(n = r.domBelongToZr || r !== e && r === t.painterRoot); )
    r = r.parentNode;
  return n;
}
var wF = /* @__PURE__ */ function() {
  function t(e, r) {
    this.stopPropagation = dt, this.stopImmediatePropagation = dt, this.preventDefault = dt, this.type = r.type, this.target = this.currentTarget = e.dom, this.pointerType = r.pointerType, this.clientX = r.clientX, this.clientY = r.clientY;
  }
  return t;
}(), Yr = {
  mousedown: function(t) {
    t = Dr(this.dom, t), this.__mayPointerCapture = [t.zrX, t.zrY], this.trigger("mousedown", t);
  },
  mousemove: function(t) {
    t = Dr(this.dom, t);
    var e = this.__mayPointerCapture;
    e && (t.zrX !== e[0] || t.zrY !== e[1]) && this.__togglePointerCapture(!0), this.trigger("mousemove", t);
  },
  mouseup: function(t) {
    t = Dr(this.dom, t), this.__togglePointerCapture(!1), this.trigger("mouseup", t);
  },
  mouseout: function(t) {
    t = Dr(this.dom, t);
    var e = t.toElement || t.relatedTarget;
    Zw(this, e) || (this.__pointerCapturing && (t.zrEventControl = "no_globalout"), this.trigger("mouseout", t));
  },
  wheel: function(t) {
    aS = !0, t = Dr(this.dom, t), this.trigger("mousewheel", t);
  },
  mousewheel: function(t) {
    aS || (t = Dr(this.dom, t), this.trigger("mousewheel", t));
  },
  touchstart: function(t) {
    t = Dr(this.dom, t), yh(t), this.__lastTouchMoment = /* @__PURE__ */ new Date(), this.handler.processGesture(t, "start"), Yr.mousemove.call(this, t), Yr.mousedown.call(this, t);
  },
  touchmove: function(t) {
    t = Dr(this.dom, t), yh(t), this.handler.processGesture(t, "change"), Yr.mousemove.call(this, t);
  },
  touchend: function(t) {
    t = Dr(this.dom, t), yh(t), this.handler.processGesture(t, "end"), Yr.mouseup.call(this, t), +/* @__PURE__ */ new Date() - +this.__lastTouchMoment < xF && Yr.click.call(this, t);
  },
  pointerdown: function(t) {
    Yr.mousedown.call(this, t);
  },
  pointermove: function(t) {
    em(t) || Yr.mousemove.call(this, t);
  },
  pointerup: function(t) {
    Yr.mouseup.call(this, t);
  },
  pointerout: function(t) {
    em(t) || Yr.mouseout.call(this, t);
  }
};
w(["click", "dblclick", "contextmenu"], function(t) {
  Yr[t] = function(e) {
    e = Dr(this.dom, e), this.trigger(t, e);
  };
});
var tm = {
  pointermove: function(t) {
    em(t) || tm.mousemove.call(this, t);
  },
  pointerup: function(t) {
    tm.mouseup.call(this, t);
  },
  mousemove: function(t) {
    this.trigger("mousemove", t);
  },
  mouseup: function(t) {
    var e = this.__pointerCapturing;
    this.__togglePointerCapture(!1), this.trigger("mouseup", t), e && (t.zrEventControl = "only_globalout", this.trigger("mouseout", t));
  }
};
function DF(t, e) {
  var r = e.domHandlers;
  Ae.pointerEventsSupported ? w(_h.pointer, function(n) {
    Nd(e, n, function(a) {
      r[n].call(t, a);
    });
  }) : (Ae.touchEventsSupported && w(_h.touch, function(n) {
    Nd(e, n, function(a) {
      r[n].call(t, a), CF(e);
    });
  }), w(_h.mouse, function(n) {
    Nd(e, n, function(a) {
      a = H_(a), e.touching || r[n].call(t, a);
    });
  }));
}
function MF(t, e) {
  Ae.pointerEventsSupported ? w(nS.pointer, r) : Ae.touchEventsSupported || w(nS.mouse, r);
  function r(n) {
    function a(i) {
      i = H_(i), Zw(t, i.target) || (i = AF(t, i), e.domHandlers[n].call(t, i));
    }
    Nd(e, n, a, { capture: !0 });
  }
}
function Nd(t, e, r, n) {
  t.mounted[e] = r, t.listenerOpts[e] = n, Hv(t.domTarget, e, r, n);
}
function bh(t) {
  var e = t.mounted;
  for (var r in e)
    e.hasOwnProperty(r) && VB(t.domTarget, r, e[r], t.listenerOpts[r]);
  t.mounted = {};
}
var iS = /* @__PURE__ */ function() {
  function t(e, r) {
    this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = e, this.domHandlers = r;
  }
  return t;
}(), IF = function(t) {
  k(e, t);
  function e(r, n) {
    var a = t.call(this) || this;
    return a.__pointerCapturing = !1, a.dom = r, a.painterRoot = n, a._localHandlerScope = new iS(r, Yr), mh && (a._globalHandlerScope = new iS(document, tm)), DF(a, a._localHandlerScope), a;
  }
  return e.prototype.dispose = function() {
    bh(this._localHandlerScope), mh && bh(this._globalHandlerScope);
  }, e.prototype.setCursor = function(r) {
    this.dom.style && (this.dom.style.cursor = r || "default");
  }, e.prototype.__togglePointerCapture = function(r) {
    if (this.__mayPointerCapture = null, mh && +this.__pointerCapturing ^ +r) {
      this.__pointerCapturing = r;
      var n = this._globalHandlerScope;
      r ? MF(this, n) : bh(n);
    }
  }, e;
}(Gr), Xw = 1;
Ae.hasGlobalWindow && (Xw = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
var ap = Xw, rm = 0.4, nm = "#333", am = "#ccc", NF = "#eee", oS = tf, RF = 5e-5;
function ui(t) {
  return t > RF || t < -5e-5;
}
var ci = [], Do = [], Sh = yr(), Eh = Math.abs, Yn = function() {
  function t() {
  }
  return t.prototype.getLocalTransform = function(e) {
    return t.getLocalTransform(this, e);
  }, t.prototype.setPosition = function(e) {
    this.x = e[0], this.y = e[1];
  }, t.prototype.setScale = function(e) {
    this.scaleX = e[0], this.scaleY = e[1];
  }, t.prototype.setSkew = function(e) {
    this.skewX = e[0], this.skewY = e[1];
  }, t.prototype.setOrigin = function(e) {
    this.originX = e[0], this.originY = e[1];
  }, t.prototype.needLocalTransform = function() {
    return ui(this.rotation) || ui(this.x) || ui(this.y) || ui(this.scaleX - 1) || ui(this.scaleY - 1) || ui(this.skewX) || ui(this.skewY);
  }, t.prototype.updateTransform = function() {
    var e = this.parent && this.parent.transform, r = this.needLocalTransform(), n = this.transform;
    if (!(r || e)) {
      n && (oS(n), this.invTransform = null);
      return;
    }
    n = n || yr(), r ? this.getLocalTransform(n) : oS(n), e && (r ? Xn(n, e, n) : W_(n, e)), this.transform = n, this._resolveGlobalScaleRatio(n);
  }, t.prototype._resolveGlobalScaleRatio = function(e) {
    var r = this.globalScaleRatio;
    if (r != null && r !== 1) {
      this.getGlobalScale(ci);
      var n = ci[0] < 0 ? -1 : 1, a = ci[1] < 0 ? -1 : 1, i = ((ci[0] - n) * r + n) / ci[0] || 0, o = ((ci[1] - a) * r + a) / ci[1] || 0;
      e[0] *= i, e[1] *= i, e[2] *= o, e[3] *= o;
    }
    this.invTransform = this.invTransform || yr(), Ms(this.invTransform, e);
  }, t.prototype.getComputedTransform = function() {
    for (var e = this, r = []; e; )
      r.push(e), e = e.parent;
    for (; e = r.pop(); )
      e.updateTransform();
    return this.transform;
  }, t.prototype.setLocalTransform = function(e) {
    if (e) {
      var r = e[0] * e[0] + e[1] * e[1], n = e[2] * e[2] + e[3] * e[3], a = Math.atan2(e[1], e[0]), i = Math.PI / 2 + a - Math.atan2(e[3], e[2]);
      n = Math.sqrt(n) * Math.cos(i), r = Math.sqrt(r), this.skewX = i, this.skewY = 0, this.rotation = -a, this.x = +e[4], this.y = +e[5], this.scaleX = r, this.scaleY = n, this.originX = 0, this.originY = 0;
    }
  }, t.prototype.decomposeTransform = function() {
    if (this.transform) {
      var e = this.parent, r = this.transform;
      e && e.transform && (e.invTransform = e.invTransform || yr(), Xn(Do, e.invTransform, r), r = Do);
      var n = this.originX, a = this.originY;
      (n || a) && (Sh[4] = n, Sh[5] = a, Xn(Do, r, Sh), Do[4] -= n, Do[5] -= a, r = Do), this.setLocalTransform(r);
    }
  }, t.prototype.getGlobalScale = function(e) {
    var r = this.transform;
    return e = e || [], r ? (e[0] = Math.sqrt(r[0] * r[0] + r[1] * r[1]), e[1] = Math.sqrt(r[2] * r[2] + r[3] * r[3]), r[0] < 0 && (e[0] = -e[0]), r[3] < 0 && (e[1] = -e[1]), e) : (e[0] = 1, e[1] = 1, e);
  }, t.prototype.transformCoordToLocal = function(e, r) {
    var n = [e, r], a = this.invTransform;
    return a && Ut(n, n, a), n;
  }, t.prototype.transformCoordToGlobal = function(e, r) {
    var n = [e, r], a = this.transform;
    return a && Ut(n, n, a), n;
  }, t.prototype.getLineScale = function() {
    var e = this.transform;
    return e && Eh(e[0] - 1) > 1e-10 && Eh(e[3] - 1) > 1e-10 ? Math.sqrt(Eh(e[0] * e[3] - e[2] * e[1])) : 1;
  }, t.prototype.copyTransform = function(e) {
    Qw(this, e);
  }, t.getLocalTransform = function(e, r) {
    r = r || [];
    var n = e.originX || 0, a = e.originY || 0, i = e.scaleX, o = e.scaleY, s = e.anchorX, l = e.anchorY, u = e.rotation || 0, c = e.x, d = e.y, p = e.skewX ? Math.tan(e.skewX) : 0, f = e.skewY ? Math.tan(-e.skewY) : 0;
    if (n || a || s || l) {
      var h = n + s, g = a + l;
      r[4] = -h * i - p * g * o, r[5] = -g * o - f * h * i;
    } else
      r[4] = r[5] = 0;
    return r[0] = i, r[3] = o, r[1] = f * i, r[2] = p * o, u && ho(r, r, u), r[4] += n + c, r[5] += a + d, r;
  }, t.initDefaultProps = function() {
    var e = t.prototype;
    e.scaleX = e.scaleY = e.globalScaleRatio = 1, e.x = e.y = e.originX = e.originY = e.skewX = e.skewY = e.rotation = e.anchorX = e.anchorY = 0;
  }(), t;
}(), On = [
  "x",
  "y",
  "originX",
  "originY",
  "anchorX",
  "anchorY",
  "rotation",
  "scaleX",
  "scaleY",
  "skewX",
  "skewY"
];
function Qw(t, e) {
  for (var r = 0; r < On.length; r++) {
    var n = On[r];
    t[n] = e[n];
  }
}
var sS = {};
function Sr(t, e) {
  e = e || qa;
  var r = sS[e];
  r || (r = sS[e] = new Gu(500));
  var n = r.get(t);
  return n == null && (n = Ya.measureText(t, e).width, r.put(t, n)), n;
}
function lS(t, e, r, n) {
  var a = Sr(t, e), i = nf(e), o = xl(0, a, r), s = Zo(0, i, n), l = new Te(o, s, a, i);
  return l;
}
function Uu(t, e, r, n) {
  var a = ((t || "") + "").split(`
`), i = a.length;
  if (i === 1)
    return lS(a[0], e, r, n);
  for (var o = new Te(0, 0, 0, 0), s = 0; s < a.length; s++) {
    var l = lS(a[s], e, r, n);
    s === 0 ? o.copy(l) : o.union(l);
  }
  return o;
}
function xl(t, e, r) {
  return r === "right" ? t -= e : r === "center" && (t -= e / 2), t;
}
function Zo(t, e, r) {
  return r === "middle" ? t -= e / 2 : r === "bottom" && (t -= e), t;
}
function nf(t) {
  return Sr("国", t);
}
function tn(t, e) {
  return typeof t == "string" ? t.lastIndexOf("%") >= 0 ? parseFloat(t) / 100 * e : parseFloat(t) : t;
}
function ip(t, e, r) {
  var n = e.position || "inside", a = e.distance != null ? e.distance : 5, i = r.height, o = r.width, s = i / 2, l = r.x, u = r.y, c = "left", d = "top";
  if (n instanceof Array)
    l += tn(n[0], r.width), u += tn(n[1], r.height), c = null, d = null;
  else
    switch (n) {
      case "left":
        l -= a, u += s, c = "right", d = "middle";
        break;
      case "right":
        l += a + o, u += s, d = "middle";
        break;
      case "top":
        l += o / 2, u -= a, c = "center", d = "bottom";
        break;
      case "bottom":
        l += o / 2, u += i + a, c = "center";
        break;
      case "inside":
        l += o / 2, u += s, c = "center", d = "middle";
        break;
      case "insideLeft":
        l += a, u += s, d = "middle";
        break;
      case "insideRight":
        l += o - a, u += s, c = "right", d = "middle";
        break;
      case "insideTop":
        l += o / 2, u += a, c = "center";
        break;
      case "insideBottom":
        l += o / 2, u += i - a, c = "center", d = "bottom";
        break;
      case "insideTopLeft":
        l += a, u += a;
        break;
      case "insideTopRight":
        l += o - a, u += a, c = "right";
        break;
      case "insideBottomLeft":
        l += a, u += i - a, d = "bottom";
        break;
      case "insideBottomRight":
        l += o - a, u += i - a, c = "right", d = "bottom";
        break;
    }
  return t = t || {}, t.x = l, t.y = u, t.align = c, t.verticalAlign = d, t;
}
var Th = "__zr_normal__", xh = On.concat(["ignore"]), OF = Nn(On, function(t, e) {
  return t[e] = !0, t;
}, { ignore: !1 }), Mo = {}, LF = new Te(0, 0, 0, 0), af = function() {
  function t(e) {
    this.id = xw(), this.animators = [], this.currentStates = [], this.states = {}, this._init(e);
  }
  return t.prototype._init = function(e) {
    this.attr(e);
  }, t.prototype.drift = function(e, r, n) {
    switch (this.draggable) {
      case "horizontal":
        r = 0;
        break;
      case "vertical":
        e = 0;
        break;
    }
    var a = this.transform;
    a || (a = this.transform = [1, 0, 0, 1, 0, 0]), a[4] += e, a[5] += r, this.decomposeTransform(), this.markRedraw();
  }, t.prototype.beforeUpdate = function() {
  }, t.prototype.afterUpdate = function() {
  }, t.prototype.update = function() {
    this.updateTransform(), this.__dirty && this.updateInnerText();
  }, t.prototype.updateInnerText = function(e) {
    var r = this._textContent;
    if (r && (!r.ignore || e)) {
      this.textConfig || (this.textConfig = {});
      var n = this.textConfig, a = n.local, i = r.innerTransformable, o = void 0, s = void 0, l = !1;
      i.parent = a ? this : null;
      var u = !1;
      if (i.copyTransform(r), n.position != null) {
        var c = LF;
        n.layoutRect ? c.copy(n.layoutRect) : c.copy(this.getBoundingRect()), a || c.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Mo, n, c) : ip(Mo, n, c), i.x = Mo.x, i.y = Mo.y, o = Mo.align, s = Mo.verticalAlign;
        var d = n.origin;
        if (d && n.rotation != null) {
          var p = void 0, f = void 0;
          d === "center" ? (p = c.width * 0.5, f = c.height * 0.5) : (p = tn(d[0], c.width), f = tn(d[1], c.height)), u = !0, i.originX = -i.x + p + (a ? 0 : c.x), i.originY = -i.y + f + (a ? 0 : c.y);
        }
      }
      n.rotation != null && (i.rotation = n.rotation);
      var h = n.offset;
      h && (i.x += h[0], i.y += h[1], u || (i.originX = -h[0], i.originY = -h[1]));
      var g = n.inside == null ? typeof n.position == "string" && n.position.indexOf("inside") >= 0 : n.inside, v = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), m = void 0, _ = void 0, y = void 0;
      g && this.canBeInsideText() ? (m = n.insideFill, _ = n.insideStroke, (m == null || m === "auto") && (m = this.getInsideTextFill()), (_ == null || _ === "auto") && (_ = this.getInsideTextStroke(m), y = !0)) : (m = n.outsideFill, _ = n.outsideStroke, (m == null || m === "auto") && (m = this.getOutsideFill()), (_ == null || _ === "auto") && (_ = this.getOutsideStroke(m), y = !0)), m = m || "#000", (m !== v.fill || _ !== v.stroke || y !== v.autoStroke || o !== v.align || s !== v.verticalAlign) && (l = !0, v.fill = m, v.stroke = _, v.autoStroke = y, v.align = o, v.verticalAlign = s, r.setDefaultTextStyle(v)), r.__dirty |= Mn, l && r.dirtyStyle(!0);
    }
  }, t.prototype.canBeInsideText = function() {
    return !0;
  }, t.prototype.getInsideTextFill = function() {
    return "#fff";
  }, t.prototype.getInsideTextStroke = function(e) {
    return "#000";
  }, t.prototype.getOutsideFill = function() {
    return this.__zr && this.__zr.isDarkMode() ? am : nm;
  }, t.prototype.getOutsideStroke = function(e) {
    var r = this.__zr && this.__zr.getBackgroundColor(), n = typeof r == "string" && br(r);
    n || (n = [255, 255, 255, 1]);
    for (var a = n[3], i = this.__zr.isDarkMode(), o = 0; o < 3; o++)
      n[o] = n[o] * a + (i ? 0 : 255) * (1 - a);
    return n[3] = 1, Qn(n, "rgba");
  }, t.prototype.traverse = function(e, r) {
  }, t.prototype.attrKV = function(e, r) {
    e === "textConfig" ? this.setTextConfig(r) : e === "textContent" ? this.setTextContent(r) : e === "clipPath" ? this.setClipPath(r) : e === "extra" ? (this.extra = this.extra || {}, G(this.extra, r)) : this[e] = r;
  }, t.prototype.hide = function() {
    this.ignore = !0, this.markRedraw();
  }, t.prototype.show = function() {
    this.ignore = !1, this.markRedraw();
  }, t.prototype.attr = function(e, r) {
    if (typeof e == "string")
      this.attrKV(e, r);
    else if (se(e))
      for (var n = e, a = Me(n), i = 0; i < a.length; i++) {
        var o = a[i];
        this.attrKV(o, e[o]);
      }
    return this.markRedraw(), this;
  }, t.prototype.saveCurrentToNormalState = function(e) {
    this._innerSaveToNormal(e);
    for (var r = this._normalState, n = 0; n < this.animators.length; n++) {
      var a = this.animators[n], i = a.__fromStateTransition;
      if (!(a.getLoop() || i && i !== Th)) {
        var o = a.targetName, s = o ? r[o] : r;
        a.saveTo(s);
      }
    }
  }, t.prototype._innerSaveToNormal = function(e) {
    var r = this._normalState;
    r || (r = this._normalState = {}), e.textConfig && !r.textConfig && (r.textConfig = this.textConfig), this._savePrimaryToNormal(e, r, xh);
  }, t.prototype._savePrimaryToNormal = function(e, r, n) {
    for (var a = 0; a < n.length; a++) {
      var i = n[a];
      e[i] != null && !(i in r) && (r[i] = this[i]);
    }
  }, t.prototype.hasState = function() {
    return this.currentStates.length > 0;
  }, t.prototype.getState = function(e) {
    return this.states[e];
  }, t.prototype.ensureState = function(e) {
    var r = this.states;
    return r[e] || (r[e] = {}), r[e];
  }, t.prototype.clearStates = function(e) {
    this.useState(Th, !1, e);
  }, t.prototype.useState = function(e, r, n, a) {
    var i = e === Th, o = this.hasState();
    if (!(!o && i)) {
      var s = this.currentStates, l = this.stateTransition;
      if (!(xe(s, e) >= 0 && (r || s.length === 1))) {
        var u;
        if (this.stateProxy && !i && (u = this.stateProxy(e)), u || (u = this.states && this.states[e]), !u && !i) {
          U_("State " + e + " not exists.");
          return;
        }
        i || this.saveCurrentToNormalState(u);
        var c = !!(u && u.hoverLayer || a);
        c && this._toggleHoverLayerFlag(!0), this._applyStateObj(e, u, this._normalState, r, !n && !this.__inHover && l && l.duration > 0, l);
        var d = this._textContent, p = this._textGuide;
        return d && d.useState(e, r, n, c), p && p.useState(e, r, n, c), i ? (this.currentStates = [], this._normalState = {}) : r ? this.currentStates.push(e) : this.currentStates = [e], this._updateAnimationTargets(), this.markRedraw(), !c && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= -2), u;
      }
    }
  }, t.prototype.useStates = function(e, r, n) {
    if (!e.length)
      this.clearStates();
    else {
      var a = [], i = this.currentStates, o = e.length, s = o === i.length;
      if (s) {
        for (var l = 0; l < o; l++)
          if (e[l] !== i[l]) {
            s = !1;
            break;
          }
      }
      if (s)
        return;
      for (var l = 0; l < o; l++) {
        var u = e[l], c = void 0;
        this.stateProxy && (c = this.stateProxy(u, e)), c || (c = this.states[u]), c && a.push(c);
      }
      var d = a[o - 1], p = !!(d && d.hoverLayer || n);
      p && this._toggleHoverLayerFlag(!0);
      var f = this._mergeStates(a), h = this.stateTransition;
      this.saveCurrentToNormalState(f), this._applyStateObj(e.join(","), f, this._normalState, !1, !r && !this.__inHover && h && h.duration > 0, h);
      var g = this._textContent, v = this._textGuide;
      g && g.useStates(e, r, p), v && v.useStates(e, r, p), this._updateAnimationTargets(), this.currentStates = e.slice(), this.markRedraw(), !p && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= -2);
    }
  }, t.prototype.isSilent = function() {
    for (var e = this.silent, r = this.parent; !e && r; ) {
      if (r.silent) {
        e = !0;
        break;
      }
      r = r.parent;
    }
    return e;
  }, t.prototype._updateAnimationTargets = function() {
    for (var e = 0; e < this.animators.length; e++) {
      var r = this.animators[e];
      r.targetName && r.changeTarget(this[r.targetName]);
    }
  }, t.prototype.removeState = function(e) {
    var r = xe(this.currentStates, e);
    if (r >= 0) {
      var n = this.currentStates.slice();
      n.splice(r, 1), this.useStates(n);
    }
  }, t.prototype.replaceState = function(e, r, n) {
    var a = this.currentStates.slice(), i = xe(a, e), o = xe(a, r) >= 0;
    i >= 0 ? o ? a.splice(i, 1) : a[i] = r : n && !o && a.push(r), this.useStates(a);
  }, t.prototype.toggleState = function(e, r) {
    r ? this.useState(e, !0) : this.removeState(e);
  }, t.prototype._mergeStates = function(e) {
    for (var r = {}, n, a = 0; a < e.length; a++) {
      var i = e[a];
      G(r, i), i.textConfig && (n = n || {}, G(n, i.textConfig));
    }
    return n && (r.textConfig = n), r;
  }, t.prototype._applyStateObj = function(e, r, n, a, i, o) {
    var s = !(r && a);
    r && r.textConfig ? (this.textConfig = G({}, a ? this.textConfig : n.textConfig), G(this.textConfig, r.textConfig)) : s && n.textConfig && (this.textConfig = n.textConfig);
    for (var l = {}, u = !1, c = 0; c < xh.length; c++) {
      var d = xh[c], p = i && OF[d];
      r && r[d] != null ? p ? (u = !0, l[d] = r[d]) : this[d] = r[d] : s && n[d] != null && (p ? (u = !0, l[d] = n[d]) : this[d] = n[d]);
    }
    if (!i)
      for (var c = 0; c < this.animators.length; c++) {
        var f = this.animators[c], h = f.targetName;
        f.getLoop() || f.__changeFinalValue(h ? (r || n)[h] : r || n);
      }
    u && this._transitionState(e, l, o);
  }, t.prototype._attachComponent = function(e) {
    if (!(e.__zr && !e.__hostTarget) && e !== this) {
      var r = this.__zr;
      r && e.addSelfToZr(r), e.__zr = r, e.__hostTarget = this;
    }
  }, t.prototype._detachComponent = function(e) {
    e.__zr && e.removeSelfFromZr(e.__zr), e.__zr = null, e.__hostTarget = null;
  }, t.prototype.getClipPath = function() {
    return this._clipPath;
  }, t.prototype.setClipPath = function(e) {
    this._clipPath && this._clipPath !== e && this.removeClipPath(), this._attachComponent(e), this._clipPath = e, this.markRedraw();
  }, t.prototype.removeClipPath = function() {
    var e = this._clipPath;
    e && (this._detachComponent(e), this._clipPath = null, this.markRedraw());
  }, t.prototype.getTextContent = function() {
    return this._textContent;
  }, t.prototype.setTextContent = function(e) {
    var r = this._textContent;
    r !== e && (r && r !== e && this.removeTextContent(), e.innerTransformable = new Yn(), this._attachComponent(e), this._textContent = e, this.markRedraw());
  }, t.prototype.setTextConfig = function(e) {
    this.textConfig || (this.textConfig = {}), G(this.textConfig, e), this.markRedraw();
  }, t.prototype.removeTextConfig = function() {
    this.textConfig = null, this.markRedraw();
  }, t.prototype.removeTextContent = function() {
    var e = this._textContent;
    e && (e.innerTransformable = null, this._detachComponent(e), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
  }, t.prototype.getTextGuideLine = function() {
    return this._textGuide;
  }, t.prototype.setTextGuideLine = function(e) {
    this._textGuide && this._textGuide !== e && this.removeTextGuideLine(), this._attachComponent(e), this._textGuide = e, this.markRedraw();
  }, t.prototype.removeTextGuideLine = function() {
    var e = this._textGuide;
    e && (this._detachComponent(e), this._textGuide = null, this.markRedraw());
  }, t.prototype.markRedraw = function() {
    this.__dirty |= Mn;
    var e = this.__zr;
    e && (this.__inHover ? e.refreshHover() : e.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
  }, t.prototype.dirty = function() {
    this.markRedraw();
  }, t.prototype._toggleHoverLayerFlag = function(e) {
    this.__inHover = e;
    var r = this._textContent, n = this._textGuide;
    r && (r.__inHover = e), n && (n.__inHover = e);
  }, t.prototype.addSelfToZr = function(e) {
    if (this.__zr !== e) {
      this.__zr = e;
      var r = this.animators;
      if (r)
        for (var n = 0; n < r.length; n++)
          e.animation.addAnimator(r[n]);
      this._clipPath && this._clipPath.addSelfToZr(e), this._textContent && this._textContent.addSelfToZr(e), this._textGuide && this._textGuide.addSelfToZr(e);
    }
  }, t.prototype.removeSelfFromZr = function(e) {
    if (this.__zr) {
      this.__zr = null;
      var r = this.animators;
      if (r)
        for (var n = 0; n < r.length; n++)
          e.animation.removeAnimator(r[n]);
      this._clipPath && this._clipPath.removeSelfFromZr(e), this._textContent && this._textContent.removeSelfFromZr(e), this._textGuide && this._textGuide.removeSelfFromZr(e);
    }
  }, t.prototype.animate = function(e, r, n) {
    var a = e ? this[e] : this, i = new Z_(a, r, n);
    return e && (i.targetName = e), this.addAnimator(i, e), i;
  }, t.prototype.addAnimator = function(e, r) {
    var n = this.__zr, a = this;
    e.during(function() {
      a.updateDuringAnimation(r);
    }).done(function() {
      var i = a.animators, o = xe(i, e);
      o >= 0 && i.splice(o, 1);
    }), this.animators.push(e), n && n.animation.addAnimator(e), n && n.wakeUp();
  }, t.prototype.updateDuringAnimation = function(e) {
    this.markRedraw();
  }, t.prototype.stopAnimation = function(e, r) {
    for (var n = this.animators, a = n.length, i = [], o = 0; o < a; o++) {
      var s = n[o];
      !e || e === s.scope ? s.stop(r) : i.push(s);
    }
    return this.animators = i, this;
  }, t.prototype.animateTo = function(e, r, n) {
    Ch(this, e, r, n);
  }, t.prototype.animateFrom = function(e, r, n) {
    Ch(this, e, r, n, !0);
  }, t.prototype._transitionState = function(e, r, n, a) {
    for (var i = Ch(this, r, n, a), o = 0; o < i.length; o++)
      i[o].__fromStateTransition = e;
  }, t.prototype.getBoundingRect = function() {
    return null;
  }, t.prototype.getPaintRect = function() {
    return null;
  }, t.initDefaultProps = function() {
    var e = t.prototype;
    e.type = "element", e.name = "", e.ignore = e.silent = e.isGroup = e.draggable = e.dragging = e.ignoreClip = e.__inHover = !1, e.__dirty = Mn;
    function r(n, a, i, o) {
      Object.defineProperty(e, n, {
        get: function() {
          if (!this[a]) {
            var l = this[a] = [];
            s(this, l);
          }
          return this[a];
        },
        set: function(l) {
          this[i] = l[0], this[o] = l[1], this[a] = l, s(this, l);
        }
      });
      function s(l, u) {
        Object.defineProperty(u, 0, {
          get: function() {
            return l[i];
          },
          set: function(c) {
            l[i] = c;
          }
        }), Object.defineProperty(u, 1, {
          get: function() {
            return l[o];
          },
          set: function(c) {
            l[o] = c;
          }
        });
      }
    }
    Object.defineProperty && (r("position", "_legacyPos", "x", "y"), r("scale", "_legacyScale", "scaleX", "scaleY"), r("origin", "_legacyOrigin", "originX", "originY"));
  }(), t;
}();
_t(af, Gr);
_t(af, Yn);
function Ch(t, e, r, n, a) {
  r = r || {};
  var i = [];
  jw(t, "", t, e, r, n, i, a);
  var o = i.length, s = !1, l = r.done, u = r.aborted, c = function() {
    s = !0, o--, o <= 0 && (s ? l && l() : u && u());
  }, d = function() {
    o--, o <= 0 && (s ? l && l() : u && u());
  };
  o || l && l(), i.length > 0 && r.during && i[0].during(function(h, g) {
    r.during(g);
  });
  for (var p = 0; p < i.length; p++) {
    var f = i[p];
    c && f.done(c), d && f.aborted(d), r.force && f.duration(r.duration), f.start(r.easing);
  }
  return i;
}
function Ah(t, e, r) {
  for (var n = 0; n < r; n++)
    t[n] = e[n];
}
function PF(t) {
  return Kt(t[0]);
}
function kF(t, e, r) {
  if (Kt(e[r]))
    if (Kt(t[r]) || (t[r] = []), gr(e[r])) {
      var n = e[r].length;
      t[r].length !== n && (t[r] = new e[r].constructor(n), Ah(t[r], e[r], n));
    } else {
      var a = e[r], i = t[r], o = a.length;
      if (PF(a))
        for (var s = a[0].length, l = 0; l < o; l++)
          i[l] ? Ah(i[l], a[l], s) : i[l] = Array.prototype.slice.call(a[l]);
      else
        Ah(i, a, o);
      i.length = a.length;
    }
  else
    t[r] = e[r];
}
function BF(t, e) {
  return t === e || Kt(t) && Kt(e) && FF(t, e);
}
function FF(t, e) {
  var r = t.length;
  if (r !== e.length)
    return !1;
  for (var n = 0; n < r; n++)
    if (t[n] !== e[n])
      return !1;
  return !0;
}
function jw(t, e, r, n, a, i, o, s) {
  for (var l = Me(n), u = a.duration, c = a.delay, d = a.additive, p = a.setToFinal, f = !se(i), h = t.animators, g = [], v = 0; v < l.length; v++) {
    var m = l[v], _ = n[m];
    if (_ != null && r[m] != null && (f || i[m]))
      if (se(_) && !Kt(_) && !Jp(_)) {
        if (e) {
          s || (r[m] = _, t.updateDuringAnimation(e));
          continue;
        }
        jw(t, m, r[m], _, a, i && i[m], o, s);
      } else
        g.push(m);
    else s || (r[m] = _, t.updateDuringAnimation(e), g.push(m));
  }
  var y = g.length;
  if (!d && y)
    for (var b = 0; b < h.length; b++) {
      var S = h[b];
      if (S.targetName === e) {
        var E = S.stopTracks(g);
        if (E) {
          var T = xe(h, S);
          h.splice(T, 1);
        }
      }
    }
  if (a.force || (g = ze(g, function(D) {
    return !BF(n[D], r[D]);
  }), y = g.length), y > 0 || a.force && !o.length) {
    var x = void 0, C = void 0, A = void 0;
    if (s) {
      C = {}, p && (x = {});
      for (var b = 0; b < y; b++) {
        var m = g[b];
        C[m] = r[m], p ? x[m] = n[m] : r[m] = n[m];
      }
    } else if (p) {
      A = {};
      for (var b = 0; b < y; b++) {
        var m = g[b];
        A[m] = Ul(r[m]), kF(r, n, m);
      }
    }
    var S = new Z_(r, !1, !1, d ? ze(h, function(M) {
      return M.targetName === e;
    }) : null);
    S.targetName = e, a.scope && (S.scope = a.scope), p && x && S.whenWithKeys(0, x, g), A && S.whenWithKeys(0, A, g), S.whenWithKeys(u ?? 500, s ? C : n, g).delay(c || 0), t.addAnimator(S, e), o.push(S);
  }
}
var de = function(t) {
  k(e, t);
  function e(r) {
    var n = t.call(this) || this;
    return n.isGroup = !0, n._children = [], n.attr(r), n;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.children = function() {
    return this._children.slice();
  }, e.prototype.childAt = function(r) {
    return this._children[r];
  }, e.prototype.childOfName = function(r) {
    for (var n = this._children, a = 0; a < n.length; a++)
      if (n[a].name === r)
        return n[a];
  }, e.prototype.childCount = function() {
    return this._children.length;
  }, e.prototype.add = function(r) {
    return r && r !== this && r.parent !== this && (this._children.push(r), this._doAdd(r)), this;
  }, e.prototype.addBefore = function(r, n) {
    if (r && r !== this && r.parent !== this && n && n.parent === this) {
      var a = this._children, i = a.indexOf(n);
      i >= 0 && (a.splice(i, 0, r), this._doAdd(r));
    }
    return this;
  }, e.prototype.replace = function(r, n) {
    var a = xe(this._children, r);
    return a >= 0 && this.replaceAt(n, a), this;
  }, e.prototype.replaceAt = function(r, n) {
    var a = this._children, i = a[n];
    if (r && r !== this && r.parent !== this && r !== i) {
      a[n] = r, i.parent = null;
      var o = this.__zr;
      o && i.removeSelfFromZr(o), this._doAdd(r);
    }
    return this;
  }, e.prototype._doAdd = function(r) {
    r.parent && r.parent.remove(r), r.parent = this;
    var n = this.__zr;
    n && n !== r.__zr && r.addSelfToZr(n), n && n.refresh();
  }, e.prototype.remove = function(r) {
    var n = this.__zr, a = this._children, i = xe(a, r);
    return i < 0 ? this : (a.splice(i, 1), r.parent = null, n && r.removeSelfFromZr(n), n && n.refresh(), this);
  }, e.prototype.removeAll = function() {
    for (var r = this._children, n = this.__zr, a = 0; a < r.length; a++) {
      var i = r[a];
      n && i.removeSelfFromZr(n), i.parent = null;
    }
    return r.length = 0, this;
  }, e.prototype.eachChild = function(r, n) {
    for (var a = this._children, i = 0; i < a.length; i++) {
      var o = a[i];
      r.call(n, o, i);
    }
    return this;
  }, e.prototype.traverse = function(r, n) {
    for (var a = 0; a < this._children.length; a++) {
      var i = this._children[a], o = r.call(n, i);
      i.isGroup && !o && i.traverse(r, n);
    }
    return this;
  }, e.prototype.addSelfToZr = function(r) {
    t.prototype.addSelfToZr.call(this, r);
    for (var n = 0; n < this._children.length; n++) {
      var a = this._children[n];
      a.addSelfToZr(r);
    }
  }, e.prototype.removeSelfFromZr = function(r) {
    t.prototype.removeSelfFromZr.call(this, r);
    for (var n = 0; n < this._children.length; n++) {
      var a = this._children[n];
      a.removeSelfFromZr(r);
    }
  }, e.prototype.getBoundingRect = function(r) {
    for (var n = new Te(0, 0, 0, 0), a = r || this._children, i = [], o = null, s = 0; s < a.length; s++) {
      var l = a[s];
      if (!(l.ignore || l.invisible)) {
        var u = l.getBoundingRect(), c = l.getLocalTransform(i);
        c ? (Te.applyTransform(n, u, c), o = o || n.clone(), o.union(n)) : (o = o || u.clone(), o.union(u));
      }
    }
    return o || n;
  }, e;
}(af);
de.prototype.type = "group";
var Rd = {}, Jw = {};
function GF(t) {
  delete Jw[t];
}
function UF(t) {
  if (!t)
    return !1;
  if (typeof t == "string")
    return rp(t, 1) < rm;
  if (t.colorStops) {
    for (var e = t.colorStops, r = 0, n = e.length, a = 0; a < n; a++)
      r += rp(e[a].color, 1);
    return r /= n, r < rm;
  }
  return !1;
}
var zF = function() {
  function t(e, r, n) {
    var a = this;
    this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, n = n || {}, this.dom = r, this.id = e;
    var i = new eF(), o = n.renderer || "canvas";
    Rd[o] || (o = Me(Rd)[0]), n.useDirtyRect = n.useDirtyRect == null ? !1 : n.useDirtyRect;
    var s = new Rd[o](r, i, n, e), l = n.ssr || s.ssrOnly;
    this.storage = i, this.painter = s;
    var u = !Ae.node && !Ae.worker && !l ? new IF(s.getViewportRoot(), s.root) : null, c = n.useCoarsePointer, d = c == null || c === "auto" ? Ae.touchEventsSupported : !!c, p = 44, f;
    d && (f = ge(n.pointerSize, p)), this.handler = new Iw(i, s, u, s.root, f), this.animation = new TF({
      stage: {
        update: l ? null : function() {
          return a._flush(!0);
        }
      }
    }), l || this.animation.start();
  }
  return t.prototype.add = function(e) {
    this._disposed || !e || (this.storage.addRoot(e), e.addSelfToZr(this), this.refresh());
  }, t.prototype.remove = function(e) {
    this._disposed || !e || (this.storage.delRoot(e), e.removeSelfFromZr(this), this.refresh());
  }, t.prototype.configLayer = function(e, r) {
    this._disposed || (this.painter.configLayer && this.painter.configLayer(e, r), this.refresh());
  }, t.prototype.setBackgroundColor = function(e) {
    this._disposed || (this.painter.setBackgroundColor && this.painter.setBackgroundColor(e), this.refresh(), this._backgroundColor = e, this._darkMode = UF(e));
  }, t.prototype.getBackgroundColor = function() {
    return this._backgroundColor;
  }, t.prototype.setDarkMode = function(e) {
    this._darkMode = e;
  }, t.prototype.isDarkMode = function() {
    return this._darkMode;
  }, t.prototype.refreshImmediately = function(e) {
    this._disposed || (e || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1);
  }, t.prototype.refresh = function() {
    this._disposed || (this._needsRefresh = !0, this.animation.start());
  }, t.prototype.flush = function() {
    this._disposed || this._flush(!1);
  }, t.prototype._flush = function(e) {
    var r, n = ts();
    this._needsRefresh && (r = !0, this.refreshImmediately(e)), this._needsRefreshHover && (r = !0, this.refreshHoverImmediately());
    var a = ts();
    r ? (this._stillFrameAccum = 0, this.trigger("rendered", {
      elapsedTime: a - n
    })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop());
  }, t.prototype.setSleepAfterStill = function(e) {
    this._sleepAfterStill = e;
  }, t.prototype.wakeUp = function() {
    this._disposed || (this.animation.start(), this._stillFrameAccum = 0);
  }, t.prototype.refreshHover = function() {
    this._needsRefreshHover = !0;
  }, t.prototype.refreshHoverImmediately = function() {
    this._disposed || (this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.getType() === "canvas" && this.painter.refreshHover());
  }, t.prototype.resize = function(e) {
    this._disposed || (e = e || {}, this.painter.resize(e.width, e.height), this.handler.resize());
  }, t.prototype.clearAnimation = function() {
    this._disposed || this.animation.clear();
  }, t.prototype.getWidth = function() {
    if (!this._disposed)
      return this.painter.getWidth();
  }, t.prototype.getHeight = function() {
    if (!this._disposed)
      return this.painter.getHeight();
  }, t.prototype.setCursorStyle = function(e) {
    this._disposed || this.handler.setCursorStyle(e);
  }, t.prototype.findHover = function(e, r) {
    if (!this._disposed)
      return this.handler.findHover(e, r);
  }, t.prototype.on = function(e, r, n) {
    return this._disposed || this.handler.on(e, r, n), this;
  }, t.prototype.off = function(e, r) {
    this._disposed || this.handler.off(e, r);
  }, t.prototype.trigger = function(e, r) {
    this._disposed || this.handler.trigger(e, r);
  }, t.prototype.clear = function() {
    if (!this._disposed) {
      for (var e = this.storage.getRoots(), r = 0; r < e.length; r++)
        e[r] instanceof de && e[r].removeSelfFromZr(this);
      this.storage.delAllRoots(), this.painter.clear();
    }
  }, t.prototype.dispose = function() {
    this._disposed || (this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, this._disposed = !0, GF(this.id));
  }, t;
}();
function uS(t, e) {
  var r = new zF(xw(), t, e);
  return Jw[r.id] = r, r;
}
function VF(t, e) {
  Rd[t] = e;
}
var im;
function $F(t) {
  if (typeof im == "function")
    return im(t);
}
function HF(t) {
  im = t;
}
var WF = 1e-4, eD = 20;
function qF(t) {
  return t.replace(/^\s+|\s+$/g, "");
}
function $e(t, e, r, n) {
  var a = e[0], i = e[1], o = r[0], s = r[1], l = i - a, u = s - o;
  if (l === 0)
    return u === 0 ? o : (o + s) / 2;
  if (n)
    if (l > 0) {
      if (t <= a)
        return o;
      if (t >= i)
        return s;
    } else {
      if (t >= a)
        return o;
      if (t <= i)
        return s;
    }
  else {
    if (t === a)
      return o;
    if (t === i)
      return s;
  }
  return (t - a) / l * u + o;
}
function q(t, e) {
  switch (t) {
    case "center":
    case "middle":
      t = "50%";
      break;
    case "left":
    case "top":
      t = "0%";
      break;
    case "right":
    case "bottom":
      t = "100%";
      break;
  }
  return Y(t) ? qF(t).match(/%$/) ? parseFloat(t) / 100 * e : parseFloat(t) : t == null ? NaN : +t;
}
function ut(t, e, r) {
  return e == null && (e = 10), e = Math.min(Math.max(0, e), eD), t = (+t).toFixed(e), r ? t : +t;
}
function kr(t) {
  return t.sort(function(e, r) {
    return e - r;
  }), t;
}
function xn(t) {
  if (t = +t, isNaN(t))
    return 0;
  if (t > 1e-14) {
    for (var e = 1, r = 0; r < 15; r++, e *= 10)
      if (Math.round(t * e) / e === t)
        return r;
  }
  return YF(t);
}
function YF(t) {
  var e = t.toString().toLowerCase(), r = e.indexOf("e"), n = r > 0 ? +e.slice(r + 1) : 0, a = r > 0 ? r : e.length, i = e.indexOf("."), o = i < 0 ? 0 : a - 1 - i;
  return Math.max(0, o - n);
}
function tD(t, e) {
  var r = Math.log, n = Math.LN10, a = Math.floor(r(t[1] - t[0]) / n), i = Math.round(r(Math.abs(e[1] - e[0])) / n), o = Math.min(Math.max(-a + i, 0), 20);
  return isFinite(o) ? o : 20;
}
function KF(t, e) {
  var r = Nn(t, function(f, h) {
    return f + (isNaN(h) ? 0 : h);
  }, 0);
  if (r === 0)
    return [];
  for (var n = Math.pow(10, e), a = $(t, function(f) {
    return (isNaN(f) ? 0 : f) / r * n * 100;
  }), i = n * 100, o = $(a, function(f) {
    return Math.floor(f);
  }), s = Nn(o, function(f, h) {
    return f + h;
  }, 0), l = $(a, function(f, h) {
    return f - o[h];
  }); s < i; ) {
    for (var u = Number.NEGATIVE_INFINITY, c = null, d = 0, p = l.length; d < p; ++d)
      l[d] > u && (u = l[d], c = d);
    ++o[c], l[c] = 0, ++s;
  }
  return $(o, function(f) {
    return f / n;
  });
}
function ZF(t, e) {
  var r = Math.max(xn(t), xn(e)), n = t + e;
  return r > eD ? n : ut(n, r);
}
var cS = 9007199254740991;
function rD(t) {
  var e = Math.PI * 2;
  return (t % e + e) % e;
}
function du(t) {
  return t > -1e-4 && t < WF;
}
var XF = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
function Ln(t) {
  if (t instanceof Date)
    return t;
  if (Y(t)) {
    var e = XF.exec(t);
    if (!e)
      return /* @__PURE__ */ new Date(NaN);
    if (e[8]) {
      var r = +e[4] || 0;
      return e[8].toUpperCase() !== "Z" && (r -= +e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, r, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0));
    } else
      return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0);
  } else if (t == null)
    return /* @__PURE__ */ new Date(NaN);
  return new Date(Math.round(t));
}
function QF(t) {
  return Math.pow(10, X_(t));
}
function X_(t) {
  if (t === 0)
    return 0;
  var e = Math.floor(Math.log(t) / Math.LN10);
  return t / Math.pow(10, e) >= 10 && e++, e;
}
function nD(t, e) {
  var r = X_(t), n = Math.pow(10, r), a = t / n, i;
  return a < 1.5 ? i = 1 : a < 2.5 ? i = 2 : a < 4 ? i = 3 : a < 7 ? i = 5 : i = 10, t = i * n, r >= -20 ? +t.toFixed(r < 0 ? -r : 0) : t;
}
function wh(t, e) {
  var r = (t.length - 1) * e + 1, n = Math.floor(r), a = +t[n - 1], i = r - n;
  return i ? a + i * (t[n] - a) : a;
}
function dS(t) {
  t.sort(function(l, u) {
    return s(l, u, 0) ? -1 : 1;
  });
  for (var e = -1 / 0, r = 1, n = 0; n < t.length; ) {
    for (var a = t[n].interval, i = t[n].close, o = 0; o < 2; o++)
      a[o] <= e && (a[o] = e, i[o] = o ? 1 : 1 - r), e = a[o], r = i[o];
    a[0] === a[1] && i[0] * i[1] !== 1 ? t.splice(n, 1) : n++;
  }
  return t;
  function s(l, u, c) {
    return l.interval[c] < u.interval[c] || l.interval[c] === u.interval[c] && (l.close[c] - u.close[c] === (c ? -1 : 1) || !c && s(l, u, 1));
  }
}
function ra(t) {
  var e = parseFloat(t);
  return e == t && (e !== 0 || !Y(t) || t.indexOf("x") <= 0) ? e : NaN;
}
function aD(t) {
  return !isNaN(ra(t));
}
function iD() {
  return Math.round(Math.random() * 9);
}
function oD(t, e) {
  return e === 0 ? t : oD(e, t % e);
}
function pS(t, e) {
  return t == null ? e : e == null ? t : t * e / oD(t, e);
}
function Ue(t) {
  throw new Error(t);
}
function fS(t, e, r) {
  return (e - t) * r + t;
}
var sD = "series\0", lD = "\0_ec_\0";
function Ye(t) {
  return t instanceof Array ? t : t == null ? [] : [t];
}
function io(t, e, r) {
  if (t) {
    t[e] = t[e] || {}, t.emphasis = t.emphasis || {}, t.emphasis[e] = t.emphasis[e] || {};
    for (var n = 0, a = r.length; n < a; n++) {
      var i = r[n];
      !t.emphasis[e].hasOwnProperty(i) && t[e].hasOwnProperty(i) && (t.emphasis[e][i] = t[e][i]);
    }
  }
}
var hS = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
function Is(t) {
  return se(t) && !V(t) && !(t instanceof Date) ? t.value : t;
}
function jF(t) {
  return se(t) && !(t instanceof Array);
}
function uD(t, e, r) {
  var n = r === "normalMerge", a = r === "replaceMerge", i = r === "replaceAll";
  t = t || [], e = (e || []).slice();
  var o = J();
  w(e, function(l, u) {
    if (!se(l)) {
      e[u] = null;
      return;
    }
  });
  var s = JF(t, o, r);
  return (n || a) && e3(s, t, o, e), n && t3(s, e), n || a ? r3(s, e, a) : i && n3(s, e), a3(s), s;
}
function JF(t, e, r) {
  var n = [];
  if (r === "replaceAll")
    return n;
  for (var a = 0; a < t.length; a++) {
    var i = t[a];
    i && i.id != null && e.set(i.id, a), n.push({
      existing: r === "replaceMerge" || pu(i) ? null : i,
      newOption: null,
      keyInfo: null,
      brandNew: null
    });
  }
  return n;
}
function e3(t, e, r, n) {
  w(n, function(a, i) {
    if (!(!a || a.id == null)) {
      var o = zl(a.id), s = r.get(o);
      if (s != null) {
        var l = t[s];
        ar(!l.newOption, 'Duplicated option on id "' + o + '".'), l.newOption = a, l.existing = e[s], n[i] = null;
      }
    }
  });
}
function t3(t, e) {
  w(e, function(r, n) {
    if (!(!r || r.name == null))
      for (var a = 0; a < t.length; a++) {
        var i = t[a].existing;
        if (!t[a].newOption && i && (i.id == null || r.id == null) && !pu(r) && !pu(i) && cD("name", i, r)) {
          t[a].newOption = r, e[n] = null;
          return;
        }
      }
  });
}
function r3(t, e, r) {
  w(e, function(n) {
    if (n) {
      for (
        var a, i = 0;
        // Be `!resultItem` only when `nextIdx >= result.length`.
        (a = t[i]) && (a.newOption || pu(a.existing) || // In mode "replaceMerge", here no not-mapped-non-internal-existing.
        a.existing && n.id != null && !cD("id", n, a.existing));
      )
        i++;
      a ? (a.newOption = n, a.brandNew = r) : t.push({
        newOption: n,
        brandNew: r,
        existing: null,
        keyInfo: null
      }), i++;
    }
  });
}
function n3(t, e) {
  w(e, function(r) {
    t.push({
      newOption: r,
      brandNew: !0,
      existing: null,
      keyInfo: null
    });
  });
}
function a3(t) {
  var e = J();
  w(t, function(r) {
    var n = r.existing;
    n && e.set(n.id, r);
  }), w(t, function(r) {
    var n = r.newOption;
    ar(!n || n.id == null || !e.get(n.id) || e.get(n.id) === r, "id duplicates: " + (n && n.id)), n && n.id != null && e.set(n.id, r), !r.keyInfo && (r.keyInfo = {});
  }), w(t, function(r, n) {
    var a = r.existing, i = r.newOption, o = r.keyInfo;
    if (se(i)) {
      if (o.name = i.name != null ? zl(i.name) : a ? a.name : sD + n, a)
        o.id = zl(a.id);
      else if (i.id != null)
        o.id = zl(i.id);
      else {
        var s = 0;
        do
          o.id = "\0" + o.name + "\0" + s++;
        while (e.get(o.id));
      }
      e.set(o.id, r);
    }
  });
}
function cD(t, e, r) {
  var n = St(e[t], null), a = St(r[t], null);
  return n != null && a != null && n === a;
}
function zl(t) {
  return St(t, "");
}
function St(t, e) {
  return t == null ? e : Y(t) ? t : ke(t) || Bv(t) ? t + "" : e;
}
function Q_(t) {
  var e = t.name;
  return !!(e && e.indexOf(sD));
}
function pu(t) {
  return t && t.id != null && zl(t.id).indexOf(lD) === 0;
}
function i3(t) {
  return lD + t;
}
function o3(t, e, r) {
  w(t, function(n) {
    var a = n.newOption;
    se(a) && (n.keyInfo.mainType = e, n.keyInfo.subType = s3(e, a, n.existing, r));
  });
}
function s3(t, e, r, n) {
  var a = e.type ? e.type : r ? r.subType : n.determineSubType(t, e);
  return a;
}
function l3(t, e) {
  var r = {}, n = {};
  return a(t || [], r), a(e || [], n, r), [i(r), i(n)];
  function a(o, s, l) {
    for (var u = 0, c = o.length; u < c; u++) {
      var d = St(o[u].seriesId, null);
      if (d == null)
        return;
      for (var p = Ye(o[u].dataIndex), f = l && l[d], h = 0, g = p.length; h < g; h++) {
        var v = p[h];
        f && f[v] ? f[v] = null : (s[d] || (s[d] = {}))[v] = 1;
      }
    }
  }
  function i(o, s) {
    var l = [];
    for (var u in o)
      if (o.hasOwnProperty(u) && o[u] != null)
        if (s)
          l.push(+u);
        else {
          var c = i(o[u], !0);
          c.length && l.push({
            seriesId: u,
            dataIndex: c
          });
        }
    return l;
  }
}
function oo(t, e) {
  if (e.dataIndexInside != null)
    return e.dataIndexInside;
  if (e.dataIndex != null)
    return V(e.dataIndex) ? $(e.dataIndex, function(r) {
      return t.indexOfRawIndex(r);
    }) : t.indexOfRawIndex(e.dataIndex);
  if (e.name != null)
    return V(e.name) ? $(e.name, function(r) {
      return t.indexOfName(r);
    }) : t.indexOfName(e.name);
}
function Oe() {
  var t = "__ec_inner_" + u3++;
  return function(e) {
    return e[t] || (e[t] = {});
  };
}
var u3 = iD();
function Vl(t, e, r) {
  var n = j_(e, r), a = n.mainTypeSpecified, i = n.queryOptionMap, o = n.others, s = o, l = r ? r.defaultMainType : null;
  return !a && l && i.set(l, {}), i.each(function(u, c) {
    var d = zu(t, c, u, {
      useDefault: l === c,
      enableAll: r && r.enableAll != null ? r.enableAll : !0,
      enableNone: r && r.enableNone != null ? r.enableNone : !0
    });
    s[c + "Models"] = d.models, s[c + "Model"] = d.models[0];
  }), s;
}
function j_(t, e) {
  var r;
  if (Y(t)) {
    var n = {};
    n[t + "Index"] = 0, r = n;
  } else
    r = t;
  var a = J(), i = {}, o = !1;
  return w(r, function(s, l) {
    if (l === "dataIndex" || l === "dataIndexInside") {
      i[l] = s;
      return;
    }
    var u = l.match(/^(\w+)(Index|Id|Name)$/) || [], c = u[1], d = (u[2] || "").toLowerCase();
    if (!(!c || !d || e && e.includeMainTypes && xe(e.includeMainTypes, c) < 0)) {
      o = o || !!c;
      var p = a.get(c) || a.set(c, {});
      p[d] = s;
    }
  }), {
    mainTypeSpecified: o,
    queryOptionMap: a,
    others: i
  };
}
var vt = {
  useDefault: !0,
  enableAll: !1,
  enableNone: !1
}, c3 = {
  useDefault: !1,
  enableAll: !0,
  enableNone: !0
};
function zu(t, e, r, n) {
  n = n || vt;
  var a = r.index, i = r.id, o = r.name, s = {
    models: null,
    specified: a != null || i != null || o != null
  };
  if (!s.specified) {
    var l = void 0;
    return s.models = n.useDefault && (l = t.getComponent(e)) ? [l] : [], s;
  }
  return a === "none" || a === !1 ? (ar(n.enableNone, '`"none"` or `false` is not a valid value on index option.'), s.models = [], s) : (a === "all" && (ar(n.enableAll, '`"all"` is not a valid value on index option.'), a = i = o = null), s.models = t.queryComponents({
    mainType: e,
    index: a,
    id: i,
    name: o
  }), s);
}
function dD(t, e, r) {
  t.setAttribute ? t.setAttribute(e, r) : t[e] = r;
}
function d3(t, e) {
  return t.getAttribute ? t.getAttribute(e) : t[e];
}
function p3(t) {
  return t === "auto" ? Ae.domSupported ? "html" : "richText" : t || "html";
}
function om(t, e) {
  var r = J(), n = [];
  return w(t, function(a) {
    var i = e(a);
    (r.get(i) || (n.push(i), r.set(i, []))).push(a);
  }), {
    keys: n,
    buckets: r
  };
}
function pD(t, e, r, n, a) {
  var i = e == null || e === "auto";
  if (n == null)
    return n;
  if (ke(n)) {
    var o = fS(r || 0, n, a);
    return ut(o, i ? Math.max(xn(r || 0), xn(n)) : e);
  } else {
    if (Y(n))
      return a < 1 ? r : n;
    for (var s = [], l = r, u = n, c = Math.max(l ? l.length : 0, u.length), d = 0; d < c; ++d) {
      var p = t.getDimensionInfo(d);
      if (p && p.type === "ordinal")
        s[d] = (a < 1 && l ? l : u)[d];
      else {
        var f = l && l[d] ? l[d] : 0, h = u[d], o = fS(f, h, a);
        s[d] = ut(o, i ? Math.max(xn(f), xn(h)) : e);
      }
    }
    return s;
  }
}
var f3 = ".", di = "___EC__COMPONENT__CONTAINER___", fD = "___EC__EXTENDED_CLASS___";
function Cn(t) {
  var e = {
    main: "",
    sub: ""
  };
  if (t) {
    var r = t.split(f3);
    e.main = r[0] || "", e.sub = r[1] || "";
  }
  return e;
}
function h3(t) {
  ar(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(t), 'componentType "' + t + '" illegal');
}
function g3(t) {
  return !!(t && t[fD]);
}
function J_(t, e) {
  t.$constructor = t, t.extend = function(r) {
    var n = this, a;
    return v3(n) ? a = /** @class */
    function(i) {
      k(o, i);
      function o() {
        return i.apply(this, arguments) || this;
      }
      return o;
    }(n) : (a = function() {
      (r.$constructor || n).apply(this, arguments);
    }, SB(a, this)), G(a.prototype, r), a[fD] = !0, a.extend = this.extend, a.superCall = y3, a.superApply = b3, a.superClass = n, a;
  };
}
function v3(t) {
  return ae(t) && /^class\s/.test(Function.prototype.toString.call(t));
}
function hD(t, e) {
  t.extend = e.extend;
}
var m3 = Math.round(Math.random() * 10);
function _3(t) {
  var e = ["__\0is_clz", m3++].join("_");
  t.prototype[e] = !0, t.isInstance = function(r) {
    return !!(r && r[e]);
  };
}
function y3(t, e) {
  for (var r = [], n = 2; n < arguments.length; n++)
    r[n - 2] = arguments[n];
  return this.superClass.prototype[e].apply(t, r);
}
function b3(t, e, r) {
  return this.superClass.prototype[e].apply(t, r);
}
function of(t) {
  var e = {};
  t.registerClass = function(n) {
    var a = n.type || n.prototype.type;
    if (a) {
      h3(a), n.prototype.type = a;
      var i = Cn(a);
      if (!i.sub)
        e[i.main] = n;
      else if (i.sub !== di) {
        var o = r(i);
        o[i.sub] = n;
      }
    }
    return n;
  }, t.getClass = function(n, a, i) {
    var o = e[n];
    if (o && o[di] && (o = a ? o[a] : null), i && !o)
      throw new Error(a ? "Component " + n + "." + (a || "") + " is used but not imported." : n + ".type should be specified.");
    return o;
  }, t.getClassesByMainType = function(n) {
    var a = Cn(n), i = [], o = e[a.main];
    return o && o[di] ? w(o, function(s, l) {
      l !== di && i.push(s);
    }) : i.push(o), i;
  }, t.hasClass = function(n) {
    var a = Cn(n);
    return !!e[a.main];
  }, t.getAllClassMainTypes = function() {
    var n = [];
    return w(e, function(a, i) {
      n.push(i);
    }), n;
  }, t.hasSubTypes = function(n) {
    var a = Cn(n), i = e[a.main];
    return i && i[di];
  };
  function r(n) {
    var a = e[n.main];
    return (!a || !a[di]) && (a = e[n.main] = {}, a[di] = !0), a;
  }
}
function so(t, e) {
  for (var r = 0; r < t.length; r++)
    t[r][1] || (t[r][1] = t[r][0]);
  return e = e || !1, function(n, a, i) {
    for (var o = {}, s = 0; s < t.length; s++) {
      var l = t[s][1];
      if (!(a && xe(a, l) >= 0 || i && xe(i, l) < 0)) {
        var u = n.getShallow(l, e);
        u != null && (o[t[s][0]] = u);
      }
    }
    return o;
  };
}
var S3 = [
  ["fill", "color"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["opacity"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], E3 = so(S3), T3 = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getAreaStyle = function(e, r) {
      return E3(this, e, r);
    }, t;
  }()
), sm = new Gu(50);
function x3(t) {
  if (typeof t == "string") {
    var e = sm.get(t);
    return e && e.image;
  } else
    return t;
}
function ey(t, e, r, n, a) {
  if (t)
    if (typeof t == "string") {
      if (e && e.__zrImageSrc === t || !r)
        return e;
      var i = sm.get(t), o = { hostEl: r, cb: n, cbPayload: a };
      return i ? (e = i.image, !sf(e) && i.pending.push(o)) : (e = Ya.loadImage(t, gS, gS), e.__zrImageSrc = t, sm.put(t, e.__cachedImgObj = {
        image: e,
        pending: [o]
      })), e;
    } else
      return t;
  else return e;
}
function gS() {
  var t = this.__cachedImgObj;
  this.onload = this.onerror = this.__cachedImgObj = null;
  for (var e = 0; e < t.pending.length; e++) {
    var r = t.pending[e], n = r.cb;
    n && n(this, r.cbPayload), r.hostEl.dirty();
  }
  t.pending.length = 0;
}
function sf(t) {
  return t && t.width && t.height;
}
var Dh = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
function C3(t, e, r, n, a, i) {
  if (!r) {
    t.text = "", t.isTruncated = !1;
    return;
  }
  var o = (e + "").split(`
`);
  i = gD(r, n, a, i);
  for (var s = !1, l = {}, u = 0, c = o.length; u < c; u++)
    vD(l, o[u], i), o[u] = l.textLine, s = s || l.isTruncated;
  t.text = o.join(`
`), t.isTruncated = s;
}
function gD(t, e, r, n) {
  n = n || {};
  var a = G({}, n);
  a.font = e, r = ge(r, "..."), a.maxIterations = ge(n.maxIterations, 2);
  var i = a.minChar = ge(n.minChar, 0);
  a.cnCharWidth = Sr("国", e);
  var o = a.ascCharWidth = Sr("a", e);
  a.placeholder = ge(n.placeholder, "");
  for (var s = t = Math.max(0, t - 1), l = 0; l < i && s >= o; l++)
    s -= o;
  var u = Sr(r, e);
  return u > s && (r = "", u = 0), s = t - u, a.ellipsis = r, a.ellipsisWidth = u, a.contentWidth = s, a.containerWidth = t, a;
}
function vD(t, e, r) {
  var n = r.containerWidth, a = r.font, i = r.contentWidth;
  if (!n) {
    t.textLine = "", t.isTruncated = !1;
    return;
  }
  var o = Sr(e, a);
  if (o <= n) {
    t.textLine = e, t.isTruncated = !1;
    return;
  }
  for (var s = 0; ; s++) {
    if (o <= i || s >= r.maxIterations) {
      e += r.ellipsis;
      break;
    }
    var l = s === 0 ? A3(e, i, r.ascCharWidth, r.cnCharWidth) : o > 0 ? Math.floor(e.length * i / o) : 0;
    e = e.substr(0, l), o = Sr(e, a);
  }
  e === "" && (e = r.placeholder), t.textLine = e, t.isTruncated = !0;
}
function A3(t, e, r, n) {
  for (var a = 0, i = 0, o = t.length; i < o && a < e; i++) {
    var s = t.charCodeAt(i);
    a += 0 <= s && s <= 127 ? r : n;
  }
  return i;
}
function w3(t, e) {
  t != null && (t += "");
  var r = e.overflow, n = e.padding, a = e.font, i = r === "truncate", o = nf(a), s = ge(e.lineHeight, o), l = !!e.backgroundColor, u = e.lineOverflow === "truncate", c = !1, d = e.width, p;
  d != null && (r === "break" || r === "breakAll") ? p = t ? mD(t, e.font, d, r === "breakAll", 0).lines : [] : p = t ? t.split(`
`) : [];
  var f = p.length * s, h = ge(e.height, f);
  if (f > h && u) {
    var g = Math.floor(h / s);
    c = c || p.length > g, p = p.slice(0, g);
  }
  if (t && i && d != null)
    for (var v = gD(d, a, e.ellipsis, {
      minChar: e.truncateMinChar,
      placeholder: e.placeholder
    }), m = {}, _ = 0; _ < p.length; _++)
      vD(m, p[_], v), p[_] = m.textLine, c = c || m.isTruncated;
  for (var y = h, b = 0, _ = 0; _ < p.length; _++)
    b = Math.max(Sr(p[_], a), b);
  d == null && (d = b);
  var S = b;
  return n && (y += n[0] + n[2], S += n[1] + n[3], d += n[1] + n[3]), l && (S = d), {
    lines: p,
    height: h,
    outerWidth: S,
    outerHeight: y,
    lineHeight: s,
    calculatedLineHeight: o,
    contentWidth: b,
    contentHeight: f,
    width: d,
    isTruncated: c
  };
}
var D3 = /* @__PURE__ */ function() {
  function t() {
  }
  return t;
}(), vS = /* @__PURE__ */ function() {
  function t(e) {
    this.tokens = [], e && (this.tokens = e);
  }
  return t;
}(), M3 = /* @__PURE__ */ function() {
  function t() {
    this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [], this.isTruncated = !1;
  }
  return t;
}();
function I3(t, e) {
  var r = new M3();
  if (t != null && (t += ""), !t)
    return r;
  for (var n = e.width, a = e.height, i = e.overflow, o = (i === "break" || i === "breakAll") && n != null ? { width: n, accumWidth: 0, breakAll: i === "breakAll" } : null, s = Dh.lastIndex = 0, l; (l = Dh.exec(t)) != null; ) {
    var u = l.index;
    u > s && Mh(r, t.substring(s, u), e, o), Mh(r, l[2], e, o, l[1]), s = Dh.lastIndex;
  }
  s < t.length && Mh(r, t.substring(s, t.length), e, o);
  var c = [], d = 0, p = 0, f = e.padding, h = i === "truncate", g = e.lineOverflow === "truncate", v = {};
  function m(U, z, H) {
    U.width = z, U.lineHeight = H, d += H, p = Math.max(p, z);
  }
  e: for (var _ = 0; _ < r.lines.length; _++) {
    for (var y = r.lines[_], b = 0, S = 0, E = 0; E < y.tokens.length; E++) {
      var T = y.tokens[E], x = T.styleName && e.rich[T.styleName] || {}, C = T.textPadding = x.padding, A = C ? C[1] + C[3] : 0, D = T.font = x.font || e.font;
      T.contentHeight = nf(D);
      var M = ge(x.height, T.contentHeight);
      if (T.innerHeight = M, C && (M += C[0] + C[2]), T.height = M, T.lineHeight = Dn(x.lineHeight, e.lineHeight, M), T.align = x && x.align || e.align, T.verticalAlign = x && x.verticalAlign || "middle", g && a != null && d + T.lineHeight > a) {
        var I = r.lines.length;
        E > 0 ? (y.tokens = y.tokens.slice(0, E), m(y, S, b), r.lines = r.lines.slice(0, _ + 1)) : r.lines = r.lines.slice(0, _), r.isTruncated = r.isTruncated || r.lines.length < I;
        break e;
      }
      var N = x.width, R = N == null || N === "auto";
      if (typeof N == "string" && N.charAt(N.length - 1) === "%")
        T.percentWidth = N, c.push(T), T.contentWidth = Sr(T.text, D);
      else {
        if (R) {
          var O = x.backgroundColor, B = O && O.image;
          B && (B = x3(B), sf(B) && (T.width = Math.max(T.width, B.width * M / B.height)));
        }
        var L = h && n != null ? n - S : null;
        L != null && L < T.width ? !R || L < A ? (T.text = "", T.width = T.contentWidth = 0) : (C3(v, T.text, L - A, D, e.ellipsis, { minChar: e.truncateMinChar }), T.text = v.text, r.isTruncated = r.isTruncated || v.isTruncated, T.width = T.contentWidth = Sr(T.text, D)) : T.contentWidth = Sr(T.text, D);
      }
      T.width += A, S += T.width, x && (b = Math.max(b, T.lineHeight));
    }
    m(y, S, b);
  }
  r.outerWidth = r.width = ge(n, p), r.outerHeight = r.height = ge(a, d), r.contentHeight = d, r.contentWidth = p, f && (r.outerWidth += f[1] + f[3], r.outerHeight += f[0] + f[2]);
  for (var _ = 0; _ < c.length; _++) {
    var T = c[_], F = T.percentWidth;
    T.width = parseInt(F, 10) / 100 * r.width;
  }
  return r;
}
function Mh(t, e, r, n, a) {
  var i = e === "", o = a && r.rich[a] || {}, s = t.lines, l = o.font || r.font, u = !1, c, d;
  if (n) {
    var p = o.padding, f = p ? p[1] + p[3] : 0;
    if (o.width != null && o.width !== "auto") {
      var h = tn(o.width, n.width) + f;
      s.length > 0 && h + n.accumWidth > n.width && (c = e.split(`
`), u = !0), n.accumWidth = h;
    } else {
      var g = mD(e, l, n.width, n.breakAll, n.accumWidth);
      n.accumWidth = g.accumWidth + f, d = g.linesWidths, c = g.lines;
    }
  } else
    c = e.split(`
`);
  for (var v = 0; v < c.length; v++) {
    var m = c[v], _ = new D3();
    if (_.styleName = a, _.text = m, _.isLineHolder = !m && !i, typeof o.width == "number" ? _.width = o.width : _.width = d ? d[v] : Sr(m, l), !v && !u) {
      var y = (s[s.length - 1] || (s[0] = new vS())).tokens, b = y.length;
      b === 1 && y[0].isLineHolder ? y[0] = _ : (m || !b || i) && y.push(_);
    } else
      s.push(new vS([_]));
  }
}
function N3(t) {
  var e = t.charCodeAt(0);
  return e >= 32 && e <= 591 || e >= 880 && e <= 4351 || e >= 4608 && e <= 5119 || e >= 7680 && e <= 8303;
}
var R3 = Nn(",&?/;] ".split(""), function(t, e) {
  return t[e] = !0, t;
}, {});
function O3(t) {
  return N3(t) ? !!R3[t] : !0;
}
function mD(t, e, r, n, a) {
  for (var i = [], o = [], s = "", l = "", u = 0, c = 0, d = 0; d < t.length; d++) {
    var p = t.charAt(d);
    if (p === `
`) {
      l && (s += l, c += u), i.push(s), o.push(c), s = "", l = "", u = 0, c = 0;
      continue;
    }
    var f = Sr(p, e), h = n ? !1 : !O3(p);
    if (i.length ? c + f > r : a + c + f > r) {
      c ? (s || l) && (h ? (s || (s = l, l = "", u = 0, c = u), i.push(s), o.push(c - u), l += p, u += f, s = "", c = u) : (l && (s += l, l = "", u = 0), i.push(s), o.push(c), s = p, c = f)) : h ? (i.push(l), o.push(u), l = p, u = f) : (i.push(p), o.push(f));
      continue;
    }
    c += f, h ? (l += p, u += f) : (l && (s += l, l = "", u = 0), s += p);
  }
  return !i.length && !s && (s = t, l = "", u = 0), l && (s += l), s && (i.push(s), o.push(c)), i.length === 1 && (c += a), {
    accumWidth: c,
    lines: i,
    linesWidths: o
  };
}
var lm = "__zr_style_" + Math.round(Math.random() * 10), Qi = {
  shadowBlur: 0,
  shadowOffsetX: 0,
  shadowOffsetY: 0,
  shadowColor: "#000",
  opacity: 1,
  blend: "source-over"
}, lf = {
  style: {
    shadowBlur: !0,
    shadowOffsetX: !0,
    shadowOffsetY: !0,
    shadowColor: !0,
    opacity: !0
  }
};
Qi[lm] = !0;
var mS = ["z", "z2", "invisible"], L3 = ["invisible"], Fr = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype._init = function(r) {
    for (var n = Me(r), a = 0; a < n.length; a++) {
      var i = n[a];
      i === "style" ? this.useStyle(r[i]) : t.prototype.attrKV.call(this, i, r[i]);
    }
    this.style || this.useStyle({});
  }, e.prototype.beforeBrush = function() {
  }, e.prototype.afterBrush = function() {
  }, e.prototype.innerBeforeBrush = function() {
  }, e.prototype.innerAfterBrush = function() {
  }, e.prototype.shouldBePainted = function(r, n, a, i) {
    var o = this.transform;
    if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && P3(this, r, n) || o && !o[0] && !o[3])
      return !1;
    if (a && this.__clipPaths) {
      for (var s = 0; s < this.__clipPaths.length; ++s)
        if (this.__clipPaths[s].isZeroArea())
          return !1;
    }
    if (i && this.parent)
      for (var l = this.parent; l; ) {
        if (l.ignore)
          return !1;
        l = l.parent;
      }
    return !0;
  }, e.prototype.contain = function(r, n) {
    return this.rectContain(r, n);
  }, e.prototype.traverse = function(r, n) {
    r.call(n, this);
  }, e.prototype.rectContain = function(r, n) {
    var a = this.transformCoordToLocal(r, n), i = this.getBoundingRect();
    return i.contain(a[0], a[1]);
  }, e.prototype.getPaintRect = function() {
    var r = this._paintRect;
    if (!this._paintRect || this.__dirty) {
      var n = this.transform, a = this.getBoundingRect(), i = this.style, o = i.shadowBlur || 0, s = i.shadowOffsetX || 0, l = i.shadowOffsetY || 0;
      r = this._paintRect || (this._paintRect = new Te(0, 0, 0, 0)), n ? Te.applyTransform(r, a, n) : r.copy(a), (o || s || l) && (r.width += o * 2 + Math.abs(s), r.height += o * 2 + Math.abs(l), r.x = Math.min(r.x, r.x + s - o), r.y = Math.min(r.y, r.y + l - o));
      var u = this.dirtyRectTolerance;
      r.isZero() || (r.x = Math.floor(r.x - u), r.y = Math.floor(r.y - u), r.width = Math.ceil(r.width + 1 + u * 2), r.height = Math.ceil(r.height + 1 + u * 2));
    }
    return r;
  }, e.prototype.setPrevPaintRect = function(r) {
    r ? (this._prevPaintRect = this._prevPaintRect || new Te(0, 0, 0, 0), this._prevPaintRect.copy(r)) : this._prevPaintRect = null;
  }, e.prototype.getPrevPaintRect = function() {
    return this._prevPaintRect;
  }, e.prototype.animateStyle = function(r) {
    return this.animate("style", r);
  }, e.prototype.updateDuringAnimation = function(r) {
    r === "style" ? this.dirtyStyle() : this.markRedraw();
  }, e.prototype.attrKV = function(r, n) {
    r !== "style" ? t.prototype.attrKV.call(this, r, n) : this.style ? this.setStyle(n) : this.useStyle(n);
  }, e.prototype.setStyle = function(r, n) {
    return typeof r == "string" ? this.style[r] = n : G(this.style, r), this.dirtyStyle(), this;
  }, e.prototype.dirtyStyle = function(r) {
    r || this.markRedraw(), this.__dirty |= Dd, this._rect && (this._rect = null);
  }, e.prototype.dirty = function() {
    this.dirtyStyle();
  }, e.prototype.styleChanged = function() {
    return !!(this.__dirty & Dd);
  }, e.prototype.styleUpdated = function() {
    this.__dirty &= -3;
  }, e.prototype.createStyle = function(r) {
    return ef(Qi, r);
  }, e.prototype.useStyle = function(r) {
    r[lm] || (r = this.createStyle(r)), this.__inHover ? this.__hoverStyle = r : this.style = r, this.dirtyStyle();
  }, e.prototype.isStyleObject = function(r) {
    return r[lm];
  }, e.prototype._innerSaveToNormal = function(r) {
    t.prototype._innerSaveToNormal.call(this, r);
    var n = this._normalState;
    r.style && !n.style && (n.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(r, n, mS);
  }, e.prototype._applyStateObj = function(r, n, a, i, o, s) {
    t.prototype._applyStateObj.call(this, r, n, a, i, o, s);
    var l = !(n && i), u;
    if (n && n.style ? o ? i ? u = n.style : (u = this._mergeStyle(this.createStyle(), a.style), this._mergeStyle(u, n.style)) : (u = this._mergeStyle(this.createStyle(), i ? this.style : a.style), this._mergeStyle(u, n.style)) : l && (u = a.style), u)
      if (o) {
        var c = this.style;
        if (this.style = this.createStyle(l ? {} : c), l)
          for (var d = Me(c), p = 0; p < d.length; p++) {
            var f = d[p];
            f in u && (u[f] = u[f], this.style[f] = c[f]);
          }
        for (var h = Me(u), p = 0; p < h.length; p++) {
          var f = h[p];
          this.style[f] = this.style[f];
        }
        this._transitionState(r, {
          style: u
        }, s, this.getAnimationStyleProps());
      } else
        this.useStyle(u);
    for (var g = this.__inHover ? L3 : mS, p = 0; p < g.length; p++) {
      var f = g[p];
      n && n[f] != null ? this[f] = n[f] : l && a[f] != null && (this[f] = a[f]);
    }
  }, e.prototype._mergeStates = function(r) {
    for (var n = t.prototype._mergeStates.call(this, r), a, i = 0; i < r.length; i++) {
      var o = r[i];
      o.style && (a = a || {}, this._mergeStyle(a, o.style));
    }
    return a && (n.style = a), n;
  }, e.prototype._mergeStyle = function(r, n) {
    return G(r, n), r;
  }, e.prototype.getAnimationStyleProps = function() {
    return lf;
  }, e.initDefaultProps = function() {
    var r = e.prototype;
    r.type = "displayable", r.invisible = !1, r.z = 0, r.z2 = 0, r.zlevel = 0, r.culling = !1, r.cursor = "pointer", r.rectHover = !1, r.incremental = !1, r._rect = null, r.dirtyRectTolerance = 0, r.__dirty = Mn | Dd;
  }(), e;
}(af), Ih = new Te(0, 0, 0, 0), Nh = new Te(0, 0, 0, 0);
function P3(t, e, r) {
  return Ih.copy(t.getBoundingRect()), t.transform && Ih.applyTransform(t.transform), Nh.width = e, Nh.height = r, !Ih.intersect(Nh);
}
var dr = Math.min, pr = Math.max, Rh = Math.sin, Oh = Math.cos, pi = Math.PI * 2, Cc = fo(), Ac = fo(), wc = fo();
function uf(t, e, r) {
  if (t.length !== 0) {
    for (var n = t[0], a = n[0], i = n[0], o = n[1], s = n[1], l = 1; l < t.length; l++)
      n = t[l], a = dr(a, n[0]), i = pr(i, n[0]), o = dr(o, n[1]), s = pr(s, n[1]);
    e[0] = a, e[1] = o, r[0] = i, r[1] = s;
  }
}
function _S(t, e, r, n, a, i) {
  a[0] = dr(t, r), a[1] = dr(e, n), i[0] = pr(t, r), i[1] = pr(e, n);
}
var yS = [], bS = [];
function k3(t, e, r, n, a, i, o, s, l, u) {
  var c = kw, d = xt, p = c(t, r, a, o, yS);
  l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0;
  for (var f = 0; f < p; f++) {
    var h = d(t, r, a, o, yS[f]);
    l[0] = dr(h, l[0]), u[0] = pr(h, u[0]);
  }
  p = c(e, n, i, s, bS);
  for (var f = 0; f < p; f++) {
    var g = d(e, n, i, s, bS[f]);
    l[1] = dr(g, l[1]), u[1] = pr(g, u[1]);
  }
  l[0] = dr(t, l[0]), u[0] = pr(t, u[0]), l[0] = dr(o, l[0]), u[0] = pr(o, u[0]), l[1] = dr(e, l[1]), u[1] = pr(e, u[1]), l[1] = dr(s, l[1]), u[1] = pr(s, u[1]);
}
function B3(t, e, r, n, a, i, o, s) {
  var l = Fw, u = Ot, c = pr(dr(l(t, r, a), 1), 0), d = pr(dr(l(e, n, i), 1), 0), p = u(t, r, a, c), f = u(e, n, i, d);
  o[0] = dr(t, a, p), o[1] = dr(e, i, f), s[0] = pr(t, a, p), s[1] = pr(e, i, f);
}
function F3(t, e, r, n, a, i, o, s, l) {
  var u = Ra, c = Oa, d = Math.abs(a - i);
  if (d % pi < 1e-4 && d > 1e-4) {
    s[0] = t - r, s[1] = e - n, l[0] = t + r, l[1] = e + n;
    return;
  }
  if (Cc[0] = Oh(a) * r + t, Cc[1] = Rh(a) * n + e, Ac[0] = Oh(i) * r + t, Ac[1] = Rh(i) * n + e, u(s, Cc, Ac), c(l, Cc, Ac), a = a % pi, a < 0 && (a = a + pi), i = i % pi, i < 0 && (i = i + pi), a > i && !o ? i += pi : a < i && o && (a += pi), o) {
    var p = i;
    i = a, a = p;
  }
  for (var f = 0; f < i; f += Math.PI / 2)
    f > a && (wc[0] = Oh(f) * r + t, wc[1] = Rh(f) * n + e, u(s, wc, s), c(l, wc, l));
}
var Ze = {
  M: 1,
  L: 2,
  C: 3,
  Q: 4,
  A: 5,
  Z: 6,
  R: 7
}, fi = [], hi = [], dn = [], ha = [], pn = [], fn = [], Lh = Math.min, Ph = Math.max, gi = Math.cos, vi = Math.sin, Vn = Math.abs, um = Math.PI, Ta = um * 2, kh = typeof Float32Array < "u", Xs = [];
function Bh(t) {
  var e = Math.round(t / um * 1e8) / 1e8;
  return e % 2 * um;
}
function ty(t, e) {
  var r = Bh(t[0]);
  r < 0 && (r += Ta);
  var n = r - t[0], a = t[1];
  a += n, !e && a - r >= Ta ? a = r + Ta : e && r - a >= Ta ? a = r - Ta : !e && r > a ? a = r + (Ta - Bh(r - a)) : e && r < a && (a = r - (Ta - Bh(a - r))), t[0] = r, t[1] = a;
}
var Pn = function() {
  function t(e) {
    this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, e && (this._saveData = !1), this._saveData && (this.data = []);
  }
  return t.prototype.increaseVersion = function() {
    this._version++;
  }, t.prototype.getVersion = function() {
    return this._version;
  }, t.prototype.setScale = function(e, r, n) {
    n = n || 0, n > 0 && (this._ux = Vn(n / ap / e) || 0, this._uy = Vn(n / ap / r) || 0);
  }, t.prototype.setDPR = function(e) {
    this.dpr = e;
  }, t.prototype.setContext = function(e) {
    this._ctx = e;
  }, t.prototype.getContext = function() {
    return this._ctx;
  }, t.prototype.beginPath = function() {
    return this._ctx && this._ctx.beginPath(), this.reset(), this;
  }, t.prototype.reset = function() {
    this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
  }, t.prototype.moveTo = function(e, r) {
    return this._drawPendingPt(), this.addData(Ze.M, e, r), this._ctx && this._ctx.moveTo(e, r), this._x0 = e, this._y0 = r, this._xi = e, this._yi = r, this;
  }, t.prototype.lineTo = function(e, r) {
    var n = Vn(e - this._xi), a = Vn(r - this._yi), i = n > this._ux || a > this._uy;
    if (this.addData(Ze.L, e, r), this._ctx && i && this._ctx.lineTo(e, r), i)
      this._xi = e, this._yi = r, this._pendingPtDist = 0;
    else {
      var o = n * n + a * a;
      o > this._pendingPtDist && (this._pendingPtX = e, this._pendingPtY = r, this._pendingPtDist = o);
    }
    return this;
  }, t.prototype.bezierCurveTo = function(e, r, n, a, i, o) {
    return this._drawPendingPt(), this.addData(Ze.C, e, r, n, a, i, o), this._ctx && this._ctx.bezierCurveTo(e, r, n, a, i, o), this._xi = i, this._yi = o, this;
  }, t.prototype.quadraticCurveTo = function(e, r, n, a) {
    return this._drawPendingPt(), this.addData(Ze.Q, e, r, n, a), this._ctx && this._ctx.quadraticCurveTo(e, r, n, a), this._xi = n, this._yi = a, this;
  }, t.prototype.arc = function(e, r, n, a, i, o) {
    this._drawPendingPt(), Xs[0] = a, Xs[1] = i, ty(Xs, o), a = Xs[0], i = Xs[1];
    var s = i - a;
    return this.addData(Ze.A, e, r, n, n, a, s, 0, o ? 0 : 1), this._ctx && this._ctx.arc(e, r, n, a, i, o), this._xi = gi(i) * n + e, this._yi = vi(i) * n + r, this;
  }, t.prototype.arcTo = function(e, r, n, a, i) {
    return this._drawPendingPt(), this._ctx && this._ctx.arcTo(e, r, n, a, i), this;
  }, t.prototype.rect = function(e, r, n, a) {
    return this._drawPendingPt(), this._ctx && this._ctx.rect(e, r, n, a), this.addData(Ze.R, e, r, n, a), this;
  }, t.prototype.closePath = function() {
    this._drawPendingPt(), this.addData(Ze.Z);
    var e = this._ctx, r = this._x0, n = this._y0;
    return e && e.closePath(), this._xi = r, this._yi = n, this;
  }, t.prototype.fill = function(e) {
    e && e.fill(), this.toStatic();
  }, t.prototype.stroke = function(e) {
    e && e.stroke(), this.toStatic();
  }, t.prototype.len = function() {
    return this._len;
  }, t.prototype.setData = function(e) {
    var r = e.length;
    !(this.data && this.data.length === r) && kh && (this.data = new Float32Array(r));
    for (var n = 0; n < r; n++)
      this.data[n] = e[n];
    this._len = r;
  }, t.prototype.appendPath = function(e) {
    e instanceof Array || (e = [e]);
    for (var r = e.length, n = 0, a = this._len, i = 0; i < r; i++)
      n += e[i].len();
    kh && this.data instanceof Float32Array && (this.data = new Float32Array(a + n));
    for (var i = 0; i < r; i++)
      for (var o = e[i].data, s = 0; s < o.length; s++)
        this.data[a++] = o[s];
    this._len = a;
  }, t.prototype.addData = function(e, r, n, a, i, o, s, l, u) {
    if (this._saveData) {
      var c = this.data;
      this._len + arguments.length > c.length && (this._expandData(), c = this.data);
      for (var d = 0; d < arguments.length; d++)
        c[this._len++] = arguments[d];
    }
  }, t.prototype._drawPendingPt = function() {
    this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
  }, t.prototype._expandData = function() {
    if (!(this.data instanceof Array)) {
      for (var e = [], r = 0; r < this._len; r++)
        e[r] = this.data[r];
      this.data = e;
    }
  }, t.prototype.toStatic = function() {
    if (this._saveData) {
      this._drawPendingPt();
      var e = this.data;
      e instanceof Array && (e.length = this._len, kh && this._len > 11 && (this.data = new Float32Array(e)));
    }
  }, t.prototype.getBoundingRect = function() {
    dn[0] = dn[1] = pn[0] = pn[1] = Number.MAX_VALUE, ha[0] = ha[1] = fn[0] = fn[1] = -Number.MAX_VALUE;
    var e = this.data, r = 0, n = 0, a = 0, i = 0, o;
    for (o = 0; o < this._len; ) {
      var s = e[o++], l = o === 1;
      switch (l && (r = e[o], n = e[o + 1], a = r, i = n), s) {
        case Ze.M:
          r = a = e[o++], n = i = e[o++], pn[0] = a, pn[1] = i, fn[0] = a, fn[1] = i;
          break;
        case Ze.L:
          _S(r, n, e[o], e[o + 1], pn, fn), r = e[o++], n = e[o++];
          break;
        case Ze.C:
          k3(r, n, e[o++], e[o++], e[o++], e[o++], e[o], e[o + 1], pn, fn), r = e[o++], n = e[o++];
          break;
        case Ze.Q:
          B3(r, n, e[o++], e[o++], e[o], e[o + 1], pn, fn), r = e[o++], n = e[o++];
          break;
        case Ze.A:
          var u = e[o++], c = e[o++], d = e[o++], p = e[o++], f = e[o++], h = e[o++] + f;
          o += 1;
          var g = !e[o++];
          l && (a = gi(f) * d + u, i = vi(f) * p + c), F3(u, c, d, p, f, h, g, pn, fn), r = gi(h) * d + u, n = vi(h) * p + c;
          break;
        case Ze.R:
          a = r = e[o++], i = n = e[o++];
          var v = e[o++], m = e[o++];
          _S(a, i, a + v, i + m, pn, fn);
          break;
        case Ze.Z:
          r = a, n = i;
          break;
      }
      Ra(dn, dn, pn), Oa(ha, ha, fn);
    }
    return o === 0 && (dn[0] = dn[1] = ha[0] = ha[1] = 0), new Te(dn[0], dn[1], ha[0] - dn[0], ha[1] - dn[1]);
  }, t.prototype._calculateLength = function() {
    var e = this.data, r = this._len, n = this._ux, a = this._uy, i = 0, o = 0, s = 0, l = 0;
    this._pathSegLen || (this._pathSegLen = []);
    for (var u = this._pathSegLen, c = 0, d = 0, p = 0; p < r; ) {
      var f = e[p++], h = p === 1;
      h && (i = e[p], o = e[p + 1], s = i, l = o);
      var g = -1;
      switch (f) {
        case Ze.M:
          i = s = e[p++], o = l = e[p++];
          break;
        case Ze.L: {
          var v = e[p++], m = e[p++], _ = v - i, y = m - o;
          (Vn(_) > n || Vn(y) > a || p === r - 1) && (g = Math.sqrt(_ * _ + y * y), i = v, o = m);
          break;
        }
        case Ze.C: {
          var b = e[p++], S = e[p++], v = e[p++], m = e[p++], E = e[p++], T = e[p++];
          g = tF(i, o, b, S, v, m, E, T, 10), i = E, o = T;
          break;
        }
        case Ze.Q: {
          var b = e[p++], S = e[p++], v = e[p++], m = e[p++];
          g = nF(i, o, b, S, v, m, 10), i = v, o = m;
          break;
        }
        case Ze.A:
          var x = e[p++], C = e[p++], A = e[p++], D = e[p++], M = e[p++], I = e[p++], N = I + M;
          p += 1, h && (s = gi(M) * A + x, l = vi(M) * D + C), g = Ph(A, D) * Lh(Ta, Math.abs(I)), i = gi(N) * A + x, o = vi(N) * D + C;
          break;
        case Ze.R: {
          s = i = e[p++], l = o = e[p++];
          var R = e[p++], O = e[p++];
          g = R * 2 + O * 2;
          break;
        }
        case Ze.Z: {
          var _ = s - i, y = l - o;
          g = Math.sqrt(_ * _ + y * y), i = s, o = l;
          break;
        }
      }
      g >= 0 && (u[d++] = g, c += g);
    }
    return this._pathLen = c, c;
  }, t.prototype.rebuildPath = function(e, r) {
    var n = this.data, a = this._ux, i = this._uy, o = this._len, s, l, u, c, d, p, f = r < 1, h, g, v = 0, m = 0, _, y = 0, b, S;
    if (!(f && (this._pathSegLen || this._calculateLength(), h = this._pathSegLen, g = this._pathLen, _ = r * g, !_)))
      e: for (var E = 0; E < o; ) {
        var T = n[E++], x = E === 1;
        switch (x && (u = n[E], c = n[E + 1], s = u, l = c), T !== Ze.L && y > 0 && (e.lineTo(b, S), y = 0), T) {
          case Ze.M:
            s = u = n[E++], l = c = n[E++], e.moveTo(u, c);
            break;
          case Ze.L: {
            d = n[E++], p = n[E++];
            var C = Vn(d - u), A = Vn(p - c);
            if (C > a || A > i) {
              if (f) {
                var D = h[m++];
                if (v + D > _) {
                  var M = (_ - v) / D;
                  e.lineTo(u * (1 - M) + d * M, c * (1 - M) + p * M);
                  break e;
                }
                v += D;
              }
              e.lineTo(d, p), u = d, c = p, y = 0;
            } else {
              var I = C * C + A * A;
              I > y && (b = d, S = p, y = I);
            }
            break;
          }
          case Ze.C: {
            var N = n[E++], R = n[E++], O = n[E++], B = n[E++], L = n[E++], F = n[E++];
            if (f) {
              var D = h[m++];
              if (v + D > _) {
                var M = (_ - v) / D;
                Ka(u, N, O, L, M, fi), Ka(c, R, B, F, M, hi), e.bezierCurveTo(fi[1], hi[1], fi[2], hi[2], fi[3], hi[3]);
                break e;
              }
              v += D;
            }
            e.bezierCurveTo(N, R, O, B, L, F), u = L, c = F;
            break;
          }
          case Ze.Q: {
            var N = n[E++], R = n[E++], O = n[E++], B = n[E++];
            if (f) {
              var D = h[m++];
              if (v + D > _) {
                var M = (_ - v) / D;
                lu(u, N, O, M, fi), lu(c, R, B, M, hi), e.quadraticCurveTo(fi[1], hi[1], fi[2], hi[2]);
                break e;
              }
              v += D;
            }
            e.quadraticCurveTo(N, R, O, B), u = O, c = B;
            break;
          }
          case Ze.A:
            var U = n[E++], z = n[E++], H = n[E++], Z = n[E++], ee = n[E++], oe = n[E++], Le = n[E++], Xe = !n[E++], fe = H > Z ? H : Z, re = Vn(H - Z) > 1e-3, ve = ee + oe, j = !1;
            if (f) {
              var D = h[m++];
              v + D > _ && (ve = ee + oe * (_ - v) / D, j = !0), v += D;
            }
            if (re && e.ellipse ? e.ellipse(U, z, H, Z, Le, ee, ve, Xe) : e.arc(U, z, fe, ee, ve, Xe), j)
              break e;
            x && (s = gi(ee) * H + U, l = vi(ee) * Z + z), u = gi(ve) * H + U, c = vi(ve) * Z + z;
            break;
          case Ze.R:
            s = u = n[E], l = c = n[E + 1], d = n[E++], p = n[E++];
            var ce = n[E++], qe = n[E++];
            if (f) {
              var D = h[m++];
              if (v + D > _) {
                var Ge = _ - v;
                e.moveTo(d, p), e.lineTo(d + Lh(Ge, ce), p), Ge -= ce, Ge > 0 && e.lineTo(d + ce, p + Lh(Ge, qe)), Ge -= qe, Ge > 0 && e.lineTo(d + Ph(ce - Ge, 0), p + qe), Ge -= ce, Ge > 0 && e.lineTo(d, p + Ph(qe - Ge, 0));
                break e;
              }
              v += D;
            }
            e.rect(d, p, ce, qe);
            break;
          case Ze.Z:
            if (f) {
              var D = h[m++];
              if (v + D > _) {
                var M = (_ - v) / D;
                e.lineTo(u * (1 - M) + s * M, c * (1 - M) + l * M);
                break e;
              }
              v += D;
            }
            e.closePath(), u = s, c = l;
        }
      }
  }, t.prototype.clone = function() {
    var e = new t(), r = this.data;
    return e.data = r.slice ? r.slice() : Array.prototype.slice.call(r), e._len = this._len, e;
  }, t.CMD = Ze, t.initDefaultProps = function() {
    var e = t.prototype;
    e._saveData = !0, e._ux = 0, e._uy = 0, e._pendingPtDist = 0, e._version = 0;
  }(), t;
}();
function Aa(t, e, r, n, a, i, o) {
  if (a === 0)
    return !1;
  var s = a, l = 0, u = t;
  if (o > e + s && o > n + s || o < e - s && o < n - s || i > t + s && i > r + s || i < t - s && i < r - s)
    return !1;
  if (t !== r)
    l = (e - n) / (t - r), u = (t * n - r * e) / (t - r);
  else
    return Math.abs(i - t) <= s / 2;
  var c = l * i - o + u, d = c * c / (l * l + 1);
  return d <= s / 2 * s / 2;
}
function G3(t, e, r, n, a, i, o, s, l, u, c) {
  if (l === 0)
    return !1;
  var d = l;
  if (c > e + d && c > n + d && c > i + d && c > s + d || c < e - d && c < n - d && c < i - d && c < s - d || u > t + d && u > r + d && u > a + d && u > o + d || u < t - d && u < r - d && u < a - d && u < o - d)
    return !1;
  var p = Bw(t, e, r, n, a, i, o, s, u, c, null);
  return p <= d / 2;
}
function _D(t, e, r, n, a, i, o, s, l) {
  if (o === 0)
    return !1;
  var u = o;
  if (l > e + u && l > n + u && l > i + u || l < e - u && l < n - u && l < i - u || s > t + u && s > r + u && s > a + u || s < t - u && s < r - u && s < a - u)
    return !1;
  var c = Gw(t, e, r, n, a, i, s, l, null);
  return c <= u / 2;
}
var SS = Math.PI * 2;
function _r(t) {
  return t %= SS, t < 0 && (t += SS), t;
}
var Qs = Math.PI * 2;
function U3(t, e, r, n, a, i, o, s, l) {
  if (o === 0)
    return !1;
  var u = o;
  s -= t, l -= e;
  var c = Math.sqrt(s * s + l * l);
  if (c - u > r || c + u < r)
    return !1;
  if (Math.abs(n - a) % Qs < 1e-4)
    return !0;
  if (i) {
    var d = n;
    n = _r(a), a = _r(d);
  } else
    n = _r(n), a = _r(a);
  n > a && (a += Qs);
  var p = Math.atan2(l, s);
  return p < 0 && (p += Qs), p >= n && p <= a || p + Qs >= n && p + Qs <= a;
}
function qn(t, e, r, n, a, i) {
  if (i > e && i > n || i < e && i < n || n === e)
    return 0;
  var o = (i - e) / (n - e), s = n < e ? 1 : -1;
  (o === 1 || o === 0) && (s = n < e ? 0.5 : -0.5);
  var l = o * (r - t) + t;
  return l === a ? 1 / 0 : l > a ? s : 0;
}
var ga = Pn.CMD, mi = Math.PI * 2, z3 = 1e-4;
function V3(t, e) {
  return Math.abs(t - e) < z3;
}
var Jt = [-1, -1, -1], Ir = [-1, -1];
function $3() {
  var t = Ir[0];
  Ir[0] = Ir[1], Ir[1] = t;
}
function H3(t, e, r, n, a, i, o, s, l, u) {
  if (u > e && u > n && u > i && u > s || u < e && u < n && u < i && u < s)
    return 0;
  var c = ep(e, n, i, s, u, Jt);
  if (c === 0)
    return 0;
  for (var d = 0, p = -1, f = void 0, h = void 0, g = 0; g < c; g++) {
    var v = Jt[g], m = v === 0 || v === 1 ? 0.5 : 1, _ = xt(t, r, a, o, v);
    _ < l || (p < 0 && (p = kw(e, n, i, s, Ir), Ir[1] < Ir[0] && p > 1 && $3(), f = xt(e, n, i, s, Ir[0]), p > 1 && (h = xt(e, n, i, s, Ir[1]))), p === 2 ? v < Ir[0] ? d += f < e ? m : -m : v < Ir[1] ? d += h < f ? m : -m : d += s < h ? m : -m : v < Ir[0] ? d += f < e ? m : -m : d += s < f ? m : -m);
  }
  return d;
}
function W3(t, e, r, n, a, i, o, s) {
  if (s > e && s > n && s > i || s < e && s < n && s < i)
    return 0;
  var l = rF(e, n, i, s, Jt);
  if (l === 0)
    return 0;
  var u = Fw(e, n, i);
  if (u >= 0 && u <= 1) {
    for (var c = 0, d = Ot(e, n, i, u), p = 0; p < l; p++) {
      var f = Jt[p] === 0 || Jt[p] === 1 ? 0.5 : 1, h = Ot(t, r, a, Jt[p]);
      h < o || (Jt[p] < u ? c += d < e ? f : -f : c += i < d ? f : -f);
    }
    return c;
  } else {
    var f = Jt[0] === 0 || Jt[0] === 1 ? 0.5 : 1, h = Ot(t, r, a, Jt[0]);
    return h < o ? 0 : i < e ? f : -f;
  }
}
function q3(t, e, r, n, a, i, o, s) {
  if (s -= e, s > r || s < -r)
    return 0;
  var l = Math.sqrt(r * r - s * s);
  Jt[0] = -l, Jt[1] = l;
  var u = Math.abs(n - a);
  if (u < 1e-4)
    return 0;
  if (u >= mi - 1e-4) {
    n = 0, a = mi;
    var c = i ? 1 : -1;
    return o >= Jt[0] + t && o <= Jt[1] + t ? c : 0;
  }
  if (n > a) {
    var d = n;
    n = a, a = d;
  }
  n < 0 && (n += mi, a += mi);
  for (var p = 0, f = 0; f < 2; f++) {
    var h = Jt[f];
    if (h + t > o) {
      var g = Math.atan2(s, h), c = i ? 1 : -1;
      g < 0 && (g = mi + g), (g >= n && g <= a || g + mi >= n && g + mi <= a) && (g > Math.PI / 2 && g < Math.PI * 1.5 && (c = -c), p += c);
    }
  }
  return p;
}
function yD(t, e, r, n, a) {
  for (var i = t.data, o = t.len(), s = 0, l = 0, u = 0, c = 0, d = 0, p, f, h = 0; h < o; ) {
    var g = i[h++], v = h === 1;
    switch (g === ga.M && h > 1 && (r || (s += qn(l, u, c, d, n, a))), v && (l = i[h], u = i[h + 1], c = l, d = u), g) {
      case ga.M:
        c = i[h++], d = i[h++], l = c, u = d;
        break;
      case ga.L:
        if (r) {
          if (Aa(l, u, i[h], i[h + 1], e, n, a))
            return !0;
        } else
          s += qn(l, u, i[h], i[h + 1], n, a) || 0;
        l = i[h++], u = i[h++];
        break;
      case ga.C:
        if (r) {
          if (G3(l, u, i[h++], i[h++], i[h++], i[h++], i[h], i[h + 1], e, n, a))
            return !0;
        } else
          s += H3(l, u, i[h++], i[h++], i[h++], i[h++], i[h], i[h + 1], n, a) || 0;
        l = i[h++], u = i[h++];
        break;
      case ga.Q:
        if (r) {
          if (_D(l, u, i[h++], i[h++], i[h], i[h + 1], e, n, a))
            return !0;
        } else
          s += W3(l, u, i[h++], i[h++], i[h], i[h + 1], n, a) || 0;
        l = i[h++], u = i[h++];
        break;
      case ga.A:
        var m = i[h++], _ = i[h++], y = i[h++], b = i[h++], S = i[h++], E = i[h++];
        h += 1;
        var T = !!(1 - i[h++]);
        p = Math.cos(S) * y + m, f = Math.sin(S) * b + _, v ? (c = p, d = f) : s += qn(l, u, p, f, n, a);
        var x = (n - m) * b / y + m;
        if (r) {
          if (U3(m, _, b, S, S + E, T, e, x, a))
            return !0;
        } else
          s += q3(m, _, b, S, S + E, T, x, a);
        l = Math.cos(S + E) * y + m, u = Math.sin(S + E) * b + _;
        break;
      case ga.R:
        c = l = i[h++], d = u = i[h++];
        var C = i[h++], A = i[h++];
        if (p = c + C, f = d + A, r) {
          if (Aa(c, d, p, d, e, n, a) || Aa(p, d, p, f, e, n, a) || Aa(p, f, c, f, e, n, a) || Aa(c, f, c, d, e, n, a))
            return !0;
        } else
          s += qn(p, d, p, f, n, a), s += qn(c, f, c, d, n, a);
        break;
      case ga.Z:
        if (r) {
          if (Aa(l, u, c, d, e, n, a))
            return !0;
        } else
          s += qn(l, u, c, d, n, a);
        l = c, u = d;
        break;
    }
  }
  return !r && !V3(u, d) && (s += qn(l, u, c, d, n, a) || 0), s !== 0;
}
function Y3(t, e, r) {
  return yD(t, 0, !1, e, r);
}
function K3(t, e, r, n) {
  return yD(t, e, !0, r, n);
}
var op = ie({
  fill: "#000",
  stroke: null,
  strokePercent: 1,
  fillOpacity: 1,
  strokeOpacity: 1,
  lineDashOffset: 0,
  lineWidth: 1,
  lineCap: "butt",
  miterLimit: 10,
  strokeNoScale: !1,
  strokeFirst: !1
}, Qi), Z3 = {
  style: ie({
    fill: !0,
    stroke: !0,
    strokePercent: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineDashOffset: !0,
    lineWidth: !0,
    miterLimit: !0
  }, lf.style)
}, Fh = On.concat([
  "invisible",
  "culling",
  "z",
  "z2",
  "zlevel",
  "parent"
]), Ce = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.update = function() {
    var r = this;
    t.prototype.update.call(this);
    var n = this.style;
    if (n.decal) {
      var a = this._decalEl = this._decalEl || new e();
      a.buildPath === e.prototype.buildPath && (a.buildPath = function(l) {
        r.buildPath(l, r.shape);
      }), a.silent = !0;
      var i = a.style;
      for (var o in n)
        i[o] !== n[o] && (i[o] = n[o]);
      i.fill = n.fill ? n.decal : null, i.decal = null, i.shadowColor = null, n.strokeFirst && (i.stroke = null);
      for (var s = 0; s < Fh.length; ++s)
        a[Fh[s]] = this[Fh[s]];
      a.__dirty |= Mn;
    } else this._decalEl && (this._decalEl = null);
  }, e.prototype.getDecalElement = function() {
    return this._decalEl;
  }, e.prototype._init = function(r) {
    var n = Me(r);
    this.shape = this.getDefaultShape();
    var a = this.getDefaultStyle();
    a && this.useStyle(a);
    for (var i = 0; i < n.length; i++) {
      var o = n[i], s = r[o];
      o === "style" ? this.style ? G(this.style, s) : this.useStyle(s) : o === "shape" ? G(this.shape, s) : t.prototype.attrKV.call(this, o, s);
    }
    this.style || this.useStyle({});
  }, e.prototype.getDefaultStyle = function() {
    return null;
  }, e.prototype.getDefaultShape = function() {
    return {};
  }, e.prototype.canBeInsideText = function() {
    return this.hasFill();
  }, e.prototype.getInsideTextFill = function() {
    var r = this.style.fill;
    if (r !== "none") {
      if (Y(r)) {
        var n = rp(r, 0);
        return n > 0.5 ? nm : n > 0.2 ? NF : am;
      } else if (r)
        return am;
    }
    return nm;
  }, e.prototype.getInsideTextStroke = function(r) {
    var n = this.style.fill;
    if (Y(n)) {
      var a = this.__zr, i = !!(a && a.isDarkMode()), o = rp(r, 0) < rm;
      if (i === o)
        return n;
    }
  }, e.prototype.buildPath = function(r, n, a) {
  }, e.prototype.pathUpdated = function() {
    this.__dirty &= -5;
  }, e.prototype.getUpdatedPathProxy = function(r) {
    return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, r), this.path;
  }, e.prototype.createPathProxy = function() {
    this.path = new Pn(!1);
  }, e.prototype.hasStroke = function() {
    var r = this.style, n = r.stroke;
    return !(n == null || n === "none" || !(r.lineWidth > 0));
  }, e.prototype.hasFill = function() {
    var r = this.style, n = r.fill;
    return n != null && n !== "none";
  }, e.prototype.getBoundingRect = function() {
    var r = this._rect, n = this.style, a = !r;
    if (a) {
      var i = !1;
      this.path || (i = !0, this.createPathProxy());
      var o = this.path;
      (i || this.__dirty & El) && (o.beginPath(), this.buildPath(o, this.shape, !1), this.pathUpdated()), r = o.getBoundingRect();
    }
    if (this._rect = r, this.hasStroke() && this.path && this.path.len() > 0) {
      var s = this._rectStroke || (this._rectStroke = r.clone());
      if (this.__dirty || a) {
        s.copy(r);
        var l = n.strokeNoScale ? this.getLineScale() : 1, u = n.lineWidth;
        if (!this.hasFill()) {
          var c = this.strokeContainThreshold;
          u = Math.max(u, c ?? 4);
        }
        l > 1e-10 && (s.width += u / l, s.height += u / l, s.x -= u / l / 2, s.y -= u / l / 2);
      }
      return s;
    }
    return r;
  }, e.prototype.contain = function(r, n) {
    var a = this.transformCoordToLocal(r, n), i = this.getBoundingRect(), o = this.style;
    if (r = a[0], n = a[1], i.contain(r, n)) {
      var s = this.path;
      if (this.hasStroke()) {
        var l = o.lineWidth, u = o.strokeNoScale ? this.getLineScale() : 1;
        if (u > 1e-10 && (this.hasFill() || (l = Math.max(l, this.strokeContainThreshold)), K3(s, l / u, r, n)))
          return !0;
      }
      if (this.hasFill())
        return Y3(s, r, n);
    }
    return !1;
  }, e.prototype.dirtyShape = function() {
    this.__dirty |= El, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
  }, e.prototype.dirty = function() {
    this.dirtyStyle(), this.dirtyShape();
  }, e.prototype.animateShape = function(r) {
    return this.animate("shape", r);
  }, e.prototype.updateDuringAnimation = function(r) {
    r === "style" ? this.dirtyStyle() : r === "shape" ? this.dirtyShape() : this.markRedraw();
  }, e.prototype.attrKV = function(r, n) {
    r === "shape" ? this.setShape(n) : t.prototype.attrKV.call(this, r, n);
  }, e.prototype.setShape = function(r, n) {
    var a = this.shape;
    return a || (a = this.shape = {}), typeof r == "string" ? a[r] = n : G(a, r), this.dirtyShape(), this;
  }, e.prototype.shapeChanged = function() {
    return !!(this.__dirty & El);
  }, e.prototype.createStyle = function(r) {
    return ef(op, r);
  }, e.prototype._innerSaveToNormal = function(r) {
    t.prototype._innerSaveToNormal.call(this, r);
    var n = this._normalState;
    r.shape && !n.shape && (n.shape = G({}, this.shape));
  }, e.prototype._applyStateObj = function(r, n, a, i, o, s) {
    t.prototype._applyStateObj.call(this, r, n, a, i, o, s);
    var l = !(n && i), u;
    if (n && n.shape ? o ? i ? u = n.shape : (u = G({}, a.shape), G(u, n.shape)) : (u = G({}, i ? this.shape : a.shape), G(u, n.shape)) : l && (u = a.shape), u)
      if (o) {
        this.shape = G({}, this.shape);
        for (var c = {}, d = Me(u), p = 0; p < d.length; p++) {
          var f = d[p];
          typeof u[f] == "object" ? this.shape[f] = u[f] : c[f] = u[f];
        }
        this._transitionState(r, {
          shape: c
        }, s);
      } else
        this.shape = u, this.dirtyShape();
  }, e.prototype._mergeStates = function(r) {
    for (var n = t.prototype._mergeStates.call(this, r), a, i = 0; i < r.length; i++) {
      var o = r[i];
      o.shape && (a = a || {}, this._mergeStyle(a, o.shape));
    }
    return a && (n.shape = a), n;
  }, e.prototype.getAnimationStyleProps = function() {
    return Z3;
  }, e.prototype.isZeroArea = function() {
    return !1;
  }, e.extend = function(r) {
    var n = function(i) {
      k(o, i);
      function o(s) {
        var l = i.call(this, s) || this;
        return r.init && r.init.call(l, s), l;
      }
      return o.prototype.getDefaultStyle = function() {
        return le(r.style);
      }, o.prototype.getDefaultShape = function() {
        return le(r.shape);
      }, o;
    }(e);
    for (var a in r)
      typeof r[a] == "function" && (n.prototype[a] = r[a]);
    return n;
  }, e.initDefaultProps = function() {
    var r = e.prototype;
    r.type = "path", r.strokeContainThreshold = 5, r.segmentIgnoreThreshold = 0, r.subPixelOptimize = !1, r.autoBatch = !1, r.__dirty = Mn | Dd | El;
  }(), e;
}(Fr), X3 = ie({
  strokeFirst: !0,
  font: qa,
  x: 0,
  y: 0,
  textAlign: "left",
  textBaseline: "top",
  miterLimit: 2
}, op), vs = function(t) {
  k(e, t);
  function e() {
    return t !== null && t.apply(this, arguments) || this;
  }
  return e.prototype.hasStroke = function() {
    var r = this.style, n = r.stroke;
    return n != null && n !== "none" && r.lineWidth > 0;
  }, e.prototype.hasFill = function() {
    var r = this.style, n = r.fill;
    return n != null && n !== "none";
  }, e.prototype.createStyle = function(r) {
    return ef(X3, r);
  }, e.prototype.setBoundingRect = function(r) {
    this._rect = r;
  }, e.prototype.getBoundingRect = function() {
    var r = this.style;
    if (!this._rect) {
      var n = r.text;
      n != null ? n += "" : n = "";
      var a = Uu(n, r.font, r.textAlign, r.textBaseline);
      if (a.x += r.x || 0, a.y += r.y || 0, this.hasStroke()) {
        var i = r.lineWidth;
        a.x -= i / 2, a.y -= i / 2, a.width += i, a.height += i;
      }
      this._rect = a;
    }
    return this._rect;
  }, e.initDefaultProps = function() {
    var r = e.prototype;
    r.dirtyRectTolerance = 10;
  }(), e;
}(Fr);
vs.prototype.type = "tspan";
var Q3 = ie({
  x: 0,
  y: 0
}, Qi), j3 = {
  style: ie({
    x: !0,
    y: !0,
    width: !0,
    height: !0,
    sx: !0,
    sy: !0,
    sWidth: !0,
    sHeight: !0
  }, lf.style)
};
function J3(t) {
  return !!(t && typeof t != "string" && t.width && t.height);
}
var Bt = function(t) {
  k(e, t);
  function e() {
    return t !== null && t.apply(this, arguments) || this;
  }
  return e.prototype.createStyle = function(r) {
    return ef(Q3, r);
  }, e.prototype._getSize = function(r) {
    var n = this.style, a = n[r];
    if (a != null)
      return a;
    var i = J3(n.image) ? n.image : this.__image;
    if (!i)
      return 0;
    var o = r === "width" ? "height" : "width", s = n[o];
    return s == null ? i[r] : i[r] / i[o] * s;
  }, e.prototype.getWidth = function() {
    return this._getSize("width");
  }, e.prototype.getHeight = function() {
    return this._getSize("height");
  }, e.prototype.getAnimationStyleProps = function() {
    return j3;
  }, e.prototype.getBoundingRect = function() {
    var r = this.style;
    return this._rect || (this._rect = new Te(r.x || 0, r.y || 0, this.getWidth(), this.getHeight())), this._rect;
  }, e;
}(Fr);
Bt.prototype.type = "image";
function eG(t, e) {
  var r = e.x, n = e.y, a = e.width, i = e.height, o = e.r, s, l, u, c;
  a < 0 && (r = r + a, a = -a), i < 0 && (n = n + i, i = -i), typeof o == "number" ? s = l = u = c = o : o instanceof Array ? o.length === 1 ? s = l = u = c = o[0] : o.length === 2 ? (s = u = o[0], l = c = o[1]) : o.length === 3 ? (s = o[0], l = c = o[1], u = o[2]) : (s = o[0], l = o[1], u = o[2], c = o[3]) : s = l = u = c = 0;
  var d;
  s + l > a && (d = s + l, s *= a / d, l *= a / d), u + c > a && (d = u + c, u *= a / d, c *= a / d), l + u > i && (d = l + u, l *= i / d, u *= i / d), s + c > i && (d = s + c, s *= i / d, c *= i / d), t.moveTo(r + s, n), t.lineTo(r + a - l, n), l !== 0 && t.arc(r + a - l, n + l, l, -Math.PI / 2, 0), t.lineTo(r + a, n + i - u), u !== 0 && t.arc(r + a - u, n + i - u, u, 0, Math.PI / 2), t.lineTo(r + c, n + i), c !== 0 && t.arc(r + c, n + i - c, c, Math.PI / 2, Math.PI), t.lineTo(r, n + s), s !== 0 && t.arc(r + s, n + s, s, Math.PI, Math.PI * 1.5);
}
var rs = Math.round;
function bD(t, e, r) {
  if (e) {
    var n = e.x1, a = e.x2, i = e.y1, o = e.y2;
    t.x1 = n, t.x2 = a, t.y1 = i, t.y2 = o;
    var s = r && r.lineWidth;
    return s && (rs(n * 2) === rs(a * 2) && (t.x1 = t.x2 = Vi(n, s, !0)), rs(i * 2) === rs(o * 2) && (t.y1 = t.y2 = Vi(i, s, !0))), t;
  }
}
function SD(t, e, r) {
  if (e) {
    var n = e.x, a = e.y, i = e.width, o = e.height;
    t.x = n, t.y = a, t.width = i, t.height = o;
    var s = r && r.lineWidth;
    return s && (t.x = Vi(n, s, !0), t.y = Vi(a, s, !0), t.width = Math.max(Vi(n + i, s, !1) - t.x, i === 0 ? 0 : 1), t.height = Math.max(Vi(a + o, s, !1) - t.y, o === 0 ? 0 : 1)), t;
  }
}
function Vi(t, e, r) {
  if (!e)
    return t;
  var n = rs(t * 2);
  return (n + rs(e)) % 2 === 0 ? n / 2 : (n + (r ? 1 : -1)) / 2;
}
var tG = /* @__PURE__ */ function() {
  function t() {
    this.x = 0, this.y = 0, this.width = 0, this.height = 0;
  }
  return t;
}(), rG = {}, Re = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new tG();
  }, e.prototype.buildPath = function(r, n) {
    var a, i, o, s;
    if (this.subPixelOptimize) {
      var l = SD(rG, n, this.style);
      a = l.x, i = l.y, o = l.width, s = l.height, l.r = n.r, n = l;
    } else
      a = n.x, i = n.y, o = n.width, s = n.height;
    n.r ? eG(r, n) : r.rect(a, i, o, s);
  }, e.prototype.isZeroArea = function() {
    return !this.shape.width || !this.shape.height;
  }, e;
}(Ce);
Re.prototype.type = "rect";
var ES = {
  fill: "#000"
}, TS = 2, nG = {
  style: ie({
    fill: !0,
    stroke: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineWidth: !0,
    fontSize: !0,
    lineHeight: !0,
    width: !0,
    height: !0,
    textShadowColor: !0,
    textShadowBlur: !0,
    textShadowOffsetX: !0,
    textShadowOffsetY: !0,
    backgroundColor: !0,
    padding: !0,
    borderColor: !0,
    borderWidth: !0,
    borderRadius: !0
  }, lf.style)
}, Pe = function(t) {
  k(e, t);
  function e(r) {
    var n = t.call(this) || this;
    return n.type = "text", n._children = [], n._defaultStyle = ES, n.attr(r), n;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.update = function() {
    t.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
    for (var r = 0; r < this._children.length; r++) {
      var n = this._children[r];
      n.zlevel = this.zlevel, n.z = this.z, n.z2 = this.z2, n.culling = this.culling, n.cursor = this.cursor, n.invisible = this.invisible;
    }
  }, e.prototype.updateTransform = function() {
    var r = this.innerTransformable;
    r ? (r.updateTransform(), r.transform && (this.transform = r.transform)) : t.prototype.updateTransform.call(this);
  }, e.prototype.getLocalTransform = function(r) {
    var n = this.innerTransformable;
    return n ? n.getLocalTransform(r) : t.prototype.getLocalTransform.call(this, r);
  }, e.prototype.getComputedTransform = function() {
    return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), t.prototype.getComputedTransform.call(this);
  }, e.prototype._updateSubTexts = function() {
    this._childCursor = 0, oG(this.style), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
  }, e.prototype.addSelfToZr = function(r) {
    t.prototype.addSelfToZr.call(this, r);
    for (var n = 0; n < this._children.length; n++)
      this._children[n].__zr = r;
  }, e.prototype.removeSelfFromZr = function(r) {
    t.prototype.removeSelfFromZr.call(this, r);
    for (var n = 0; n < this._children.length; n++)
      this._children[n].__zr = null;
  }, e.prototype.getBoundingRect = function() {
    if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
      for (var r = new Te(0, 0, 0, 0), n = this._children, a = [], i = null, o = 0; o < n.length; o++) {
        var s = n[o], l = s.getBoundingRect(), u = s.getLocalTransform(a);
        u ? (r.copy(l), r.applyTransform(u), i = i || r.clone(), i.union(r)) : (i = i || l.clone(), i.union(l));
      }
      this._rect = i || r;
    }
    return this._rect;
  }, e.prototype.setDefaultTextStyle = function(r) {
    this._defaultStyle = r || ES;
  }, e.prototype.setTextContent = function(r) {
  }, e.prototype._mergeStyle = function(r, n) {
    if (!n)
      return r;
    var a = n.rich, i = r.rich || a && {};
    return G(r, n), a && i ? (this._mergeRich(i, a), r.rich = i) : i && (r.rich = i), r;
  }, e.prototype._mergeRich = function(r, n) {
    for (var a = Me(n), i = 0; i < a.length; i++) {
      var o = a[i];
      r[o] = r[o] || {}, G(r[o], n[o]);
    }
  }, e.prototype.getAnimationStyleProps = function() {
    return nG;
  }, e.prototype._getOrCreateChild = function(r) {
    var n = this._children[this._childCursor];
    return (!n || !(n instanceof r)) && (n = new r()), this._children[this._childCursor++] = n, n.__zr = this.__zr, n.parent = this, n;
  }, e.prototype._updatePlainTexts = function() {
    var r = this.style, n = r.font || qa, a = r.padding, i = IS(r), o = w3(i, r), s = Gh(r), l = !!r.backgroundColor, u = o.outerHeight, c = o.outerWidth, d = o.contentWidth, p = o.lines, f = o.lineHeight, h = this._defaultStyle;
    this.isTruncated = !!o.isTruncated;
    var g = r.x || 0, v = r.y || 0, m = r.align || h.align || "left", _ = r.verticalAlign || h.verticalAlign || "top", y = g, b = Zo(v, o.contentHeight, _);
    if (s || a) {
      var S = xl(g, c, m), E = Zo(v, u, _);
      s && this._renderBackground(r, r, S, E, c, u);
    }
    b += f / 2, a && (y = MS(g, m, a), _ === "top" ? b += a[0] : _ === "bottom" && (b -= a[2]));
    for (var T = 0, x = !1, C = DS("fill" in r ? r.fill : (x = !0, h.fill)), A = wS("stroke" in r ? r.stroke : !l && (!h.autoStroke || x) ? (T = TS, h.stroke) : null), D = r.textShadowBlur > 0, M = r.width != null && (r.overflow === "truncate" || r.overflow === "break" || r.overflow === "breakAll"), I = o.calculatedLineHeight, N = 0; N < p.length; N++) {
      var R = this._getOrCreateChild(vs), O = R.createStyle();
      R.useStyle(O), O.text = p[N], O.x = y, O.y = b, O.textAlign = m, O.textBaseline = "middle", O.opacity = r.opacity, O.strokeFirst = !0, D && (O.shadowBlur = r.textShadowBlur || 0, O.shadowColor = r.textShadowColor || "transparent", O.shadowOffsetX = r.textShadowOffsetX || 0, O.shadowOffsetY = r.textShadowOffsetY || 0), O.stroke = A, O.fill = C, A && (O.lineWidth = r.lineWidth || T, O.lineDash = r.lineDash, O.lineDashOffset = r.lineDashOffset || 0), O.font = n, CS(O, r), b += f, M && R.setBoundingRect(new Te(xl(O.x, d, O.textAlign), Zo(O.y, I, O.textBaseline), d, I));
    }
  }, e.prototype._updateRichTexts = function() {
    var r = this.style, n = IS(r), a = I3(n, r), i = a.width, o = a.outerWidth, s = a.outerHeight, l = r.padding, u = r.x || 0, c = r.y || 0, d = this._defaultStyle, p = r.align || d.align, f = r.verticalAlign || d.verticalAlign;
    this.isTruncated = !!a.isTruncated;
    var h = xl(u, o, p), g = Zo(c, s, f), v = h, m = g;
    l && (v += l[3], m += l[0]);
    var _ = v + i;
    Gh(r) && this._renderBackground(r, r, h, g, o, s);
    for (var y = !!r.backgroundColor, b = 0; b < a.lines.length; b++) {
      for (var S = a.lines[b], E = S.tokens, T = E.length, x = S.lineHeight, C = S.width, A = 0, D = v, M = _, I = T - 1, N = void 0; A < T && (N = E[A], !N.align || N.align === "left"); )
        this._placeToken(N, r, x, m, D, "left", y), C -= N.width, D += N.width, A++;
      for (; I >= 0 && (N = E[I], N.align === "right"); )
        this._placeToken(N, r, x, m, M, "right", y), C -= N.width, M -= N.width, I--;
      for (D += (i - (D - v) - (_ - M) - C) / 2; A <= I; )
        N = E[A], this._placeToken(N, r, x, m, D + N.width / 2, "center", y), D += N.width, A++;
      m += x;
    }
  }, e.prototype._placeToken = function(r, n, a, i, o, s, l) {
    var u = n.rich[r.styleName] || {};
    u.text = r.text;
    var c = r.verticalAlign, d = i + a / 2;
    c === "top" ? d = i + r.height / 2 : c === "bottom" && (d = i + a - r.height / 2);
    var p = !r.isLineHolder && Gh(u);
    p && this._renderBackground(u, n, s === "right" ? o - r.width : s === "center" ? o - r.width / 2 : o, d - r.height / 2, r.width, r.height);
    var f = !!u.backgroundColor, h = r.textPadding;
    h && (o = MS(o, s, h), d -= r.height / 2 - h[0] - r.innerHeight / 2);
    var g = this._getOrCreateChild(vs), v = g.createStyle();
    g.useStyle(v);
    var m = this._defaultStyle, _ = !1, y = 0, b = DS("fill" in u ? u.fill : "fill" in n ? n.fill : (_ = !0, m.fill)), S = wS("stroke" in u ? u.stroke : "stroke" in n ? n.stroke : !f && !l && (!m.autoStroke || _) ? (y = TS, m.stroke) : null), E = u.textShadowBlur > 0 || n.textShadowBlur > 0;
    v.text = r.text, v.x = o, v.y = d, E && (v.shadowBlur = u.textShadowBlur || n.textShadowBlur || 0, v.shadowColor = u.textShadowColor || n.textShadowColor || "transparent", v.shadowOffsetX = u.textShadowOffsetX || n.textShadowOffsetX || 0, v.shadowOffsetY = u.textShadowOffsetY || n.textShadowOffsetY || 0), v.textAlign = s, v.textBaseline = "middle", v.font = r.font || qa, v.opacity = Dn(u.opacity, n.opacity, 1), CS(v, u), S && (v.lineWidth = Dn(u.lineWidth, n.lineWidth, y), v.lineDash = ge(u.lineDash, n.lineDash), v.lineDashOffset = n.lineDashOffset || 0, v.stroke = S), b && (v.fill = b);
    var T = r.contentWidth, x = r.contentHeight;
    g.setBoundingRect(new Te(xl(v.x, T, v.textAlign), Zo(v.y, x, v.textBaseline), T, x));
  }, e.prototype._renderBackground = function(r, n, a, i, o, s) {
    var l = r.backgroundColor, u = r.borderWidth, c = r.borderColor, d = l && l.image, p = l && !d, f = r.borderRadius, h = this, g, v;
    if (p || r.lineHeight || u && c) {
      g = this._getOrCreateChild(Re), g.useStyle(g.createStyle()), g.style.fill = null;
      var m = g.shape;
      m.x = a, m.y = i, m.width = o, m.height = s, m.r = f, g.dirtyShape();
    }
    if (p) {
      var _ = g.style;
      _.fill = l || null, _.fillOpacity = ge(r.fillOpacity, 1);
    } else if (d) {
      v = this._getOrCreateChild(Bt), v.onload = function() {
        h.dirtyStyle();
      };
      var y = v.style;
      y.image = l.image, y.x = a, y.y = i, y.width = o, y.height = s;
    }
    if (u && c) {
      var _ = g.style;
      _.lineWidth = u, _.stroke = c, _.strokeOpacity = ge(r.strokeOpacity, 1), _.lineDash = r.borderDash, _.lineDashOffset = r.borderDashOffset || 0, g.strokeContainThreshold = 0, g.hasFill() && g.hasStroke() && (_.strokeFirst = !0, _.lineWidth *= 2);
    }
    var b = (g || v).style;
    b.shadowBlur = r.shadowBlur || 0, b.shadowColor = r.shadowColor || "transparent", b.shadowOffsetX = r.shadowOffsetX || 0, b.shadowOffsetY = r.shadowOffsetY || 0, b.opacity = Dn(r.opacity, n.opacity, 1);
  }, e.makeFont = function(r) {
    var n = "";
    return TD(r) && (n = [
      r.fontStyle,
      r.fontWeight,
      ED(r.fontSize),
      r.fontFamily || "sans-serif"
    ].join(" ")), n && Xr(n) || r.textFont || r.font;
  }, e;
}(Fr), aG = { left: !0, right: 1, center: 1 }, iG = { top: 1, bottom: 1, middle: 1 }, xS = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
function ED(t) {
  return typeof t == "string" && (t.indexOf("px") !== -1 || t.indexOf("rem") !== -1 || t.indexOf("em") !== -1) ? t : isNaN(+t) ? B_ + "px" : t + "px";
}
function CS(t, e) {
  for (var r = 0; r < xS.length; r++) {
    var n = xS[r], a = e[n];
    a != null && (t[n] = a);
  }
}
function TD(t) {
  return t.fontSize != null || t.fontFamily || t.fontWeight;
}
function oG(t) {
  return AS(t), w(t.rich, AS), t;
}
function AS(t) {
  if (t) {
    t.font = Pe.makeFont(t);
    var e = t.align;
    e === "middle" && (e = "center"), t.align = e == null || aG[e] ? e : "left";
    var r = t.verticalAlign;
    r === "center" && (r = "middle"), t.verticalAlign = r == null || iG[r] ? r : "top";
    var n = t.padding;
    n && (t.padding = $_(t.padding));
  }
}
function wS(t, e) {
  return t == null || e <= 0 || t === "transparent" || t === "none" ? null : t.image || t.colorStops ? "#000" : t;
}
function DS(t) {
  return t == null || t === "none" ? null : t.image || t.colorStops ? "#000" : t;
}
function MS(t, e, r) {
  return e === "right" ? t - r[1] : e === "center" ? t + r[3] / 2 - r[1] / 2 : t + r[3];
}
function IS(t) {
  var e = t.text;
  return e != null && (e += ""), e;
}
function Gh(t) {
  return !!(t.backgroundColor || t.lineHeight || t.borderWidth && t.borderColor);
}
var pe = Oe(), cm = function(t, e, r, n) {
  if (n) {
    var a = pe(n);
    a.dataIndex = r, a.dataType = e, a.seriesIndex = t, a.ssrType = "chart", n.type === "group" && n.traverse(function(i) {
      var o = pe(i);
      o.seriesIndex = t, o.dataIndex = r, o.dataType = e, o.ssrType = "chart";
    });
  }
}, NS = 1, RS = {}, xD = Oe(), ry = Oe(), ny = 0, Vu = 1, cf = 2, ir = ["emphasis", "blur", "select"], fu = ["normal", "emphasis", "blur", "select"], Ns = 10, sG = 9, ji = "highlight", Od = "downplay", $l = "select", Ld = "unselect", Hl = "toggleSelect";
function Io(t) {
  return t != null && t !== "none";
}
function df(t, e, r) {
  t.onHoverStateChange && (t.hoverState || 0) !== r && t.onHoverStateChange(e), t.hoverState = r;
}
function CD(t) {
  df(t, "emphasis", cf);
}
function AD(t) {
  t.hoverState === cf && df(t, "normal", ny);
}
function ay(t) {
  df(t, "blur", Vu);
}
function wD(t) {
  t.hoverState === Vu && df(t, "normal", ny);
}
function lG(t) {
  t.selected = !0;
}
function uG(t) {
  t.selected = !1;
}
function OS(t, e, r) {
  e(t, r);
}
function ua(t, e, r) {
  OS(t, e, r), t.isGroup && t.traverse(function(n) {
    OS(n, e, r);
  });
}
function sp(t, e) {
  switch (e) {
    case "emphasis":
      t.hoverState = cf;
      break;
    case "normal":
      t.hoverState = ny;
      break;
    case "blur":
      t.hoverState = Vu;
      break;
    case "select":
      t.selected = !0;
  }
}
function cG(t, e, r, n) {
  for (var a = t.style, i = {}, o = 0; o < e.length; o++) {
    var s = e[o], l = a[s];
    i[s] = l ?? (n && n[s]);
  }
  for (var o = 0; o < t.animators.length; o++) {
    var u = t.animators[o];
    u.__fromStateTransition && u.__fromStateTransition.indexOf(r) < 0 && u.targetName === "style" && u.saveTo(i, e);
  }
  return i;
}
function dG(t, e, r, n) {
  var a = r && xe(r, "select") >= 0, i = !1;
  if (t instanceof Ce) {
    var o = xD(t), s = a && o.selectFill || o.normalFill, l = a && o.selectStroke || o.normalStroke;
    if (Io(s) || Io(l)) {
      n = n || {};
      var u = n.style || {};
      u.fill === "inherit" ? (i = !0, n = G({}, n), u = G({}, u), u.fill = s) : !Io(u.fill) && Io(s) ? (i = !0, n = G({}, n), u = G({}, u), u.fill = Zv(s)) : !Io(u.stroke) && Io(l) && (i || (n = G({}, n), u = G({}, u)), u.stroke = Zv(l)), n.style = u;
    }
  }
  if (n && n.z2 == null) {
    i || (n = G({}, n));
    var c = t.z2EmphasisLift;
    n.z2 = t.z2 + (c ?? Ns);
  }
  return n;
}
function pG(t, e, r) {
  if (r && r.z2 == null) {
    r = G({}, r);
    var n = t.z2SelectLift;
    r.z2 = t.z2 + (n ?? sG);
  }
  return r;
}
function fG(t, e, r) {
  var n = xe(t.currentStates, e) >= 0, a = t.style.opacity, i = n ? null : cG(t, ["opacity"], e, {
    opacity: 1
  });
  r = r || {};
  var o = r.style || {};
  return o.opacity == null && (r = G({}, r), o = G({
    // Already being applied 'emphasis'. DON'T mul opacity multiple times.
    opacity: n ? a : i.opacity * 0.1
  }, o), r.style = o), r;
}
function Uh(t, e) {
  var r = this.states[t];
  if (this.style) {
    if (t === "emphasis")
      return dG(this, t, e, r);
    if (t === "blur")
      return fG(this, t, r);
    if (t === "select")
      return pG(this, t, r);
  }
  return r;
}
function lo(t) {
  t.stateProxy = Uh;
  var e = t.getTextContent(), r = t.getTextGuideLine();
  e && (e.stateProxy = Uh), r && (r.stateProxy = Uh);
}
function LS(t, e) {
  !ND(t, e) && !t.__highByOuter && ua(t, CD);
}
function PS(t, e) {
  !ND(t, e) && !t.__highByOuter && ua(t, AD);
}
function na(t, e) {
  t.__highByOuter |= 1 << (e || 0), ua(t, CD);
}
function aa(t, e) {
  !(t.__highByOuter &= ~(1 << (e || 0))) && ua(t, AD);
}
function DD(t) {
  ua(t, ay);
}
function iy(t) {
  ua(t, wD);
}
function MD(t) {
  ua(t, lG);
}
function ID(t) {
  ua(t, uG);
}
function ND(t, e) {
  return t.__highDownSilentOnTouch && e.zrByTouch;
}
function RD(t) {
  var e = t.getModel(), r = [], n = [];
  e.eachComponent(function(a, i) {
    var o = ry(i), s = a === "series", l = s ? t.getViewOfSeriesModel(i) : t.getViewOfComponentModel(i);
    !s && n.push(l), o.isBlured && (l.group.traverse(function(u) {
      wD(u);
    }), s && r.push(i)), o.isBlured = !1;
  }), w(n, function(a) {
    a && a.toggleBlurSeries && a.toggleBlurSeries(r, !1, e);
  });
}
function dm(t, e, r, n) {
  var a = n.getModel();
  r = r || "coordinateSystem";
  function i(u, c) {
    for (var d = 0; d < c.length; d++) {
      var p = u.getItemGraphicEl(c[d]);
      p && iy(p);
    }
  }
  if (t != null && !(!e || e === "none")) {
    var o = a.getSeriesByIndex(t), s = o.coordinateSystem;
    s && s.master && (s = s.master);
    var l = [];
    a.eachSeries(function(u) {
      var c = o === u, d = u.coordinateSystem;
      d && d.master && (d = d.master);
      var p = d && s ? d === s : c;
      if (!// Not blur other series if blurScope series
      (r === "series" && !c || r === "coordinateSystem" && !p || e === "series" && c)) {
        var f = n.getViewOfSeriesModel(u);
        if (f.group.traverse(function(v) {
          v.__highByOuter && c && e === "self" || ay(v);
        }), Kt(e))
          i(u.getData(), e);
        else if (se(e))
          for (var h = Me(e), g = 0; g < h.length; g++)
            i(u.getData(h[g]), e[h[g]]);
        l.push(u), ry(u).isBlured = !0;
      }
    }), a.eachComponent(function(u, c) {
      if (u !== "series") {
        var d = n.getViewOfComponentModel(c);
        d && d.toggleBlurSeries && d.toggleBlurSeries(l, !0, a);
      }
    });
  }
}
function pm(t, e, r) {
  if (!(t == null || e == null)) {
    var n = r.getModel().getComponent(t, e);
    if (n) {
      ry(n).isBlured = !0;
      var a = r.getViewOfComponentModel(n);
      !a || !a.focusBlurEnabled || a.group.traverse(function(i) {
        ay(i);
      });
    }
  }
}
function hG(t, e, r) {
  var n = t.seriesIndex, a = t.getData(e.dataType);
  if (a) {
    var i = oo(a, e);
    i = (V(i) ? i[0] : i) || 0;
    var o = a.getItemGraphicEl(i);
    if (!o)
      for (var s = a.count(), l = 0; !o && l < s; )
        o = a.getItemGraphicEl(l++);
    if (o) {
      var u = pe(o);
      dm(n, u.focus, u.blurScope, r);
    } else {
      var c = t.get(["emphasis", "focus"]), d = t.get(["emphasis", "blurScope"]);
      c != null && dm(n, c, d, r);
    }
  }
}
function oy(t, e, r, n) {
  var a = {
    focusSelf: !1,
    dispatchers: null
  };
  if (t == null || t === "series" || e == null || r == null)
    return a;
  var i = n.getModel().getComponent(t, e);
  if (!i)
    return a;
  var o = n.getViewOfComponentModel(i);
  if (!o || !o.findHighDownDispatchers)
    return a;
  for (var s = o.findHighDownDispatchers(r), l, u = 0; u < s.length; u++)
    if (pe(s[u]).focus === "self") {
      l = !0;
      break;
    }
  return {
    focusSelf: l,
    dispatchers: s
  };
}
function gG(t, e, r) {
  var n = pe(t), a = oy(n.componentMainType, n.componentIndex, n.componentHighDownName, r), i = a.dispatchers, o = a.focusSelf;
  i ? (o && pm(n.componentMainType, n.componentIndex, r), w(i, function(s) {
    return LS(s, e);
  })) : (dm(n.seriesIndex, n.focus, n.blurScope, r), n.focus === "self" && pm(n.componentMainType, n.componentIndex, r), LS(t, e));
}
function vG(t, e, r) {
  RD(r);
  var n = pe(t), a = oy(n.componentMainType, n.componentIndex, n.componentHighDownName, r).dispatchers;
  a ? w(a, function(i) {
    return PS(i, e);
  }) : PS(t, e);
}
function mG(t, e, r) {
  if (hm(e)) {
    var n = e.dataType, a = t.getData(n), i = oo(a, e);
    V(i) || (i = [i]), t[e.type === Hl ? "toggleSelect" : e.type === $l ? "select" : "unselect"](i, n);
  }
}
function kS(t) {
  var e = t.getAllData();
  w(e, function(r) {
    var n = r.data, a = r.type;
    n.eachItemGraphicEl(function(i, o) {
      t.isSelected(o, a) ? MD(i) : ID(i);
    });
  });
}
function _G(t) {
  var e = [];
  return t.eachSeries(function(r) {
    var n = r.getAllData();
    w(n, function(a) {
      a.data;
      var i = a.type, o = r.getSelectedDataIndices();
      if (o.length > 0) {
        var s = {
          dataIndex: o,
          seriesIndex: r.seriesIndex
        };
        i != null && (s.dataType = i), e.push(s);
      }
    });
  }), e;
}
function Ji(t, e, r) {
  $i(t, !0), ua(t, lo), fm(t, e, r);
}
function yG(t) {
  $i(t, !1);
}
function lt(t, e, r, n) {
  n ? yG(t) : Ji(t, e, r);
}
function fm(t, e, r) {
  var n = pe(t);
  e != null ? (n.focus = e, n.blurScope = r) : n.focus && (n.focus = null);
}
var BS = ["emphasis", "blur", "select"], bG = {
  itemStyle: "getItemStyle",
  lineStyle: "getLineStyle",
  areaStyle: "getAreaStyle"
};
function zt(t, e, r, n) {
  r = r || "itemStyle";
  for (var a = 0; a < BS.length; a++) {
    var i = BS[a], o = e.getModel([i, r]), s = t.ensureState(i);
    s.style = n ? n(o) : o[bG[r]]();
  }
}
function $i(t, e) {
  var r = e === !1, n = t;
  t.highDownSilentOnTouch && (n.__highDownSilentOnTouch = t.highDownSilentOnTouch), (!r || n.__highDownDispatcher) && (n.__highByOuter = n.__highByOuter || 0, n.__highDownDispatcher = !r);
}
function hu(t) {
  return !!(t && t.__highDownDispatcher);
}
function SG(t, e, r) {
  var n = pe(t);
  n.componentMainType = e.mainType, n.componentIndex = e.componentIndex, n.componentHighDownName = r;
}
function EG(t) {
  var e = RS[t];
  return e == null && NS <= 32 && (e = RS[t] = NS++), e;
}
function hm(t) {
  var e = t.type;
  return e === $l || e === Ld || e === Hl;
}
function FS(t) {
  var e = t.type;
  return e === ji || e === Od;
}
function TG(t) {
  var e = xD(t);
  e.normalFill = t.style.fill, e.normalStroke = t.style.stroke;
  var r = t.states.select || {};
  e.selectFill = r.style && r.style.fill || null, e.selectStroke = r.style && r.style.stroke || null;
}
var No = Pn.CMD, xG = [[], [], []], GS = Math.sqrt, CG = Math.atan2;
function OD(t, e) {
  if (e) {
    var r = t.data, n = t.len(), a, i, o, s, l, u, c = No.M, d = No.C, p = No.L, f = No.R, h = No.A, g = No.Q;
    for (o = 0, s = 0; o < n; ) {
      switch (a = r[o++], s = o, i = 0, a) {
        case c:
          i = 1;
          break;
        case p:
          i = 1;
          break;
        case d:
          i = 3;
          break;
        case g:
          i = 2;
          break;
        case h:
          var v = e[4], m = e[5], _ = GS(e[0] * e[0] + e[1] * e[1]), y = GS(e[2] * e[2] + e[3] * e[3]), b = CG(-e[1] / y, e[0] / _);
          r[o] *= _, r[o++] += v, r[o] *= y, r[o++] += m, r[o++] *= _, r[o++] *= y, r[o++] += b, r[o++] += b, o += 2, s = o;
          break;
        case f:
          u[0] = r[o++], u[1] = r[o++], Ut(u, u, e), r[s++] = u[0], r[s++] = u[1], u[0] += r[o++], u[1] += r[o++], Ut(u, u, e), r[s++] = u[0], r[s++] = u[1];
      }
      for (l = 0; l < i; l++) {
        var S = xG[l];
        S[0] = r[o++], S[1] = r[o++], Ut(S, S, e), r[s++] = S[0], r[s++] = S[1];
      }
    }
    t.increaseVersion();
  }
}
var zh = Math.sqrt, Dc = Math.sin, Mc = Math.cos, js = Math.PI;
function US(t) {
  return Math.sqrt(t[0] * t[0] + t[1] * t[1]);
}
function gm(t, e) {
  return (t[0] * e[0] + t[1] * e[1]) / (US(t) * US(e));
}
function zS(t, e) {
  return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(gm(t, e));
}
function VS(t, e, r, n, a, i, o, s, l, u, c) {
  var d = l * (js / 180), p = Mc(d) * (t - r) / 2 + Dc(d) * (e - n) / 2, f = -1 * Dc(d) * (t - r) / 2 + Mc(d) * (e - n) / 2, h = p * p / (o * o) + f * f / (s * s);
  h > 1 && (o *= zh(h), s *= zh(h));
  var g = (a === i ? -1 : 1) * zh((o * o * (s * s) - o * o * (f * f) - s * s * (p * p)) / (o * o * (f * f) + s * s * (p * p))) || 0, v = g * o * f / s, m = g * -s * p / o, _ = (t + r) / 2 + Mc(d) * v - Dc(d) * m, y = (e + n) / 2 + Dc(d) * v + Mc(d) * m, b = zS([1, 0], [(p - v) / o, (f - m) / s]), S = [(p - v) / o, (f - m) / s], E = [(-1 * p - v) / o, (-1 * f - m) / s], T = zS(S, E);
  if (gm(S, E) <= -1 && (T = js), gm(S, E) >= 1 && (T = 0), T < 0) {
    var x = Math.round(T / js * 1e6) / 1e6;
    T = js * 2 + x % 2 * js;
  }
  c.addData(u, _, y, o, s, b, T, d, i);
}
var AG = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig, wG = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function DG(t) {
  var e = new Pn();
  if (!t)
    return e;
  var r = 0, n = 0, a = r, i = n, o, s = Pn.CMD, l = t.match(AG);
  if (!l)
    return e;
  for (var u = 0; u < l.length; u++) {
    for (var c = l[u], d = c.charAt(0), p = void 0, f = c.match(wG) || [], h = f.length, g = 0; g < h; g++)
      f[g] = parseFloat(f[g]);
    for (var v = 0; v < h; ) {
      var m = void 0, _ = void 0, y = void 0, b = void 0, S = void 0, E = void 0, T = void 0, x = r, C = n, A = void 0, D = void 0;
      switch (d) {
        case "l":
          r += f[v++], n += f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "L":
          r = f[v++], n = f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "m":
          r += f[v++], n += f[v++], p = s.M, e.addData(p, r, n), a = r, i = n, d = "l";
          break;
        case "M":
          r = f[v++], n = f[v++], p = s.M, e.addData(p, r, n), a = r, i = n, d = "L";
          break;
        case "h":
          r += f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "H":
          r = f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "v":
          n += f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "V":
          n = f[v++], p = s.L, e.addData(p, r, n);
          break;
        case "C":
          p = s.C, e.addData(p, f[v++], f[v++], f[v++], f[v++], f[v++], f[v++]), r = f[v - 2], n = f[v - 1];
          break;
        case "c":
          p = s.C, e.addData(p, f[v++] + r, f[v++] + n, f[v++] + r, f[v++] + n, f[v++] + r, f[v++] + n), r += f[v - 2], n += f[v - 1];
          break;
        case "S":
          m = r, _ = n, A = e.len(), D = e.data, o === s.C && (m += r - D[A - 4], _ += n - D[A - 3]), p = s.C, x = f[v++], C = f[v++], r = f[v++], n = f[v++], e.addData(p, m, _, x, C, r, n);
          break;
        case "s":
          m = r, _ = n, A = e.len(), D = e.data, o === s.C && (m += r - D[A - 4], _ += n - D[A - 3]), p = s.C, x = r + f[v++], C = n + f[v++], r += f[v++], n += f[v++], e.addData(p, m, _, x, C, r, n);
          break;
        case "Q":
          x = f[v++], C = f[v++], r = f[v++], n = f[v++], p = s.Q, e.addData(p, x, C, r, n);
          break;
        case "q":
          x = f[v++] + r, C = f[v++] + n, r += f[v++], n += f[v++], p = s.Q, e.addData(p, x, C, r, n);
          break;
        case "T":
          m = r, _ = n, A = e.len(), D = e.data, o === s.Q && (m += r - D[A - 4], _ += n - D[A - 3]), r = f[v++], n = f[v++], p = s.Q, e.addData(p, m, _, r, n);
          break;
        case "t":
          m = r, _ = n, A = e.len(), D = e.data, o === s.Q && (m += r - D[A - 4], _ += n - D[A - 3]), r += f[v++], n += f[v++], p = s.Q, e.addData(p, m, _, r, n);
          break;
        case "A":
          y = f[v++], b = f[v++], S = f[v++], E = f[v++], T = f[v++], x = r, C = n, r = f[v++], n = f[v++], p = s.A, VS(x, C, r, n, E, T, y, b, S, p, e);
          break;
        case "a":
          y = f[v++], b = f[v++], S = f[v++], E = f[v++], T = f[v++], x = r, C = n, r += f[v++], n += f[v++], p = s.A, VS(x, C, r, n, E, T, y, b, S, p, e);
          break;
      }
    }
    (d === "z" || d === "Z") && (p = s.Z, e.addData(p), r = a, n = i), o = p;
  }
  return e.toStatic(), e;
}
var LD = function(t) {
  k(e, t);
  function e() {
    return t !== null && t.apply(this, arguments) || this;
  }
  return e.prototype.applyTransform = function(r) {
  }, e;
}(Ce);
function PD(t) {
  return t.setData != null;
}
function kD(t, e) {
  var r = DG(t), n = G({}, e);
  return n.buildPath = function(a) {
    if (PD(a)) {
      a.setData(r.data);
      var i = a.getContext();
      i && a.rebuildPath(i, 1);
    } else {
      var i = a;
      r.rebuildPath(i, 1);
    }
  }, n.applyTransform = function(a) {
    OD(r, a), this.dirtyShape();
  }, n;
}
function BD(t, e) {
  return new LD(kD(t, e));
}
function MG(t, e) {
  var r = kD(t, e), n = function(a) {
    k(i, a);
    function i(o) {
      var s = a.call(this, o) || this;
      return s.applyTransform = r.applyTransform, s.buildPath = r.buildPath, s;
    }
    return i;
  }(LD);
  return n;
}
function IG(t, e) {
  for (var r = [], n = t.length, a = 0; a < n; a++) {
    var i = t[a];
    r.push(i.getUpdatedPathProxy(!0));
  }
  var o = new Ce(e);
  return o.createPathProxy(), o.buildPath = function(s) {
    if (PD(s)) {
      s.appendPath(r);
      var l = s.getContext();
      l && s.rebuildPath(l, 1);
    }
  }, o;
}
function sy(t, e) {
  e = e || {};
  var r = new Ce();
  return t.shape && r.setShape(t.shape), r.setStyle(t.style), e.bakeTransform ? OD(r.path, t.getComputedTransform()) : e.toLocal ? r.setLocalTransform(t.getComputedTransform()) : r.copyTransform(t), r.buildPath = t.buildPath, r.applyTransform = r.applyTransform, r.z = t.z, r.z2 = t.z2, r.zlevel = t.zlevel, r;
}
var NG = /* @__PURE__ */ function() {
  function t() {
    this.cx = 0, this.cy = 0, this.r = 0;
  }
  return t;
}(), ca = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new NG();
  }, e.prototype.buildPath = function(r, n) {
    r.moveTo(n.cx + n.r, n.cy), r.arc(n.cx, n.cy, n.r, 0, Math.PI * 2);
  }, e;
}(Ce);
ca.prototype.type = "circle";
var RG = /* @__PURE__ */ function() {
  function t() {
    this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
  }
  return t;
}(), pf = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new RG();
  }, e.prototype.buildPath = function(r, n) {
    var a = 0.5522848, i = n.cx, o = n.cy, s = n.rx, l = n.ry, u = s * a, c = l * a;
    r.moveTo(i - s, o), r.bezierCurveTo(i - s, o - c, i - u, o - l, i, o - l), r.bezierCurveTo(i + u, o - l, i + s, o - c, i + s, o), r.bezierCurveTo(i + s, o + c, i + u, o + l, i, o + l), r.bezierCurveTo(i - u, o + l, i - s, o + c, i - s, o), r.closePath();
  }, e;
}(Ce);
pf.prototype.type = "ellipse";
var FD = Math.PI, Vh = FD * 2, _i = Math.sin, Ro = Math.cos, OG = Math.acos, Ht = Math.atan2, $S = Math.abs, Wl = Math.sqrt, Cl = Math.max, hn = Math.min, Wr = 1e-4;
function LG(t, e, r, n, a, i, o, s) {
  var l = r - t, u = n - e, c = o - a, d = s - i, p = d * l - c * u;
  if (!(p * p < Wr))
    return p = (c * (e - i) - d * (t - a)) / p, [t + p * l, e + p * u];
}
function Ic(t, e, r, n, a, i, o) {
  var s = t - r, l = e - n, u = (o ? i : -i) / Wl(s * s + l * l), c = u * l, d = -u * s, p = t + c, f = e + d, h = r + c, g = n + d, v = (p + h) / 2, m = (f + g) / 2, _ = h - p, y = g - f, b = _ * _ + y * y, S = a - i, E = p * g - h * f, T = (y < 0 ? -1 : 1) * Wl(Cl(0, S * S * b - E * E)), x = (E * y - _ * T) / b, C = (-E * _ - y * T) / b, A = (E * y + _ * T) / b, D = (-E * _ + y * T) / b, M = x - v, I = C - m, N = A - v, R = D - m;
  return M * M + I * I > N * N + R * R && (x = A, C = D), {
    cx: x,
    cy: C,
    x0: -c,
    y0: -d,
    x1: x * (a / S - 1),
    y1: C * (a / S - 1)
  };
}
function PG(t) {
  var e;
  if (V(t)) {
    var r = t.length;
    if (!r)
      return t;
    r === 1 ? e = [t[0], t[0], 0, 0] : r === 2 ? e = [t[0], t[0], t[1], t[1]] : r === 3 ? e = t.concat(t[2]) : e = t;
  } else
    e = [t, t, t, t];
  return e;
}
function kG(t, e) {
  var r, n = Cl(e.r, 0), a = Cl(e.r0 || 0, 0), i = n > 0, o = a > 0;
  if (!(!i && !o)) {
    if (i || (n = a, a = 0), a > n) {
      var s = n;
      n = a, a = s;
    }
    var l = e.startAngle, u = e.endAngle;
    if (!(isNaN(l) || isNaN(u))) {
      var c = e.cx, d = e.cy, p = !!e.clockwise, f = $S(u - l), h = f > Vh && f % Vh;
      if (h > Wr && (f = h), !(n > Wr))
        t.moveTo(c, d);
      else if (f > Vh - Wr)
        t.moveTo(c + n * Ro(l), d + n * _i(l)), t.arc(c, d, n, l, u, !p), a > Wr && (t.moveTo(c + a * Ro(u), d + a * _i(u)), t.arc(c, d, a, u, l, p));
      else {
        var g = void 0, v = void 0, m = void 0, _ = void 0, y = void 0, b = void 0, S = void 0, E = void 0, T = void 0, x = void 0, C = void 0, A = void 0, D = void 0, M = void 0, I = void 0, N = void 0, R = n * Ro(l), O = n * _i(l), B = a * Ro(u), L = a * _i(u), F = f > Wr;
        if (F) {
          var U = e.cornerRadius;
          U && (r = PG(U), g = r[0], v = r[1], m = r[2], _ = r[3]);
          var z = $S(n - a) / 2;
          if (y = hn(z, m), b = hn(z, _), S = hn(z, g), E = hn(z, v), C = T = Cl(y, b), A = x = Cl(S, E), (T > Wr || x > Wr) && (D = n * Ro(u), M = n * _i(u), I = a * Ro(l), N = a * _i(l), f < FD)) {
            var H = LG(R, O, I, N, D, M, B, L);
            if (H) {
              var Z = R - H[0], ee = O - H[1], oe = D - H[0], Le = M - H[1], Xe = 1 / _i(OG((Z * oe + ee * Le) / (Wl(Z * Z + ee * ee) * Wl(oe * oe + Le * Le))) / 2), fe = Wl(H[0] * H[0] + H[1] * H[1]);
              C = hn(T, (n - fe) / (Xe + 1)), A = hn(x, (a - fe) / (Xe - 1));
            }
          }
        }
        if (!F)
          t.moveTo(c + R, d + O);
        else if (C > Wr) {
          var re = hn(m, C), ve = hn(_, C), j = Ic(I, N, R, O, n, re, p), ce = Ic(D, M, B, L, n, ve, p);
          t.moveTo(c + j.cx + j.x0, d + j.cy + j.y0), C < T && re === ve ? t.arc(c + j.cx, d + j.cy, C, Ht(j.y0, j.x0), Ht(ce.y0, ce.x0), !p) : (re > 0 && t.arc(c + j.cx, d + j.cy, re, Ht(j.y0, j.x0), Ht(j.y1, j.x1), !p), t.arc(c, d, n, Ht(j.cy + j.y1, j.cx + j.x1), Ht(ce.cy + ce.y1, ce.cx + ce.x1), !p), ve > 0 && t.arc(c + ce.cx, d + ce.cy, ve, Ht(ce.y1, ce.x1), Ht(ce.y0, ce.x0), !p));
        } else
          t.moveTo(c + R, d + O), t.arc(c, d, n, l, u, !p);
        if (!(a > Wr) || !F)
          t.lineTo(c + B, d + L);
        else if (A > Wr) {
          var re = hn(g, A), ve = hn(v, A), j = Ic(B, L, D, M, a, -ve, p), ce = Ic(R, O, I, N, a, -re, p);
          t.lineTo(c + j.cx + j.x0, d + j.cy + j.y0), A < x && re === ve ? t.arc(c + j.cx, d + j.cy, A, Ht(j.y0, j.x0), Ht(ce.y0, ce.x0), !p) : (ve > 0 && t.arc(c + j.cx, d + j.cy, ve, Ht(j.y0, j.x0), Ht(j.y1, j.x1), !p), t.arc(c, d, a, Ht(j.cy + j.y1, j.cx + j.x1), Ht(ce.cy + ce.y1, ce.cx + ce.x1), p), re > 0 && t.arc(c + ce.cx, d + ce.cy, re, Ht(ce.y1, ce.x1), Ht(ce.y0, ce.x0), !p));
        } else
          t.lineTo(c + B, d + L), t.arc(c, d, a, u, l, p);
      }
      t.closePath();
    }
  }
}
var BG = /* @__PURE__ */ function() {
  function t() {
    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0, this.cornerRadius = 0;
  }
  return t;
}(), or = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new BG();
  }, e.prototype.buildPath = function(r, n) {
    kG(r, n);
  }, e.prototype.isZeroArea = function() {
    return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
  }, e;
}(Ce);
or.prototype.type = "sector";
var FG = /* @__PURE__ */ function() {
  function t() {
    this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
  }
  return t;
}(), $u = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new FG();
  }, e.prototype.buildPath = function(r, n) {
    var a = n.cx, i = n.cy, o = Math.PI * 2;
    r.moveTo(a + n.r, i), r.arc(a, i, n.r, 0, o, !1), r.moveTo(a + n.r0, i), r.arc(a, i, n.r0, 0, o, !0);
  }, e;
}(Ce);
$u.prototype.type = "ring";
function GG(t, e, r, n) {
  var a = [], i = [], o = [], s = [], l, u, c, d;
  if (n) {
    c = [1 / 0, 1 / 0], d = [-1 / 0, -1 / 0];
    for (var p = 0, f = t.length; p < f; p++)
      Ra(c, c, t[p]), Oa(d, d, t[p]);
    Ra(c, c, n[0]), Oa(d, d, n[1]);
  }
  for (var p = 0, f = t.length; p < f; p++) {
    var h = t[p];
    if (r)
      l = t[p ? p - 1 : f - 1], u = t[(p + 1) % f];
    else if (p === 0 || p === f - 1) {
      a.push(Zn(t[p]));
      continue;
    } else
      l = t[p - 1], u = t[p + 1];
    zi(i, u, l), Cd(i, i, e);
    var g = Uv(h, l), v = Uv(h, u), m = g + v;
    m !== 0 && (g /= m, v /= m), Cd(o, i, -g), Cd(s, i, v);
    var _ = G0([], h, o), y = G0([], h, s);
    n && (Oa(_, _, c), Ra(_, _, d), Oa(y, y, c), Ra(y, y, d)), a.push(_), a.push(y);
  }
  return r && a.push(a.shift()), a;
}
function GD(t, e, r) {
  var n = e.smooth, a = e.points;
  if (a && a.length >= 2) {
    if (n) {
      var i = GG(a, n, r, e.smoothConstraint);
      t.moveTo(a[0][0], a[0][1]);
      for (var o = a.length, s = 0; s < (r ? o : o - 1); s++) {
        var l = i[s * 2], u = i[s * 2 + 1], c = a[(s + 1) % o];
        t.bezierCurveTo(l[0], l[1], u[0], u[1], c[0], c[1]);
      }
    } else {
      t.moveTo(a[0][0], a[0][1]);
      for (var s = 1, d = a.length; s < d; s++)
        t.lineTo(a[s][0], a[s][1]);
    }
    r && t.closePath();
  }
}
var UG = /* @__PURE__ */ function() {
  function t() {
    this.points = null, this.smooth = 0, this.smoothConstraint = null;
  }
  return t;
}(), sr = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new UG();
  }, e.prototype.buildPath = function(r, n) {
    GD(r, n, !0);
  }, e;
}(Ce);
sr.prototype.type = "polygon";
var zG = /* @__PURE__ */ function() {
  function t() {
    this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
  }
  return t;
}(), lr = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new zG();
  }, e.prototype.buildPath = function(r, n) {
    GD(r, n, !1);
  }, e;
}(Ce);
lr.prototype.type = "polyline";
var VG = {}, $G = /* @__PURE__ */ function() {
  function t() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
  }
  return t;
}(), Ct = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new $G();
  }, e.prototype.buildPath = function(r, n) {
    var a, i, o, s;
    if (this.subPixelOptimize) {
      var l = bD(VG, n, this.style);
      a = l.x1, i = l.y1, o = l.x2, s = l.y2;
    } else
      a = n.x1, i = n.y1, o = n.x2, s = n.y2;
    var u = n.percent;
    u !== 0 && (r.moveTo(a, i), u < 1 && (o = a * (1 - u) + o * u, s = i * (1 - u) + s * u), r.lineTo(o, s));
  }, e.prototype.pointAt = function(r) {
    var n = this.shape;
    return [
      n.x1 * (1 - r) + n.x2 * r,
      n.y1 * (1 - r) + n.y2 * r
    ];
  }, e;
}(Ce);
Ct.prototype.type = "line";
var ur = [], HG = /* @__PURE__ */ function() {
  function t() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
  }
  return t;
}();
function HS(t, e, r) {
  var n = t.cpx2, a = t.cpy2;
  return n != null || a != null ? [
    (r ? Q0 : xt)(t.x1, t.cpx1, t.cpx2, t.x2, e),
    (r ? Q0 : xt)(t.y1, t.cpy1, t.cpy2, t.y2, e)
  ] : [
    (r ? Wv : Ot)(t.x1, t.cpx1, t.x2, e),
    (r ? Wv : Ot)(t.y1, t.cpy1, t.y2, e)
  ];
}
var Hu = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new HG();
  }, e.prototype.buildPath = function(r, n) {
    var a = n.x1, i = n.y1, o = n.x2, s = n.y2, l = n.cpx1, u = n.cpy1, c = n.cpx2, d = n.cpy2, p = n.percent;
    p !== 0 && (r.moveTo(a, i), c == null || d == null ? (p < 1 && (lu(a, l, o, p, ur), l = ur[1], o = ur[2], lu(i, u, s, p, ur), u = ur[1], s = ur[2]), r.quadraticCurveTo(l, u, o, s)) : (p < 1 && (Ka(a, l, c, o, p, ur), l = ur[1], c = ur[2], o = ur[3], Ka(i, u, d, s, p, ur), u = ur[1], d = ur[2], s = ur[3]), r.bezierCurveTo(l, u, c, d, o, s)));
  }, e.prototype.pointAt = function(r) {
    return HS(this.shape, r, !1);
  }, e.prototype.tangentAt = function(r) {
    var n = HS(this.shape, r, !0);
    return Ds(n, n);
  }, e;
}(Ce);
Hu.prototype.type = "bezier-curve";
var WG = /* @__PURE__ */ function() {
  function t() {
    this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
  }
  return t;
}(), ff = function(t) {
  k(e, t);
  function e(r) {
    return t.call(this, r) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new WG();
  }, e.prototype.buildPath = function(r, n) {
    var a = n.cx, i = n.cy, o = Math.max(n.r, 0), s = n.startAngle, l = n.endAngle, u = n.clockwise, c = Math.cos(s), d = Math.sin(s);
    r.moveTo(c * o + a, d * o + i), r.arc(a, i, o, s, l, !u);
  }, e;
}(Ce);
ff.prototype.type = "arc";
var ly = function(t) {
  k(e, t);
  function e() {
    var r = t !== null && t.apply(this, arguments) || this;
    return r.type = "compound", r;
  }
  return e.prototype._updatePathDirty = function() {
    for (var r = this.shape.paths, n = this.shapeChanged(), a = 0; a < r.length; a++)
      n = n || r[a].shapeChanged();
    n && this.dirtyShape();
  }, e.prototype.beforeBrush = function() {
    this._updatePathDirty();
    for (var r = this.shape.paths || [], n = this.getGlobalScale(), a = 0; a < r.length; a++)
      r[a].path || r[a].createPathProxy(), r[a].path.setScale(n[0], n[1], r[a].segmentIgnoreThreshold);
  }, e.prototype.buildPath = function(r, n) {
    for (var a = n.paths || [], i = 0; i < a.length; i++)
      a[i].buildPath(r, a[i].shape, !0);
  }, e.prototype.afterBrush = function() {
    for (var r = this.shape.paths || [], n = 0; n < r.length; n++)
      r[n].pathUpdated();
  }, e.prototype.getBoundingRect = function() {
    return this._updatePathDirty.call(this), Ce.prototype.getBoundingRect.call(this);
  }, e;
}(Ce), UD = function() {
  function t(e) {
    this.colorStops = e || [];
  }
  return t.prototype.addColorStop = function(e, r) {
    this.colorStops.push({
      offset: e,
      color: r
    });
  }, t;
}(), Wu = function(t) {
  k(e, t);
  function e(r, n, a, i, o, s) {
    var l = t.call(this, o) || this;
    return l.x = r ?? 0, l.y = n ?? 0, l.x2 = a ?? 1, l.y2 = i ?? 0, l.type = "linear", l.global = s || !1, l;
  }
  return e;
}(UD), zD = function(t) {
  k(e, t);
  function e(r, n, a, i, o) {
    var s = t.call(this, i) || this;
    return s.x = r ?? 0.5, s.y = n ?? 0.5, s.r = a ?? 0.5, s.type = "radial", s.global = o || !1, s;
  }
  return e;
}(UD), yi = [0, 0], bi = [0, 0], Nc = new Ee(), Rc = new Ee(), lp = function() {
  function t(e, r) {
    this._corners = [], this._axes = [], this._origin = [0, 0];
    for (var n = 0; n < 4; n++)
      this._corners[n] = new Ee();
    for (var n = 0; n < 2; n++)
      this._axes[n] = new Ee();
    e && this.fromBoundingRect(e, r);
  }
  return t.prototype.fromBoundingRect = function(e, r) {
    var n = this._corners, a = this._axes, i = e.x, o = e.y, s = i + e.width, l = o + e.height;
    if (n[0].set(i, o), n[1].set(s, o), n[2].set(s, l), n[3].set(i, l), r)
      for (var u = 0; u < 4; u++)
        n[u].transform(r);
    Ee.sub(a[0], n[1], n[0]), Ee.sub(a[1], n[3], n[0]), a[0].normalize(), a[1].normalize();
    for (var u = 0; u < 2; u++)
      this._origin[u] = a[u].dot(n[0]);
  }, t.prototype.intersect = function(e, r) {
    var n = !0, a = !r;
    return Nc.set(1 / 0, 1 / 0), Rc.set(0, 0), !this._intersectCheckOneSide(this, e, Nc, Rc, a, 1) && (n = !1, a) || !this._intersectCheckOneSide(e, this, Nc, Rc, a, -1) && (n = !1, a) || a || Ee.copy(r, n ? Nc : Rc), n;
  }, t.prototype._intersectCheckOneSide = function(e, r, n, a, i, o) {
    for (var s = !0, l = 0; l < 2; l++) {
      var u = this._axes[l];
      if (this._getProjMinMaxOnAxis(l, e._corners, yi), this._getProjMinMaxOnAxis(l, r._corners, bi), yi[1] < bi[0] || yi[0] > bi[1]) {
        if (s = !1, i)
          return s;
        var c = Math.abs(bi[0] - yi[1]), d = Math.abs(yi[0] - bi[1]);
        Math.min(c, d) > a.len() && (c < d ? Ee.scale(a, u, -c * o) : Ee.scale(a, u, d * o));
      } else if (n) {
        var c = Math.abs(bi[0] - yi[1]), d = Math.abs(yi[0] - bi[1]);
        Math.min(c, d) < n.len() && (c < d ? Ee.scale(n, u, c * o) : Ee.scale(n, u, -d * o));
      }
    }
    return s;
  }, t.prototype._getProjMinMaxOnAxis = function(e, r, n) {
    for (var a = this._axes[e], i = this._origin, o = r[0].dot(a) + i[e], s = o, l = o, u = 1; u < r.length; u++) {
      var c = r[u].dot(a) + i[e];
      s = Math.min(c, s), l = Math.max(c, l);
    }
    n[0] = s, n[1] = l;
  }, t;
}(), qG = [], YG = function(t) {
  k(e, t);
  function e() {
    var r = t !== null && t.apply(this, arguments) || this;
    return r.notClear = !0, r.incremental = !0, r._displayables = [], r._temporaryDisplayables = [], r._cursor = 0, r;
  }
  return e.prototype.traverse = function(r, n) {
    r.call(n, this);
  }, e.prototype.useStyle = function() {
    this.style = {};
  }, e.prototype.getCursor = function() {
    return this._cursor;
  }, e.prototype.innerAfterBrush = function() {
    this._cursor = this._displayables.length;
  }, e.prototype.clearDisplaybles = function() {
    this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1;
  }, e.prototype.clearTemporalDisplayables = function() {
    this._temporaryDisplayables = [];
  }, e.prototype.addDisplayable = function(r, n) {
    n ? this._temporaryDisplayables.push(r) : this._displayables.push(r), this.markRedraw();
  }, e.prototype.addDisplayables = function(r, n) {
    n = n || !1;
    for (var a = 0; a < r.length; a++)
      this.addDisplayable(r[a], n);
  }, e.prototype.getDisplayables = function() {
    return this._displayables;
  }, e.prototype.getTemporalDisplayables = function() {
    return this._temporaryDisplayables;
  }, e.prototype.eachPendingDisplayable = function(r) {
    for (var n = this._cursor; n < this._displayables.length; n++)
      r && r(this._displayables[n]);
    for (var n = 0; n < this._temporaryDisplayables.length; n++)
      r && r(this._temporaryDisplayables[n]);
  }, e.prototype.update = function() {
    this.updateTransform();
    for (var r = this._cursor; r < this._displayables.length; r++) {
      var n = this._displayables[r];
      n.parent = this, n.update(), n.parent = null;
    }
    for (var r = 0; r < this._temporaryDisplayables.length; r++) {
      var n = this._temporaryDisplayables[r];
      n.parent = this, n.update(), n.parent = null;
    }
  }, e.prototype.getBoundingRect = function() {
    if (!this._rect) {
      for (var r = new Te(1 / 0, 1 / 0, -1 / 0, -1 / 0), n = 0; n < this._displayables.length; n++) {
        var a = this._displayables[n], i = a.getBoundingRect().clone();
        a.needLocalTransform() && i.applyTransform(a.getLocalTransform(qG)), r.union(i);
      }
      this._rect = r;
    }
    return this._rect;
  }, e.prototype.contain = function(r, n) {
    var a = this.transformCoordToLocal(r, n), i = this.getBoundingRect();
    if (i.contain(a[0], a[1]))
      for (var o = 0; o < this._displayables.length; o++) {
        var s = this._displayables[o];
        if (s.contain(r, n))
          return !0;
      }
    return !1;
  }, e;
}(Fr), VD = Oe();
function Rs(t, e, r, n, a) {
  var i;
  if (e && e.ecModel) {
    var o = e.ecModel.getUpdatePayload();
    i = o && o.animation;
  }
  var s = e && e.isAnimationEnabled(), l = t === "update";
  if (s) {
    var u = void 0, c = void 0, d = void 0;
    n ? (u = ge(n.duration, 200), c = ge(n.easing, "cubicOut"), d = 0) : (u = e.getShallow(l ? "animationDurationUpdate" : "animationDuration"), c = e.getShallow(l ? "animationEasingUpdate" : "animationEasing"), d = e.getShallow(l ? "animationDelayUpdate" : "animationDelay")), i && (i.duration != null && (u = i.duration), i.easing != null && (c = i.easing), i.delay != null && (d = i.delay)), ae(d) && (d = d(r, a)), ae(u) && (u = u(r));
    var p = {
      duration: u || 0,
      delay: d,
      easing: c
    };
    return p;
  } else
    return null;
}
function uy(t, e, r, n, a, i, o) {
  var s = !1, l;
  ae(a) ? (o = i, i = a, a = null) : se(a) && (i = a.cb, o = a.during, s = a.isFrom, l = a.removeOpt, a = a.dataIndex);
  var u = t === "leave";
  u || e.stopAnimation("leave");
  var c = Rs(t, n, a, u ? l || {} : null, n && n.getAnimationDelayParams ? n.getAnimationDelayParams(e, a) : null);
  if (c && c.duration > 0) {
    var d = c.duration, p = c.delay, f = c.easing, h = {
      duration: d,
      delay: p || 0,
      easing: f,
      done: i,
      force: !!i || !!o,
      // Set to final state in update/init animation.
      // So the post processing based on the path shape can be done correctly.
      setToFinal: !u,
      scope: t,
      during: o
    };
    s ? e.animateFrom(r, h) : e.animateTo(r, h);
  } else
    e.stopAnimation(), !s && e.attr(r), o && o(1), i && i();
}
function Fe(t, e, r, n, a, i) {
  uy("update", t, e, r, n, a, i);
}
function rt(t, e, r, n, a, i) {
  uy("enter", t, e, r, n, a, i);
}
function ss(t) {
  if (!t.__zr)
    return !0;
  for (var e = 0; e < t.animators.length; e++) {
    var r = t.animators[e];
    if (r.scope === "leave")
      return !0;
  }
  return !1;
}
function Za(t, e, r, n, a, i) {
  ss(t) || uy("leave", t, e, r, n, a, i);
}
function WS(t, e, r, n) {
  t.removeTextContent(), t.removeTextGuideLine(), Za(t, {
    style: {
      opacity: 0
    }
  }, e, r, n);
}
function gu(t, e, r) {
  function n() {
    t.parent && t.parent.remove(t);
  }
  t.isGroup ? t.traverse(function(a) {
    a.isGroup || WS(a, e, r, n);
  }) : WS(t, e, r, n);
}
function rn(t) {
  VD(t).oldStyle = t.style;
}
function KG(t) {
  return VD(t).oldStyle;
}
var up = Math.max, cp = Math.min, vm = {};
function ZG(t) {
  return Ce.extend(t);
}
var XG = MG;
function QG(t, e) {
  return XG(t, e);
}
function an(t, e) {
  vm[t] = e;
}
function cy(t) {
  if (vm.hasOwnProperty(t))
    return vm[t];
}
function hf(t, e, r, n) {
  var a = BD(t, e);
  return r && (n === "center" && (r = HD(r, a.getBoundingRect())), WD(a, r)), a;
}
function $D(t, e, r) {
  var n = new Bt({
    style: {
      image: t,
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    onload: function(a) {
      if (r === "center") {
        var i = {
          width: a.width,
          height: a.height
        };
        n.setStyle(HD(e, i));
      }
    }
  });
  return n;
}
function HD(t, e) {
  var r = e.width / e.height, n = t.height * r, a;
  n <= t.width ? a = t.height : (n = t.width, a = n / r);
  var i = t.x + t.width / 2, o = t.y + t.height / 2;
  return {
    x: i - n / 2,
    y: o - a / 2,
    width: n,
    height: a
  };
}
var Lr = IG;
function WD(t, e) {
  if (t.applyTransform) {
    var r = t.getBoundingRect(), n = r.calculateTransform(e);
    t.applyTransform(n);
  }
}
function ms(t, e) {
  return bD(t, t, {
    lineWidth: e
  }), t;
}
function jG(t) {
  return SD(t.shape, t.shape, t.style), t;
}
var Pd = Vi;
function eo(t, e) {
  for (var r = tf([]); t && t !== e; )
    Xn(r, t.getLocalTransform(), r), t = t.parent;
  return r;
}
function Jr(t, e, r) {
  return e && !Kt(e) && (e = Yn.getLocalTransform(e)), r && (e = Ms([], e)), Ut([], t, e);
}
function gf(t, e, r) {
  var n = e[4] === 0 || e[5] === 0 || e[0] === 0 ? 1 : Math.abs(2 * e[4] / e[0]), a = e[4] === 0 || e[5] === 0 || e[2] === 0 ? 1 : Math.abs(2 * e[4] / e[2]), i = [t === "left" ? -n : t === "right" ? n : 0, t === "top" ? -a : t === "bottom" ? a : 0];
  return i = Jr(i, e, r), Math.abs(i[0]) > Math.abs(i[1]) ? i[0] > 0 ? "right" : "left" : i[1] > 0 ? "bottom" : "top";
}
function qS(t) {
  return !t.isGroup;
}
function JG(t) {
  return t.shape != null;
}
function qu(t, e, r) {
  if (!t || !e)
    return;
  function n(o) {
    var s = {};
    return o.traverse(function(l) {
      qS(l) && l.anid && (s[l.anid] = l);
    }), s;
  }
  function a(o) {
    var s = {
      x: o.x,
      y: o.y,
      rotation: o.rotation
    };
    return JG(o) && (s.shape = G({}, o.shape)), s;
  }
  var i = n(t);
  e.traverse(function(o) {
    if (qS(o) && o.anid) {
      var s = i[o.anid];
      if (s) {
        var l = a(o);
        o.attr(a(s)), Fe(o, l, r, pe(o).dataIndex);
      }
    }
  });
}
function qD(t, e) {
  return $(t, function(r) {
    var n = r[0];
    n = up(n, e.x), n = cp(n, e.x + e.width);
    var a = r[1];
    return a = up(a, e.y), a = cp(a, e.y + e.height), [n, a];
  });
}
function eU(t, e) {
  var r = up(t.x, e.x), n = cp(t.x + t.width, e.x + e.width), a = up(t.y, e.y), i = cp(t.y + t.height, e.y + e.height);
  if (n >= r && i >= a)
    return {
      x: r,
      y: a,
      width: n - r,
      height: i - a
    };
}
function Yu(t, e, r) {
  var n = G({
    rectHover: !0
  }, e), a = n.style = {
    strokeNoScale: !0
  };
  if (r = r || {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }, t)
    return t.indexOf("image://") === 0 ? (a.image = t.slice(8), ie(a, r), new Bt(n)) : hf(t.replace("path://", ""), n, r, "center");
}
function Al(t, e, r, n, a) {
  for (var i = 0, o = a[a.length - 1]; i < a.length; i++) {
    var s = a[i];
    if (YD(t, e, r, n, s[0], s[1], o[0], o[1]))
      return !0;
    o = s;
  }
}
function YD(t, e, r, n, a, i, o, s) {
  var l = r - t, u = n - e, c = o - a, d = s - i, p = $h(c, d, l, u);
  if (tU(p))
    return !1;
  var f = t - a, h = e - i, g = $h(f, h, l, u) / p;
  if (g < 0 || g > 1)
    return !1;
  var v = $h(f, h, c, d) / p;
  return !(v < 0 || v > 1);
}
function $h(t, e, r, n) {
  return t * n - r * e;
}
function tU(t) {
  return t <= 1e-6 && t >= -1e-6;
}
function go(t) {
  var e = t.itemTooltipOption, r = t.componentModel, n = t.itemName, a = Y(e) ? {
    formatter: e
  } : e, i = r.mainType, o = r.componentIndex, s = {
    componentType: i,
    name: n,
    $vars: ["name"]
  };
  s[i + "Index"] = o;
  var l = t.formatterParamsExtra;
  l && w(Me(l), function(c) {
    Q(s, c) || (s[c] = l[c], s.$vars.push(c));
  });
  var u = pe(t.el);
  u.componentMainType = i, u.componentIndex = o, u.tooltipConfig = {
    name: n,
    option: ie({
      content: n,
      encodeHTMLContent: !0,
      formatterParams: s
    }, a)
  };
}
function YS(t, e) {
  var r;
  t.isGroup && (r = e(t)), r || t.traverse(e);
}
function ei(t, e) {
  if (t)
    if (V(t))
      for (var r = 0; r < t.length; r++)
        YS(t[r], e);
    else
      YS(t, e);
}
an("circle", ca);
an("ellipse", pf);
an("sector", or);
an("ring", $u);
an("polygon", sr);
an("polyline", lr);
an("rect", Re);
an("line", Ct);
an("bezierCurve", Hu);
an("arc", ff);
const vo = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Arc: ff,
  BezierCurve: Hu,
  BoundingRect: Te,
  Circle: ca,
  CompoundPath: ly,
  Ellipse: pf,
  Group: de,
  Image: Bt,
  IncrementalDisplayable: YG,
  Line: Ct,
  LinearGradient: Wu,
  OrientedBoundingRect: lp,
  Path: Ce,
  Point: Ee,
  Polygon: sr,
  Polyline: lr,
  RadialGradient: zD,
  Rect: Re,
  Ring: $u,
  Sector: or,
  Text: Pe,
  applyTransform: Jr,
  clipPointsByRect: qD,
  clipRectByRect: eU,
  createIcon: Yu,
  extendPath: QG,
  extendShape: ZG,
  getShapeClass: cy,
  getTransform: eo,
  groupTransition: qu,
  initProps: rt,
  isElementRemoved: ss,
  lineLineIntersect: YD,
  linePolygonIntersect: Al,
  makeImage: $D,
  makePath: hf,
  mergePath: Lr,
  registerShape: an,
  removeElement: Za,
  removeElementWithFadeOut: gu,
  resizePath: WD,
  setTooltipConfig: go,
  subPixelOptimize: Pd,
  subPixelOptimizeLine: ms,
  subPixelOptimizeRect: jG,
  transformDirection: gf,
  traverseElements: ei,
  updateProps: Fe
}, Symbol.toStringTag, { value: "Module" }));
var vf = {};
function KD(t, e) {
  for (var r = 0; r < ir.length; r++) {
    var n = ir[r], a = e[n], i = t.ensureState(n);
    i.style = i.style || {}, i.style.text = a;
  }
  var o = t.currentStates.slice();
  t.clearStates(!0), t.setStyle({
    text: e.normal
  }), t.useStates(o, !0);
}
function mm(t, e, r) {
  var n = t.labelFetcher, a = t.labelDataIndex, i = t.labelDimIndex, o = e.normal, s;
  n && (s = n.getFormattedLabel(a, "normal", null, i, o && o.get("formatter"), r != null ? {
    interpolatedValue: r
  } : null)), s == null && (s = ae(t.defaultText) ? t.defaultText(a, t, r) : t.defaultText);
  for (var l = {
    normal: s
  }, u = 0; u < ir.length; u++) {
    var c = ir[u], d = e[c];
    l[c] = ge(n ? n.getFormattedLabel(a, c, null, i, d && d.get("formatter")) : null, s);
  }
  return l;
}
function Vt(t, e, r, n) {
  r = r || vf;
  for (var a = t instanceof Pe, i = !1, o = 0; o < fu.length; o++) {
    var s = e[fu[o]];
    if (s && s.getShallow("show")) {
      i = !0;
      break;
    }
  }
  var l = a ? t : t.getTextContent();
  if (i) {
    a || (l || (l = new Pe(), t.setTextContent(l)), t.stateProxy && (l.stateProxy = t.stateProxy));
    var u = mm(r, e), c = e.normal, d = !!c.getShallow("show"), p = Je(c, n && n.normal, r, !1, !a);
    p.text = u.normal, a || t.setTextConfig(dp(c, r, !1));
    for (var o = 0; o < ir.length; o++) {
      var f = ir[o], s = e[f];
      if (s) {
        var h = l.ensureState(f), g = !!ge(s.getShallow("show"), d);
        if (g !== d && (h.ignore = !g), h.style = Je(s, n && n[f], r, !0, !a), h.style.text = u[f], !a) {
          var v = t.ensureState(f);
          v.textConfig = dp(s, r, !0);
        }
      }
    }
    l.silent = !!c.getShallow("silent"), l.style.x != null && (p.x = l.style.x), l.style.y != null && (p.y = l.style.y), l.ignore = !d, l.useStyle(p), l.dirty(), r.enableTextSetter && (Os(l).setLabelText = function(m) {
      var _ = mm(r, e, m);
      KD(l, _);
    });
  } else l && (l.ignore = !0);
  t.dirty();
}
function Dt(t, e) {
  e = e || "label";
  for (var r = {
    normal: t.getModel(e)
  }, n = 0; n < ir.length; n++) {
    var a = ir[n];
    r[a] = t.getModel([a, e]);
  }
  return r;
}
function Je(t, e, r, n, a) {
  var i = {};
  return rU(i, t, r, n, a), e && G(i, e), i;
}
function dp(t, e, r) {
  e = e || {};
  var n = {}, a, i = t.getShallow("rotate"), o = ge(t.getShallow("distance"), r ? null : 5), s = t.getShallow("offset");
  return a = t.getShallow("position") || (r ? null : "inside"), a === "outside" && (a = e.defaultOutsidePosition || "top"), a != null && (n.position = a), s != null && (n.offset = s), i != null && (i *= Math.PI / 180, n.rotation = i), o != null && (n.distance = o), n.outsideFill = t.get("color") === "inherit" ? e.inheritColor || null : "auto", n;
}
function rU(t, e, r, n, a) {
  r = r || vf;
  var i = e.ecModel, o = i && i.option.textStyle, s = nU(e), l;
  if (s) {
    l = {};
    for (var u in s)
      if (s.hasOwnProperty(u)) {
        var c = e.getModel(["rich", u]);
        QS(l[u] = {}, c, o, r, n, a, !1, !0);
      }
  }
  l && (t.rich = l);
  var d = e.get("overflow");
  d && (t.overflow = d);
  var p = e.get("minMargin");
  p != null && (t.margin = p), QS(t, e, o, r, n, a, !0, !1);
}
function nU(t) {
  for (var e; t && t !== t.ecModel; ) {
    var r = (t.option || vf).rich;
    if (r) {
      e = e || {};
      for (var n = Me(r), a = 0; a < n.length; a++) {
        var i = n[a];
        e[i] = 1;
      }
    }
    t = t.parentModel;
  }
  return e;
}
var KS = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], ZS = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"], XS = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
function QS(t, e, r, n, a, i, o, s) {
  r = !a && r || vf;
  var l = n && n.inheritColor, u = e.getShallow("color"), c = e.getShallow("textBorderColor"), d = ge(e.getShallow("opacity"), r.opacity);
  (u === "inherit" || u === "auto") && (l ? u = l : u = null), (c === "inherit" || c === "auto") && (l ? c = l : c = null), i || (u = u || r.color, c = c || r.textBorderColor), u != null && (t.fill = u), c != null && (t.stroke = c);
  var p = ge(e.getShallow("textBorderWidth"), r.textBorderWidth);
  p != null && (t.lineWidth = p);
  var f = ge(e.getShallow("textBorderType"), r.textBorderType);
  f != null && (t.lineDash = f);
  var h = ge(e.getShallow("textBorderDashOffset"), r.textBorderDashOffset);
  h != null && (t.lineDashOffset = h), !a && d == null && !s && (d = n && n.defaultOpacity), d != null && (t.opacity = d), !a && !i && t.fill == null && n.inheritColor && (t.fill = n.inheritColor);
  for (var g = 0; g < KS.length; g++) {
    var v = KS[g], m = ge(e.getShallow(v), r[v]);
    m != null && (t[v] = m);
  }
  for (var g = 0; g < ZS.length; g++) {
    var v = ZS[g], m = e.getShallow(v);
    m != null && (t[v] = m);
  }
  if (t.verticalAlign == null) {
    var _ = e.getShallow("baseline");
    _ != null && (t.verticalAlign = _);
  }
  if (!o || !n.disableBox) {
    for (var g = 0; g < XS.length; g++) {
      var v = XS[g], m = e.getShallow(v);
      m != null && (t[v] = m);
    }
    var y = e.getShallow("borderType");
    y != null && (t.borderDash = y), (t.backgroundColor === "auto" || t.backgroundColor === "inherit") && l && (t.backgroundColor = l), (t.borderColor === "auto" || t.borderColor === "inherit") && l && (t.borderColor = l);
  }
}
function dy(t, e) {
  var r = e && e.getModel("textStyle");
  return Xr([
    // FIXME in node-canvas fontWeight is before fontStyle
    t.fontStyle || r && r.getShallow("fontStyle") || "",
    t.fontWeight || r && r.getShallow("fontWeight") || "",
    (t.fontSize || r && r.getShallow("fontSize") || 12) + "px",
    t.fontFamily || r && r.getShallow("fontFamily") || "sans-serif"
  ].join(" "));
}
var Os = Oe();
function ZD(t, e, r, n) {
  if (t) {
    var a = Os(t);
    a.prevValue = a.value, a.value = r;
    var i = e.normal;
    a.valueAnimation = i.get("valueAnimation"), a.valueAnimation && (a.precision = i.get("precision"), a.defaultInterpolatedText = n, a.statesModels = e);
  }
}
function XD(t, e, r, n, a) {
  var i = Os(t);
  if (!i.valueAnimation || i.prevValue === i.value)
    return;
  var o = i.defaultInterpolatedText, s = ge(i.interpolatedValue, i.prevValue), l = i.value;
  function u(c) {
    var d = pD(r, i.precision, s, l, c);
    i.interpolatedValue = c === 1 ? null : d;
    var p = mm({
      labelDataIndex: e,
      labelFetcher: a,
      defaultText: o ? o(d) : d + ""
    }, i.statesModels, d);
    KD(t, p);
  }
  t.percent = 0, (i.prevValue == null ? rt : Fe)(t, {
    // percent is used to prevent animation from being aborted #15916
    percent: 1
  }, n, e, null, u);
}
var aU = ["textStyle", "color"], Hh = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"], Wh = new Pe(), iU = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getTextColor = function(e) {
      var r = this.ecModel;
      return this.getShallow("color") || (!e && r ? r.get(aU) : null);
    }, t.prototype.getFont = function() {
      return dy({
        fontStyle: this.getShallow("fontStyle"),
        fontWeight: this.getShallow("fontWeight"),
        fontSize: this.getShallow("fontSize"),
        fontFamily: this.getShallow("fontFamily")
      }, this.ecModel);
    }, t.prototype.getTextRect = function(e) {
      for (var r = {
        text: e,
        verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
      }, n = 0; n < Hh.length; n++)
        r[Hh[n]] = this.getShallow(Hh[n]);
      return Wh.useStyle(r), Wh.update(), Wh.getBoundingRect();
    }, t;
  }()
), QD = [
  ["lineWidth", "width"],
  ["stroke", "color"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "type"],
  ["lineDashOffset", "dashOffset"],
  ["lineCap", "cap"],
  ["lineJoin", "join"],
  ["miterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], oU = so(QD), sU = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getLineStyle = function(e) {
      return oU(this, e);
    }, t;
  }()
), jD = [
  ["fill", "color"],
  ["stroke", "borderColor"],
  ["lineWidth", "borderWidth"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "borderType"],
  ["lineDashOffset", "borderDashOffset"],
  ["lineCap", "borderCap"],
  ["lineJoin", "borderJoin"],
  ["miterLimit", "borderMiterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], lU = so(jD), uU = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getItemStyle = function(e, r) {
      return lU(this, e, r);
    }, t;
  }()
), He = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.parentModel = r, this.ecModel = n, this.option = e;
    }
    return t.prototype.init = function(e, r, n) {
    }, t.prototype.mergeOption = function(e, r) {
      be(this.option, e, !0);
    }, t.prototype.get = function(e, r) {
      return e == null ? this.option : this._doGet(this.parsePath(e), !r && this.parentModel);
    }, t.prototype.getShallow = function(e, r) {
      var n = this.option, a = n == null ? n : n[e];
      if (a == null && !r) {
        var i = this.parentModel;
        i && (a = i.getShallow(e));
      }
      return a;
    }, t.prototype.getModel = function(e, r) {
      var n = e != null, a = n ? this.parsePath(e) : null, i = n ? this._doGet(a) : this.option;
      return r = r || this.parentModel && this.parentModel.getModel(this.resolveParentPath(a)), new t(i, r, this.ecModel);
    }, t.prototype.isEmpty = function() {
      return this.option == null;
    }, t.prototype.restoreData = function() {
    }, t.prototype.clone = function() {
      var e = this.constructor;
      return new e(le(this.option));
    }, t.prototype.parsePath = function(e) {
      return typeof e == "string" ? e.split(".") : e;
    }, t.prototype.resolveParentPath = function(e) {
      return e;
    }, t.prototype.isAnimationEnabled = function() {
      if (!Ae.node && this.option) {
        if (this.option.animation != null)
          return !!this.option.animation;
        if (this.parentModel)
          return this.parentModel.isAnimationEnabled();
      }
    }, t.prototype._doGet = function(e, r) {
      var n = this.option;
      if (!e)
        return n;
      for (var a = 0; a < e.length && !(e[a] && (n = n && typeof n == "object" ? n[e[a]] : null, n == null)); a++)
        ;
      return n == null && r && (n = r._doGet(this.resolveParentPath(e), r.parentModel)), n;
    }, t;
  }()
);
J_(He);
_3(He);
_t(He, sU);
_t(He, uU);
_t(He, T3);
_t(He, iU);
var cU = Math.round(Math.random() * 10);
function Ls(t) {
  return [t || "", cU++].join("_");
}
function dU(t) {
  var e = {};
  t.registerSubTypeDefaulter = function(r, n) {
    var a = Cn(r);
    e[a.main] = n;
  }, t.determineSubType = function(r, n) {
    var a = n.type;
    if (!a) {
      var i = Cn(r).main;
      t.hasSubTypes(r) && e[i] && (a = e[i](n));
    }
    return a;
  };
}
function pU(t, e) {
  t.topologicalTravel = function(i, o, s, l) {
    if (!i.length)
      return;
    var u = r(o), c = u.graph, d = u.noEntryList, p = {};
    for (w(i, function(_) {
      p[_] = !0;
    }); d.length; ) {
      var f = d.pop(), h = c[f], g = !!p[f];
      g && (s.call(l, f, h.originalDeps.slice()), delete p[f]), w(h.successor, g ? m : v);
    }
    w(p, function() {
      var _ = "";
      throw new Error(_);
    });
    function v(_) {
      c[_].entryCount--, c[_].entryCount === 0 && d.push(_);
    }
    function m(_) {
      p[_] = !0, v(_);
    }
  };
  function r(i) {
    var o = {}, s = [];
    return w(i, function(l) {
      var u = n(o, l), c = u.originalDeps = e(l), d = a(c, i);
      u.entryCount = d.length, u.entryCount === 0 && s.push(l), w(d, function(p) {
        xe(u.predecessor, p) < 0 && u.predecessor.push(p);
        var f = n(o, p);
        xe(f.successor, p) < 0 && f.successor.push(l);
      });
    }), {
      graph: o,
      noEntryList: s
    };
  }
  function n(i, o) {
    return i[o] || (i[o] = {
      predecessor: [],
      successor: []
    }), i[o];
  }
  function a(i, o) {
    var s = [];
    return w(i, function(l) {
      xe(o, l) >= 0 && s.push(l);
    }), s;
  }
}
function ti(t, e) {
  return be(be({}, t, !0), e, !0);
}
const fU = {
  time: {
    month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
  },
  legend: {
    selector: {
      all: "All",
      inverse: "Inv"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "Box Select",
        polygon: "Lasso Select",
        lineX: "Horizontally Select",
        lineY: "Vertically Select",
        keep: "Keep Selections",
        clear: "Clear Selections"
      }
    },
    dataView: {
      title: "Data View",
      lang: ["Data View", "Close", "Refresh"]
    },
    dataZoom: {
      title: {
        zoom: "Zoom",
        back: "Zoom Reset"
      }
    },
    magicType: {
      title: {
        line: "Switch to Line Chart",
        bar: "Switch to Bar Chart",
        stack: "Stack",
        tiled: "Tile"
      }
    },
    restore: {
      title: "Restore"
    },
    saveAsImage: {
      title: "Save as Image",
      lang: ["Right Click to Save Image"]
    }
  },
  series: {
    typeNames: {
      pie: "Pie chart",
      bar: "Bar chart",
      line: "Line chart",
      scatter: "Scatter plot",
      effectScatter: "Ripple scatter plot",
      radar: "Radar chart",
      tree: "Tree",
      treemap: "Treemap",
      boxplot: "Boxplot",
      candlestick: "Candlestick",
      k: "K line chart",
      heatmap: "Heat map",
      map: "Map",
      parallel: "Parallel coordinate map",
      lines: "Line graph",
      graph: "Relationship graph",
      sankey: "Sankey diagram",
      funnel: "Funnel chart",
      gauge: "Gauge",
      pictorialBar: "Pictorial bar",
      themeRiver: "Theme River Map",
      sunburst: "Sunburst",
      custom: "Custom chart",
      chart: "Chart"
    }
  },
  aria: {
    general: {
      withTitle: 'This is a chart about "{title}"',
      withoutTitle: "This is a chart"
    },
    series: {
      single: {
        prefix: "",
        withName: " with type {seriesType} named {seriesName}.",
        withoutName: " with type {seriesType}."
      },
      multiple: {
        prefix: ". It consists of {seriesCount} series count.",
        withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
        withoutName: " The {seriesId} series is a {seriesType}.",
        separator: {
          middle: "",
          end: ""
        }
      }
    },
    data: {
      allData: "The data is as follows: ",
      partialData: "The first {displayCnt} items are: ",
      withName: "the data for {name} is {value}",
      withoutName: "{value}",
      separator: {
        middle: ", ",
        end: ". "
      }
    }
  }
}, hU = {
  time: {
    month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
    dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
  },
  legend: {
    selector: {
      all: "全选",
      inverse: "反选"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "矩形选择",
        polygon: "圈选",
        lineX: "横向选择",
        lineY: "纵向选择",
        keep: "保持选择",
        clear: "清除选择"
      }
    },
    dataView: {
      title: "数据视图",
      lang: ["数据视图", "关闭", "刷新"]
    },
    dataZoom: {
      title: {
        zoom: "区域缩放",
        back: "区域缩放还原"
      }
    },
    magicType: {
      title: {
        line: "切换为折线图",
        bar: "切换为柱状图",
        stack: "切换为堆叠",
        tiled: "切换为平铺"
      }
    },
    restore: {
      title: "还原"
    },
    saveAsImage: {
      title: "保存为图片",
      lang: ["右键另存为图片"]
    }
  },
  series: {
    typeNames: {
      pie: "饼图",
      bar: "柱状图",
      line: "折线图",
      scatter: "散点图",
      effectScatter: "涟漪散点图",
      radar: "雷达图",
      tree: "树图",
      treemap: "矩形树图",
      boxplot: "箱型图",
      candlestick: "K线图",
      k: "K线图",
      heatmap: "热力图",
      map: "地图",
      parallel: "平行坐标图",
      lines: "线图",
      graph: "关系图",
      sankey: "桑基图",
      funnel: "漏斗图",
      gauge: "仪表盘图",
      pictorialBar: "象形柱图",
      themeRiver: "主题河流图",
      sunburst: "旭日图",
      custom: "自定义图表",
      chart: "图表"
    }
  },
  aria: {
    general: {
      withTitle: "这是一个关于“{title}”的图表。",
      withoutTitle: "这是一个图表，"
    },
    series: {
      single: {
        prefix: "",
        withName: "图表类型是{seriesType}，表示{seriesName}。",
        withoutName: "图表类型是{seriesType}。"
      },
      multiple: {
        prefix: "它由{seriesCount}个图表系列组成。",
        withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
        withoutName: "第{seriesId}个系列是一个{seriesType}，",
        separator: {
          middle: "；",
          end: "。"
        }
      }
    },
    data: {
      allData: "其数据是——",
      partialData: "其中，前{displayCnt}项是——",
      withName: "{name}的数据是{value}",
      withoutName: "{value}",
      separator: {
        middle: "，",
        end: ""
      }
    }
  }
};
var pp = "ZH", py = "EN", ls = py, kd = {}, fy = {}, JD = Ae.domSupported ? function() {
  var t = (
    /* eslint-disable-next-line */
    (document.documentElement.lang || navigator.language || navigator.browserLanguage || ls).toUpperCase()
  );
  return t.indexOf(pp) > -1 ? pp : ls;
}() : ls;
function eM(t, e) {
  t = t.toUpperCase(), fy[t] = new He(e), kd[t] = e;
}
function gU(t) {
  if (Y(t)) {
    var e = kd[t.toUpperCase()] || {};
    return t === pp || t === py ? le(e) : be(le(e), le(kd[ls]), !1);
  } else
    return be(le(t), le(kd[ls]), !1);
}
function _m(t) {
  return fy[t];
}
function vU() {
  return fy[ls];
}
eM(py, fU);
eM(pp, hU);
var hy = 1e3, gy = hy * 60, ql = gy * 60, Pr = ql * 24, jS = Pr * 365, wl = {
  year: "{yyyy}",
  month: "{MMM}",
  day: "{d}",
  hour: "{HH}:{mm}",
  minute: "{HH}:{mm}",
  second: "{HH}:{mm}:{ss}",
  millisecond: "{HH}:{mm}:{ss} {SSS}",
  none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
}, Oc = "{yyyy}-{MM}-{dd}", JS = {
  year: "{yyyy}",
  month: "{yyyy}-{MM}",
  day: Oc,
  hour: Oc + " " + wl.hour,
  minute: Oc + " " + wl.minute,
  second: Oc + " " + wl.second,
  millisecond: wl.none
}, qh = ["year", "month", "day", "hour", "minute", "second", "millisecond"], tM = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
function va(t, e) {
  return t += "", "0000".substr(0, e - t.length) + t;
}
function us(t) {
  switch (t) {
    case "half-year":
    case "quarter":
      return "month";
    case "week":
    case "half-week":
      return "day";
    case "half-day":
    case "quarter-day":
      return "hour";
    default:
      return t;
  }
}
function mU(t) {
  return t === us(t);
}
function _U(t) {
  switch (t) {
    case "year":
    case "month":
      return "day";
    case "millisecond":
      return "millisecond";
    default:
      return "second";
  }
}
function mf(t, e, r, n) {
  var a = Ln(t), i = a[vy(r)](), o = a[cs(r)]() + 1, s = Math.floor((o - 1) / 3) + 1, l = a[_f(r)](), u = a["get" + (r ? "UTC" : "") + "Day"](), c = a[vu(r)](), d = (c - 1) % 12 + 1, p = a[yf(r)](), f = a[bf(r)](), h = a[Sf(r)](), g = c >= 12 ? "pm" : "am", v = g.toUpperCase(), m = n instanceof He ? n : _m(n || JD) || vU(), _ = m.getModel("time"), y = _.get("month"), b = _.get("monthAbbr"), S = _.get("dayOfWeek"), E = _.get("dayOfWeekAbbr");
  return (e || "").replace(/{a}/g, g + "").replace(/{A}/g, v + "").replace(/{yyyy}/g, i + "").replace(/{yy}/g, va(i % 100 + "", 2)).replace(/{Q}/g, s + "").replace(/{MMMM}/g, y[o - 1]).replace(/{MMM}/g, b[o - 1]).replace(/{MM}/g, va(o, 2)).replace(/{M}/g, o + "").replace(/{dd}/g, va(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, S[u]).replace(/{ee}/g, E[u]).replace(/{e}/g, u + "").replace(/{HH}/g, va(c, 2)).replace(/{H}/g, c + "").replace(/{hh}/g, va(d + "", 2)).replace(/{h}/g, d + "").replace(/{mm}/g, va(p, 2)).replace(/{m}/g, p + "").replace(/{ss}/g, va(f, 2)).replace(/{s}/g, f + "").replace(/{SSS}/g, va(h, 3)).replace(/{S}/g, h + "");
}
function yU(t, e, r, n, a) {
  var i = null;
  if (Y(r))
    i = r;
  else if (ae(r))
    i = r(t.value, e, {
      level: t.level
    });
  else {
    var o = G({}, wl);
    if (t.level > 0)
      for (var s = 0; s < qh.length; ++s)
        o[qh[s]] = "{primary|" + o[qh[s]] + "}";
    var l = r ? r.inherit === !1 ? r : ie(r, o) : o, u = rM(t.value, a);
    if (l[u])
      i = l[u];
    else if (l.inherit) {
      for (var c = tM.indexOf(u), s = c - 1; s >= 0; --s)
        if (l[u]) {
          i = l[u];
          break;
        }
      i = i || o.none;
    }
    if (V(i)) {
      var d = t.level == null ? 0 : t.level >= 0 ? t.level : i.length + t.level;
      d = Math.min(d, i.length - 1), i = i[d];
    }
  }
  return mf(new Date(t.value), i, a, n);
}
function rM(t, e) {
  var r = Ln(t), n = r[cs(e)]() + 1, a = r[_f(e)](), i = r[vu(e)](), o = r[yf(e)](), s = r[bf(e)](), l = r[Sf(e)](), u = l === 0, c = u && s === 0, d = c && o === 0, p = d && i === 0, f = p && a === 1, h = f && n === 1;
  return h ? "year" : f ? "month" : p ? "day" : d ? "hour" : c ? "minute" : u ? "second" : "millisecond";
}
function eE(t, e, r) {
  var n = ke(t) ? Ln(t) : t;
  switch (e = e || rM(t, r), e) {
    case "year":
      return n[vy(r)]();
    case "half-year":
      return n[cs(r)]() >= 6 ? 1 : 0;
    case "quarter":
      return Math.floor((n[cs(r)]() + 1) / 4);
    case "month":
      return n[cs(r)]();
    case "day":
      return n[_f(r)]();
    case "half-day":
      return n[vu(r)]() / 24;
    case "hour":
      return n[vu(r)]();
    case "minute":
      return n[yf(r)]();
    case "second":
      return n[bf(r)]();
    case "millisecond":
      return n[Sf(r)]();
  }
}
function vy(t) {
  return t ? "getUTCFullYear" : "getFullYear";
}
function cs(t) {
  return t ? "getUTCMonth" : "getMonth";
}
function _f(t) {
  return t ? "getUTCDate" : "getDate";
}
function vu(t) {
  return t ? "getUTCHours" : "getHours";
}
function yf(t) {
  return t ? "getUTCMinutes" : "getMinutes";
}
function bf(t) {
  return t ? "getUTCSeconds" : "getSeconds";
}
function Sf(t) {
  return t ? "getUTCMilliseconds" : "getMilliseconds";
}
function bU(t) {
  return t ? "setUTCFullYear" : "setFullYear";
}
function nM(t) {
  return t ? "setUTCMonth" : "setMonth";
}
function aM(t) {
  return t ? "setUTCDate" : "setDate";
}
function iM(t) {
  return t ? "setUTCHours" : "setHours";
}
function oM(t) {
  return t ? "setUTCMinutes" : "setMinutes";
}
function sM(t) {
  return t ? "setUTCSeconds" : "setSeconds";
}
function lM(t) {
  return t ? "setUTCMilliseconds" : "setMilliseconds";
}
function uM(t) {
  if (!aD(t))
    return Y(t) ? t : "-";
  var e = (t + "").split(".");
  return e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e.length > 1 ? "." + e[1] : "");
}
function cM(t, e) {
  return t = (t || "").toLowerCase().replace(/-(.)/g, function(r, n) {
    return n.toUpperCase();
  }), e && t && (t = t.charAt(0).toUpperCase() + t.slice(1)), t;
}
var Ps = $_;
function ym(t, e, r) {
  var n = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}";
  function a(c) {
    return c && Xr(c) ? c : "-";
  }
  function i(c) {
    return !!(c != null && !isNaN(c) && isFinite(c));
  }
  var o = e === "time", s = t instanceof Date;
  if (o || s) {
    var l = o ? Ln(t) : t;
    if (isNaN(+l)) {
      if (s)
        return "-";
    } else return mf(l, n, r);
  }
  if (e === "ordinal")
    return Bv(t) ? a(t) : ke(t) && i(t) ? t + "" : "-";
  var u = ra(t);
  return i(u) ? uM(u) : Bv(t) ? a(t) : typeof t == "boolean" ? t + "" : "-";
}
var tE = ["a", "b", "c", "d", "e", "f", "g"], Yh = function(t, e) {
  return "{" + t + (e ?? "") + "}";
};
function dM(t, e, r) {
  V(e) || (e = [e]);
  var n = e.length;
  if (!n)
    return "";
  for (var a = e[0].$vars || [], i = 0; i < a.length; i++) {
    var o = tE[i];
    t = t.replace(Yh(o), Yh(o, 0));
  }
  for (var s = 0; s < n; s++)
    for (var l = 0; l < a.length; l++) {
      var u = e[s][a[l]];
      t = t.replace(Yh(tE[l], s), r ? tr(u) : u);
    }
  return t;
}
function SU(t, e, r) {
  return w(e, function(n, a) {
    t = t.replace("{" + a + "}", n);
  }), t;
}
function EU(t, e) {
  var r = Y(t) ? {
    color: t,
    extraCssText: e
  } : t || {}, n = r.color, a = r.type;
  e = r.extraCssText;
  var i = r.renderMode || "html";
  if (!n)
    return "";
  if (i === "html")
    return a === "subItem" ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + tr(n) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + tr(n) + ";" + (e || "") + '"></span>';
  var o = r.markerId || "markerX";
  return {
    renderMode: i,
    content: "{" + o + "|}  ",
    style: a === "subItem" ? {
      width: 4,
      height: 4,
      borderRadius: 2,
      backgroundColor: n
    } : {
      width: 10,
      height: 10,
      borderRadius: 5,
      backgroundColor: n
    }
  };
}
function uo(t, e) {
  return e = e || "transparent", Y(t) ? t : se(t) && t.colorStops && (t.colorStops[0] || {}).color || e;
}
function fp(t, e) {
  if (e === "_blank" || e === "blank") {
    var r = window.open();
    r.opener = null, r.location.href = t;
  } else
    window.open(t, e);
}
var Bd = w, pM = ["left", "right", "top", "bottom", "width", "height"], Hi = [["width", "left", "right"], ["height", "top", "bottom"]];
function my(t, e, r, n, a) {
  var i = 0, o = 0;
  n == null && (n = 1 / 0), a == null && (a = 1 / 0);
  var s = 0;
  e.eachChild(function(l, u) {
    var c = l.getBoundingRect(), d = e.childAt(u + 1), p = d && d.getBoundingRect(), f, h;
    if (t === "horizontal") {
      var g = c.width + (p ? -p.x + c.x : 0);
      f = i + g, f > n || l.newline ? (i = 0, f = g, o += s + r, s = c.height) : s = Math.max(s, c.height);
    } else {
      var v = c.height + (p ? -p.y + c.y : 0);
      h = o + v, h > a || l.newline ? (i += s + r, o = 0, h = v, s = c.width) : s = Math.max(s, c.width);
    }
    l.newline || (l.x = i, l.y = o, l.markRedraw(), t === "horizontal" ? i = f + r : o = h + r);
  });
}
var to = my;
_e(my, "vertical");
_e(my, "horizontal");
function TU(t, e, r) {
  var n = e.width, a = e.height, i = q(t.left, n), o = q(t.top, a), s = q(t.right, n), l = q(t.bottom, a);
  return (isNaN(i) || isNaN(parseFloat(t.left))) && (i = 0), (isNaN(s) || isNaN(parseFloat(t.right))) && (s = n), (isNaN(o) || isNaN(parseFloat(t.top))) && (o = 0), (isNaN(l) || isNaN(parseFloat(t.bottom))) && (l = a), r = Ps(r || 0), {
    width: Math.max(s - i - r[1] - r[3], 0),
    height: Math.max(l - o - r[0] - r[2], 0)
  };
}
function Et(t, e, r) {
  r = Ps(r || 0);
  var n = e.width, a = e.height, i = q(t.left, n), o = q(t.top, a), s = q(t.right, n), l = q(t.bottom, a), u = q(t.width, n), c = q(t.height, a), d = r[2] + r[0], p = r[1] + r[3], f = t.aspect;
  switch (isNaN(u) && (u = n - s - p - i), isNaN(c) && (c = a - l - d - o), f != null && (isNaN(u) && isNaN(c) && (f > n / a ? u = n * 0.8 : c = a * 0.8), isNaN(u) && (u = f * c), isNaN(c) && (c = u / f)), isNaN(i) && (i = n - s - u - p), isNaN(o) && (o = a - l - c - d), t.left || t.right) {
    case "center":
      i = n / 2 - u / 2 - r[3];
      break;
    case "right":
      i = n - u - p;
      break;
  }
  switch (t.top || t.bottom) {
    case "middle":
    case "center":
      o = a / 2 - c / 2 - r[0];
      break;
    case "bottom":
      o = a - c - d;
      break;
  }
  i = i || 0, o = o || 0, isNaN(u) && (u = n - p - i - (s || 0)), isNaN(c) && (c = a - d - o - (l || 0));
  var h = new Te(i + r[3], o + r[0], u, c);
  return h.margin = r, h;
}
function Ef(t, e, r, n, a, i) {
  var o = !a || !a.hv || a.hv[0], s = !a || !a.hv || a.hv[1], l = a && a.boundingMode || "all";
  if (i = i || t, i.x = t.x, i.y = t.y, !o && !s)
    return !1;
  var u;
  if (l === "raw")
    u = t.type === "group" ? new Te(0, 0, +e.width || 0, +e.height || 0) : t.getBoundingRect();
  else if (u = t.getBoundingRect(), t.needLocalTransform()) {
    var c = t.getLocalTransform();
    u = u.clone(), u.applyTransform(c);
  }
  var d = Et(ie({
    width: u.width,
    height: u.height
  }, e), r, n), p = o ? d.x - u.x : 0, f = s ? d.y - u.y : 0;
  return l === "raw" ? (i.x = p, i.y = f) : (i.x += p, i.y += f), i === t && t.markRedraw(), !0;
}
function xU(t, e) {
  return t[Hi[e][0]] != null || t[Hi[e][1]] != null && t[Hi[e][2]] != null;
}
function mu(t) {
  var e = t.layoutMode || t.constructor.layoutMode;
  return se(e) ? e : e ? {
    type: e
  } : null;
}
function Xa(t, e, r) {
  var n = r && r.ignoreSize;
  !V(n) && (n = [n, n]);
  var a = o(Hi[0], 0), i = o(Hi[1], 1);
  u(Hi[0], t, a), u(Hi[1], t, i);
  function o(c, d) {
    var p = {}, f = 0, h = {}, g = 0, v = 2;
    if (Bd(c, function(y) {
      h[y] = t[y];
    }), Bd(c, function(y) {
      s(e, y) && (p[y] = h[y] = e[y]), l(p, y) && f++, l(h, y) && g++;
    }), n[d])
      return l(e, c[1]) ? h[c[2]] = null : l(e, c[2]) && (h[c[1]] = null), h;
    if (g === v || !f)
      return h;
    if (f >= v)
      return p;
    for (var m = 0; m < c.length; m++) {
      var _ = c[m];
      if (!s(p, _) && s(t, _)) {
        p[_] = t[_];
        break;
      }
    }
    return p;
  }
  function s(c, d) {
    return c.hasOwnProperty(d);
  }
  function l(c, d) {
    return c[d] != null && c[d] !== "auto";
  }
  function u(c, d, p) {
    Bd(c, function(f) {
      d[f] = p[f];
    });
  }
}
function ks(t) {
  return fM({}, t);
}
function fM(t, e) {
  return e && t && Bd(pM, function(r) {
    e.hasOwnProperty(r) && (t[r] = e[r]);
  }), t;
}
var CU = Oe(), De = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this, r, n, a) || this;
      return i.uid = Ls("ec_cpt_model"), i;
    }
    return e.prototype.init = function(r, n, a) {
      this.mergeDefaultAndTheme(r, a);
    }, e.prototype.mergeDefaultAndTheme = function(r, n) {
      var a = mu(this), i = a ? ks(r) : {}, o = n.getTheme();
      be(r, o.get(this.mainType)), be(r, this.getDefaultOption()), a && Xa(r, i, a);
    }, e.prototype.mergeOption = function(r, n) {
      be(this.option, r, !0);
      var a = mu(this);
      a && Xa(this.option, r, a);
    }, e.prototype.optionUpdated = function(r, n) {
    }, e.prototype.getDefaultOption = function() {
      var r = this.constructor;
      if (!g3(r))
        return r.defaultOption;
      var n = CU(this);
      if (!n.defaultOption) {
        for (var a = [], i = r; i; ) {
          var o = i.prototype.defaultOption;
          o && a.push(o), i = i.superClass;
        }
        for (var s = {}, l = a.length - 1; l >= 0; l--)
          s = be(s, a[l], !0);
        n.defaultOption = s;
      }
      return n.defaultOption;
    }, e.prototype.getReferringComponents = function(r, n) {
      var a = r + "Index", i = r + "Id";
      return zu(this.ecModel, r, {
        index: this.get(a, !0),
        id: this.get(i, !0)
      }, n);
    }, e.prototype.getBoxLayoutParams = function() {
      var r = this;
      return {
        left: r.get("left"),
        top: r.get("top"),
        right: r.get("right"),
        bottom: r.get("bottom"),
        width: r.get("width"),
        height: r.get("height")
      };
    }, e.prototype.getZLevelKey = function() {
      return "";
    }, e.prototype.setZLevel = function(r) {
      this.option.zlevel = r;
    }, e.protoInitialize = function() {
      var r = e.prototype;
      r.type = "component", r.id = "", r.name = "", r.mainType = "", r.subType = "", r.componentIndex = 0;
    }(), e;
  }(He)
);
hD(De, He);
of(De);
dU(De);
pU(De, AU);
function AU(t) {
  var e = [];
  return w(De.getClassesByMainType(t), function(r) {
    e = e.concat(r.dependencies || r.prototype.dependencies || []);
  }), e = $(e, function(r) {
    return Cn(r).main;
  }), t !== "dataset" && xe(e, "dataset") <= 0 && e.unshift("dataset"), e;
}
var hM = "";
typeof navigator < "u" && (hM = navigator.platform || "");
var Oo = "rgba(0, 0, 0, 0.2)";
const wU = {
  darkMode: "auto",
  // backgroundColor: 'rgba(0,0,0,0)',
  colorBy: "series",
  color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
  gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
  aria: {
    decal: {
      decals: [{
        color: Oo,
        dashArrayX: [1, 0],
        dashArrayY: [2, 5],
        symbolSize: 1,
        rotation: Math.PI / 6
      }, {
        color: Oo,
        symbol: "circle",
        dashArrayX: [[8, 8], [0, 8, 8, 0]],
        dashArrayY: [6, 0],
        symbolSize: 0.8
      }, {
        color: Oo,
        dashArrayX: [1, 0],
        dashArrayY: [4, 3],
        rotation: -Math.PI / 4
      }, {
        color: Oo,
        dashArrayX: [[6, 6], [0, 6, 6, 0]],
        dashArrayY: [6, 0]
      }, {
        color: Oo,
        dashArrayX: [[1, 0], [1, 6]],
        dashArrayY: [1, 0, 6, 0],
        rotation: Math.PI / 4
      }, {
        color: Oo,
        symbol: "triangle",
        dashArrayX: [[9, 9], [0, 9, 9, 0]],
        dashArrayY: [7, 2],
        symbolSize: 0.75
      }]
    }
  },
  // If xAxis and yAxis declared, grid is created by default.
  // grid: {},
  textStyle: {
    // color: '#000',
    // decoration: 'none',
    // PENDING
    fontFamily: hM.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
    // fontFamily: 'Arial, Verdana, sans-serif',
    fontSize: 12,
    fontStyle: "normal",
    fontWeight: "normal"
  },
  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
  // Default is source-over
  blendMode: null,
  stateAnimation: {
    duration: 300,
    easing: "cubicOut"
  },
  animation: "auto",
  animationDuration: 1e3,
  animationDurationUpdate: 500,
  animationEasing: "cubicInOut",
  animationEasingUpdate: "cubicInOut",
  animationThreshold: 2e3,
  // Configuration for progressive/incremental rendering
  progressiveThreshold: 3e3,
  progressive: 400,
  // Threshold of if use single hover layer to optimize.
  // It is recommended that `hoverLayerThreshold` is equivalent to or less than
  // `progressiveThreshold`, otherwise hover will cause restart of progressive,
  // which is unexpected.
  // see example <echarts/test/heatmap-large.html>.
  hoverLayerThreshold: 3e3,
  // See: module:echarts/scale/Time
  useUTC: !1
};
var gM = J(["tooltip", "label", "itemName", "itemId", "itemGroupId", "itemChildGroupId", "seriesName"]), Ur = "original", Zt = "arrayRows", zr = "objectRows", Fn = "keyedColumns", Va = "typedArray", vM = "unknown", In = "column", Bs = "row", Gt = {
  Must: 1,
  Might: 2,
  Not: 3
  // Other cases
}, mM = Oe();
function DU(t) {
  mM(t).datasetMap = J();
}
function _M(t, e, r) {
  var n = {}, a = yy(e);
  if (!a || !t)
    return n;
  var i = [], o = [], s = e.ecModel, l = mM(s).datasetMap, u = a.uid + "_" + r.seriesLayoutBy, c, d;
  t = t.slice(), w(t, function(g, v) {
    var m = se(g) ? g : t[v] = {
      name: g
    };
    m.type === "ordinal" && c == null && (c = v, d = h(m)), n[m.name] = [];
  });
  var p = l.get(u) || l.set(u, {
    categoryWayDim: d,
    valueWayDim: 0
  });
  w(t, function(g, v) {
    var m = g.name, _ = h(g);
    if (c == null) {
      var y = p.valueWayDim;
      f(n[m], y, _), f(o, y, _), p.valueWayDim += _;
    } else if (c === v)
      f(n[m], 0, _), f(i, 0, _);
    else {
      var y = p.categoryWayDim;
      f(n[m], y, _), f(o, y, _), p.categoryWayDim += _;
    }
  });
  function f(g, v, m) {
    for (var _ = 0; _ < m; _++)
      g.push(v + _);
  }
  function h(g) {
    var v = g.dimsDef;
    return v ? v.length : 1;
  }
  return i.length && (n.itemName = i), o.length && (n.seriesName = o), n;
}
function _y(t, e, r) {
  var n = {}, a = yy(t);
  if (!a)
    return n;
  var i = e.sourceFormat, o = e.dimensionsDefine, s;
  (i === zr || i === Fn) && w(o, function(c, d) {
    (se(c) ? c.name : c) === "name" && (s = d);
  });
  var l = function() {
    for (var c = {}, d = {}, p = [], f = 0, h = Math.min(5, r); f < h; f++) {
      var g = bM(e.data, i, e.seriesLayoutBy, o, e.startIndex, f);
      p.push(g);
      var v = g === Gt.Not;
      if (v && c.v == null && f !== s && (c.v = f), (c.n == null || c.n === c.v || !v && p[c.n] === Gt.Not) && (c.n = f), m(c) && p[c.n] !== Gt.Not)
        return c;
      v || (g === Gt.Might && d.v == null && f !== s && (d.v = f), (d.n == null || d.n === d.v) && (d.n = f));
    }
    function m(_) {
      return _.v != null && _.n != null;
    }
    return m(c) ? c : m(d) ? d : null;
  }();
  if (l) {
    n.value = [l.v];
    var u = s ?? l.n;
    n.itemName = [u], n.seriesName = [u];
  }
  return n;
}
function yy(t) {
  var e = t.get("data", !0);
  if (!e)
    return zu(t.ecModel, "dataset", {
      index: t.get("datasetIndex", !0),
      id: t.get("datasetId", !0)
    }, vt).models[0];
}
function MU(t) {
  return !t.get("transform", !0) && !t.get("fromTransformResult", !0) ? [] : zu(t.ecModel, "dataset", {
    index: t.get("fromDatasetIndex", !0),
    id: t.get("fromDatasetId", !0)
  }, vt).models;
}
function yM(t, e) {
  return bM(t.data, t.sourceFormat, t.seriesLayoutBy, t.dimensionsDefine, t.startIndex, e);
}
function bM(t, e, r, n, a, i) {
  var o, s = 5;
  if (gr(t))
    return Gt.Not;
  var l, u;
  if (n) {
    var c = n[i];
    se(c) ? (l = c.name, u = c.type) : Y(c) && (l = c);
  }
  if (u != null)
    return u === "ordinal" ? Gt.Must : Gt.Not;
  if (e === Zt) {
    var d = t;
    if (r === Bs) {
      for (var p = d[i], f = 0; f < (p || []).length && f < s; f++)
        if ((o = b(p[a + f])) != null)
          return o;
    } else
      for (var f = 0; f < d.length && f < s; f++) {
        var h = d[a + f];
        if (h && (o = b(h[i])) != null)
          return o;
      }
  } else if (e === zr) {
    var g = t;
    if (!l)
      return Gt.Not;
    for (var f = 0; f < g.length && f < s; f++) {
      var v = g[f];
      if (v && (o = b(v[l])) != null)
        return o;
    }
  } else if (e === Fn) {
    var m = t;
    if (!l)
      return Gt.Not;
    var p = m[l];
    if (!p || gr(p))
      return Gt.Not;
    for (var f = 0; f < p.length && f < s; f++)
      if ((o = b(p[f])) != null)
        return o;
  } else if (e === Ur)
    for (var _ = t, f = 0; f < _.length && f < s; f++) {
      var v = _[f], y = Is(v);
      if (!V(y))
        return Gt.Not;
      if ((o = b(y[i])) != null)
        return o;
    }
  function b(S) {
    var E = Y(S);
    if (S != null && Number.isFinite(Number(S)) && S !== "")
      return E ? Gt.Might : Gt.Not;
    if (E && S !== "-")
      return Gt.Must;
  }
  return Gt.Not;
}
var bm = J();
function IU(t, e) {
  ar(bm.get(t) == null && e), bm.set(t, e);
}
function NU(t, e, r) {
  var n = bm.get(e);
  if (!n)
    return r;
  var a = n(t);
  return a ? r.concat(a) : r;
}
var rE = Oe(), RU = Oe(), by = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getColorFromPalette = function(e, r, n) {
      var a = Ye(this.get("color", !0)), i = this.get("colorLayer", !0);
      return SM(this, rE, a, i, e, r, n);
    }, t.prototype.clearColorPalette = function() {
      LU(this, rE);
    }, t;
  }()
);
function Sm(t, e, r, n) {
  var a = Ye(t.get(["aria", "decal", "decals"]));
  return SM(t, RU, a, null, e, r, n);
}
function OU(t, e) {
  for (var r = t.length, n = 0; n < r; n++)
    if (t[n].length > e)
      return t[n];
  return t[r - 1];
}
function SM(t, e, r, n, a, i, o) {
  i = i || t;
  var s = e(i), l = s.paletteIdx || 0, u = s.paletteNameMap = s.paletteNameMap || {};
  if (u.hasOwnProperty(a))
    return u[a];
  var c = o == null || !n ? r : OU(n, o);
  if (c = c || r, !(!c || !c.length)) {
    var d = c[l];
    return a && (u[a] = d), s.paletteIdx = (l + 1) % c.length, d;
  }
}
function LU(t, e) {
  e(t).paletteIdx = 0, e(t).paletteNameMap = {};
}
var Lc, Js, nE, aE = "\0_ec_inner", PU = 1, Sy = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.init = function(r, n, a, i, o, s) {
      i = i || {}, this.option = null, this._theme = new He(i), this._locale = new He(o), this._optionManager = s;
    }, e.prototype.setOption = function(r, n, a) {
      var i = sE(n);
      this._optionManager.setOption(r, a, i), this._resetOption(null, i);
    }, e.prototype.resetOption = function(r, n) {
      return this._resetOption(r, sE(n));
    }, e.prototype._resetOption = function(r, n) {
      var a = !1, i = this._optionManager;
      if (!r || r === "recreate") {
        var o = i.mountOption(r === "recreate");
        !this.option || r === "recreate" ? nE(this, o) : (this.restoreData(), this._mergeOption(o, n)), a = !0;
      }
      if ((r === "timeline" || r === "media") && this.restoreData(), !r || r === "recreate" || r === "timeline") {
        var s = i.getTimelineOption(this);
        s && (a = !0, this._mergeOption(s, n));
      }
      if (!r || r === "recreate" || r === "media") {
        var l = i.getMediaOption(this);
        l.length && w(l, function(u) {
          a = !0, this._mergeOption(u, n);
        }, this);
      }
      return a;
    }, e.prototype.mergeOption = function(r) {
      this._mergeOption(r, null);
    }, e.prototype._mergeOption = function(r, n) {
      var a = this.option, i = this._componentsMap, o = this._componentsCount, s = [], l = J(), u = n && n.replaceMergeMainTypeMap;
      DU(this), w(r, function(d, p) {
        d != null && (De.hasClass(p) ? p && (s.push(p), l.set(p, !0)) : a[p] = a[p] == null ? le(d) : be(a[p], d, !0));
      }), u && u.each(function(d, p) {
        De.hasClass(p) && !l.get(p) && (s.push(p), l.set(p, !0));
      }), De.topologicalTravel(s, De.getAllClassMainTypes(), c, this);
      function c(d) {
        var p = NU(this, d, Ye(r[d])), f = i.get(d), h = (
          // `!oldCmptList` means init. See the comment in `mappingToExists`
          f ? u && u.get(d) ? "replaceMerge" : "normalMerge" : "replaceAll"
        ), g = uD(f, p, h);
        o3(g, d, De), a[d] = null, i.set(d, null), o.set(d, 0);
        var v = [], m = [], _ = 0, y;
        w(g, function(b, S) {
          var E = b.existing, T = b.newOption;
          if (!T)
            E && (E.mergeOption({}, this), E.optionUpdated({}, !1));
          else {
            var x = d === "series", C = De.getClass(
              d,
              b.keyInfo.subType,
              !x
              // Give a more detailed warn later if series don't exists
            );
            if (!C)
              return;
            if (d === "tooltip") {
              if (y)
                return;
              y = !0;
            }
            if (E && E.constructor === C)
              E.name = b.keyInfo.name, E.mergeOption(T, this), E.optionUpdated(T, !1);
            else {
              var A = G({
                componentIndex: S
              }, b.keyInfo);
              E = new C(T, this, this, A), G(E, A), b.brandNew && (E.__requireNewView = !0), E.init(T, this, this), E.optionUpdated(null, !0);
            }
          }
          E ? (v.push(E.option), m.push(E), _++) : (v.push(void 0), m.push(void 0));
        }, this), a[d] = v, i.set(d, m), o.set(d, _), d === "series" && Lc(this);
      }
      this._seriesIndices || Lc(this);
    }, e.prototype.getOption = function() {
      var r = le(this.option);
      return w(r, function(n, a) {
        if (De.hasClass(a)) {
          for (var i = Ye(n), o = i.length, s = !1, l = o - 1; l >= 0; l--)
            i[l] && !pu(i[l]) ? s = !0 : (i[l] = null, !s && o--);
          i.length = o, r[a] = i;
        }
      }), delete r[aE], r;
    }, e.prototype.getTheme = function() {
      return this._theme;
    }, e.prototype.getLocaleModel = function() {
      return this._locale;
    }, e.prototype.setUpdatePayload = function(r) {
      this._payload = r;
    }, e.prototype.getUpdatePayload = function() {
      return this._payload;
    }, e.prototype.getComponent = function(r, n) {
      var a = this._componentsMap.get(r);
      if (a) {
        var i = a[n || 0];
        if (i)
          return i;
        if (n == null) {
          for (var o = 0; o < a.length; o++)
            if (a[o])
              return a[o];
        }
      }
    }, e.prototype.queryComponents = function(r) {
      var n = r.mainType;
      if (!n)
        return [];
      var a = r.index, i = r.id, o = r.name, s = this._componentsMap.get(n);
      if (!s || !s.length)
        return [];
      var l;
      return a != null ? (l = [], w(Ye(a), function(u) {
        s[u] && l.push(s[u]);
      })) : i != null ? l = iE("id", i, s) : o != null ? l = iE("name", o, s) : l = ze(s, function(u) {
        return !!u;
      }), oE(l, r);
    }, e.prototype.findComponents = function(r) {
      var n = r.query, a = r.mainType, i = s(n), o = i ? this.queryComponents(i) : ze(this._componentsMap.get(a), function(u) {
        return !!u;
      });
      return l(oE(o, r));
      function s(u) {
        var c = a + "Index", d = a + "Id", p = a + "Name";
        return u && (u[c] != null || u[d] != null || u[p] != null) ? {
          mainType: a,
          // subType will be filtered finally.
          index: u[c],
          id: u[d],
          name: u[p]
        } : null;
      }
      function l(u) {
        return r.filter ? ze(u, r.filter) : u;
      }
    }, e.prototype.eachComponent = function(r, n, a) {
      var i = this._componentsMap;
      if (ae(r)) {
        var o = n, s = r;
        i.each(function(d, p) {
          for (var f = 0; d && f < d.length; f++) {
            var h = d[f];
            h && s.call(o, p, h, h.componentIndex);
          }
        });
      } else
        for (var l = Y(r) ? i.get(r) : se(r) ? this.findComponents(r) : null, u = 0; l && u < l.length; u++) {
          var c = l[u];
          c && n.call(a, c, c.componentIndex);
        }
    }, e.prototype.getSeriesByName = function(r) {
      var n = St(r, null);
      return ze(this._componentsMap.get("series"), function(a) {
        return !!a && n != null && a.name === n;
      });
    }, e.prototype.getSeriesByIndex = function(r) {
      return this._componentsMap.get("series")[r];
    }, e.prototype.getSeriesByType = function(r) {
      return ze(this._componentsMap.get("series"), function(n) {
        return !!n && n.subType === r;
      });
    }, e.prototype.getSeries = function() {
      return ze(this._componentsMap.get("series"), function(r) {
        return !!r;
      });
    }, e.prototype.getSeriesCount = function() {
      return this._componentsCount.get("series");
    }, e.prototype.eachSeries = function(r, n) {
      Js(this), w(this._seriesIndices, function(a) {
        var i = this._componentsMap.get("series")[a];
        r.call(n, i, a);
      }, this);
    }, e.prototype.eachRawSeries = function(r, n) {
      w(this._componentsMap.get("series"), function(a) {
        a && r.call(n, a, a.componentIndex);
      });
    }, e.prototype.eachSeriesByType = function(r, n, a) {
      Js(this), w(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        o.subType === r && n.call(a, o, i);
      }, this);
    }, e.prototype.eachRawSeriesByType = function(r, n, a) {
      return w(this.getSeriesByType(r), n, a);
    }, e.prototype.isSeriesFiltered = function(r) {
      return Js(this), this._seriesIndicesMap.get(r.componentIndex) == null;
    }, e.prototype.getCurrentSeriesIndices = function() {
      return (this._seriesIndices || []).slice();
    }, e.prototype.filterSeries = function(r, n) {
      Js(this);
      var a = [];
      w(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        r.call(n, o, i) && a.push(i);
      }, this), this._seriesIndices = a, this._seriesIndicesMap = J(a);
    }, e.prototype.restoreData = function(r) {
      Lc(this);
      var n = this._componentsMap, a = [];
      n.each(function(i, o) {
        De.hasClass(o) && a.push(o);
      }), De.topologicalTravel(a, De.getAllClassMainTypes(), function(i) {
        w(n.get(i), function(o) {
          o && (i !== "series" || !kU(o, r)) && o.restoreData();
        });
      });
    }, e.internalField = function() {
      Lc = function(r) {
        var n = r._seriesIndices = [];
        w(r._componentsMap.get("series"), function(a) {
          a && n.push(a.componentIndex);
        }), r._seriesIndicesMap = J(n);
      }, Js = function(r) {
      }, nE = function(r, n) {
        r.option = {}, r.option[aE] = PU, r._componentsMap = J({
          series: []
        }), r._componentsCount = J();
        var a = n.aria;
        se(a) && a.enabled == null && (a.enabled = !0), BU(n, r._theme.option), be(n, wU, !1), r._mergeOption(n, null);
      };
    }(), e;
  }(He)
);
function kU(t, e) {
  if (e) {
    var r = e.seriesIndex, n = e.seriesId, a = e.seriesName;
    return r != null && t.componentIndex !== r || n != null && t.id !== n || a != null && t.name !== a;
  }
}
function BU(t, e) {
  var r = t.color && !t.colorLayer;
  w(e, function(n, a) {
    a === "colorLayer" && r || De.hasClass(a) || (typeof n == "object" ? t[a] = t[a] ? be(t[a], n, !1) : le(n) : t[a] == null && (t[a] = n));
  });
}
function iE(t, e, r) {
  if (V(e)) {
    var n = J();
    return w(e, function(i) {
      if (i != null) {
        var o = St(i, null);
        o != null && n.set(i, !0);
      }
    }), ze(r, function(i) {
      return i && n.get(i[t]);
    });
  } else {
    var a = St(e, null);
    return ze(r, function(i) {
      return i && a != null && i[t] === a;
    });
  }
}
function oE(t, e) {
  return e.hasOwnProperty("subType") ? ze(t, function(r) {
    return r && r.subType === e.subType;
  }) : t;
}
function sE(t) {
  var e = J();
  return t && w(Ye(t.replaceMerge), function(r) {
    e.set(r, !0);
  }), {
    replaceMergeMainTypeMap: e
  };
}
_t(Sy, by);
var FU = [
  "getDom",
  "getZr",
  "getWidth",
  "getHeight",
  "getDevicePixelRatio",
  "dispatchAction",
  "isSSR",
  "isDisposed",
  "on",
  "off",
  "getDataURL",
  "getConnectedDataURL",
  // 'getModel',
  "getOption",
  // 'getViewOfComponentModel',
  // 'getViewOfSeriesModel',
  "getId",
  "updateLabelLayout"
], EM = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e) {
      w(FU, function(r) {
        this[r] = K(e[r], e);
      }, this);
    }
    return t;
  }()
), Kh = {}, Ku = (
  /** @class */
  function() {
    function t() {
      this._coordinateSystems = [];
    }
    return t.prototype.create = function(e, r) {
      var n = [];
      w(Kh, function(a, i) {
        var o = a.create(e, r);
        n = n.concat(o || []);
      }), this._coordinateSystems = n;
    }, t.prototype.update = function(e, r) {
      w(this._coordinateSystems, function(n) {
        n.update && n.update(e, r);
      });
    }, t.prototype.getCoordinateSystems = function() {
      return this._coordinateSystems.slice();
    }, t.register = function(e, r) {
      Kh[e] = r;
    }, t.get = function(e) {
      return Kh[e];
    }, t;
  }()
), GU = /^(min|max)?(.+)$/, UU = (
  /** @class */
  function() {
    function t(e) {
      this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = e;
    }
    return t.prototype.setOption = function(e, r, n) {
      e && (w(Ye(e.series), function(o) {
        o && o.data && gr(o.data) && jd(o.data);
      }), w(Ye(e.dataset), function(o) {
        o && o.source && gr(o.source) && jd(o.source);
      })), e = le(e);
      var a = this._optionBackup, i = zU(e, r, !a);
      this._newBaseOption = i.baseOption, a ? (i.timelineOptions.length && (a.timelineOptions = i.timelineOptions), i.mediaList.length && (a.mediaList = i.mediaList), i.mediaDefault && (a.mediaDefault = i.mediaDefault)) : this._optionBackup = i;
    }, t.prototype.mountOption = function(e) {
      var r = this._optionBackup;
      return this._timelineOptions = r.timelineOptions, this._mediaList = r.mediaList, this._mediaDefault = r.mediaDefault, this._currentMediaIndices = [], le(e ? r.baseOption : this._newBaseOption);
    }, t.prototype.getTimelineOption = function(e) {
      var r, n = this._timelineOptions;
      if (n.length) {
        var a = e.getComponent("timeline");
        a && (r = le(
          // FIXME:TS as TimelineModel or quivlant interface
          n[a.getCurrentIndex()]
        ));
      }
      return r;
    }, t.prototype.getMediaOption = function(e) {
      var r = this._api.getWidth(), n = this._api.getHeight(), a = this._mediaList, i = this._mediaDefault, o = [], s = [];
      if (!a.length && !i)
        return s;
      for (var l = 0, u = a.length; l < u; l++)
        VU(a[l].query, r, n) && o.push(l);
      return !o.length && i && (o = [-1]), o.length && !HU(o, this._currentMediaIndices) && (s = $(o, function(c) {
        return le(c === -1 ? i.option : a[c].option);
      })), this._currentMediaIndices = o, s;
    }, t;
  }()
);
function zU(t, e, r) {
  var n = [], a, i, o = t.baseOption, s = t.timeline, l = t.options, u = t.media, c = !!t.media, d = !!(l || s || o && o.timeline);
  o ? (i = o, i.timeline || (i.timeline = s)) : ((d || c) && (t.options = t.media = null), i = t), c && V(u) && w(u, function(f) {
    f && f.option && (f.query ? n.push(f) : a || (a = f));
  }), p(i), w(l, function(f) {
    return p(f);
  }), w(n, function(f) {
    return p(f.option);
  });
  function p(f) {
    w(e, function(h) {
      h(f, r);
    });
  }
  return {
    baseOption: i,
    timelineOptions: l || [],
    mediaDefault: a,
    mediaList: n
  };
}
function VU(t, e, r) {
  var n = {
    width: e,
    height: r,
    aspectratio: e / r
    // lower case for convenience.
  }, a = !0;
  return w(t, function(i, o) {
    var s = o.match(GU);
    if (!(!s || !s[1] || !s[2])) {
      var l = s[1], u = s[2].toLowerCase();
      $U(n[u], i, l) || (a = !1);
    }
  }), a;
}
function $U(t, e, r) {
  return r === "min" ? t >= e : r === "max" ? t <= e : t === e;
}
function HU(t, e) {
  return t.join(",") === e.join(",");
}
var $r = w, _u = se, lE = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
function Zh(t) {
  var e = t && t.itemStyle;
  if (e)
    for (var r = 0, n = lE.length; r < n; r++) {
      var a = lE[r], i = e.normal, o = e.emphasis;
      i && i[a] && (t[a] = t[a] || {}, t[a].normal ? be(t[a].normal, i[a]) : t[a].normal = i[a], i[a] = null), o && o[a] && (t[a] = t[a] || {}, t[a].emphasis ? be(t[a].emphasis, o[a]) : t[a].emphasis = o[a], o[a] = null);
    }
}
function Yt(t, e, r) {
  if (t && t[e] && (t[e].normal || t[e].emphasis)) {
    var n = t[e].normal, a = t[e].emphasis;
    n && (r ? (t[e].normal = t[e].emphasis = null, ie(t[e], n)) : t[e] = n), a && (t.emphasis = t.emphasis || {}, t.emphasis[e] = a, a.focus && (t.emphasis.focus = a.focus), a.blurScope && (t.emphasis.blurScope = a.blurScope));
  }
}
function Dl(t) {
  Yt(t, "itemStyle"), Yt(t, "lineStyle"), Yt(t, "areaStyle"), Yt(t, "label"), Yt(t, "labelLine"), Yt(t, "upperLabel"), Yt(t, "edgeLabel");
}
function gt(t, e) {
  var r = _u(t) && t[e], n = _u(r) && r.textStyle;
  if (n)
    for (var a = 0, i = hS.length; a < i; a++) {
      var o = hS[a];
      n.hasOwnProperty(o) && (r[o] = n[o]);
    }
}
function Mr(t) {
  t && (Dl(t), gt(t, "label"), t.emphasis && gt(t.emphasis, "label"));
}
function WU(t) {
  if (_u(t)) {
    Zh(t), Dl(t), gt(t, "label"), gt(t, "upperLabel"), gt(t, "edgeLabel"), t.emphasis && (gt(t.emphasis, "label"), gt(t.emphasis, "upperLabel"), gt(t.emphasis, "edgeLabel"));
    var e = t.markPoint;
    e && (Zh(e), Mr(e));
    var r = t.markLine;
    r && (Zh(r), Mr(r));
    var n = t.markArea;
    n && Mr(n);
    var a = t.data;
    if (t.type === "graph") {
      a = a || t.nodes;
      var i = t.links || t.edges;
      if (i && !gr(i))
        for (var o = 0; o < i.length; o++)
          Mr(i[o]);
      w(t.categories, function(u) {
        Dl(u);
      });
    }
    if (a && !gr(a))
      for (var o = 0; o < a.length; o++)
        Mr(a[o]);
    if (e = t.markPoint, e && e.data)
      for (var s = e.data, o = 0; o < s.length; o++)
        Mr(s[o]);
    if (r = t.markLine, r && r.data)
      for (var l = r.data, o = 0; o < l.length; o++)
        V(l[o]) ? (Mr(l[o][0]), Mr(l[o][1])) : Mr(l[o]);
    t.type === "gauge" ? (gt(t, "axisLabel"), gt(t, "title"), gt(t, "detail")) : t.type === "treemap" ? (Yt(t.breadcrumb, "itemStyle"), w(t.levels, function(u) {
      Dl(u);
    })) : t.type === "tree" && Dl(t.leaves);
  }
}
function $n(t) {
  return V(t) ? t : t ? [t] : [];
}
function uE(t) {
  return (V(t) ? t[0] : t) || {};
}
function qU(t, e) {
  $r($n(t.series), function(n) {
    _u(n) && WU(n);
  });
  var r = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
  e && r.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), $r(r, function(n) {
    $r($n(t[n]), function(a) {
      a && (gt(a, "axisLabel"), gt(a.axisPointer, "label"));
    });
  }), $r($n(t.parallel), function(n) {
    var a = n && n.parallelAxisDefault;
    gt(a, "axisLabel"), gt(a && a.axisPointer, "label");
  }), $r($n(t.calendar), function(n) {
    Yt(n, "itemStyle"), gt(n, "dayLabel"), gt(n, "monthLabel"), gt(n, "yearLabel");
  }), $r($n(t.radar), function(n) {
    gt(n, "name"), n.name && n.axisName == null && (n.axisName = n.name, delete n.name), n.nameGap != null && n.axisNameGap == null && (n.axisNameGap = n.nameGap, delete n.nameGap);
  }), $r($n(t.geo), function(n) {
    _u(n) && (Mr(n), $r($n(n.regions), function(a) {
      Mr(a);
    }));
  }), $r($n(t.timeline), function(n) {
    Mr(n), Yt(n, "label"), Yt(n, "itemStyle"), Yt(n, "controlStyle", !0);
    var a = n.data;
    V(a) && w(a, function(i) {
      se(i) && (Yt(i, "label"), Yt(i, "itemStyle"));
    });
  }), $r($n(t.toolbox), function(n) {
    Yt(n, "iconStyle"), $r(n.feature, function(a) {
      Yt(a, "iconStyle");
    });
  }), gt(uE(t.axisPointer), "label"), gt(uE(t.tooltip).axisPointer, "label");
}
function YU(t, e) {
  for (var r = e.split(","), n = t, a = 0; a < r.length && (n = n && n[r[a]], n != null); a++)
    ;
  return n;
}
function KU(t, e, r, n) {
  for (var a = e.split(","), i = t, o, s = 0; s < a.length - 1; s++)
    o = a[s], i[o] == null && (i[o] = {}), i = i[o];
  i[a[s]] == null && (i[a[s]] = r);
}
function cE(t) {
  t && w(ZU, function(e) {
    e[0] in t && !(e[1] in t) && (t[e[1]] = t[e[0]]);
  });
}
var ZU = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]], XU = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"], Xh = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
function el(t) {
  var e = t && t.itemStyle;
  if (e)
    for (var r = 0; r < Xh.length; r++) {
      var n = Xh[r][1], a = Xh[r][0];
      e[n] != null && (e[a] = e[n]);
    }
}
function dE(t) {
  t && t.alignTo === "edge" && t.margin != null && t.edgeDistance == null && (t.edgeDistance = t.margin);
}
function pE(t) {
  t && t.downplay && !t.blur && (t.blur = t.downplay);
}
function QU(t) {
  t && t.focusNodeAdjacency != null && (t.emphasis = t.emphasis || {}, t.emphasis.focus == null && (t.emphasis.focus = "adjacency"));
}
function TM(t, e) {
  if (t)
    for (var r = 0; r < t.length; r++)
      e(t[r]), t[r] && TM(t[r].children, e);
}
function xM(t, e) {
  qU(t, e), t.series = Ye(t.series), w(t.series, function(r) {
    if (se(r)) {
      var n = r.type;
      if (n === "line")
        r.clipOverflow != null && (r.clip = r.clipOverflow);
      else if (n === "pie" || n === "gauge") {
        r.clockWise != null && (r.clockwise = r.clockWise), dE(r.label);
        var a = r.data;
        if (a && !gr(a))
          for (var i = 0; i < a.length; i++)
            dE(a[i]);
        r.hoverOffset != null && (r.emphasis = r.emphasis || {}, (r.emphasis.scaleSize = null) && (r.emphasis.scaleSize = r.hoverOffset));
      } else if (n === "gauge") {
        var o = YU(r, "pointer.color");
        o != null && KU(r, "itemStyle.color", o);
      } else if (n === "bar") {
        el(r), el(r.backgroundStyle), el(r.emphasis);
        var a = r.data;
        if (a && !gr(a))
          for (var i = 0; i < a.length; i++)
            typeof a[i] == "object" && (el(a[i]), el(a[i] && a[i].emphasis));
      } else if (n === "sunburst") {
        var s = r.highlightPolicy;
        s && (r.emphasis = r.emphasis || {}, r.emphasis.focus || (r.emphasis.focus = s)), pE(r), TM(r.data, pE);
      } else n === "graph" || n === "sankey" ? QU(r) : n === "map" && (r.mapType && !r.map && (r.map = r.mapType), r.mapLocation && ie(r, r.mapLocation));
      r.hoverAnimation != null && (r.emphasis = r.emphasis || {}, r.emphasis && r.emphasis.scale == null && (r.emphasis.scale = r.hoverAnimation)), cE(r);
    }
  }), t.dataRange && (t.visualMap = t.dataRange), w(XU, function(r) {
    var n = t[r];
    n && (V(n) || (n = [n]), w(n, function(a) {
      cE(a);
    }));
  });
}
function jU(t) {
  var e = J();
  t.eachSeries(function(r) {
    var n = r.get("stack");
    if (n) {
      var a = e.get(n) || e.set(n, []), i = r.getData(), o = {
        // Used for calculate axis extent automatically.
        // TODO: Type getCalculationInfo return more specific type?
        stackResultDimension: i.getCalculationInfo("stackResultDimension"),
        stackedOverDimension: i.getCalculationInfo("stackedOverDimension"),
        stackedDimension: i.getCalculationInfo("stackedDimension"),
        stackedByDimension: i.getCalculationInfo("stackedByDimension"),
        isStackedByIndex: i.getCalculationInfo("isStackedByIndex"),
        data: i,
        seriesModel: r
      };
      if (!o.stackedDimension || !(o.isStackedByIndex || o.stackedByDimension))
        return;
      a.length && i.setCalculationInfo("stackedOnSeries", a[a.length - 1].seriesModel), a.push(o);
    }
  }), e.each(JU);
}
function JU(t) {
  w(t, function(e, r) {
    var n = [], a = [NaN, NaN], i = [e.stackResultDimension, e.stackedOverDimension], o = e.data, s = e.isStackedByIndex, l = e.seriesModel.get("stackStrategy") || "samesign";
    o.modify(i, function(u, c, d) {
      var p = o.get(e.stackedDimension, d);
      if (isNaN(p))
        return a;
      var f, h;
      s ? h = o.getRawIndex(d) : f = o.get(e.stackedByDimension, d);
      for (var g = NaN, v = r - 1; v >= 0; v--) {
        var m = t[v];
        if (s || (h = m.data.rawIndexOf(m.stackedByDimension, f)), h >= 0) {
          var _ = m.data.getByRawIndex(m.stackResultDimension, h);
          if (l === "all" || l === "positive" && _ > 0 || l === "negative" && _ < 0 || l === "samesign" && p >= 0 && _ > 0 || l === "samesign" && p <= 0 && _ < 0) {
            p = ZF(p, _), g = _;
            break;
          }
        }
      }
      return n[0] = p, n[1] = g, n;
    });
  });
}
var Tf = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e) {
      this.data = e.data || (e.sourceFormat === Fn ? {} : []), this.sourceFormat = e.sourceFormat || vM, this.seriesLayoutBy = e.seriesLayoutBy || In, this.startIndex = e.startIndex || 0, this.dimensionsDetectedCount = e.dimensionsDetectedCount, this.metaRawOption = e.metaRawOption;
      var r = this.dimensionsDefine = e.dimensionsDefine;
      if (r)
        for (var n = 0; n < r.length; n++) {
          var a = r[n];
          a.type == null && yM(this, n) === Gt.Must && (a.type = "ordinal");
        }
    }
    return t;
  }()
);
function Ey(t) {
  return t instanceof Tf;
}
function Em(t, e, r) {
  r = r || CM(t);
  var n = e.seriesLayoutBy, a = tz(t, r, n, e.sourceHeader, e.dimensions), i = new Tf({
    data: t,
    sourceFormat: r,
    seriesLayoutBy: n,
    dimensionsDefine: a.dimensionsDefine,
    startIndex: a.startIndex,
    dimensionsDetectedCount: a.dimensionsDetectedCount,
    metaRawOption: le(e)
  });
  return i;
}
function Ty(t) {
  return new Tf({
    data: t,
    sourceFormat: gr(t) ? Va : Ur
  });
}
function ez(t) {
  return new Tf({
    data: t.data,
    sourceFormat: t.sourceFormat,
    seriesLayoutBy: t.seriesLayoutBy,
    dimensionsDefine: le(t.dimensionsDefine),
    startIndex: t.startIndex,
    dimensionsDetectedCount: t.dimensionsDetectedCount
  });
}
function CM(t) {
  var e = vM;
  if (gr(t))
    e = Va;
  else if (V(t)) {
    t.length === 0 && (e = Zt);
    for (var r = 0, n = t.length; r < n; r++) {
      var a = t[r];
      if (a != null) {
        if (V(a) || gr(a)) {
          e = Zt;
          break;
        } else if (se(a)) {
          e = zr;
          break;
        }
      }
    }
  } else if (se(t)) {
    for (var i in t)
      if (Q(t, i) && Kt(t[i])) {
        e = Fn;
        break;
      }
  }
  return e;
}
function tz(t, e, r, n, a) {
  var i, o;
  if (!t)
    return {
      dimensionsDefine: fE(a),
      startIndex: o,
      dimensionsDetectedCount: i
    };
  if (e === Zt) {
    var s = t;
    n === "auto" || n == null ? hE(function(u) {
      u != null && u !== "-" && (Y(u) ? o == null && (o = 1) : o = 0);
    }, r, s, 10) : o = ke(n) ? n : n ? 1 : 0, !a && o === 1 && (a = [], hE(function(u, c) {
      a[c] = u != null ? u + "" : "";
    }, r, s, 1 / 0)), i = a ? a.length : r === Bs ? s.length : s[0] ? s[0].length : null;
  } else if (e === zr)
    a || (a = rz(t));
  else if (e === Fn)
    a || (a = [], w(t, function(u, c) {
      a.push(c);
    }));
  else if (e === Ur) {
    var l = Is(t[0]);
    i = V(l) && l.length || 1;
  }
  return {
    startIndex: o,
    dimensionsDefine: fE(a),
    dimensionsDetectedCount: i
  };
}
function rz(t) {
  for (var e = 0, r; e < t.length && !(r = t[e++]); )
    ;
  if (r)
    return Me(r);
}
function fE(t) {
  if (t) {
    var e = J();
    return $(t, function(r, n) {
      r = se(r) ? r : {
        name: r
      };
      var a = {
        name: r.name,
        displayName: r.displayName,
        type: r.type
      };
      if (a.name == null)
        return a;
      a.name += "", a.displayName == null && (a.displayName = a.name);
      var i = e.get(a.name);
      return i ? a.name += "-" + i.count++ : e.set(a.name, {
        count: 1
      }), a;
    });
  }
}
function hE(t, e, r, n) {
  if (e === Bs)
    for (var a = 0; a < r.length && a < n; a++)
      t(r[a] ? r[a][0] : null, a);
  else
    for (var i = r[0] || [], a = 0; a < i.length && a < n; a++)
      t(i[a], a);
}
function AM(t) {
  var e = t.sourceFormat;
  return e === zr || e === Fn;
}
var Si, Ei, Ti, gE, vE, wM = (
  /** @class */
  function() {
    function t(e, r) {
      var n = Ey(e) ? e : Ty(e);
      this._source = n;
      var a = this._data = n.data;
      n.sourceFormat === Va && (this._offset = 0, this._dimSize = r, this._data = a), vE(this, a, n);
    }
    return t.prototype.getSource = function() {
      return this._source;
    }, t.prototype.count = function() {
      return 0;
    }, t.prototype.getItem = function(e, r) {
    }, t.prototype.appendData = function(e) {
    }, t.prototype.clean = function() {
    }, t.protoInitialize = function() {
      var e = t.prototype;
      e.pure = !1, e.persistent = !0;
    }(), t.internalField = function() {
      var e;
      vE = function(o, s, l) {
        var u = l.sourceFormat, c = l.seriesLayoutBy, d = l.startIndex, p = l.dimensionsDefine, f = gE[xy(u, c)];
        if (G(o, f), u === Va)
          o.getItem = r, o.count = a, o.fillStorage = n;
        else {
          var h = DM(u, c);
          o.getItem = K(h, null, s, d, p);
          var g = MM(u, c);
          o.count = K(g, null, s, d, p);
        }
      };
      var r = function(o, s) {
        o = o - this._offset, s = s || [];
        for (var l = this._data, u = this._dimSize, c = u * o, d = 0; d < u; d++)
          s[d] = l[c + d];
        return s;
      }, n = function(o, s, l, u) {
        for (var c = this._data, d = this._dimSize, p = 0; p < d; p++) {
          for (var f = u[p], h = f[0] == null ? 1 / 0 : f[0], g = f[1] == null ? -1 / 0 : f[1], v = s - o, m = l[p], _ = 0; _ < v; _++) {
            var y = c[_ * d + p];
            m[o + _] = y, y < h && (h = y), y > g && (g = y);
          }
          f[0] = h, f[1] = g;
        }
      }, a = function() {
        return this._data ? this._data.length / this._dimSize : 0;
      };
      gE = (e = {}, e[Zt + "_" + In] = {
        pure: !0,
        appendData: i
      }, e[Zt + "_" + Bs] = {
        pure: !0,
        appendData: function() {
          throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
        }
      }, e[zr] = {
        pure: !0,
        appendData: i
      }, e[Fn] = {
        pure: !0,
        appendData: function(o) {
          var s = this._data;
          w(o, function(l, u) {
            for (var c = s[u] || (s[u] = []), d = 0; d < (l || []).length; d++)
              c.push(l[d]);
          });
        }
      }, e[Ur] = {
        appendData: i
      }, e[Va] = {
        persistent: !1,
        pure: !0,
        appendData: function(o) {
          this._data = o;
        },
        // Clean self if data is already used.
        clean: function() {
          this._offset += this.count(), this._data = null;
        }
      }, e);
      function i(o) {
        for (var s = 0; s < o.length; s++)
          this._data.push(o[s]);
      }
    }(), t;
  }()
), mE = function(t, e, r, n) {
  return t[n];
}, nz = (Si = {}, Si[Zt + "_" + In] = function(t, e, r, n) {
  return t[n + e];
}, Si[Zt + "_" + Bs] = function(t, e, r, n, a) {
  n += e;
  for (var i = a || [], o = t, s = 0; s < o.length; s++) {
    var l = o[s];
    i[s] = l ? l[n] : null;
  }
  return i;
}, Si[zr] = mE, Si[Fn] = function(t, e, r, n, a) {
  for (var i = a || [], o = 0; o < r.length; o++) {
    var s = r[o].name, l = t[s];
    i[o] = l ? l[n] : null;
  }
  return i;
}, Si[Ur] = mE, Si);
function DM(t, e) {
  var r = nz[xy(t, e)];
  return r;
}
var _E = function(t, e, r) {
  return t.length;
}, az = (Ei = {}, Ei[Zt + "_" + In] = function(t, e, r) {
  return Math.max(0, t.length - e);
}, Ei[Zt + "_" + Bs] = function(t, e, r) {
  var n = t[0];
  return n ? Math.max(0, n.length - e) : 0;
}, Ei[zr] = _E, Ei[Fn] = function(t, e, r) {
  var n = r[0].name, a = t[n];
  return a ? a.length : 0;
}, Ei[Ur] = _E, Ei);
function MM(t, e) {
  var r = az[xy(t, e)];
  return r;
}
var Qh = function(t, e, r) {
  return t[e];
}, iz = (Ti = {}, Ti[Zt] = Qh, Ti[zr] = function(t, e, r) {
  return t[r];
}, Ti[Fn] = Qh, Ti[Ur] = function(t, e, r) {
  var n = Is(t);
  return n instanceof Array ? n[e] : n;
}, Ti[Va] = Qh, Ti);
function IM(t) {
  var e = iz[t];
  return e;
}
function xy(t, e) {
  return t === Zt ? t + "_" + e : t;
}
function _s(t, e, r) {
  if (t) {
    var n = t.getRawDataItem(e);
    if (n != null) {
      var a = t.getStore(), i = a.getSource().sourceFormat;
      if (r != null) {
        var o = t.getDimensionIndex(r), s = a.getDimensionProperty(o);
        return IM(i)(n, o, s);
      } else {
        var l = n;
        return i === Ur && (l = Is(n)), l;
      }
    }
  }
}
var oz = /\{@(.+?)\}/g, xf = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getDataParams = function(e, r) {
      var n = this.getData(r), a = this.getRawValue(e, r), i = n.getRawIndex(e), o = n.getName(e), s = n.getRawDataItem(e), l = n.getItemVisual(e, "style"), u = l && l[n.getItemVisual(e, "drawType") || "fill"], c = l && l.stroke, d = this.mainType, p = d === "series", f = n.userOutput && n.userOutput.get();
      return {
        componentType: d,
        componentSubType: this.subType,
        componentIndex: this.componentIndex,
        seriesType: p ? this.subType : null,
        seriesIndex: this.seriesIndex,
        seriesId: p ? this.id : null,
        seriesName: p ? this.name : null,
        name: o,
        dataIndex: i,
        data: s,
        dataType: r,
        value: a,
        color: u,
        borderColor: c,
        dimensionNames: f ? f.fullDimensions : null,
        encode: f ? f.encode : null,
        // Param name list for mapping `a`, `b`, `c`, `d`, `e`
        $vars: ["seriesName", "name", "value"]
      };
    }, t.prototype.getFormattedLabel = function(e, r, n, a, i, o) {
      r = r || "normal";
      var s = this.getData(n), l = this.getDataParams(e, n);
      if (o && (l.value = o.interpolatedValue), a != null && V(l.value) && (l.value = l.value[a]), !i) {
        var u = s.getItemModel(e);
        i = u.get(r === "normal" ? ["label", "formatter"] : [r, "label", "formatter"]);
      }
      if (ae(i))
        return l.status = r, l.dimensionIndex = a, i(l);
      if (Y(i)) {
        var c = dM(i, l);
        return c.replace(oz, function(d, p) {
          var f = p.length, h = p;
          h.charAt(0) === "[" && h.charAt(f - 1) === "]" && (h = +h.slice(1, f - 1));
          var g = _s(s, e, h);
          if (o && V(o.interpolatedValue)) {
            var v = s.getDimensionIndex(h);
            v >= 0 && (g = o.interpolatedValue[v]);
          }
          return g != null ? g + "" : "";
        });
      }
    }, t.prototype.getRawValue = function(e, r) {
      return _s(this.getData(r), e);
    }, t.prototype.formatTooltip = function(e, r, n) {
    }, t;
  }()
);
function yE(t) {
  var e, r;
  return se(t) ? t.type && (r = t) : e = t, {
    text: e,
    // markers: markers || markersExisting,
    frag: r
  };
}
function Yl(t) {
  return new sz(t);
}
var sz = (
  /** @class */
  function() {
    function t(e) {
      e = e || {}, this._reset = e.reset, this._plan = e.plan, this._count = e.count, this._onDirty = e.onDirty, this._dirty = !0;
    }
    return t.prototype.perform = function(e) {
      var r = this._upstream, n = e && e.skip;
      if (this._dirty && r) {
        var a = this.context;
        a.data = a.outputData = r.context.outputData;
      }
      this.__pipeline && (this.__pipeline.currentTask = this);
      var i;
      this._plan && !n && (i = this._plan(this.context));
      var o = c(this._modBy), s = this._modDataCount || 0, l = c(e && e.modBy), u = e && e.modDataCount || 0;
      (o !== l || s !== u) && (i = "reset");
      function c(_) {
        return !(_ >= 1) && (_ = 1), _;
      }
      var d;
      (this._dirty || i === "reset") && (this._dirty = !1, d = this._doReset(n)), this._modBy = l, this._modDataCount = u;
      var p = e && e.step;
      if (r ? this._dueEnd = r._outputDueEnd : this._dueEnd = this._count ? this._count(this.context) : 1 / 0, this._progress) {
        var f = this._dueIndex, h = Math.min(p != null ? this._dueIndex + p : 1 / 0, this._dueEnd);
        if (!n && (d || f < h)) {
          var g = this._progress;
          if (V(g))
            for (var v = 0; v < g.length; v++)
              this._doProgress(g[v], f, h, l, u);
          else
            this._doProgress(g, f, h, l, u);
        }
        this._dueIndex = h;
        var m = this._settedOutputEnd != null ? this._settedOutputEnd : h;
        this._outputDueEnd = m;
      } else
        this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
      return this.unfinished();
    }, t.prototype.dirty = function() {
      this._dirty = !0, this._onDirty && this._onDirty(this.context);
    }, t.prototype._doProgress = function(e, r, n, a, i) {
      bE.reset(r, n, a, i), this._callingProgress = e, this._callingProgress({
        start: r,
        end: n,
        count: n - r,
        next: bE.next
      }, this.context);
    }, t.prototype._doReset = function(e) {
      this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null;
      var r, n;
      !e && this._reset && (r = this._reset(this.context), r && r.progress && (n = r.forceFirstProgress, r = r.progress), V(r) && !r.length && (r = null)), this._progress = r, this._modBy = this._modDataCount = null;
      var a = this._downstream;
      return a && a.dirty(), n;
    }, t.prototype.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }, t.prototype.pipe = function(e) {
      (this._downstream !== e || this._dirty) && (this._downstream = e, e._upstream = this, e.dirty());
    }, t.prototype.dispose = function() {
      this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
    }, t.prototype.getUpstream = function() {
      return this._upstream;
    }, t.prototype.getDownstream = function() {
      return this._downstream;
    }, t.prototype.setOutputEnd = function(e) {
      this._outputDueEnd = this._settedOutputEnd = e;
    }, t;
  }()
), bE = /* @__PURE__ */ function() {
  var t, e, r, n, a, i = {
    reset: function(l, u, c, d) {
      e = l, t = u, r = c, n = d, a = Math.ceil(n / r), i.next = r > 1 && n > 0 ? s : o;
    }
  };
  return i;
  function o() {
    return e < t ? e++ : null;
  }
  function s() {
    var l = e % a * r + Math.ceil(e / a), u = e >= t ? null : l < n ? l : e;
    return e++, u;
  }
}();
function $a(t, e) {
  var r = e && e.type;
  return r === "ordinal" ? t : (r === "time" && !ke(t) && t != null && t !== "-" && (t = +Ln(t)), t == null || t === "" ? NaN : Number(t));
}
var lz = J({
  number: function(t) {
    return parseFloat(t);
  },
  time: function(t) {
    return +Ln(t);
  },
  trim: function(t) {
    return Y(t) ? Xr(t) : t;
  }
});
function NM(t) {
  return lz.get(t);
}
var RM = {
  lt: function(t, e) {
    return t < e;
  },
  lte: function(t, e) {
    return t <= e;
  },
  gt: function(t, e) {
    return t > e;
  },
  gte: function(t, e) {
    return t >= e;
  }
}, uz = (
  /** @class */
  function() {
    function t(e, r) {
      if (!ke(r)) {
        var n = "";
        Ue(n);
      }
      this._opFn = RM[e], this._rvalFloat = ra(r);
    }
    return t.prototype.evaluate = function(e) {
      return ke(e) ? this._opFn(e, this._rvalFloat) : this._opFn(ra(e), this._rvalFloat);
    }, t;
  }()
), OM = (
  /** @class */
  function() {
    function t(e, r) {
      var n = e === "desc";
      this._resultLT = n ? 1 : -1, r == null && (r = n ? "min" : "max"), this._incomparable = r === "min" ? -1 / 0 : 1 / 0;
    }
    return t.prototype.evaluate = function(e, r) {
      var n = ke(e) ? e : ra(e), a = ke(r) ? r : ra(r), i = isNaN(n), o = isNaN(a);
      if (i && (n = this._incomparable), o && (a = this._incomparable), i && o) {
        var s = Y(e), l = Y(r);
        s && (n = l ? e : 0), l && (a = s ? r : 0);
      }
      return n < a ? this._resultLT : n > a ? -this._resultLT : 0;
    }, t;
  }()
), cz = (
  /** @class */
  function() {
    function t(e, r) {
      this._rval = r, this._isEQ = e, this._rvalTypeof = typeof r, this._rvalFloat = ra(r);
    }
    return t.prototype.evaluate = function(e) {
      var r = e === this._rval;
      if (!r) {
        var n = typeof e;
        n !== this._rvalTypeof && (n === "number" || this._rvalTypeof === "number") && (r = ra(e) === this._rvalFloat);
      }
      return this._isEQ ? r : !r;
    }, t;
  }()
);
function dz(t, e) {
  return t === "eq" || t === "ne" ? new cz(t === "eq", e) : Q(RM, t) ? new uz(t, e) : null;
}
var pz = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getRawData = function() {
      throw new Error("not supported");
    }, t.prototype.getRawDataItem = function(e) {
      throw new Error("not supported");
    }, t.prototype.cloneRawData = function() {
    }, t.prototype.getDimensionInfo = function(e) {
    }, t.prototype.cloneAllDimensionInfo = function() {
    }, t.prototype.count = function() {
    }, t.prototype.retrieveValue = function(e, r) {
    }, t.prototype.retrieveValueFromItem = function(e, r) {
    }, t.prototype.convertValue = function(e, r) {
      return $a(e, r);
    }, t;
  }()
);
function fz(t, e) {
  var r = new pz(), n = t.data, a = r.sourceFormat = t.sourceFormat, i = t.startIndex, o = "";
  t.seriesLayoutBy !== In && Ue(o);
  var s = [], l = {}, u = t.dimensionsDefine;
  if (u)
    w(u, function(g, v) {
      var m = g.name, _ = {
        index: v,
        name: m,
        displayName: g.displayName
      };
      if (s.push(_), m != null) {
        var y = "";
        Q(l, m) && Ue(y), l[m] = _;
      }
    });
  else
    for (var c = 0; c < t.dimensionsDetectedCount; c++)
      s.push({
        index: c
      });
  var d = DM(a, In);
  e.__isBuiltIn && (r.getRawDataItem = function(g) {
    return d(n, i, s, g);
  }, r.getRawData = K(hz, null, t)), r.cloneRawData = K(gz, null, t);
  var p = MM(a, In);
  r.count = K(p, null, n, i, s);
  var f = IM(a);
  r.retrieveValue = function(g, v) {
    var m = d(n, i, s, g);
    return h(m, v);
  };
  var h = r.retrieveValueFromItem = function(g, v) {
    if (g != null) {
      var m = s[v];
      if (m)
        return f(g, v, m.name);
    }
  };
  return r.getDimensionInfo = K(vz, null, s, l), r.cloneAllDimensionInfo = K(mz, null, s), r;
}
function hz(t) {
  var e = t.sourceFormat;
  if (!Cy(e)) {
    var r = "";
    Ue(r);
  }
  return t.data;
}
function gz(t) {
  var e = t.sourceFormat, r = t.data;
  if (!Cy(e)) {
    var n = "";
    Ue(n);
  }
  if (e === Zt) {
    for (var a = [], i = 0, o = r.length; i < o; i++)
      a.push(r[i].slice());
    return a;
  } else if (e === zr) {
    for (var a = [], i = 0, o = r.length; i < o; i++)
      a.push(G({}, r[i]));
    return a;
  }
}
function vz(t, e, r) {
  if (r != null) {
    if (ke(r) || !isNaN(r) && !Q(e, r))
      return t[r];
    if (Q(e, r))
      return e[r];
  }
}
function mz(t) {
  return le(t);
}
var LM = J();
function _z(t) {
  t = le(t);
  var e = t.type, r = "";
  e || Ue(r);
  var n = e.split(":");
  n.length !== 2 && Ue(r);
  var a = !1;
  n[0] === "echarts" && (e = n[1], a = !0), t.__isBuiltIn = a, LM.set(e, t);
}
function yz(t, e, r) {
  var n = Ye(t), a = n.length, i = "";
  a || Ue(i);
  for (var o = 0, s = a; o < s; o++) {
    var l = n[o];
    e = bz(l, e), o !== s - 1 && (e.length = Math.max(e.length, 1));
  }
  return e;
}
function bz(t, e, r, n) {
  var a = "";
  e.length || Ue(a), se(t) || Ue(a);
  var i = t.type, o = LM.get(i);
  o || Ue(a);
  var s = $(e, function(u) {
    return fz(u, o);
  }), l = Ye(o.transform({
    upstream: s[0],
    upstreamList: s,
    config: le(t.config)
  }));
  return $(l, function(u, c) {
    var d = "";
    se(u) || Ue(d), u.data || Ue(d);
    var p = CM(u.data);
    Cy(p) || Ue(d);
    var f, h = e[0];
    if (h && c === 0 && !u.dimensions) {
      var g = h.startIndex;
      g && (u.data = h.data.slice(0, g).concat(u.data)), f = {
        seriesLayoutBy: In,
        sourceHeader: g,
        dimensions: h.metaRawOption.dimensions
      };
    } else
      f = {
        seriesLayoutBy: In,
        sourceHeader: 0,
        dimensions: u.dimensions
      };
    return Em(u.data, f, null);
  });
}
function Cy(t) {
  return t === Zt || t === zr;
}
var Cf = "undefined", Sz = typeof Uint32Array === Cf ? Array : Uint32Array, Ez = typeof Uint16Array === Cf ? Array : Uint16Array, PM = typeof Int32Array === Cf ? Array : Int32Array, SE = typeof Float64Array === Cf ? Array : Float64Array, kM = {
  float: SE,
  int: PM,
  // Ordinal data type can be string or int
  ordinal: Array,
  number: Array,
  time: SE
}, jh;
function Lo(t) {
  return t > 65535 ? Sz : Ez;
}
function Po() {
  return [1 / 0, -1 / 0];
}
function Tz(t) {
  var e = t.constructor;
  return e === Array ? t.slice() : new e(t);
}
function EE(t, e, r, n, a) {
  var i = kM[r || "float"];
  if (a) {
    var o = t[e], s = o && o.length;
    if (s !== n) {
      for (var l = new i(n), u = 0; u < s; u++)
        l[u] = o[u];
      t[e] = l;
    }
  } else
    t[e] = new i(n);
}
var Tm = (
  /** @class */
  function() {
    function t() {
      this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = J();
    }
    return t.prototype.initData = function(e, r, n) {
      this._provider = e, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
      var a = e.getSource(), i = this.defaultDimValueGetter = jh[a.sourceFormat];
      this._dimValueGetter = n || i, this._rawExtent = [], AM(a), this._dimensions = $(r, function(o) {
        return {
          // Only pick these two props. Not leak other properties like orderMeta.
          type: o.type,
          property: o.property
        };
      }), this._initDataFromProvider(0, e.count());
    }, t.prototype.getProvider = function() {
      return this._provider;
    }, t.prototype.getSource = function() {
      return this._provider.getSource();
    }, t.prototype.ensureCalculationDimension = function(e, r) {
      var n = this._calcDimNameToIdx, a = this._dimensions, i = n.get(e);
      if (i != null) {
        if (a[i].type === r)
          return i;
      } else
        i = a.length;
      return a[i] = {
        type: r
      }, n.set(e, i), this._chunks[i] = new kM[r || "float"](this._rawCount), this._rawExtent[i] = Po(), i;
    }, t.prototype.collectOrdinalMeta = function(e, r) {
      var n = this._chunks[e], a = this._dimensions[e], i = this._rawExtent, o = a.ordinalOffset || 0, s = n.length;
      o === 0 && (i[e] = Po());
      for (var l = i[e], u = o; u < s; u++) {
        var c = n[u] = r.parseAndCollect(n[u]);
        isNaN(c) || (l[0] = Math.min(c, l[0]), l[1] = Math.max(c, l[1]));
      }
      a.ordinalMeta = r, a.ordinalOffset = s, a.type = "ordinal";
    }, t.prototype.getOrdinalMeta = function(e) {
      var r = this._dimensions[e], n = r.ordinalMeta;
      return n;
    }, t.prototype.getDimensionProperty = function(e) {
      var r = this._dimensions[e];
      return r && r.property;
    }, t.prototype.appendData = function(e) {
      var r = this._provider, n = this.count();
      r.appendData(e);
      var a = r.count();
      return r.persistent || (a += n), n < a && this._initDataFromProvider(n, a, !0), [n, a];
    }, t.prototype.appendValues = function(e, r) {
      for (var n = this._chunks, a = this._dimensions, i = a.length, o = this._rawExtent, s = this.count(), l = s + Math.max(e.length, r || 0), u = 0; u < i; u++) {
        var c = a[u];
        EE(n, u, c.type, l, !0);
      }
      for (var d = [], p = s; p < l; p++)
        for (var f = p - s, h = 0; h < i; h++) {
          var c = a[h], g = jh.arrayRows.call(this, e[f] || d, c.property, f, h);
          n[h][p] = g;
          var v = o[h];
          g < v[0] && (v[0] = g), g > v[1] && (v[1] = g);
        }
      return this._rawCount = this._count = l, {
        start: s,
        end: l
      };
    }, t.prototype._initDataFromProvider = function(e, r, n) {
      for (var a = this._provider, i = this._chunks, o = this._dimensions, s = o.length, l = this._rawExtent, u = $(o, function(_) {
        return _.property;
      }), c = 0; c < s; c++) {
        var d = o[c];
        l[c] || (l[c] = Po()), EE(i, c, d.type, r, n);
      }
      if (a.fillStorage)
        a.fillStorage(e, r, i, l);
      else
        for (var p = [], f = e; f < r; f++) {
          p = a.getItem(f, p);
          for (var h = 0; h < s; h++) {
            var g = i[h], v = this._dimValueGetter(p, u[h], f, h);
            g[f] = v;
            var m = l[h];
            v < m[0] && (m[0] = v), v > m[1] && (m[1] = v);
          }
        }
      !a.persistent && a.clean && a.clean(), this._rawCount = this._count = r, this._extent = [];
    }, t.prototype.count = function() {
      return this._count;
    }, t.prototype.get = function(e, r) {
      if (!(r >= 0 && r < this._count))
        return NaN;
      var n = this._chunks[e];
      return n ? n[this.getRawIndex(r)] : NaN;
    }, t.prototype.getValues = function(e, r) {
      var n = [], a = [];
      if (r == null) {
        r = e, e = [];
        for (var i = 0; i < this._dimensions.length; i++)
          a.push(i);
      } else
        a = e;
      for (var i = 0, o = a.length; i < o; i++)
        n.push(this.get(a[i], r));
      return n;
    }, t.prototype.getByRawIndex = function(e, r) {
      if (!(r >= 0 && r < this._rawCount))
        return NaN;
      var n = this._chunks[e];
      return n ? n[r] : NaN;
    }, t.prototype.getSum = function(e) {
      var r = this._chunks[e], n = 0;
      if (r)
        for (var a = 0, i = this.count(); a < i; a++) {
          var o = this.get(e, a);
          isNaN(o) || (n += o);
        }
      return n;
    }, t.prototype.getMedian = function(e) {
      var r = [];
      this.each([e], function(i) {
        isNaN(i) || r.push(i);
      });
      var n = r.sort(function(i, o) {
        return i - o;
      }), a = this.count();
      return a === 0 ? 0 : a % 2 === 1 ? n[(a - 1) / 2] : (n[a / 2] + n[a / 2 - 1]) / 2;
    }, t.prototype.indexOfRawIndex = function(e) {
      if (e >= this._rawCount || e < 0)
        return -1;
      if (!this._indices)
        return e;
      var r = this._indices, n = r[e];
      if (n != null && n < this._count && n === e)
        return e;
      for (var a = 0, i = this._count - 1; a <= i; ) {
        var o = (a + i) / 2 | 0;
        if (r[o] < e)
          a = o + 1;
        else if (r[o] > e)
          i = o - 1;
        else
          return o;
      }
      return -1;
    }, t.prototype.indicesOfNearest = function(e, r, n) {
      var a = this._chunks, i = a[e], o = [];
      if (!i)
        return o;
      n == null && (n = 1 / 0);
      for (var s = 1 / 0, l = -1, u = 0, c = 0, d = this.count(); c < d; c++) {
        var p = this.getRawIndex(c), f = r - i[p], h = Math.abs(f);
        h <= n && ((h < s || h === s && f >= 0 && l < 0) && (s = h, l = f, u = 0), f === l && (o[u++] = c));
      }
      return o.length = u, o;
    }, t.prototype.getIndices = function() {
      var e, r = this._indices;
      if (r) {
        var n = r.constructor, a = this._count;
        if (n === Array) {
          e = new n(a);
          for (var i = 0; i < a; i++)
            e[i] = r[i];
        } else
          e = new n(r.buffer, 0, a);
      } else {
        var n = Lo(this._rawCount);
        e = new n(this.count());
        for (var i = 0; i < e.length; i++)
          e[i] = i;
      }
      return e;
    }, t.prototype.filter = function(e, r) {
      if (!this._count)
        return this;
      for (var n = this.clone(), a = n.count(), i = Lo(n._rawCount), o = new i(a), s = [], l = e.length, u = 0, c = e[0], d = n._chunks, p = 0; p < a; p++) {
        var f = void 0, h = n.getRawIndex(p);
        if (l === 0)
          f = r(p);
        else if (l === 1) {
          var g = d[c][h];
          f = r(g, p);
        } else {
          for (var v = 0; v < l; v++)
            s[v] = d[e[v]][h];
          s[v] = p, f = r.apply(null, s);
        }
        f && (o[u++] = h);
      }
      return u < a && (n._indices = o), n._count = u, n._extent = [], n._updateGetRawIdx(), n;
    }, t.prototype.selectRange = function(e) {
      var r = this.clone(), n = r._count;
      if (!n)
        return this;
      var a = Me(e), i = a.length;
      if (!i)
        return this;
      var o = r.count(), s = Lo(r._rawCount), l = new s(o), u = 0, c = a[0], d = e[c][0], p = e[c][1], f = r._chunks, h = !1;
      if (!r._indices) {
        var g = 0;
        if (i === 1) {
          for (var v = f[a[0]], m = 0; m < n; m++) {
            var _ = v[m];
            (_ >= d && _ <= p || isNaN(_)) && (l[u++] = g), g++;
          }
          h = !0;
        } else if (i === 2) {
          for (var v = f[a[0]], y = f[a[1]], b = e[a[1]][0], S = e[a[1]][1], m = 0; m < n; m++) {
            var _ = v[m], E = y[m];
            (_ >= d && _ <= p || isNaN(_)) && (E >= b && E <= S || isNaN(E)) && (l[u++] = g), g++;
          }
          h = !0;
        }
      }
      if (!h)
        if (i === 1)
          for (var m = 0; m < o; m++) {
            var T = r.getRawIndex(m), _ = f[a[0]][T];
            (_ >= d && _ <= p || isNaN(_)) && (l[u++] = T);
          }
        else
          for (var m = 0; m < o; m++) {
            for (var x = !0, T = r.getRawIndex(m), C = 0; C < i; C++) {
              var A = a[C], _ = f[A][T];
              (_ < e[A][0] || _ > e[A][1]) && (x = !1);
            }
            x && (l[u++] = r.getRawIndex(m));
          }
      return u < o && (r._indices = l), r._count = u, r._extent = [], r._updateGetRawIdx(), r;
    }, t.prototype.map = function(e, r) {
      var n = this.clone(e);
      return this._updateDims(n, e, r), n;
    }, t.prototype.modify = function(e, r) {
      this._updateDims(this, e, r);
    }, t.prototype._updateDims = function(e, r, n) {
      for (var a = e._chunks, i = [], o = r.length, s = e.count(), l = [], u = e._rawExtent, c = 0; c < r.length; c++)
        u[r[c]] = Po();
      for (var d = 0; d < s; d++) {
        for (var p = e.getRawIndex(d), f = 0; f < o; f++)
          l[f] = a[r[f]][p];
        l[o] = d;
        var h = n && n.apply(null, l);
        if (h != null) {
          typeof h != "object" && (i[0] = h, h = i);
          for (var c = 0; c < h.length; c++) {
            var g = r[c], v = h[c], m = u[g], _ = a[g];
            _ && (_[p] = v), v < m[0] && (m[0] = v), v > m[1] && (m[1] = v);
          }
        }
      }
    }, t.prototype.lttbDownSample = function(e, r) {
      var n = this.clone([e], !0), a = n._chunks, i = a[e], o = this.count(), s = 0, l = Math.floor(1 / r), u = this.getRawIndex(0), c, d, p, f = new (Lo(this._rawCount))(Math.min((Math.ceil(o / l) + 2) * 2, o));
      f[s++] = u;
      for (var h = 1; h < o - 1; h += l) {
        for (var g = Math.min(h + l, o - 1), v = Math.min(h + l * 2, o), m = (v + g) / 2, _ = 0, y = g; y < v; y++) {
          var b = this.getRawIndex(y), S = i[b];
          isNaN(S) || (_ += S);
        }
        _ /= v - g;
        var E = h, T = Math.min(h + l, o), x = h - 1, C = i[u];
        c = -1, p = E;
        for (var A = -1, D = 0, y = E; y < T; y++) {
          var b = this.getRawIndex(y), S = i[b];
          if (isNaN(S)) {
            D++, A < 0 && (A = b);
            continue;
          }
          d = Math.abs((x - m) * (S - C) - (x - y) * (_ - C)), d > c && (c = d, p = b);
        }
        D > 0 && D < T - E && (f[s++] = Math.min(A, p), p = Math.max(A, p)), f[s++] = p, u = p;
      }
      return f[s++] = this.getRawIndex(o - 1), n._count = s, n._indices = f, n.getRawIndex = this._getRawIdx, n;
    }, t.prototype.minmaxDownSample = function(e, r) {
      for (var n = this.clone([e], !0), a = n._chunks, i = Math.floor(1 / r), o = a[e], s = this.count(), l = new (Lo(this._rawCount))(Math.ceil(s / i) * 2), u = 0, c = 0; c < s; c += i) {
        var d = c, p = o[this.getRawIndex(d)], f = c, h = o[this.getRawIndex(f)], g = i;
        c + i > s && (g = s - c);
        for (var v = 0; v < g; v++) {
          var m = this.getRawIndex(c + v), _ = o[m];
          _ < p && (p = _, d = c + v), _ > h && (h = _, f = c + v);
        }
        var y = this.getRawIndex(d), b = this.getRawIndex(f);
        d < f ? (l[u++] = y, l[u++] = b) : (l[u++] = b, l[u++] = y);
      }
      return n._count = u, n._indices = l, n._updateGetRawIdx(), n;
    }, t.prototype.downSample = function(e, r, n, a) {
      for (var i = this.clone([e], !0), o = i._chunks, s = [], l = Math.floor(1 / r), u = o[e], c = this.count(), d = i._rawExtent[e] = Po(), p = new (Lo(this._rawCount))(Math.ceil(c / l)), f = 0, h = 0; h < c; h += l) {
        l > c - h && (l = c - h, s.length = l);
        for (var g = 0; g < l; g++) {
          var v = this.getRawIndex(h + g);
          s[g] = u[v];
        }
        var m = n(s), _ = this.getRawIndex(Math.min(h + a(s, m) || 0, c - 1));
        u[_] = m, m < d[0] && (d[0] = m), m > d[1] && (d[1] = m), p[f++] = _;
      }
      return i._count = f, i._indices = p, i._updateGetRawIdx(), i;
    }, t.prototype.each = function(e, r) {
      if (this._count)
        for (var n = e.length, a = this._chunks, i = 0, o = this.count(); i < o; i++) {
          var s = this.getRawIndex(i);
          switch (n) {
            case 0:
              r(i);
              break;
            case 1:
              r(a[e[0]][s], i);
              break;
            case 2:
              r(a[e[0]][s], a[e[1]][s], i);
              break;
            default:
              for (var l = 0, u = []; l < n; l++)
                u[l] = a[e[l]][s];
              u[l] = i, r.apply(null, u);
          }
        }
    }, t.prototype.getDataExtent = function(e) {
      var r = this._chunks[e], n = Po();
      if (!r)
        return n;
      var a = this.count(), i = !this._indices, o;
      if (i)
        return this._rawExtent[e].slice();
      if (o = this._extent[e], o)
        return o.slice();
      o = n;
      for (var s = o[0], l = o[1], u = 0; u < a; u++) {
        var c = this.getRawIndex(u), d = r[c];
        d < s && (s = d), d > l && (l = d);
      }
      return o = [s, l], this._extent[e] = o, o;
    }, t.prototype.getRawDataItem = function(e) {
      var r = this.getRawIndex(e);
      if (this._provider.persistent)
        return this._provider.getItem(r);
      for (var n = [], a = this._chunks, i = 0; i < a.length; i++)
        n.push(a[i][r]);
      return n;
    }, t.prototype.clone = function(e, r) {
      var n = new t(), a = this._chunks, i = e && Nn(e, function(s, l) {
        return s[l] = !0, s;
      }, {});
      if (i)
        for (var o = 0; o < a.length; o++)
          n._chunks[o] = i[o] ? Tz(a[o]) : a[o];
      else
        n._chunks = a;
      return this._copyCommonProps(n), r || (n._indices = this._cloneIndices()), n._updateGetRawIdx(), n;
    }, t.prototype._copyCommonProps = function(e) {
      e._count = this._count, e._rawCount = this._rawCount, e._provider = this._provider, e._dimensions = this._dimensions, e._extent = le(this._extent), e._rawExtent = le(this._rawExtent);
    }, t.prototype._cloneIndices = function() {
      if (this._indices) {
        var e = this._indices.constructor, r = void 0;
        if (e === Array) {
          var n = this._indices.length;
          r = new e(n);
          for (var a = 0; a < n; a++)
            r[a] = this._indices[a];
        } else
          r = new e(this._indices);
        return r;
      }
      return null;
    }, t.prototype._getRawIdxIdentity = function(e) {
      return e;
    }, t.prototype._getRawIdx = function(e) {
      return e < this._count && e >= 0 ? this._indices[e] : -1;
    }, t.prototype._updateGetRawIdx = function() {
      this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
    }, t.internalField = function() {
      function e(r, n, a, i) {
        return $a(r[i], this._dimensions[i]);
      }
      jh = {
        arrayRows: e,
        objectRows: function(r, n, a, i) {
          return $a(r[n], this._dimensions[i]);
        },
        keyedColumns: e,
        original: function(r, n, a, i) {
          var o = r && (r.value == null ? r : r.value);
          return $a(o instanceof Array ? o[i] : o, this._dimensions[i]);
        },
        typedArray: function(r, n, a, i) {
          return r[i];
        }
      };
    }(), t;
  }()
), BM = (
  /** @class */
  function() {
    function t(e) {
      this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = e;
    }
    return t.prototype.dirty = function() {
      this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
    }, t.prototype._setLocalSource = function(e, r) {
      this._sourceList = e, this._upstreamSignList = r, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
    }, t.prototype._getVersionSign = function() {
      return this._sourceHost.uid + "_" + this._versionSignBase;
    }, t.prototype.prepareSource = function() {
      this._isDirty() && (this._createSource(), this._dirty = !1);
    }, t.prototype._createSource = function() {
      this._setLocalSource([], []);
      var e = this._sourceHost, r = this._getUpstreamSourceManagers(), n = !!r.length, a, i;
      if (Pc(e)) {
        var o = e, s = void 0, l = void 0, u = void 0;
        if (n) {
          var c = r[0];
          c.prepareSource(), u = c.getSource(), s = u.data, l = u.sourceFormat, i = [c._getVersionSign()];
        } else
          s = o.get("data", !0), l = gr(s) ? Va : Ur, i = [];
        var d = this._getSourceMetaRawOption() || {}, p = u && u.metaRawOption || {}, f = ge(d.seriesLayoutBy, p.seriesLayoutBy) || null, h = ge(d.sourceHeader, p.sourceHeader), g = ge(d.dimensions, p.dimensions), v = f !== p.seriesLayoutBy || !!h != !!p.sourceHeader || g;
        a = v ? [Em(s, {
          seriesLayoutBy: f,
          sourceHeader: h,
          dimensions: g
        }, l)] : [];
      } else {
        var m = e;
        if (n) {
          var _ = this._applyTransform(r);
          a = _.sourceList, i = _.upstreamSignList;
        } else {
          var y = m.get("source", !0);
          a = [Em(y, this._getSourceMetaRawOption(), null)], i = [];
        }
      }
      this._setLocalSource(a, i);
    }, t.prototype._applyTransform = function(e) {
      var r = this._sourceHost, n = r.get("transform", !0), a = r.get("fromTransformResult", !0);
      if (a != null) {
        var i = "";
        e.length !== 1 && xE(i);
      }
      var o, s = [], l = [];
      return w(e, function(u) {
        u.prepareSource();
        var c = u.getSource(a || 0), d = "";
        a != null && !c && xE(d), s.push(c), l.push(u._getVersionSign());
      }), n ? o = yz(n, s, {
        datasetIndex: r.componentIndex
      }) : a != null && (o = [ez(s[0])]), {
        sourceList: o,
        upstreamSignList: l
      };
    }, t.prototype._isDirty = function() {
      if (this._dirty)
        return !0;
      for (var e = this._getUpstreamSourceManagers(), r = 0; r < e.length; r++) {
        var n = e[r];
        if (
          // Consider the case that there is ancestor diry, call it recursively.
          // The performance is probably not an issue because usually the chain is not long.
          n._isDirty() || this._upstreamSignList[r] !== n._getVersionSign()
        )
          return !0;
      }
    }, t.prototype.getSource = function(e) {
      e = e || 0;
      var r = this._sourceList[e];
      if (!r) {
        var n = this._getUpstreamSourceManagers();
        return n[0] && n[0].getSource(e);
      }
      return r;
    }, t.prototype.getSharedDataStore = function(e) {
      var r = e.makeStoreSchema();
      return this._innerGetDataStore(r.dimensions, e.source, r.hash);
    }, t.prototype._innerGetDataStore = function(e, r, n) {
      var a = 0, i = this._storeList, o = i[a];
      o || (o = i[a] = {});
      var s = o[n];
      if (!s) {
        var l = this._getUpstreamSourceManagers()[0];
        Pc(this._sourceHost) && l ? s = l._innerGetDataStore(e, r, n) : (s = new Tm(), s.initData(new wM(r, e.length), e)), o[n] = s;
      }
      return s;
    }, t.prototype._getUpstreamSourceManagers = function() {
      var e = this._sourceHost;
      if (Pc(e)) {
        var r = yy(e);
        return r ? [r.getSourceManager()] : [];
      } else
        return $(MU(e), function(n) {
          return n.getSourceManager();
        });
    }, t.prototype._getSourceMetaRawOption = function() {
      var e = this._sourceHost, r, n, a;
      if (Pc(e))
        r = e.get("seriesLayoutBy", !0), n = e.get("sourceHeader", !0), a = e.get("dimensions", !0);
      else if (!this._getUpstreamSourceManagers().length) {
        var i = e;
        r = i.get("seriesLayoutBy", !0), n = i.get("sourceHeader", !0), a = i.get("dimensions", !0);
      }
      return {
        seriesLayoutBy: r,
        sourceHeader: n,
        dimensions: a
      };
    }, t;
  }()
);
function TE(t) {
  var e = t.option.transform;
  e && jd(t.option.transform);
}
function Pc(t) {
  return t.mainType === "series";
}
function xE(t) {
  throw new Error(t);
}
var xz = "line-height:1";
function FM(t) {
  var e = t.lineHeight;
  return e == null ? xz : "line-height:" + tr(e + "") + "px";
}
function GM(t, e) {
  var r = t.color || "#6e7079", n = t.fontSize || 12, a = t.fontWeight || "400", i = t.color || "#464646", o = t.fontSize || 14, s = t.fontWeight || "900";
  return e === "html" ? {
    // eslint-disable-next-line max-len
    nameStyle: "font-size:" + tr(n + "") + "px;color:" + tr(r) + ";font-weight:" + tr(a + ""),
    // eslint-disable-next-line max-len
    valueStyle: "font-size:" + tr(o + "") + "px;color:" + tr(i) + ";font-weight:" + tr(s + "")
  } : {
    nameStyle: {
      fontSize: n,
      fill: r,
      fontWeight: a
    },
    valueStyle: {
      fontSize: o,
      fill: i,
      fontWeight: s
    }
  };
}
var Cz = [0, 10, 20, 30], Az = ["", `
`, `

`, `


`];
function Mt(t, e) {
  return e.type = t, e;
}
function xm(t) {
  return t.type === "section";
}
function UM(t) {
  return xm(t) ? wz : Dz;
}
function zM(t) {
  if (xm(t)) {
    var e = 0, r = t.blocks.length, n = r > 1 || r > 0 && !t.noHeader;
    return w(t.blocks, function(a) {
      var i = zM(a);
      i >= e && (e = i + +(n && // 0 always can not be readable gap level.
      (!i || xm(a) && !a.noHeader)));
    }), e;
  }
  return 0;
}
function wz(t, e, r, n) {
  var a = e.noHeader, i = Mz(zM(e)), o = [], s = e.blocks || [];
  ar(!s || V(s)), s = s || [];
  var l = t.orderMode;
  if (e.sortBlocks && l) {
    s = s.slice();
    var u = {
      valueAsc: "asc",
      valueDesc: "desc"
    };
    if (Q(u, l)) {
      var c = new OM(u[l], null);
      s.sort(function(g, v) {
        return c.evaluate(g.sortParam, v.sortParam);
      });
    } else l === "seriesDesc" && s.reverse();
  }
  w(s, function(g, v) {
    var m = e.valueFormatter, _ = UM(g)(
      // Inherit valueFormatter
      m ? G(G({}, t), {
        valueFormatter: m
      }) : t,
      g,
      v > 0 ? i.html : 0,
      n
    );
    _ != null && o.push(_);
  });
  var d = t.renderMode === "richText" ? o.join(i.richText) : Cm(n, o.join(""), a ? r : i.html);
  if (a)
    return d;
  var p = ym(e.header, "ordinal", t.useUTC), f = GM(n, t.renderMode).nameStyle, h = FM(n);
  return t.renderMode === "richText" ? VM(t, p, f) + i.richText + d : Cm(n, '<div style="' + f + ";" + h + ';">' + tr(p) + "</div>" + d, r);
}
function Dz(t, e, r, n) {
  var a = t.renderMode, i = e.noName, o = e.noValue, s = !e.markerType, l = e.name, u = t.useUTC, c = e.valueFormatter || t.valueFormatter || function(b) {
    return b = V(b) ? b : [b], $(b, function(S, E) {
      return ym(S, V(f) ? f[E] : f, u);
    });
  };
  if (!(i && o)) {
    var d = s ? "" : t.markupStyleCreator.makeTooltipMarker(e.markerType, e.markerColor || "#333", a), p = i ? "" : ym(l, "ordinal", u), f = e.valueType, h = o ? [] : c(e.value, e.dataIndex), g = !s || !i, v = !s && i, m = GM(n, a), _ = m.nameStyle, y = m.valueStyle;
    return a === "richText" ? (s ? "" : d) + (i ? "" : VM(t, p, _)) + (o ? "" : Rz(t, h, g, v, y)) : Cm(n, (s ? "" : d) + (i ? "" : Iz(p, !s, _)) + (o ? "" : Nz(h, g, v, y)), r);
  }
}
function CE(t, e, r, n, a, i) {
  if (t) {
    var o = UM(t), s = {
      useUTC: a,
      renderMode: r,
      orderMode: n,
      markupStyleCreator: e,
      valueFormatter: t.valueFormatter
    };
    return o(s, t, 0, i);
  }
}
function Mz(t) {
  return {
    html: Cz[t],
    richText: Az[t]
  };
}
function Cm(t, e, r) {
  var n = '<div style="clear:both"></div>', a = "margin: " + r + "px 0 0", i = FM(t);
  return '<div style="' + a + ";" + i + ';">' + e + n + "</div>";
}
function Iz(t, e, r) {
  var n = e ? "margin-left:2px" : "";
  return '<span style="' + r + ";" + n + '">' + tr(t) + "</span>";
}
function Nz(t, e, r, n) {
  var a = r ? "10px" : "20px", i = e ? "float:right;margin-left:" + a : "";
  return t = V(t) ? t : [t], '<span style="' + i + ";" + n + '">' + $(t, function(o) {
    return tr(o);
  }).join("&nbsp;&nbsp;") + "</span>";
}
function VM(t, e, r) {
  return t.markupStyleCreator.wrapRichTextStyle(e, r);
}
function Rz(t, e, r, n, a) {
  var i = [a], o = n ? 10 : 20;
  return r && i.push({
    padding: [0, 0, 0, o],
    align: "right"
  }), t.markupStyleCreator.wrapRichTextStyle(V(e) ? e.join("  ") : e, i);
}
function $M(t, e) {
  var r = t.getData().getItemVisual(e, "style"), n = r[t.visualDrawType];
  return uo(n);
}
function HM(t, e) {
  var r = t.get("padding");
  return r ?? (e === "richText" ? [8, 10] : 10);
}
var Jh = (
  /** @class */
  function() {
    function t() {
      this.richTextStyles = {}, this._nextStyleNameId = iD();
    }
    return t.prototype._generateStyleName = function() {
      return "__EC_aUTo_" + this._nextStyleNameId++;
    }, t.prototype.makeTooltipMarker = function(e, r, n) {
      var a = n === "richText" ? this._generateStyleName() : null, i = EU({
        color: r,
        type: e,
        renderMode: n,
        markerId: a
      });
      return Y(i) ? i : (this.richTextStyles[a] = i.style, i.content);
    }, t.prototype.wrapRichTextStyle = function(e, r) {
      var n = {};
      V(r) ? w(r, function(i) {
        return G(n, i);
      }) : G(n, r);
      var a = this._generateStyleName();
      return this.richTextStyles[a] = n, "{" + a + "|" + e + "}";
    }, t;
  }()
);
function WM(t) {
  var e = t.series, r = t.dataIndex, n = t.multipleSeries, a = e.getData(), i = a.mapDimensionsAll("defaultedTooltip"), o = i.length, s = e.getRawValue(r), l = V(s), u = $M(e, r), c, d, p, f;
  if (o > 1 || l && !o) {
    var h = Oz(s, e, r, i, u);
    c = h.inlineValues, d = h.inlineValueTypes, p = h.blocks, f = h.inlineValues[0];
  } else if (o) {
    var g = a.getDimensionInfo(i[0]);
    f = c = _s(a, r, i[0]), d = g.type;
  } else
    f = c = l ? s[0] : s;
  var v = Q_(e), m = v && e.name || "", _ = a.getName(r), y = n ? m : _;
  return Mt("section", {
    header: m,
    // When series name is not specified, do not show a header line with only '-'.
    // This case always happens in tooltip.trigger: 'item'.
    noHeader: n || !v,
    sortParam: f,
    blocks: [Mt("nameValue", {
      markerType: "item",
      markerColor: u,
      // Do not mix display seriesName and itemName in one tooltip,
      // which might confuses users.
      name: y,
      // name dimension might be auto assigned, where the name might
      // be not readable. So we check trim here.
      noName: !Xr(y),
      value: c,
      valueType: d,
      dataIndex: r
    })].concat(p || [])
  });
}
function Oz(t, e, r, n, a) {
  var i = e.getData(), o = Nn(t, function(d, p, f) {
    var h = i.getDimensionInfo(f);
    return d = d || h && h.tooltip !== !1 && h.displayName != null;
  }, !1), s = [], l = [], u = [];
  n.length ? w(n, function(d) {
    c(_s(i, r, d), d);
  }) : w(t, c);
  function c(d, p) {
    var f = i.getDimensionInfo(p);
    !f || f.otherDims.tooltip === !1 || (o ? u.push(Mt("nameValue", {
      markerType: "subItem",
      markerColor: a,
      name: f.displayName,
      value: d,
      valueType: f.type
    })) : (s.push(d), l.push(f.type)));
  }
  return {
    inlineValues: s,
    inlineValueTypes: l,
    blocks: u
  };
}
var ma = Oe();
function kc(t, e) {
  return t.getName(e) || t.getId(e);
}
var Fd = "__universalTransitionEnabled", et = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r._selectedDataIndicesMap = {}, r;
    }
    return e.prototype.init = function(r, n, a) {
      this.seriesIndex = this.componentIndex, this.dataTask = Yl({
        count: Pz,
        reset: kz
      }), this.dataTask.context = {
        model: this
      }, this.mergeDefaultAndTheme(r, a);
      var i = ma(this).sourceManager = new BM(this);
      i.prepareSource();
      var o = this.getInitialData(r, a);
      wE(o, this), this.dataTask.context.data = o, ma(this).dataBeforeProcessed = o, AE(this), this._initSelectedMapFromData(o);
    }, e.prototype.mergeDefaultAndTheme = function(r, n) {
      var a = mu(this), i = a ? ks(r) : {}, o = this.subType;
      De.hasClass(o) && (o += "Series"), be(r, n.getTheme().get(this.subType)), be(r, this.getDefaultOption()), io(r, "label", ["show"]), this.fillDataTextStyle(r.data), a && Xa(r, i, a);
    }, e.prototype.mergeOption = function(r, n) {
      r = be(this.option, r, !0), this.fillDataTextStyle(r.data);
      var a = mu(this);
      a && Xa(this.option, r, a);
      var i = ma(this).sourceManager;
      i.dirty(), i.prepareSource();
      var o = this.getInitialData(r, n);
      wE(o, this), this.dataTask.dirty(), this.dataTask.context.data = o, ma(this).dataBeforeProcessed = o, AE(this), this._initSelectedMapFromData(o);
    }, e.prototype.fillDataTextStyle = function(r) {
      if (r && !gr(r))
        for (var n = ["show"], a = 0; a < r.length; a++)
          r[a] && r[a].label && io(r[a], "label", n);
    }, e.prototype.getInitialData = function(r, n) {
    }, e.prototype.appendData = function(r) {
      var n = this.getRawData();
      n.appendData(r.data);
    }, e.prototype.getData = function(r) {
      var n = Am(this);
      if (n) {
        var a = n.context.data;
        return r == null || !a.getLinkedData ? a : a.getLinkedData(r);
      } else
        return ma(this).data;
    }, e.prototype.getAllData = function() {
      var r = this.getData();
      return r && r.getLinkedDataAll ? r.getLinkedDataAll() : [{
        data: r
      }];
    }, e.prototype.setData = function(r) {
      var n = Am(this);
      if (n) {
        var a = n.context;
        a.outputData = r, n !== this.dataTask && (a.data = r);
      }
      ma(this).data = r;
    }, e.prototype.getEncode = function() {
      var r = this.get("encode", !0);
      if (r)
        return J(r);
    }, e.prototype.getSourceManager = function() {
      return ma(this).sourceManager;
    }, e.prototype.getSource = function() {
      return this.getSourceManager().getSource();
    }, e.prototype.getRawData = function() {
      return ma(this).dataBeforeProcessed;
    }, e.prototype.getColorBy = function() {
      var r = this.get("colorBy");
      return r || "series";
    }, e.prototype.isColorBySeries = function() {
      return this.getColorBy() === "series";
    }, e.prototype.getBaseAxis = function() {
      var r = this.coordinateSystem;
      return r && r.getBaseAxis && r.getBaseAxis();
    }, e.prototype.formatTooltip = function(r, n, a) {
      return WM({
        series: this,
        dataIndex: r,
        multipleSeries: n
      });
    }, e.prototype.isAnimationEnabled = function() {
      var r = this.ecModel;
      if (Ae.node && !(r && r.ssr))
        return !1;
      var n = this.getShallow("animation");
      return n && this.getData().count() > this.getShallow("animationThreshold") && (n = !1), !!n;
    }, e.prototype.restoreData = function() {
      this.dataTask.dirty();
    }, e.prototype.getColorFromPalette = function(r, n, a) {
      var i = this.ecModel, o = by.prototype.getColorFromPalette.call(this, r, n, a);
      return o || (o = i.getColorFromPalette(r, n, a)), o;
    }, e.prototype.coordDimToDataDim = function(r) {
      return this.getRawData().mapDimensionsAll(r);
    }, e.prototype.getProgressive = function() {
      return this.get("progressive");
    }, e.prototype.getProgressiveThreshold = function() {
      return this.get("progressiveThreshold");
    }, e.prototype.select = function(r, n) {
      this._innerSelect(this.getData(n), r);
    }, e.prototype.unselect = function(r, n) {
      var a = this.option.selectedMap;
      if (a) {
        var i = this.option.selectedMode, o = this.getData(n);
        if (i === "series" || a === "all") {
          this.option.selectedMap = {}, this._selectedDataIndicesMap = {};
          return;
        }
        for (var s = 0; s < r.length; s++) {
          var l = r[s], u = kc(o, l);
          a[u] = !1, this._selectedDataIndicesMap[u] = -1;
        }
      }
    }, e.prototype.toggleSelect = function(r, n) {
      for (var a = [], i = 0; i < r.length; i++)
        a[0] = r[i], this.isSelected(r[i], n) ? this.unselect(a, n) : this.select(a, n);
    }, e.prototype.getSelectedDataIndices = function() {
      if (this.option.selectedMap === "all")
        return [].slice.call(this.getData().getIndices());
      for (var r = this._selectedDataIndicesMap, n = Me(r), a = [], i = 0; i < n.length; i++) {
        var o = r[n[i]];
        o >= 0 && a.push(o);
      }
      return a;
    }, e.prototype.isSelected = function(r, n) {
      var a = this.option.selectedMap;
      if (!a)
        return !1;
      var i = this.getData(n);
      return (a === "all" || a[kc(i, r)]) && !i.getItemModel(r).get(["select", "disabled"]);
    }, e.prototype.isUniversalTransitionEnabled = function() {
      if (this[Fd])
        return !0;
      var r = this.option.universalTransition;
      return r ? r === !0 ? !0 : r && r.enabled : !1;
    }, e.prototype._innerSelect = function(r, n) {
      var a, i, o = this.option, s = o.selectedMode, l = n.length;
      if (!(!s || !l)) {
        if (s === "series")
          o.selectedMap = "all";
        else if (s === "multiple") {
          se(o.selectedMap) || (o.selectedMap = {});
          for (var u = o.selectedMap, c = 0; c < l; c++) {
            var d = n[c], p = kc(r, d);
            u[p] = !0, this._selectedDataIndicesMap[p] = r.getRawIndex(d);
          }
        } else if (s === "single" || s === !0) {
          var f = n[l - 1], p = kc(r, f);
          o.selectedMap = (a = {}, a[p] = !0, a), this._selectedDataIndicesMap = (i = {}, i[p] = r.getRawIndex(f), i);
        }
      }
    }, e.prototype._initSelectedMapFromData = function(r) {
      if (!this.option.selectedMap) {
        var n = [];
        r.hasItemOption && r.each(function(a) {
          var i = r.getRawDataItem(a);
          i && i.selected && n.push(a);
        }), n.length > 0 && this._innerSelect(r, n);
      }
    }, e.registerClass = function(r) {
      return De.registerClass(r);
    }, e.protoInitialize = function() {
      var r = e.prototype;
      r.type = "series.__base__", r.seriesIndex = 0, r.ignoreStyleOnData = !1, r.hasSymbolVisual = !1, r.defaultSymbol = "circle", r.visualStyleAccessPath = "itemStyle", r.visualDrawType = "fill";
    }(), e;
  }(De)
);
_t(et, xf);
_t(et, by);
hD(et, De);
function AE(t) {
  var e = t.name;
  Q_(t) || (t.name = Lz(t) || e);
}
function Lz(t) {
  var e = t.getRawData(), r = e.mapDimensionsAll("seriesName"), n = [];
  return w(r, function(a) {
    var i = e.getDimensionInfo(a);
    i.displayName && n.push(i.displayName);
  }), n.join(" ");
}
function Pz(t) {
  return t.model.getRawData().count();
}
function kz(t) {
  var e = t.model;
  return e.setData(e.getRawData().cloneShallow()), Bz;
}
function Bz(t, e) {
  e.outputData && t.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
}
function wE(t, e) {
  w(su(t.CHANGABLE_METHODS, t.DOWNSAMPLE_METHODS), function(r) {
    t.wrapMethod(r, _e(Fz, e));
  });
}
function Fz(t, e) {
  var r = Am(t);
  return r && r.setOutputEnd((e || this).count()), e;
}
function Am(t) {
  var e = (t.ecModel || {}).scheduler, r = e && e.getPipeline(t.uid);
  if (r) {
    var n = r.currentTask;
    if (n) {
      var a = n.agentStubMap;
      a && (n = a.get(t.uid));
    }
    return n;
  }
}
var st = (
  /** @class */
  function() {
    function t() {
      this.group = new de(), this.uid = Ls("viewComponent");
    }
    return t.prototype.init = function(e, r) {
    }, t.prototype.render = function(e, r, n, a) {
    }, t.prototype.dispose = function(e, r) {
    }, t.prototype.updateView = function(e, r, n, a) {
    }, t.prototype.updateLayout = function(e, r, n, a) {
    }, t.prototype.updateVisual = function(e, r, n, a) {
    }, t.prototype.toggleBlurSeries = function(e, r, n) {
    }, t.prototype.eachRendered = function(e) {
      var r = this.group;
      r && r.traverse(e);
    }, t;
  }()
);
J_(st);
of(st);
function Fs() {
  var t = Oe();
  return function(e) {
    var r = t(e), n = e.pipelineContext, a = !!r.large, i = !!r.progressiveRender, o = r.large = !!(n && n.large), s = r.progressiveRender = !!(n && n.progressiveRender);
    return (a !== o || i !== s) && "reset";
  };
}
var qM = Oe(), Gz = Fs(), Ke = (
  /** @class */
  function() {
    function t() {
      this.group = new de(), this.uid = Ls("viewChart"), this.renderTask = Yl({
        plan: Uz,
        reset: zz
      }), this.renderTask.context = {
        view: this
      };
    }
    return t.prototype.init = function(e, r) {
    }, t.prototype.render = function(e, r, n, a) {
    }, t.prototype.highlight = function(e, r, n, a) {
      var i = e.getData(a && a.dataType);
      i && ME(i, a, "emphasis");
    }, t.prototype.downplay = function(e, r, n, a) {
      var i = e.getData(a && a.dataType);
      i && ME(i, a, "normal");
    }, t.prototype.remove = function(e, r) {
      this.group.removeAll();
    }, t.prototype.dispose = function(e, r) {
    }, t.prototype.updateView = function(e, r, n, a) {
      this.render(e, r, n, a);
    }, t.prototype.updateLayout = function(e, r, n, a) {
      this.render(e, r, n, a);
    }, t.prototype.updateVisual = function(e, r, n, a) {
      this.render(e, r, n, a);
    }, t.prototype.eachRendered = function(e) {
      ei(this.group, e);
    }, t.markUpdateMethod = function(e, r) {
      qM(e).updateMethod = r;
    }, t.protoInitialize = function() {
      var e = t.prototype;
      e.type = "chart";
    }(), t;
  }()
);
function DE(t, e, r) {
  t && hu(t) && (e === "emphasis" ? na : aa)(t, r);
}
function ME(t, e, r) {
  var n = oo(t, e), a = e && e.highlightKey != null ? EG(e.highlightKey) : null;
  n != null ? w(Ye(n), function(i) {
    DE(t.getItemGraphicEl(i), r, a);
  }) : t.eachItemGraphicEl(function(i) {
    DE(i, r, a);
  });
}
J_(Ke);
of(Ke);
function Uz(t) {
  return Gz(t.model);
}
function zz(t) {
  var e = t.model, r = t.ecModel, n = t.api, a = t.payload, i = e.pipelineContext.progressiveRender, o = t.view, s = a && qM(a).updateMethod, l = i ? "incrementalPrepareRender" : s && o[s] ? s : "render";
  return l !== "render" && o[l](e, r, n, a), Vz[l];
}
var Vz = {
  incrementalPrepareRender: {
    progress: function(t, e) {
      e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload);
    }
  },
  render: {
    // Put view.render in `progress` to support appendData. But in this case
    // view.render should not be called in reset, otherwise it will be called
    // twise. Use `forceFirstProgress` to make sure that view.render is called
    // in any cases.
    forceFirstProgress: !0,
    progress: function(t, e) {
      e.view.render(e.model, e.ecModel, e.api, e.payload);
    }
  }
}, hp = "\0__throttleOriginMethod", IE = "\0__throttleRate", NE = "\0__throttleType";
function Ay(t, e, r) {
  var n, a = 0, i = 0, o = null, s, l, u, c;
  e = e || 0;
  function d() {
    i = (/* @__PURE__ */ new Date()).getTime(), o = null, t.apply(l, u || []);
  }
  var p = function() {
    for (var f = [], h = 0; h < arguments.length; h++)
      f[h] = arguments[h];
    n = (/* @__PURE__ */ new Date()).getTime(), l = this, u = f;
    var g = c || e, v = c || r;
    c = null, s = n - (v ? a : i) - g, clearTimeout(o), v ? o = setTimeout(d, g) : s >= 0 ? d() : o = setTimeout(d, -s), a = n;
  };
  return p.clear = function() {
    o && (clearTimeout(o), o = null);
  }, p.debounceNextCall = function(f) {
    c = f;
  }, p;
}
function Gs(t, e, r, n) {
  var a = t[e];
  if (a) {
    var i = a[hp] || a, o = a[NE], s = a[IE];
    if (s !== r || o !== n) {
      if (r == null || !n)
        return t[e] = i;
      a = t[e] = Ay(i, r, n === "debounce"), a[hp] = i, a[NE] = n, a[IE] = r;
    }
    return a;
  }
}
function yu(t, e) {
  var r = t[e];
  r && r[hp] && (r.clear && r.clear(), t[e] = r[hp]);
}
var RE = Oe(), OE = {
  itemStyle: so(jD, !0),
  lineStyle: so(QD, !0)
}, $z = {
  lineStyle: "stroke",
  itemStyle: "fill"
};
function YM(t, e) {
  var r = t.visualStyleMapper || OE[e];
  return r || (console.warn("Unknown style type '" + e + "'."), OE.itemStyle);
}
function KM(t, e) {
  var r = t.visualDrawType || $z[e];
  return r || (console.warn("Unknown style type '" + e + "'."), "fill");
}
var Hz = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(t, e) {
    var r = t.getData(), n = t.visualStyleAccessPath || "itemStyle", a = t.getModel(n), i = YM(t, n), o = i(a), s = a.getShallow("decal");
    s && (r.setVisual("decal", s), s.dirty = !0);
    var l = KM(t, n), u = o[l], c = ae(u) ? u : null, d = o.fill === "auto" || o.stroke === "auto";
    if (!o[l] || c || d) {
      var p = t.getColorFromPalette(
        // TODO series count changed.
        t.name,
        null,
        e.getSeriesCount()
      );
      o[l] || (o[l] = p, r.setVisual("colorFromPalette", !0)), o.fill = o.fill === "auto" || ae(o.fill) ? p : o.fill, o.stroke = o.stroke === "auto" || ae(o.stroke) ? p : o.stroke;
    }
    if (r.setVisual("style", o), r.setVisual("drawType", l), !e.isSeriesFiltered(t) && c)
      return r.setVisual("colorFromPalette", !1), {
        dataEach: function(f, h) {
          var g = t.getDataParams(h), v = G({}, o);
          v[l] = c(g), f.setItemVisual(h, "style", v);
        }
      };
  }
}, tl = new He(), Wz = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(t, e) {
    if (!(t.ignoreStyleOnData || e.isSeriesFiltered(t))) {
      var r = t.getData(), n = t.visualStyleAccessPath || "itemStyle", a = YM(t, n), i = r.getVisual("drawType");
      return {
        dataEach: r.hasItemOption ? function(o, s) {
          var l = o.getRawDataItem(s);
          if (l && l[n]) {
            tl.option = l[n];
            var u = a(tl), c = o.ensureUniqueItemVisual(s, "style");
            G(c, u), tl.option.decal && (o.setItemVisual(s, "decal", tl.option.decal), tl.option.decal.dirty = !0), i in u && o.setItemVisual(s, "colorFromPalette", !1);
          }
        } : null
      };
    }
  }
}, qz = {
  performRawSeries: !0,
  overallReset: function(t) {
    var e = J();
    t.eachSeries(function(r) {
      var n = r.getColorBy();
      if (!r.isColorBySeries()) {
        var a = r.type + "-" + n, i = e.get(a);
        i || (i = {}, e.set(a, i)), RE(r).scope = i;
      }
    }), t.eachSeries(function(r) {
      if (!(r.isColorBySeries() || t.isSeriesFiltered(r))) {
        var n = r.getRawData(), a = {}, i = r.getData(), o = RE(r).scope, s = r.visualStyleAccessPath || "itemStyle", l = KM(r, s);
        i.each(function(u) {
          var c = i.getRawIndex(u);
          a[c] = u;
        }), n.each(function(u) {
          var c = a[u], d = i.getItemVisual(c, "colorFromPalette");
          if (d) {
            var p = i.ensureUniqueItemVisual(c, "style"), f = n.getName(u) || u + "", h = n.count();
            p[l] = r.getColorFromPalette(f, o, h);
          }
        });
      }
    });
  }
}, Bc = Math.PI;
function Yz(t, e) {
  e = e || {}, ie(e, {
    text: "loading",
    textColor: "#000",
    fontSize: 12,
    fontWeight: "normal",
    fontStyle: "normal",
    fontFamily: "sans-serif",
    maskColor: "rgba(255, 255, 255, 0.8)",
    showSpinner: !0,
    color: "#5470c6",
    spinnerRadius: 10,
    lineWidth: 5,
    zlevel: 0
  });
  var r = new de(), n = new Re({
    style: {
      fill: e.maskColor
    },
    zlevel: e.zlevel,
    z: 1e4
  });
  r.add(n);
  var a = new Pe({
    style: {
      text: e.text,
      fill: e.textColor,
      fontSize: e.fontSize,
      fontWeight: e.fontWeight,
      fontStyle: e.fontStyle,
      fontFamily: e.fontFamily
    },
    zlevel: e.zlevel,
    z: 10001
  }), i = new Re({
    style: {
      fill: "none"
    },
    textContent: a,
    textConfig: {
      position: "right",
      distance: 10
    },
    zlevel: e.zlevel,
    z: 10001
  });
  r.add(i);
  var o;
  return e.showSpinner && (o = new ff({
    shape: {
      startAngle: -Bc / 2,
      endAngle: -Bc / 2 + 0.1,
      r: e.spinnerRadius
    },
    style: {
      stroke: e.color,
      lineCap: "round",
      lineWidth: e.lineWidth
    },
    zlevel: e.zlevel,
    z: 10001
  }), o.animateShape(!0).when(1e3, {
    endAngle: Bc * 3 / 2
  }).start("circularInOut"), o.animateShape(!0).when(1e3, {
    startAngle: Bc * 3 / 2
  }).delay(300).start("circularInOut"), r.add(o)), r.resize = function() {
    var s = a.getBoundingRect().width, l = e.showSpinner ? e.spinnerRadius : 0, u = (t.getWidth() - l * 2 - (e.showSpinner && s ? 10 : 0) - s) / 2 - (e.showSpinner && s ? 0 : 5 + s / 2) + (e.showSpinner ? 0 : s / 2) + (s ? 0 : l), c = t.getHeight() / 2;
    e.showSpinner && o.setShape({
      cx: u,
      cy: c
    }), i.setShape({
      x: u - l,
      y: c - l,
      width: l * 2,
      height: l * 2
    }), n.setShape({
      x: 0,
      y: 0,
      width: t.getWidth(),
      height: t.getHeight()
    });
  }, r.resize(), r;
}
var ZM = (
  /** @class */
  function() {
    function t(e, r, n, a) {
      this._stageTaskMap = J(), this.ecInstance = e, this.api = r, n = this._dataProcessorHandlers = n.slice(), a = this._visualHandlers = a.slice(), this._allHandlers = n.concat(a);
    }
    return t.prototype.restoreData = function(e, r) {
      e.restoreData(r), this._stageTaskMap.each(function(n) {
        var a = n.overallTask;
        a && a.dirty();
      });
    }, t.prototype.getPerformArgs = function(e, r) {
      if (e.__pipeline) {
        var n = this._pipelineMap.get(e.__pipeline.id), a = n.context, i = !r && n.progressiveEnabled && (!a || a.progressiveRender) && e.__idxInPipeline > n.blockIndex, o = i ? n.step : null, s = a && a.modDataCount, l = s != null ? Math.ceil(s / o) : null;
        return {
          step: o,
          modBy: l,
          modDataCount: s
        };
      }
    }, t.prototype.getPipeline = function(e) {
      return this._pipelineMap.get(e);
    }, t.prototype.updateStreamModes = function(e, r) {
      var n = this._pipelineMap.get(e.uid), a = e.getData(), i = a.count(), o = n.progressiveEnabled && r.incrementalPrepareRender && i >= n.threshold, s = e.get("large") && i >= e.get("largeThreshold"), l = e.get("progressiveChunkMode") === "mod" ? i : null;
      e.pipelineContext = n.context = {
        progressiveRender: o,
        modDataCount: l,
        large: s
      };
    }, t.prototype.restorePipelines = function(e) {
      var r = this, n = r._pipelineMap = J();
      e.eachSeries(function(a) {
        var i = a.getProgressive(), o = a.uid;
        n.set(o, {
          id: o,
          head: null,
          tail: null,
          threshold: a.getProgressiveThreshold(),
          progressiveEnabled: i && !(a.preventIncremental && a.preventIncremental()),
          blockIndex: -1,
          step: Math.round(i || 700),
          count: 0
        }), r._pipe(a, a.dataTask);
      });
    }, t.prototype.prepareStageTasks = function() {
      var e = this._stageTaskMap, r = this.api.getModel(), n = this.api;
      w(this._allHandlers, function(a) {
        var i = e.get(a.uid) || e.set(a.uid, {}), o = "";
        ar(!(a.reset && a.overallReset), o), a.reset && this._createSeriesStageTask(a, i, r, n), a.overallReset && this._createOverallStageTask(a, i, r, n);
      }, this);
    }, t.prototype.prepareView = function(e, r, n, a) {
      var i = e.renderTask, o = i.context;
      o.model = r, o.ecModel = n, o.api = a, i.__block = !e.incrementalPrepareRender, this._pipe(r, i);
    }, t.prototype.performDataProcessorTasks = function(e, r) {
      this._performStageTasks(this._dataProcessorHandlers, e, r, {
        block: !0
      });
    }, t.prototype.performVisualTasks = function(e, r, n) {
      this._performStageTasks(this._visualHandlers, e, r, n);
    }, t.prototype._performStageTasks = function(e, r, n, a) {
      a = a || {};
      var i = !1, o = this;
      w(e, function(l, u) {
        if (!(a.visualType && a.visualType !== l.visualType)) {
          var c = o._stageTaskMap.get(l.uid), d = c.seriesTaskMap, p = c.overallTask;
          if (p) {
            var f, h = p.agentStubMap;
            h.each(function(v) {
              s(a, v) && (v.dirty(), f = !0);
            }), f && p.dirty(), o.updatePayload(p, n);
            var g = o.getPerformArgs(p, a.block);
            h.each(function(v) {
              v.perform(g);
            }), p.perform(g) && (i = !0);
          } else d && d.each(function(v, m) {
            s(a, v) && v.dirty();
            var _ = o.getPerformArgs(v, a.block);
            _.skip = !l.performRawSeries && r.isSeriesFiltered(v.context.model), o.updatePayload(v, n), v.perform(_) && (i = !0);
          });
        }
      });
      function s(l, u) {
        return l.setDirty && (!l.dirtyMap || l.dirtyMap.get(u.__pipeline.id));
      }
      this.unfinished = i || this.unfinished;
    }, t.prototype.performSeriesTasks = function(e) {
      var r;
      e.eachSeries(function(n) {
        r = n.dataTask.perform() || r;
      }), this.unfinished = r || this.unfinished;
    }, t.prototype.plan = function() {
      this._pipelineMap.each(function(e) {
        var r = e.tail;
        do {
          if (r.__block) {
            e.blockIndex = r.__idxInPipeline;
            break;
          }
          r = r.getUpstream();
        } while (r);
      });
    }, t.prototype.updatePayload = function(e, r) {
      r !== "remain" && (e.context.payload = r);
    }, t.prototype._createSeriesStageTask = function(e, r, n, a) {
      var i = this, o = r.seriesTaskMap, s = r.seriesTaskMap = J(), l = e.seriesType, u = e.getTargetSeries;
      e.createOnAllSeries ? n.eachRawSeries(c) : l ? n.eachRawSeriesByType(l, c) : u && u(n, a).each(c);
      function c(d) {
        var p = d.uid, f = s.set(p, o && o.get(p) || Yl({
          plan: jz,
          reset: Jz,
          count: t6
        }));
        f.context = {
          model: d,
          ecModel: n,
          api: a,
          // PENDING: `useClearVisual` not used?
          useClearVisual: e.isVisual && !e.isLayout,
          plan: e.plan,
          reset: e.reset,
          scheduler: i
        }, i._pipe(d, f);
      }
    }, t.prototype._createOverallStageTask = function(e, r, n, a) {
      var i = this, o = r.overallTask = r.overallTask || Yl({
        reset: Kz
      });
      o.context = {
        ecModel: n,
        api: a,
        overallReset: e.overallReset,
        scheduler: i
      };
      var s = o.agentStubMap, l = o.agentStubMap = J(), u = e.seriesType, c = e.getTargetSeries, d = !0, p = !1, f = "";
      ar(!e.createOnAllSeries, f), u ? n.eachRawSeriesByType(u, h) : c ? c(n, a).each(h) : (d = !1, w(n.getSeries(), h));
      function h(g) {
        var v = g.uid, m = l.set(v, s && s.get(v) || // When the result of `getTargetSeries` changed, the overallTask
        // should be set as dirty and re-performed.
        (p = !0, Yl({
          reset: Zz,
          onDirty: Qz
        })));
        m.context = {
          model: g,
          overallProgress: d
          // FIXME:TS never used, so comment it
          // modifyOutputEnd: modifyOutputEnd
        }, m.agent = o, m.__block = d, i._pipe(g, m);
      }
      p && o.dirty();
    }, t.prototype._pipe = function(e, r) {
      var n = e.uid, a = this._pipelineMap.get(n);
      !a.head && (a.head = r), a.tail && a.tail.pipe(r), a.tail = r, r.__idxInPipeline = a.count++, r.__pipeline = a;
    }, t.wrapStageHandler = function(e, r) {
      return ae(e) && (e = {
        overallReset: e,
        seriesType: r6(e)
      }), e.uid = Ls("stageHandler"), r && (e.visualType = r), e;
    }, t;
  }()
);
function Kz(t) {
  t.overallReset(t.ecModel, t.api, t.payload);
}
function Zz(t) {
  return t.overallProgress && Xz;
}
function Xz() {
  this.agent.dirty(), this.getDownstream().dirty();
}
function Qz() {
  this.agent && this.agent.dirty();
}
function jz(t) {
  return t.plan ? t.plan(t.model, t.ecModel, t.api, t.payload) : null;
}
function Jz(t) {
  t.useClearVisual && t.data.clearAllVisual();
  var e = t.resetDefines = Ye(t.reset(t.model, t.ecModel, t.api, t.payload));
  return e.length > 1 ? $(e, function(r, n) {
    return XM(n);
  }) : e6;
}
var e6 = XM(0);
function XM(t) {
  return function(e, r) {
    var n = r.data, a = r.resetDefines[t];
    if (a && a.dataEach)
      for (var i = e.start; i < e.end; i++)
        a.dataEach(n, i);
    else a && a.progress && a.progress(e, n);
  };
}
function t6(t) {
  return t.data.count();
}
function r6(t) {
  gp = null;
  try {
    t(bu, QM);
  } catch {
  }
  return gp;
}
var bu = {}, QM = {}, gp;
jM(bu, Sy);
jM(QM, EM);
bu.eachSeriesByType = bu.eachRawSeriesByType = function(t) {
  gp = t;
};
bu.eachComponent = function(t) {
  t.mainType === "series" && t.subType && (gp = t.subType);
};
function jM(t, e) {
  for (var r in e.prototype)
    t[r] = dt;
}
var LE = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"];
const n6 = {
  color: LE,
  colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], LE]
};
var qt = "#B9B8CE", PE = "#100C2A", Fc = function() {
  return {
    axisLine: {
      lineStyle: {
        color: qt
      }
    },
    splitLine: {
      lineStyle: {
        color: "#484753"
      }
    },
    splitArea: {
      areaStyle: {
        color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
      }
    },
    minorSplitLine: {
      lineStyle: {
        color: "#20203B"
      }
    }
  };
}, kE = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"], JM = {
  darkMode: !0,
  color: kE,
  backgroundColor: PE,
  axisPointer: {
    lineStyle: {
      color: "#817f91"
    },
    crossStyle: {
      color: "#817f91"
    },
    label: {
      // TODO Contrast of label backgorundColor
      color: "#fff"
    }
  },
  legend: {
    textStyle: {
      color: qt
    },
    pageTextStyle: {
      color: qt
    }
  },
  textStyle: {
    color: qt
  },
  title: {
    textStyle: {
      color: "#EEF1FA"
    },
    subtextStyle: {
      color: "#B9B8CE"
    }
  },
  toolbox: {
    iconStyle: {
      borderColor: qt
    }
  },
  dataZoom: {
    borderColor: "#71708A",
    textStyle: {
      color: qt
    },
    brushStyle: {
      color: "rgba(135,163,206,0.3)"
    },
    handleStyle: {
      color: "#353450",
      borderColor: "#C5CBE3"
    },
    moveHandleStyle: {
      color: "#B0B6C3",
      opacity: 0.3
    },
    fillerColor: "rgba(135,163,206,0.2)",
    emphasis: {
      handleStyle: {
        borderColor: "#91B7F2",
        color: "#4D587D"
      },
      moveHandleStyle: {
        color: "#636D9A",
        opacity: 0.7
      }
    },
    dataBackground: {
      lineStyle: {
        color: "#71708A",
        width: 1
      },
      areaStyle: {
        color: "#71708A"
      }
    },
    selectedDataBackground: {
      lineStyle: {
        color: "#87A3CE"
      },
      areaStyle: {
        color: "#87A3CE"
      }
    }
  },
  visualMap: {
    textStyle: {
      color: qt
    }
  },
  timeline: {
    lineStyle: {
      color: qt
    },
    label: {
      color: qt
    },
    controlStyle: {
      color: qt,
      borderColor: qt
    }
  },
  calendar: {
    itemStyle: {
      color: PE
    },
    dayLabel: {
      color: qt
    },
    monthLabel: {
      color: qt
    },
    yearLabel: {
      color: qt
    }
  },
  timeAxis: Fc(),
  logAxis: Fc(),
  valueAxis: Fc(),
  categoryAxis: Fc(),
  line: {
    symbol: "circle"
  },
  graph: {
    color: kE
  },
  gauge: {
    title: {
      color: qt
    },
    axisLine: {
      lineStyle: {
        color: [[1, "rgba(207,212,219,0.2)"]]
      }
    },
    axisLabel: {
      color: qt
    },
    detail: {
      color: "#EEF1FA"
    }
  },
  candlestick: {
    itemStyle: {
      color: "#f64e56",
      color0: "#54ea92",
      borderColor: "#f64e56",
      borderColor0: "#54ea92"
      // borderColor: '#ca2824',
      // borderColor0: '#09a443'
    }
  }
};
JM.categoryAxis.splitLine.show = !1;
var a6 = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.normalizeQuery = function(e) {
      var r = {}, n = {}, a = {};
      if (Y(e)) {
        var i = Cn(e);
        r.mainType = i.main || null, r.subType = i.sub || null;
      } else {
        var o = ["Index", "Name", "Id"], s = {
          name: 1,
          dataIndex: 1,
          dataType: 1
        };
        w(e, function(l, u) {
          for (var c = !1, d = 0; d < o.length; d++) {
            var p = o[d], f = u.lastIndexOf(p);
            if (f > 0 && f === u.length - p.length) {
              var h = u.slice(0, f);
              h !== "data" && (r.mainType = h, r[p.toLowerCase()] = l, c = !0);
            }
          }
          s.hasOwnProperty(u) && (n[u] = l, c = !0), c || (a[u] = l);
        });
      }
      return {
        cptQuery: r,
        dataQuery: n,
        otherQuery: a
      };
    }, t.prototype.filter = function(e, r) {
      var n = this.eventInfo;
      if (!n)
        return !0;
      var a = n.targetEl, i = n.packedEvent, o = n.model, s = n.view;
      if (!o || !s)
        return !0;
      var l = r.cptQuery, u = r.dataQuery;
      return c(l, o, "mainType") && c(l, o, "subType") && c(l, o, "index", "componentIndex") && c(l, o, "name") && c(l, o, "id") && c(u, i, "name") && c(u, i, "dataIndex") && c(u, i, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(e, r.otherQuery, a, i));
      function c(d, p, f, h) {
        return d[f] == null || p[h || f] === d[f];
      }
    }, t.prototype.afterTrigger = function() {
      this.eventInfo = null;
    }, t;
  }()
), wm = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"], BE = wm.concat(["symbolKeepAspect"]), i6 = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(t, e) {
    var r = t.getData();
    if (t.legendIcon && r.setVisual("legendIcon", t.legendIcon), !t.hasSymbolVisual)
      return;
    for (var n = {}, a = {}, i = !1, o = 0; o < wm.length; o++) {
      var s = wm[o], l = t.get(s);
      ae(l) ? (i = !0, a[s] = l) : n[s] = l;
    }
    if (n.symbol = n.symbol || t.defaultSymbol, r.setVisual(G({
      legendIcon: t.legendIcon || n.symbol,
      symbolKeepAspect: t.get("symbolKeepAspect")
    }, n)), e.isSeriesFiltered(t))
      return;
    var u = Me(a);
    function c(d, p) {
      for (var f = t.getRawValue(p), h = t.getDataParams(p), g = 0; g < u.length; g++) {
        var v = u[g];
        d.setItemVisual(p, v, a[v](f, h));
      }
    }
    return {
      dataEach: i ? c : null
    };
  }
}, o6 = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(t, e) {
    if (!t.hasSymbolVisual || e.isSeriesFiltered(t))
      return;
    var r = t.getData();
    function n(a, i) {
      for (var o = a.getItemModel(i), s = 0; s < BE.length; s++) {
        var l = BE[s], u = o.getShallow(l, !0);
        u != null && a.setItemVisual(i, l, u);
      }
    }
    return {
      dataEach: r.hasItemOption ? n : null
    };
  }
};
function wy(t, e, r) {
  switch (r) {
    case "color":
      var n = t.getItemVisual(e, "style");
      return n[t.getVisual("drawType")];
    case "opacity":
      return t.getItemVisual(e, "style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return t.getItemVisual(e, r);
  }
}
function Zu(t, e) {
  switch (e) {
    case "color":
      var r = t.getVisual("style");
      return r[t.getVisual("drawType")];
    case "opacity":
      return t.getVisual("style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return t.getVisual(e);
  }
}
function eI(t, e, r, n) {
  switch (r) {
    case "color":
      var a = t.ensureUniqueItemVisual(e, "style");
      a[t.getVisual("drawType")] = n, t.setItemVisual(e, "colorFromPalette", !1);
      break;
    case "opacity":
      t.ensureUniqueItemVisual(e, "style").opacity = n;
      break;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      t.setItemVisual(e, r, n);
      break;
  }
}
function tI(t, e) {
  function r(n, a) {
    var i = [];
    return n.eachComponent({
      mainType: "series",
      subType: t,
      query: a
    }, function(o) {
      i.push(o.seriesIndex);
    }), i;
  }
  w([[t + "ToggleSelect", "toggleSelect"], [t + "Select", "select"], [t + "UnSelect", "unselect"]], function(n) {
    e(n[0], function(a, i, o) {
      a = G({}, a), o.dispatchAction(G(a, {
        type: n[1],
        seriesIndex: r(i, a)
      }));
    });
  });
}
function ko(t, e, r, n, a) {
  var i = t + e;
  r.isSilent(i) || n.eachComponent({
    mainType: "series",
    subType: "pie"
  }, function(o) {
    for (var s = o.seriesIndex, l = o.option.selectedMap, u = a.selected, c = 0; c < u.length; c++)
      if (u[c].seriesIndex === s) {
        var d = o.getData(), p = oo(d, a.fromActionPayload);
        r.trigger(i, {
          type: i,
          seriesId: o.id,
          name: V(p) ? d.getName(p[0]) : d.getName(p),
          selected: Y(l) ? l : G({}, l)
        });
      }
  });
}
function s6(t, e, r) {
  t.on("selectchanged", function(n) {
    var a = r.getModel();
    n.isFromClick ? (ko("map", "selectchanged", e, a, n), ko("pie", "selectchanged", e, a, n)) : n.fromAction === "select" ? (ko("map", "selected", e, a, n), ko("pie", "selected", e, a, n)) : n.fromAction === "unselect" && (ko("map", "unselected", e, a, n), ko("pie", "unselected", e, a, n));
  });
}
function Wi(t, e, r) {
  for (var n; t && !(e(t) && (n = t, r)); )
    t = t.__hostTarget || t.parent;
  return n;
}
var l6 = Math.round(Math.random() * 9), u6 = typeof Object.defineProperty == "function", c6 = function() {
  function t() {
    this._id = "__ec_inner_" + l6++;
  }
  return t.prototype.get = function(e) {
    return this._guard(e)[this._id];
  }, t.prototype.set = function(e, r) {
    var n = this._guard(e);
    return u6 ? Object.defineProperty(n, this._id, {
      value: r,
      enumerable: !1,
      configurable: !0
    }) : n[this._id] = r, this;
  }, t.prototype.delete = function(e) {
    return this.has(e) ? (delete this._guard(e)[this._id], !0) : !1;
  }, t.prototype.has = function(e) {
    return !!this._guard(e)[this._id];
  }, t.prototype._guard = function(e) {
    if (e !== Object(e))
      throw TypeError("Value of WeakMap is not a non-null object.");
    return e;
  }, t;
}(), d6 = Ce.extend({
  type: "triangle",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(t, e) {
    var r = e.cx, n = e.cy, a = e.width / 2, i = e.height / 2;
    t.moveTo(r, n - i), t.lineTo(r + a, n + i), t.lineTo(r - a, n + i), t.closePath();
  }
}), p6 = Ce.extend({
  type: "diamond",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(t, e) {
    var r = e.cx, n = e.cy, a = e.width / 2, i = e.height / 2;
    t.moveTo(r, n - i), t.lineTo(r + a, n), t.lineTo(r, n + i), t.lineTo(r - a, n), t.closePath();
  }
}), f6 = Ce.extend({
  type: "pin",
  shape: {
    // x, y on the cusp
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(t, e) {
    var r = e.x, n = e.y, a = e.width / 5 * 3, i = Math.max(a, e.height), o = a / 2, s = o * o / (i - o), l = n - i + o + s, u = Math.asin(s / o), c = Math.cos(u) * o, d = Math.sin(u), p = Math.cos(u), f = o * 0.6, h = o * 0.7;
    t.moveTo(r - c, l + s), t.arc(r, l, o, Math.PI - u, Math.PI * 2 + u), t.bezierCurveTo(r + c - d * f, l + s + p * f, r, n - h, r, n), t.bezierCurveTo(r, n - h, r - c + d * f, l + s + p * f, r - c, l + s), t.closePath();
  }
}), h6 = Ce.extend({
  type: "arrow",
  shape: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(t, e) {
    var r = e.height, n = e.width, a = e.x, i = e.y, o = n / 3 * 2;
    t.moveTo(a, i), t.lineTo(a + o, i + r), t.lineTo(a, i + r / 4 * 3), t.lineTo(a - o, i + r), t.lineTo(a, i), t.closePath();
  }
}), g6 = {
  line: Ct,
  rect: Re,
  roundRect: Re,
  square: Re,
  circle: ca,
  diamond: p6,
  pin: f6,
  arrow: h6,
  triangle: d6
}, v6 = {
  line: function(t, e, r, n, a) {
    a.x1 = t, a.y1 = e + n / 2, a.x2 = t + r, a.y2 = e + n / 2;
  },
  rect: function(t, e, r, n, a) {
    a.x = t, a.y = e, a.width = r, a.height = n;
  },
  roundRect: function(t, e, r, n, a) {
    a.x = t, a.y = e, a.width = r, a.height = n, a.r = Math.min(r, n) / 4;
  },
  square: function(t, e, r, n, a) {
    var i = Math.min(r, n);
    a.x = t, a.y = e, a.width = i, a.height = i;
  },
  circle: function(t, e, r, n, a) {
    a.cx = t + r / 2, a.cy = e + n / 2, a.r = Math.min(r, n) / 2;
  },
  diamond: function(t, e, r, n, a) {
    a.cx = t + r / 2, a.cy = e + n / 2, a.width = r, a.height = n;
  },
  pin: function(t, e, r, n, a) {
    a.x = t + r / 2, a.y = e + n / 2, a.width = r, a.height = n;
  },
  arrow: function(t, e, r, n, a) {
    a.x = t + r / 2, a.y = e + n / 2, a.width = r, a.height = n;
  },
  triangle: function(t, e, r, n, a) {
    a.cx = t + r / 2, a.cy = e + n / 2, a.width = r, a.height = n;
  }
}, vp = {};
w(g6, function(t, e) {
  vp[e] = new t();
});
var m6 = Ce.extend({
  type: "symbol",
  shape: {
    symbolType: "",
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  calculateTextPosition: function(t, e, r) {
    var n = ip(t, e, r), a = this.shape;
    return a && a.symbolType === "pin" && e.position === "inside" && (n.y = r.y + r.height * 0.4), n;
  },
  buildPath: function(t, e, r) {
    var n = e.symbolType;
    if (n !== "none") {
      var a = vp[n];
      a || (n = "rect", a = vp[n]), v6[n](e.x, e.y, e.width, e.height, a.shape), a.buildPath(t, a.shape, r);
    }
  }
});
function _6(t, e) {
  if (this.type !== "image") {
    var r = this.style;
    this.__isEmptyBrush ? (r.stroke = t, r.fill = e || "#fff", r.lineWidth = 2) : this.shape.symbolType === "line" ? r.stroke = t : r.fill = t, this.markRedraw();
  }
}
function mt(t, e, r, n, a, i, o) {
  var s = t.indexOf("empty") === 0;
  s && (t = t.substr(5, 1).toLowerCase() + t.substr(6));
  var l;
  return t.indexOf("image://") === 0 ? l = $D(t.slice(8), new Te(e, r, n, a), o ? "center" : "cover") : t.indexOf("path://") === 0 ? l = hf(t.slice(7), {}, new Te(e, r, n, a), o ? "center" : "cover") : l = new m6({
    shape: {
      symbolType: t,
      x: e,
      y: r,
      width: n,
      height: a
    }
  }), l.__isEmptyBrush = s, l.setColor = _6, i && l.setColor(i), l;
}
function Us(t) {
  return V(t) || (t = [+t, +t]), [t[0] || 0, t[1] || 0];
}
function mo(t, e) {
  if (t != null)
    return V(t) || (t = [t, t]), [q(t[0], e[0]) || 0, q(ge(t[1], t[0]), e[1]) || 0];
}
function qi(t) {
  return isFinite(t);
}
function y6(t, e, r) {
  var n = e.x == null ? 0 : e.x, a = e.x2 == null ? 1 : e.x2, i = e.y == null ? 0 : e.y, o = e.y2 == null ? 0 : e.y2;
  e.global || (n = n * r.width + r.x, a = a * r.width + r.x, i = i * r.height + r.y, o = o * r.height + r.y), n = qi(n) ? n : 0, a = qi(a) ? a : 1, i = qi(i) ? i : 0, o = qi(o) ? o : 0;
  var s = t.createLinearGradient(n, i, a, o);
  return s;
}
function b6(t, e, r) {
  var n = r.width, a = r.height, i = Math.min(n, a), o = e.x == null ? 0.5 : e.x, s = e.y == null ? 0.5 : e.y, l = e.r == null ? 0.5 : e.r;
  e.global || (o = o * n + r.x, s = s * a + r.y, l = l * i), o = qi(o) ? o : 0.5, s = qi(s) ? s : 0.5, l = l >= 0 && qi(l) ? l : 0.5;
  var u = t.createRadialGradient(o, s, 0, o, s, l);
  return u;
}
function Dm(t, e, r) {
  for (var n = e.type === "radial" ? b6(t, e, r) : y6(t, e, r), a = e.colorStops, i = 0; i < a.length; i++)
    n.addColorStop(a[i].offset, a[i].color);
  return n;
}
function S6(t, e) {
  if (t === e || !t && !e)
    return !1;
  if (!t || !e || t.length !== e.length)
    return !0;
  for (var r = 0; r < t.length; r++)
    if (t[r] !== e[r])
      return !0;
  return !1;
}
function Gc(t) {
  return parseInt(t, 10);
}
function ns(t, e, r) {
  var n = ["width", "height"][e], a = ["clientWidth", "clientHeight"][e], i = ["paddingLeft", "paddingTop"][e], o = ["paddingRight", "paddingBottom"][e];
  if (r[n] != null && r[n] !== "auto")
    return parseFloat(r[n]);
  var s = document.defaultView.getComputedStyle(t);
  return (t[a] || Gc(s[n]) || Gc(t.style[n])) - (Gc(s[i]) || 0) - (Gc(s[o]) || 0) | 0;
}
function E6(t, e) {
  return !t || t === "solid" || !(e > 0) ? null : t === "dashed" ? [4 * e, 2 * e] : t === "dotted" ? [e] : ke(t) ? [t] : V(t) ? t : null;
}
function Dy(t) {
  var e = t.style, r = e.lineDash && e.lineWidth > 0 && E6(e.lineDash, e.lineWidth), n = e.lineDashOffset;
  if (r) {
    var a = e.strokeNoScale && t.getLineScale ? t.getLineScale() : 1;
    a && a !== 1 && (r = $(r, function(i) {
      return i / a;
    }), n /= a);
  }
  return [r, n];
}
var T6 = new Pn(!0);
function mp(t) {
  var e = t.stroke;
  return !(e == null || e === "none" || !(t.lineWidth > 0));
}
function FE(t) {
  return typeof t == "string" && t !== "none";
}
function _p(t) {
  var e = t.fill;
  return e != null && e !== "none";
}
function GE(t, e) {
  if (e.fillOpacity != null && e.fillOpacity !== 1) {
    var r = t.globalAlpha;
    t.globalAlpha = e.fillOpacity * e.opacity, t.fill(), t.globalAlpha = r;
  } else
    t.fill();
}
function UE(t, e) {
  if (e.strokeOpacity != null && e.strokeOpacity !== 1) {
    var r = t.globalAlpha;
    t.globalAlpha = e.strokeOpacity * e.opacity, t.stroke(), t.globalAlpha = r;
  } else
    t.stroke();
}
function Mm(t, e, r) {
  var n = ey(e.image, e.__image, r);
  if (sf(n)) {
    var a = t.createPattern(n, e.repeat || "repeat");
    if (typeof DOMMatrix == "function" && a && a.setTransform) {
      var i = new DOMMatrix();
      i.translateSelf(e.x || 0, e.y || 0), i.rotateSelf(0, 0, (e.rotation || 0) * xd), i.scaleSelf(e.scaleX || 1, e.scaleY || 1), a.setTransform(i);
    }
    return a;
  }
}
function x6(t, e, r, n) {
  var a, i = mp(r), o = _p(r), s = r.strokePercent, l = s < 1, u = !e.path;
  (!e.silent || l) && u && e.createPathProxy();
  var c = e.path || T6, d = e.__dirty;
  if (!n) {
    var p = r.fill, f = r.stroke, h = o && !!p.colorStops, g = i && !!f.colorStops, v = o && !!p.image, m = i && !!f.image, _ = void 0, y = void 0, b = void 0, S = void 0, E = void 0;
    (h || g) && (E = e.getBoundingRect()), h && (_ = d ? Dm(t, p, E) : e.__canvasFillGradient, e.__canvasFillGradient = _), g && (y = d ? Dm(t, f, E) : e.__canvasStrokeGradient, e.__canvasStrokeGradient = y), v && (b = d || !e.__canvasFillPattern ? Mm(t, p, e) : e.__canvasFillPattern, e.__canvasFillPattern = b), m && (S = d || !e.__canvasStrokePattern ? Mm(t, f, e) : e.__canvasStrokePattern, e.__canvasStrokePattern = b), h ? t.fillStyle = _ : v && (b ? t.fillStyle = b : o = !1), g ? t.strokeStyle = y : m && (S ? t.strokeStyle = S : i = !1);
  }
  var T = e.getGlobalScale();
  c.setScale(T[0], T[1], e.segmentIgnoreThreshold);
  var x, C;
  t.setLineDash && r.lineDash && (a = Dy(e), x = a[0], C = a[1]);
  var A = !0;
  (u || d & El) && (c.setDPR(t.dpr), l ? c.setContext(null) : (c.setContext(t), A = !1), c.reset(), e.buildPath(c, e.shape, n), c.toStatic(), e.pathUpdated()), A && c.rebuildPath(t, l ? s : 1), x && (t.setLineDash(x), t.lineDashOffset = C), n || (r.strokeFirst ? (i && UE(t, r), o && GE(t, r)) : (o && GE(t, r), i && UE(t, r))), x && t.setLineDash([]);
}
function C6(t, e, r) {
  var n = e.__image = ey(r.image, e.__image, e, e.onload);
  if (!(!n || !sf(n))) {
    var a = r.x || 0, i = r.y || 0, o = e.getWidth(), s = e.getHeight(), l = n.width / n.height;
    if (o == null && s != null ? o = s * l : s == null && o != null ? s = o / l : o == null && s == null && (o = n.width, s = n.height), r.sWidth && r.sHeight) {
      var u = r.sx || 0, c = r.sy || 0;
      t.drawImage(n, u, c, r.sWidth, r.sHeight, a, i, o, s);
    } else if (r.sx && r.sy) {
      var u = r.sx, c = r.sy, d = o - u, p = s - c;
      t.drawImage(n, u, c, d, p, a, i, o, s);
    } else
      t.drawImage(n, a, i, o, s);
  }
}
function A6(t, e, r) {
  var n, a = r.text;
  if (a != null && (a += ""), a) {
    t.font = r.font || qa, t.textAlign = r.textAlign, t.textBaseline = r.textBaseline;
    var i = void 0, o = void 0;
    t.setLineDash && r.lineDash && (n = Dy(e), i = n[0], o = n[1]), i && (t.setLineDash(i), t.lineDashOffset = o), r.strokeFirst ? (mp(r) && t.strokeText(a, r.x, r.y), _p(r) && t.fillText(a, r.x, r.y)) : (_p(r) && t.fillText(a, r.x, r.y), mp(r) && t.strokeText(a, r.x, r.y)), i && t.setLineDash([]);
  }
}
var zE = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"], VE = [
  ["lineCap", "butt"],
  ["lineJoin", "miter"],
  ["miterLimit", 10]
];
function rI(t, e, r, n, a) {
  var i = !1;
  if (!n && (r = r || {}, e === r))
    return !1;
  if (n || e.opacity !== r.opacity) {
    fr(t, a), i = !0;
    var o = Math.max(Math.min(e.opacity, 1), 0);
    t.globalAlpha = isNaN(o) ? Qi.opacity : o;
  }
  (n || e.blend !== r.blend) && (i || (fr(t, a), i = !0), t.globalCompositeOperation = e.blend || Qi.blend);
  for (var s = 0; s < zE.length; s++) {
    var l = zE[s];
    (n || e[l] !== r[l]) && (i || (fr(t, a), i = !0), t[l] = t.dpr * (e[l] || 0));
  }
  return (n || e.shadowColor !== r.shadowColor) && (i || (fr(t, a), i = !0), t.shadowColor = e.shadowColor || Qi.shadowColor), i;
}
function $E(t, e, r, n, a) {
  var i = Su(e, a.inHover), o = n ? null : r && Su(r, a.inHover) || {};
  if (i === o)
    return !1;
  var s = rI(t, i, o, n, a);
  if ((n || i.fill !== o.fill) && (s || (fr(t, a), s = !0), FE(i.fill) && (t.fillStyle = i.fill)), (n || i.stroke !== o.stroke) && (s || (fr(t, a), s = !0), FE(i.stroke) && (t.strokeStyle = i.stroke)), (n || i.opacity !== o.opacity) && (s || (fr(t, a), s = !0), t.globalAlpha = i.opacity == null ? 1 : i.opacity), e.hasStroke()) {
    var l = i.lineWidth, u = l / (i.strokeNoScale && e.getLineScale ? e.getLineScale() : 1);
    t.lineWidth !== u && (s || (fr(t, a), s = !0), t.lineWidth = u);
  }
  for (var c = 0; c < VE.length; c++) {
    var d = VE[c], p = d[0];
    (n || i[p] !== o[p]) && (s || (fr(t, a), s = !0), t[p] = i[p] || d[1]);
  }
  return s;
}
function w6(t, e, r, n, a) {
  return rI(t, Su(e, a.inHover), r && Su(r, a.inHover), n, a);
}
function nI(t, e) {
  var r = e.transform, n = t.dpr || 1;
  r ? t.setTransform(n * r[0], n * r[1], n * r[2], n * r[3], n * r[4], n * r[5]) : t.setTransform(n, 0, 0, n, 0, 0);
}
function D6(t, e, r) {
  for (var n = !1, a = 0; a < t.length; a++) {
    var i = t[a];
    n = n || i.isZeroArea(), nI(e, i), e.beginPath(), i.buildPath(e, i.shape), e.clip();
  }
  r.allClipped = n;
}
function M6(t, e) {
  return t && e ? t[0] !== e[0] || t[1] !== e[1] || t[2] !== e[2] || t[3] !== e[3] || t[4] !== e[4] || t[5] !== e[5] : !(!t && !e);
}
var HE = 1, WE = 2, qE = 3, YE = 4;
function I6(t) {
  var e = _p(t), r = mp(t);
  return !(t.lineDash || !(+e ^ +r) || e && typeof t.fill != "string" || r && typeof t.stroke != "string" || t.strokePercent < 1 || t.strokeOpacity < 1 || t.fillOpacity < 1);
}
function fr(t, e) {
  e.batchFill && t.fill(), e.batchStroke && t.stroke(), e.batchFill = "", e.batchStroke = "";
}
function Su(t, e) {
  return e && t.__hoverStyle || t.style;
}
function aI(t, e) {
  Yi(t, e, { inHover: !1, viewWidth: 0, viewHeight: 0 }, !0);
}
function Yi(t, e, r, n) {
  var a = e.transform;
  if (!e.shouldBePainted(r.viewWidth, r.viewHeight, !1, !1)) {
    e.__dirty &= -2, e.__isRendered = !1;
    return;
  }
  var i = e.__clipPaths, o = r.prevElClipPaths, s = !1, l = !1;
  if ((!o || S6(i, o)) && (o && o.length && (fr(t, r), t.restore(), l = s = !0, r.prevElClipPaths = null, r.allClipped = !1, r.prevEl = null), i && i.length && (fr(t, r), t.save(), D6(i, t, r), s = !0), r.prevElClipPaths = i), r.allClipped) {
    e.__isRendered = !1;
    return;
  }
  e.beforeBrush && e.beforeBrush(), e.innerBeforeBrush();
  var u = r.prevEl;
  u || (l = s = !0);
  var c = e instanceof Ce && e.autoBatch && I6(e.style);
  s || M6(a, u.transform) ? (fr(t, r), nI(t, e)) : c || fr(t, r);
  var d = Su(e, r.inHover);
  e instanceof Ce ? (r.lastDrawType !== HE && (l = !0, r.lastDrawType = HE), $E(t, e, u, l, r), (!c || !r.batchFill && !r.batchStroke) && t.beginPath(), x6(t, e, d, c), c && (r.batchFill = d.fill || "", r.batchStroke = d.stroke || "")) : e instanceof vs ? (r.lastDrawType !== qE && (l = !0, r.lastDrawType = qE), $E(t, e, u, l, r), A6(t, e, d)) : e instanceof Bt ? (r.lastDrawType !== WE && (l = !0, r.lastDrawType = WE), w6(t, e, u, l, r), C6(t, e, d)) : e.getTemporalDisplayables && (r.lastDrawType !== YE && (l = !0, r.lastDrawType = YE), N6(t, e, r)), c && n && fr(t, r), e.innerAfterBrush(), e.afterBrush && e.afterBrush(), r.prevEl = e, e.__dirty = 0, e.__isRendered = !0;
}
function N6(t, e, r) {
  var n = e.getDisplayables(), a = e.getTemporalDisplayables();
  t.save();
  var i = {
    prevElClipPaths: null,
    prevEl: null,
    allClipped: !1,
    viewWidth: r.viewWidth,
    viewHeight: r.viewHeight,
    inHover: r.inHover
  }, o, s;
  for (o = e.getCursor(), s = n.length; o < s; o++) {
    var l = n[o];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Yi(t, l, i, o === s - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
  }
  for (var u = 0, c = a.length; u < c; u++) {
    var l = a[u];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Yi(t, l, i, u === c - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
  }
  e.clearTemporalDisplayables(), e.notClear = !0, t.restore();
}
var eg = new c6(), KE = new Gu(100), ZE = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
function ys(t, e) {
  if (t === "none")
    return null;
  var r = e.getDevicePixelRatio(), n = e.getZr(), a = n.painter.type === "svg";
  t.dirty && eg.delete(t);
  var i = eg.get(t);
  if (i)
    return i;
  var o = ie(t, {
    symbol: "rect",
    symbolSize: 1,
    symbolKeepAspect: !0,
    color: "rgba(0, 0, 0, 0.2)",
    backgroundColor: null,
    dashArrayX: 5,
    dashArrayY: 5,
    rotation: 0,
    maxTileWidth: 512,
    maxTileHeight: 512
  });
  o.backgroundColor === "none" && (o.backgroundColor = null);
  var s = {
    repeat: "repeat"
  };
  return l(s), s.rotation = o.rotation, s.scaleX = s.scaleY = a ? 1 : 1 / r, eg.set(t, s), t.dirty = !1, s;
  function l(u) {
    for (var c = [r], d = !0, p = 0; p < ZE.length; ++p) {
      var f = o[ZE[p]];
      if (f != null && !V(f) && !Y(f) && !ke(f) && typeof f != "boolean") {
        d = !1;
        break;
      }
      c.push(f);
    }
    var h;
    if (d) {
      h = c.join(",") + (a ? "-svg" : "");
      var g = KE.get(h);
      g && (a ? u.svgElement = g : u.image = g);
    }
    var v = oI(o.dashArrayX), m = R6(o.dashArrayY), _ = iI(o.symbol), y = O6(v), b = sI(m), S = !a && Ya.createCanvas(), E = a && {
      tag: "g",
      attrs: {},
      key: "dcl",
      children: []
    }, T = C(), x;
    S && (S.width = T.width * r, S.height = T.height * r, x = S.getContext("2d")), A(), d && KE.put(h, S || E), u.image = S, u.svgElement = E, u.svgWidth = T.width, u.svgHeight = T.height;
    function C() {
      for (var D = 1, M = 0, I = y.length; M < I; ++M)
        D = pS(D, y[M]);
      for (var N = 1, M = 0, I = _.length; M < I; ++M)
        N = pS(N, _[M].length);
      D *= N;
      var R = b * y.length * _.length;
      return {
        width: Math.max(1, Math.min(D, o.maxTileWidth)),
        height: Math.max(1, Math.min(R, o.maxTileHeight))
      };
    }
    function A() {
      x && (x.clearRect(0, 0, S.width, S.height), o.backgroundColor && (x.fillStyle = o.backgroundColor, x.fillRect(0, 0, S.width, S.height)));
      for (var D = 0, M = 0; M < m.length; ++M)
        D += m[M];
      if (D <= 0)
        return;
      for (var I = -b, N = 0, R = 0, O = 0; I < T.height; ) {
        if (N % 2 === 0) {
          for (var B = R / 2 % _.length, L = 0, F = 0, U = 0; L < T.width * 2; ) {
            for (var z = 0, M = 0; M < v[O].length; ++M)
              z += v[O][M];
            if (z <= 0)
              break;
            if (F % 2 === 0) {
              var H = (1 - o.symbolSize) * 0.5, Z = L + v[O][F] * H, ee = I + m[N] * H, oe = v[O][F] * o.symbolSize, Le = m[N] * o.symbolSize, Xe = U / 2 % _[B].length;
              fe(Z, ee, oe, Le, _[B][Xe]);
            }
            L += v[O][F], ++U, ++F, F === v[O].length && (F = 0);
          }
          ++O, O === v.length && (O = 0);
        }
        I += m[N], ++R, ++N, N === m.length && (N = 0);
      }
      function fe(re, ve, j, ce, qe) {
        var Ge = a ? 1 : r, We = mt(qe, re * Ge, ve * Ge, j * Ge, ce * Ge, o.color, o.symbolKeepAspect);
        if (a) {
          var ye = n.painter.renderOneToVNode(We);
          ye && E.children.push(ye);
        } else
          aI(x, We);
      }
    }
  }
}
function iI(t) {
  if (!t || t.length === 0)
    return [["rect"]];
  if (Y(t))
    return [[t]];
  for (var e = !0, r = 0; r < t.length; ++r)
    if (!Y(t[r])) {
      e = !1;
      break;
    }
  if (e)
    return iI([t]);
  for (var n = [], r = 0; r < t.length; ++r)
    Y(t[r]) ? n.push([t[r]]) : n.push(t[r]);
  return n;
}
function oI(t) {
  if (!t || t.length === 0)
    return [[0, 0]];
  if (ke(t)) {
    var e = Math.ceil(t);
    return [[e, e]];
  }
  for (var r = !0, n = 0; n < t.length; ++n)
    if (!ke(t[n])) {
      r = !1;
      break;
    }
  if (r)
    return oI([t]);
  for (var a = [], n = 0; n < t.length; ++n)
    if (ke(t[n])) {
      var e = Math.ceil(t[n]);
      a.push([e, e]);
    } else {
      var e = $(t[n], function(s) {
        return Math.ceil(s);
      });
      e.length % 2 === 1 ? a.push(e.concat(e)) : a.push(e);
    }
  return a;
}
function R6(t) {
  if (!t || typeof t == "object" && t.length === 0)
    return [0, 0];
  if (ke(t)) {
    var e = Math.ceil(t);
    return [e, e];
  }
  var r = $(t, function(n) {
    return Math.ceil(n);
  });
  return t.length % 2 ? r.concat(r) : r;
}
function O6(t) {
  return $(t, function(e) {
    return sI(e);
  });
}
function sI(t) {
  for (var e = 0, r = 0; r < t.length; ++r)
    e += t[r];
  return t.length % 2 === 1 ? e * 2 : e;
}
function L6(t, e) {
  t.eachRawSeries(function(r) {
    if (!t.isSeriesFiltered(r)) {
      var n = r.getData();
      n.hasItemVisual() && n.each(function(o) {
        var s = n.getItemVisual(o, "decal");
        if (s) {
          var l = n.ensureUniqueItemVisual(o, "style");
          l.decal = ys(s, e);
        }
      });
      var a = n.getVisual("decal");
      if (a) {
        var i = n.getVisual("style");
        i.decal = ys(a, e);
      }
    }
  });
}
var Kr = new Gr(), lI = {};
function P6(t, e) {
  lI[t] = e;
}
function k6(t) {
  return lI[t];
}
var B6 = 1, F6 = 800, G6 = 900, U6 = 1e3, z6 = 2e3, V6 = 5e3, uI = 1e3, $6 = 1100, My = 2e3, cI = 3e3, H6 = 4e3, Af = 4500, W6 = 4600, q6 = 5e3, Y6 = 6e3, dI = 7e3, K6 = {
  PROCESSOR: {
    FILTER: U6,
    SERIES_FILTER: F6,
    STATISTIC: V6
  },
  VISUAL: {
    LAYOUT: uI,
    PROGRESSIVE_LAYOUT: $6,
    GLOBAL: My,
    CHART: cI,
    POST_CHART_LAYOUT: W6,
    COMPONENT: H6,
    BRUSH: q6,
    CHART_ITEM: Af,
    ARIA: Y6,
    DECAL: dI
  }
}, Wt = "__flagInMainProcess", cr = "__pendingUpdate", tg = "__needsUpdateStatus", XE = /^[a-zA-Z0-9_]+$/, rg = "__connectUpdateStatus", QE = 0, Z6 = 1, X6 = 2;
function pI(t) {
  return function() {
    for (var e = [], r = 0; r < arguments.length; r++)
      e[r] = arguments[r];
    if (this.isDisposed()) {
      this.id;
      return;
    }
    return hI(this, t, e);
  };
}
function fI(t) {
  return function() {
    for (var e = [], r = 0; r < arguments.length; r++)
      e[r] = arguments[r];
    return hI(this, t, e);
  };
}
function hI(t, e, r) {
  return r[0] = r[0] && r[0].toLowerCase(), Gr.prototype[e].apply(t, r);
}
var gI = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e;
  }(Gr)
), vI = gI.prototype;
vI.on = fI("on");
vI.off = fI("off");
var Bo, ng, Uc, _a, ag, ig, og, rl, nl, jE, JE, sg, eT, zc, tT, mI, Tr, rT, _I = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this, new a6()) || this;
      i._chartsViews = [], i._chartsMap = {}, i._componentsViews = [], i._componentsMap = {}, i._pendingActions = [], a = a || {}, Y(n) && (n = yI[n]), i._dom = r;
      var o = "canvas", s = "auto", l = !1;
      a.ssr && HF(function(p) {
        var f = pe(p), h = f.dataIndex;
        if (h != null) {
          var g = J();
          return g.set("series_index", f.seriesIndex), g.set("data_index", h), f.ssrType && g.set("ssr_type", f.ssrType), g;
        }
      });
      var u = i._zr = uS(r, {
        renderer: a.renderer || o,
        devicePixelRatio: a.devicePixelRatio,
        width: a.width,
        height: a.height,
        ssr: a.ssr,
        useDirtyRect: ge(a.useDirtyRect, l),
        useCoarsePointer: ge(a.useCoarsePointer, s),
        pointerSize: a.pointerSize
      });
      i._ssr = a.ssr, i._throttledZrFlush = Ay(K(u.flush, u), 17), n = le(n), n && xM(n, !0), i._theme = n, i._locale = gU(a.locale || JD), i._coordSysMgr = new Ku();
      var c = i._api = tT(i);
      function d(p, f) {
        return p.__prio - f.__prio;
      }
      return wd(bp, d), wd(Im, d), i._scheduler = new ZM(i, c, Im, bp), i._messageCenter = new gI(), i._initEvents(), i.resize = K(i.resize, i), u.animation.on("frame", i._onframe, i), jE(u, i), JE(u, i), jd(i), i;
    }
    return e.prototype._onframe = function() {
      if (!this._disposed) {
        rT(this);
        var r = this._scheduler;
        if (this[cr]) {
          var n = this[cr].silent;
          this[Wt] = !0;
          try {
            Bo(this), _a.update.call(this, null, this[cr].updateParams);
          } catch (l) {
            throw this[Wt] = !1, this[cr] = null, l;
          }
          this._zr.flush(), this[Wt] = !1, this[cr] = null, rl.call(this, n), nl.call(this, n);
        } else if (r.unfinished) {
          var a = B6, i = this._model, o = this._api;
          r.unfinished = !1;
          do {
            var s = +/* @__PURE__ */ new Date();
            r.performSeriesTasks(i), r.performDataProcessorTasks(i), ig(this, i), r.performVisualTasks(i), zc(this, this._model, o, "remain", {}), a -= +/* @__PURE__ */ new Date() - s;
          } while (a > 0 && r.unfinished);
          r.unfinished || this._zr.flush();
        }
      }
    }, e.prototype.getDom = function() {
      return this._dom;
    }, e.prototype.getId = function() {
      return this.id;
    }, e.prototype.getZr = function() {
      return this._zr;
    }, e.prototype.isSSR = function() {
      return this._ssr;
    }, e.prototype.setOption = function(r, n, a) {
      if (!this[Wt]) {
        if (this._disposed) {
          this.id;
          return;
        }
        var i, o, s;
        if (se(n) && (a = n.lazyUpdate, i = n.silent, o = n.replaceMerge, s = n.transition, n = n.notMerge), this[Wt] = !0, !this._model || n) {
          var l = new UU(this._api), u = this._theme, c = this._model = new Sy();
          c.scheduler = this._scheduler, c.ssr = this._ssr, c.init(null, null, null, u, this._locale, l);
        }
        this._model.setOption(r, {
          replaceMerge: o
        }, Nm);
        var d = {
          seriesTransition: s,
          optionChanged: !0
        };
        if (a)
          this[cr] = {
            silent: i,
            updateParams: d
          }, this[Wt] = !1, this.getZr().wakeUp();
        else {
          try {
            Bo(this), _a.update.call(this, null, d);
          } catch (p) {
            throw this[cr] = null, this[Wt] = !1, p;
          }
          this._ssr || this._zr.flush(), this[cr] = null, this[Wt] = !1, rl.call(this, i), nl.call(this, i);
        }
      }
    }, e.prototype.setTheme = function() {
    }, e.prototype.getModel = function() {
      return this._model;
    }, e.prototype.getOption = function() {
      return this._model && this._model.getOption();
    }, e.prototype.getWidth = function() {
      return this._zr.getWidth();
    }, e.prototype.getHeight = function() {
      return this._zr.getHeight();
    }, e.prototype.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || Ae.hasGlobalWindow && window.devicePixelRatio || 1;
    }, e.prototype.getRenderedCanvas = function(r) {
      return this.renderToCanvas(r);
    }, e.prototype.renderToCanvas = function(r) {
      r = r || {};
      var n = this._zr.painter;
      return n.getRenderedCanvas({
        backgroundColor: r.backgroundColor || this._model.get("backgroundColor"),
        pixelRatio: r.pixelRatio || this.getDevicePixelRatio()
      });
    }, e.prototype.renderToSVGString = function(r) {
      r = r || {};
      var n = this._zr.painter;
      return n.renderToString({
        useViewBox: r.useViewBox
      });
    }, e.prototype.getSvgDataURL = function() {
      if (Ae.svgSupported) {
        var r = this._zr, n = r.storage.getDisplayList();
        return w(n, function(a) {
          a.stopAnimation(null, !0);
        }), r.painter.toDataURL();
      }
    }, e.prototype.getDataURL = function(r) {
      if (this._disposed) {
        this.id;
        return;
      }
      r = r || {};
      var n = r.excludeComponents, a = this._model, i = [], o = this;
      w(n, function(l) {
        a.eachComponent({
          mainType: l
        }, function(u) {
          var c = o._componentsMap[u.__viewId];
          c.group.ignore || (i.push(c), c.group.ignore = !0);
        });
      });
      var s = this._zr.painter.getType() === "svg" ? this.getSvgDataURL() : this.renderToCanvas(r).toDataURL("image/" + (r && r.type || "png"));
      return w(i, function(l) {
        l.group.ignore = !1;
      }), s;
    }, e.prototype.getConnectedDataURL = function(r) {
      if (this._disposed) {
        this.id;
        return;
      }
      var n = r.type === "svg", a = this.group, i = Math.min, o = Math.max, s = 1 / 0;
      if (nT[a]) {
        var l = s, u = s, c = -s, d = -s, p = [], f = r && r.pixelRatio || this.getDevicePixelRatio();
        w(Zl, function(y, b) {
          if (y.group === a) {
            var S = n ? y.getZr().painter.getSvgDom().innerHTML : y.renderToCanvas(le(r)), E = y.getDom().getBoundingClientRect();
            l = i(E.left, l), u = i(E.top, u), c = o(E.right, c), d = o(E.bottom, d), p.push({
              dom: S,
              left: E.left,
              top: E.top
            });
          }
        }), l *= f, u *= f, c *= f, d *= f;
        var h = c - l, g = d - u, v = Ya.createCanvas(), m = uS(v, {
          renderer: n ? "svg" : "canvas"
        });
        if (m.resize({
          width: h,
          height: g
        }), n) {
          var _ = "";
          return w(p, function(y) {
            var b = y.left - l, S = y.top - u;
            _ += '<g transform="translate(' + b + "," + S + ')">' + y.dom + "</g>";
          }), m.painter.getSvgRoot().innerHTML = _, r.connectedBackgroundColor && m.painter.setBackgroundColor(r.connectedBackgroundColor), m.refreshImmediately(), m.painter.toDataURL();
        } else
          return r.connectedBackgroundColor && m.add(new Re({
            shape: {
              x: 0,
              y: 0,
              width: h,
              height: g
            },
            style: {
              fill: r.connectedBackgroundColor
            }
          })), w(p, function(y) {
            var b = new Bt({
              style: {
                x: y.left * f - l,
                y: y.top * f - u,
                image: y.dom
              }
            });
            m.add(b);
          }), m.refreshImmediately(), v.toDataURL("image/" + (r && r.type || "png"));
      } else
        return this.getDataURL(r);
    }, e.prototype.convertToPixel = function(r, n) {
      return ag(this, "convertToPixel", r, n);
    }, e.prototype.convertFromPixel = function(r, n) {
      return ag(this, "convertFromPixel", r, n);
    }, e.prototype.containPixel = function(r, n) {
      if (this._disposed) {
        this.id;
        return;
      }
      var a = this._model, i, o = Vl(a, r);
      return w(o, function(s, l) {
        l.indexOf("Models") >= 0 && w(s, function(u) {
          var c = u.coordinateSystem;
          if (c && c.containPoint)
            i = i || !!c.containPoint(n);
          else if (l === "seriesModels") {
            var d = this._chartsMap[u.__viewId];
            d && d.containPoint && (i = i || d.containPoint(n, u));
          }
        }, this);
      }, this), !!i;
    }, e.prototype.getVisual = function(r, n) {
      var a = this._model, i = Vl(a, r, {
        defaultMainType: "series"
      }), o = i.seriesModel, s = o.getData(), l = i.hasOwnProperty("dataIndexInside") ? i.dataIndexInside : i.hasOwnProperty("dataIndex") ? s.indexOfRawIndex(i.dataIndex) : null;
      return l != null ? wy(s, l, n) : Zu(s, n);
    }, e.prototype.getViewOfComponentModel = function(r) {
      return this._componentsMap[r.__viewId];
    }, e.prototype.getViewOfSeriesModel = function(r) {
      return this._chartsMap[r.__viewId];
    }, e.prototype._initEvents = function() {
      var r = this;
      w(Q6, function(n) {
        var a = function(i) {
          var o = r.getModel(), s = i.target, l, u = n === "globalout";
          if (u ? l = {} : s && Wi(s, function(h) {
            var g = pe(h);
            if (g && g.dataIndex != null) {
              var v = g.dataModel || o.getSeriesByIndex(g.seriesIndex);
              return l = v && v.getDataParams(g.dataIndex, g.dataType, s) || {}, !0;
            } else if (g.eventData)
              return l = G({}, g.eventData), !0;
          }, !0), l) {
            var c = l.componentType, d = l.componentIndex;
            (c === "markLine" || c === "markPoint" || c === "markArea") && (c = "series", d = l.seriesIndex);
            var p = c && d != null && o.getComponent(c, d), f = p && r[p.mainType === "series" ? "_chartsMap" : "_componentsMap"][p.__viewId];
            l.event = i, l.type = n, r._$eventProcessor.eventInfo = {
              targetEl: s,
              packedEvent: l,
              model: p,
              view: f
            }, r.trigger(n, l);
          }
        };
        a.zrEventfulCallAtLast = !0, r._zr.on(n, a, r);
      }), w(Kl, function(n, a) {
        r._messageCenter.on(a, function(i) {
          this.trigger(a, i);
        }, r);
      }), w(["selectchanged"], function(n) {
        r._messageCenter.on(n, function(a) {
          this.trigger(n, a);
        }, r);
      }), s6(this._messageCenter, this, this._api);
    }, e.prototype.isDisposed = function() {
      return this._disposed;
    }, e.prototype.clear = function() {
      if (this._disposed) {
        this.id;
        return;
      }
      this.setOption({
        series: []
      }, !0);
    }, e.prototype.dispose = function() {
      if (this._disposed) {
        this.id;
        return;
      }
      this._disposed = !0;
      var r = this.getDom();
      r && dD(this.getDom(), Ny, "");
      var n = this, a = n._api, i = n._model;
      w(n._componentsViews, function(o) {
        o.dispose(i, a);
      }), w(n._chartsViews, function(o) {
        o.dispose(i, a);
      }), n._zr.dispose(), n._dom = n._model = n._chartsMap = n._componentsMap = n._chartsViews = n._componentsViews = n._scheduler = n._api = n._zr = n._throttledZrFlush = n._theme = n._coordSysMgr = n._messageCenter = null, delete Zl[n.id];
    }, e.prototype.resize = function(r) {
      if (!this[Wt]) {
        if (this._disposed) {
          this.id;
          return;
        }
        this._zr.resize(r);
        var n = this._model;
        if (this._loadingFX && this._loadingFX.resize(), !!n) {
          var a = n.resetOption("media"), i = r && r.silent;
          this[cr] && (i == null && (i = this[cr].silent), a = !0, this[cr] = null), this[Wt] = !0;
          try {
            a && Bo(this), _a.update.call(this, {
              type: "resize",
              animation: G({
                // Disable animation
                duration: 0
              }, r && r.animation)
            });
          } catch (o) {
            throw this[Wt] = !1, o;
          }
          this[Wt] = !1, rl.call(this, i), nl.call(this, i);
        }
      }
    }, e.prototype.showLoading = function(r, n) {
      if (this._disposed) {
        this.id;
        return;
      }
      if (se(r) && (n = r, r = ""), r = r || "default", this.hideLoading(), !!Rm[r]) {
        var a = Rm[r](this._api, n), i = this._zr;
        this._loadingFX = a, i.add(a);
      }
    }, e.prototype.hideLoading = function() {
      if (this._disposed) {
        this.id;
        return;
      }
      this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null;
    }, e.prototype.makeActionFromEvent = function(r) {
      var n = G({}, r);
      return n.type = Kl[r.type], n;
    }, e.prototype.dispatchAction = function(r, n) {
      if (this._disposed) {
        this.id;
        return;
      }
      if (se(n) || (n = {
        silent: !!n
      }), !!yp[r.type] && this._model) {
        if (this[Wt]) {
          this._pendingActions.push(r);
          return;
        }
        var a = n.silent;
        og.call(this, r, a);
        var i = n.flush;
        i ? this._zr.flush() : i !== !1 && Ae.browser.weChat && this._throttledZrFlush(), rl.call(this, a), nl.call(this, a);
      }
    }, e.prototype.updateLabelLayout = function() {
      Kr.trigger("series:layoutlabels", this._model, this._api, {
        // Not adding series labels.
        // TODO
        updatedSeries: []
      });
    }, e.prototype.appendData = function(r) {
      if (this._disposed) {
        this.id;
        return;
      }
      var n = r.seriesIndex, a = this.getModel(), i = a.getSeriesByIndex(n);
      i.appendData(r), this._scheduler.unfinished = !0, this.getZr().wakeUp();
    }, e.internalField = function() {
      Bo = function(d) {
        var p = d._scheduler;
        p.restorePipelines(d._model), p.prepareStageTasks(), ng(d, !0), ng(d, !1), p.plan();
      }, ng = function(d, p) {
        for (var f = d._model, h = d._scheduler, g = p ? d._componentsViews : d._chartsViews, v = p ? d._componentsMap : d._chartsMap, m = d._zr, _ = d._api, y = 0; y < g.length; y++)
          g[y].__alive = !1;
        p ? f.eachComponent(function(E, T) {
          E !== "series" && b(T);
        }) : f.eachSeries(b);
        function b(E) {
          var T = E.__requireNewView;
          E.__requireNewView = !1;
          var x = "_ec_" + E.id + "_" + E.type, C = !T && v[x];
          if (!C) {
            var A = Cn(E.type), D = p ? st.getClass(A.main, A.sub) : (
              // FIXME:TS
              // (ChartView as ChartViewConstructor).getClass('series', classType.sub)
              // For backward compat, still support a chart type declared as only subType
              // like "liquidfill", but recommend "series.liquidfill"
              // But need a base class to make a type series.
              Ke.getClass(A.sub)
            );
            C = new D(), C.init(f, _), v[x] = C, g.push(C), m.add(C.group);
          }
          E.__viewId = C.__id = x, C.__alive = !0, C.__model = E, C.group.__ecComponentInfo = {
            mainType: E.mainType,
            index: E.componentIndex
          }, !p && h.prepareView(C, E, f, _);
        }
        for (var y = 0; y < g.length; ) {
          var S = g[y];
          S.__alive ? y++ : (!p && S.renderTask.dispose(), m.remove(S.group), S.dispose(f, _), g.splice(y, 1), v[S.__id] === S && delete v[S.__id], S.__id = S.group.__ecComponentInfo = null);
        }
      }, Uc = function(d, p, f, h, g) {
        var v = d._model;
        if (v.setUpdatePayload(f), !h) {
          w([].concat(d._componentsViews).concat(d._chartsViews), S);
          return;
        }
        var m = {};
        m[h + "Id"] = f[h + "Id"], m[h + "Index"] = f[h + "Index"], m[h + "Name"] = f[h + "Name"];
        var _ = {
          mainType: h,
          query: m
        };
        g && (_.subType = g);
        var y = f.excludeSeriesId, b;
        y != null && (b = J(), w(Ye(y), function(E) {
          var T = St(E, null);
          T != null && b.set(T, !0);
        })), v && v.eachComponent(_, function(E) {
          var T = b && b.get(E.id) != null;
          if (!T)
            if (FS(f))
              if (E instanceof et)
                f.type === ji && !f.notBlur && !E.get(["emphasis", "disabled"]) && hG(E, f, d._api);
              else {
                var x = oy(E.mainType, E.componentIndex, f.name, d._api), C = x.focusSelf, A = x.dispatchers;
                f.type === ji && C && !f.notBlur && pm(E.mainType, E.componentIndex, d._api), A && w(A, function(D) {
                  f.type === ji ? na(D) : aa(D);
                });
              }
            else hm(f) && E instanceof et && (mG(E, f, d._api), kS(E), Tr(d));
        }, d), v && v.eachComponent(_, function(E) {
          var T = b && b.get(E.id) != null;
          T || S(d[h === "series" ? "_chartsMap" : "_componentsMap"][E.__viewId]);
        }, d);
        function S(E) {
          E && E.__alive && E[p] && E[p](E.__model, v, d._api, f);
        }
      }, _a = {
        prepareAndUpdate: function(d) {
          Bo(this), _a.update.call(this, d, {
            // Needs to mark option changed if newOption is given.
            // It's from MagicType.
            // TODO If use a separate flag optionChanged in payload?
            optionChanged: d.newOption != null
          });
        },
        update: function(d, p) {
          var f = this._model, h = this._api, g = this._zr, v = this._coordSysMgr, m = this._scheduler;
          if (f) {
            f.setUpdatePayload(d), m.restoreData(f, d), m.performSeriesTasks(f), v.create(f, h), m.performDataProcessorTasks(f, d), ig(this, f), v.update(f, h), r(f), m.performVisualTasks(f, d), sg(this, f, h, d, p);
            var _ = f.get("backgroundColor") || "transparent", y = f.get("darkMode");
            g.setBackgroundColor(_), y != null && y !== "auto" && g.setDarkMode(y), Kr.trigger("afterupdate", f, h);
          }
        },
        updateTransform: function(d) {
          var p = this, f = this._model, h = this._api;
          if (f) {
            f.setUpdatePayload(d);
            var g = [];
            f.eachComponent(function(m, _) {
              if (m !== "series") {
                var y = p.getViewOfComponentModel(_);
                if (y && y.__alive)
                  if (y.updateTransform) {
                    var b = y.updateTransform(_, f, h, d);
                    b && b.update && g.push(y);
                  } else
                    g.push(y);
              }
            });
            var v = J();
            f.eachSeries(function(m) {
              var _ = p._chartsMap[m.__viewId];
              if (_.updateTransform) {
                var y = _.updateTransform(m, f, h, d);
                y && y.update && v.set(m.uid, 1);
              } else
                v.set(m.uid, 1);
            }), r(f), this._scheduler.performVisualTasks(f, d, {
              setDirty: !0,
              dirtyMap: v
            }), zc(this, f, h, d, {}, v), Kr.trigger("afterupdate", f, h);
          }
        },
        updateView: function(d) {
          var p = this._model;
          p && (p.setUpdatePayload(d), Ke.markUpdateMethod(d, "updateView"), r(p), this._scheduler.performVisualTasks(p, d, {
            setDirty: !0
          }), sg(this, p, this._api, d, {}), Kr.trigger("afterupdate", p, this._api));
        },
        updateVisual: function(d) {
          var p = this, f = this._model;
          f && (f.setUpdatePayload(d), f.eachSeries(function(h) {
            h.getData().clearAllVisual();
          }), Ke.markUpdateMethod(d, "updateVisual"), r(f), this._scheduler.performVisualTasks(f, d, {
            visualType: "visual",
            setDirty: !0
          }), f.eachComponent(function(h, g) {
            if (h !== "series") {
              var v = p.getViewOfComponentModel(g);
              v && v.__alive && v.updateVisual(g, f, p._api, d);
            }
          }), f.eachSeries(function(h) {
            var g = p._chartsMap[h.__viewId];
            g.updateVisual(h, f, p._api, d);
          }), Kr.trigger("afterupdate", f, this._api));
        },
        updateLayout: function(d) {
          _a.update.call(this, d);
        }
      }, ag = function(d, p, f, h) {
        if (d._disposed) {
          d.id;
          return;
        }
        for (var g = d._model, v = d._coordSysMgr.getCoordinateSystems(), m, _ = Vl(g, f), y = 0; y < v.length; y++) {
          var b = v[y];
          if (b[p] && (m = b[p](g, _, h)) != null)
            return m;
        }
      }, ig = function(d, p) {
        var f = d._chartsMap, h = d._scheduler;
        p.eachSeries(function(g) {
          h.updateStreamModes(g, f[g.__viewId]);
        });
      }, og = function(d, p) {
        var f = this, h = this.getModel(), g = d.type, v = d.escapeConnect, m = yp[g], _ = m.actionInfo, y = (_.update || "update").split(":"), b = y.pop(), S = y[0] != null && Cn(y[0]);
        this[Wt] = !0;
        var E = [d], T = !1;
        d.batch && (T = !0, E = $(d.batch, function(N) {
          return N = ie(G({}, N), d), N.batch = null, N;
        }));
        var x = [], C, A = hm(d), D = FS(d);
        if (D && RD(this._api), w(E, function(N) {
          if (C = m.action(N, f._model, f._api), C = C || G({}, N), C.type = _.event || C.type, x.push(C), D) {
            var R = j_(d), O = R.queryOptionMap, B = R.mainTypeSpecified, L = B ? O.keys()[0] : "series";
            Uc(f, b, N, L), Tr(f);
          } else A ? (Uc(f, b, N, "series"), Tr(f)) : S && Uc(f, b, N, S.main, S.sub);
        }), b !== "none" && !D && !A && !S)
          try {
            this[cr] ? (Bo(this), _a.update.call(this, d), this[cr] = null) : _a[b].call(this, d);
          } catch (N) {
            throw this[Wt] = !1, N;
          }
        if (T ? C = {
          type: _.event || g,
          escapeConnect: v,
          batch: x
        } : C = x[0], this[Wt] = !1, !p) {
          var M = this._messageCenter;
          if (M.trigger(C.type, C), A) {
            var I = {
              type: "selectchanged",
              escapeConnect: v,
              selected: _G(h),
              isFromClick: d.isFromClick || !1,
              fromAction: d.type,
              fromActionPayload: d
            };
            M.trigger(I.type, I);
          }
        }
      }, rl = function(d) {
        for (var p = this._pendingActions; p.length; ) {
          var f = p.shift();
          og.call(this, f, d);
        }
      }, nl = function(d) {
        !d && this.trigger("updated");
      }, jE = function(d, p) {
        d.on("rendered", function(f) {
          p.trigger("rendered", f), // Although zr is dirty if initial animation is not finished
          // and this checking is called on frame, we also check
          // animation finished for robustness.
          d.animation.isFinished() && !p[cr] && !p._scheduler.unfinished && !p._pendingActions.length && p.trigger("finished");
        });
      }, JE = function(d, p) {
        d.on("mouseover", function(f) {
          var h = f.target, g = Wi(h, hu);
          g && (gG(g, f, p._api), Tr(p));
        }).on("mouseout", function(f) {
          var h = f.target, g = Wi(h, hu);
          g && (vG(g, f, p._api), Tr(p));
        }).on("click", function(f) {
          var h = f.target, g = Wi(h, function(_) {
            return pe(_).dataIndex != null;
          }, !0);
          if (g) {
            var v = g.selected ? "unselect" : "select", m = pe(g);
            p._api.dispatchAction({
              type: v,
              dataType: m.dataType,
              dataIndexInside: m.dataIndex,
              seriesIndex: m.seriesIndex,
              isFromClick: !0
            });
          }
        });
      };
      function r(d) {
        d.clearColorPalette(), d.eachSeries(function(p) {
          p.clearColorPalette();
        });
      }
      function n(d) {
        var p = [], f = [], h = !1;
        if (d.eachComponent(function(_, y) {
          var b = y.get("zlevel") || 0, S = y.get("z") || 0, E = y.getZLevelKey();
          h = h || !!E, (_ === "series" ? f : p).push({
            zlevel: b,
            z: S,
            idx: y.componentIndex,
            type: _,
            key: E
          });
        }), h) {
          var g = p.concat(f), v, m;
          wd(g, function(_, y) {
            return _.zlevel === y.zlevel ? _.z - y.z : _.zlevel - y.zlevel;
          }), w(g, function(_) {
            var y = d.getComponent(_.type, _.idx), b = _.zlevel, S = _.key;
            v != null && (b = Math.max(v, b)), S ? (b === v && S !== m && b++, m = S) : m && (b === v && b++, m = ""), v = b, y.setZLevel(b);
          });
        }
      }
      sg = function(d, p, f, h, g) {
        n(p), eT(d, p, f, h, g), w(d._chartsViews, function(v) {
          v.__alive = !1;
        }), zc(d, p, f, h, g), w(d._chartsViews, function(v) {
          v.__alive || v.remove(p, f);
        });
      }, eT = function(d, p, f, h, g, v) {
        w(v || d._componentsViews, function(m) {
          var _ = m.__model;
          u(_, m), m.render(_, p, f, h), s(_, m), c(_, m);
        });
      }, zc = function(d, p, f, h, g, v) {
        var m = d._scheduler;
        g = G(g || {}, {
          updatedSeries: p.getSeries()
        }), Kr.trigger("series:beforeupdate", p, f, g);
        var _ = !1;
        p.eachSeries(function(y) {
          var b = d._chartsMap[y.__viewId];
          b.__alive = !0;
          var S = b.renderTask;
          m.updatePayload(S, h), u(y, b), v && v.get(y.uid) && S.dirty(), S.perform(m.getPerformArgs(S)) && (_ = !0), b.group.silent = !!y.get("silent"), o(y, b), kS(y);
        }), m.unfinished = _ || m.unfinished, Kr.trigger("series:layoutlabels", p, f, g), Kr.trigger("series:transition", p, f, g), p.eachSeries(function(y) {
          var b = d._chartsMap[y.__viewId];
          s(y, b), c(y, b);
        }), i(d, p), Kr.trigger("series:afterupdate", p, f, g);
      }, Tr = function(d) {
        d[tg] = !0, d.getZr().wakeUp();
      }, rT = function(d) {
        d[tg] && (d.getZr().storage.traverse(function(p) {
          ss(p) || a(p);
        }), d[tg] = !1);
      };
      function a(d) {
        for (var p = [], f = d.currentStates, h = 0; h < f.length; h++) {
          var g = f[h];
          g === "emphasis" || g === "blur" || g === "select" || p.push(g);
        }
        d.selected && d.states.select && p.push("select"), d.hoverState === cf && d.states.emphasis ? p.push("emphasis") : d.hoverState === Vu && d.states.blur && p.push("blur"), d.useStates(p);
      }
      function i(d, p) {
        var f = d._zr, h = f.storage, g = 0;
        h.traverse(function(v) {
          v.isGroup || g++;
        }), g > p.get("hoverLayerThreshold") && !Ae.node && !Ae.worker && p.eachSeries(function(v) {
          if (!v.preventUsingHoverLayer) {
            var m = d._chartsMap[v.__viewId];
            m.__alive && m.eachRendered(function(_) {
              _.states.emphasis && (_.states.emphasis.hoverLayer = !0);
            });
          }
        });
      }
      function o(d, p) {
        var f = d.get("blendMode") || null;
        p.eachRendered(function(h) {
          h.isGroup || (h.style.blend = f);
        });
      }
      function s(d, p) {
        if (!d.preventAutoZ) {
          var f = d.get("z") || 0, h = d.get("zlevel") || 0;
          p.eachRendered(function(g) {
            return l(g, f, h, -1 / 0), !0;
          });
        }
      }
      function l(d, p, f, h) {
        var g = d.getTextContent(), v = d.getTextGuideLine(), m = d.isGroup;
        if (m)
          for (var _ = d.childrenRef(), y = 0; y < _.length; y++)
            h = Math.max(l(_[y], p, f, h), h);
        else
          d.z = p, d.zlevel = f, h = Math.max(d.z2, h);
        if (g && (g.z = p, g.zlevel = f, isFinite(h) && (g.z2 = h + 2)), v) {
          var b = d.textGuideLineConfig;
          v.z = p, v.zlevel = f, isFinite(h) && (v.z2 = h + (b && b.showAbove ? 1 : -1));
        }
        return h;
      }
      function u(d, p) {
        p.eachRendered(function(f) {
          if (!ss(f)) {
            var h = f.getTextContent(), g = f.getTextGuideLine();
            f.stateTransition && (f.stateTransition = null), h && h.stateTransition && (h.stateTransition = null), g && g.stateTransition && (g.stateTransition = null), f.hasState() ? (f.prevStates = f.currentStates, f.clearStates()) : f.prevStates && (f.prevStates = null);
          }
        });
      }
      function c(d, p) {
        var f = d.getModel("stateAnimation"), h = d.isAnimationEnabled(), g = f.get("duration"), v = g > 0 ? {
          duration: g,
          delay: f.get("delay"),
          easing: f.get("easing")
          // additive: stateAnimationModel.get('additive')
        } : null;
        p.eachRendered(function(m) {
          if (m.states && m.states.emphasis) {
            if (ss(m))
              return;
            if (m instanceof Ce && TG(m), m.__dirty) {
              var _ = m.prevStates;
              _ && m.useStates(_);
            }
            if (h) {
              m.stateTransition = v;
              var y = m.getTextContent(), b = m.getTextGuideLine();
              y && (y.stateTransition = v), b && (b.stateTransition = v);
            }
            m.__dirty && a(m);
          }
        });
      }
      tT = function(d) {
        return new /** @class */
        (function(p) {
          k(f, p);
          function f() {
            return p !== null && p.apply(this, arguments) || this;
          }
          return f.prototype.getCoordinateSystems = function() {
            return d._coordSysMgr.getCoordinateSystems();
          }, f.prototype.getComponentByElement = function(h) {
            for (; h; ) {
              var g = h.__ecComponentInfo;
              if (g != null)
                return d._model.getComponent(g.mainType, g.index);
              h = h.parent;
            }
          }, f.prototype.enterEmphasis = function(h, g) {
            na(h, g), Tr(d);
          }, f.prototype.leaveEmphasis = function(h, g) {
            aa(h, g), Tr(d);
          }, f.prototype.enterBlur = function(h) {
            DD(h), Tr(d);
          }, f.prototype.leaveBlur = function(h) {
            iy(h), Tr(d);
          }, f.prototype.enterSelect = function(h) {
            MD(h), Tr(d);
          }, f.prototype.leaveSelect = function(h) {
            ID(h), Tr(d);
          }, f.prototype.getModel = function() {
            return d.getModel();
          }, f.prototype.getViewOfComponentModel = function(h) {
            return d.getViewOfComponentModel(h);
          }, f.prototype.getViewOfSeriesModel = function(h) {
            return d.getViewOfSeriesModel(h);
          }, f;
        }(EM))(d);
      }, mI = function(d) {
        function p(f, h) {
          for (var g = 0; g < f.length; g++) {
            var v = f[g];
            v[rg] = h;
          }
        }
        w(Kl, function(f, h) {
          d._messageCenter.on(h, function(g) {
            if (nT[d.group] && d[rg] !== QE) {
              if (g && g.escapeConnect)
                return;
              var v = d.makeActionFromEvent(g), m = [];
              w(Zl, function(_) {
                _ !== d && _.group === d.group && m.push(_);
              }), p(m, QE), w(m, function(_) {
                _[rg] !== Z6 && _.dispatchAction(v);
              }), p(m, X6);
            }
          });
        });
      };
    }(), e;
  }(Gr)
), Iy = _I.prototype;
Iy.on = pI("on");
Iy.off = pI("off");
Iy.one = function(t, e, r) {
  var n = this;
  function a() {
    for (var i = [], o = 0; o < arguments.length; o++)
      i[o] = arguments[o];
    e && e.apply && e.apply(this, i), n.off(t, a);
  }
  this.on.call(this, t, a, r);
};
var Q6 = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
var yp = {}, Kl = {}, Im = [], Nm = [], bp = [], yI = {}, Rm = {}, Zl = {}, nT = {}, j6 = +/* @__PURE__ */ new Date() - 0, Ny = "_echarts_instance_";
function dre(t, e, r) {
  {
    var n = J6(t);
    if (n)
      return n;
  }
  var a = new _I(t, e, r);
  return a.id = "ec_" + j6++, Zl[a.id] = a, dD(t, Ny, a.id), mI(a), Kr.trigger("afterinit", a), a;
}
function J6(t) {
  return Zl[d3(t, Ny)];
}
function bI(t, e) {
  yI[t] = e;
}
function SI(t) {
  xe(Nm, t) < 0 && Nm.push(t);
}
function EI(t, e) {
  Oy(Im, t, e, z6);
}
function e5(t) {
  Ry("afterinit", t);
}
function t5(t) {
  Ry("afterupdate", t);
}
function Ry(t, e) {
  Kr.on(t, e);
}
function Gn(t, e, r) {
  ae(e) && (r = e, e = "");
  var n = se(t) ? t.type : [t, t = {
    event: e
  }][0];
  t.event = (t.event || n).toLowerCase(), e = t.event, !Kl[e] && (ar(XE.test(n) && XE.test(e)), yp[n] || (yp[n] = {
    action: r,
    actionInfo: t
  }), Kl[e] = n);
}
function r5(t, e) {
  Ku.register(t, e);
}
function n5(t, e) {
  Oy(bp, t, e, uI, "layout");
}
function _o(t, e) {
  Oy(bp, t, e, cI, "visual");
}
var aT = [];
function Oy(t, e, r, n, a) {
  if ((ae(e) || se(e)) && (r = e, e = n), !(xe(aT, r) >= 0)) {
    aT.push(r);
    var i = ZM.wrapStageHandler(r, a);
    i.__prio = e, i.__raw = r, t.push(i);
  }
}
function TI(t, e) {
  Rm[t] = e;
}
function a5(t, e, r) {
  var n = k6("registerMap");
  n && n(t, e, r);
}
var i5 = _z;
_o(My, Hz);
_o(Af, Wz);
_o(Af, qz);
_o(My, i6);
_o(Af, o6);
_o(dI, L6);
SI(xM);
EI(G6, jU);
TI("default", Yz);
Gn({
  type: ji,
  event: ji,
  update: ji
}, dt);
Gn({
  type: Od,
  event: Od,
  update: Od
}, dt);
Gn({
  type: $l,
  event: $l,
  update: $l
}, dt);
Gn({
  type: Ld,
  event: Ld,
  update: Ld
}, dt);
Gn({
  type: Hl,
  event: Hl,
  update: Hl
}, dt);
bI("light", n6);
bI("dark", JM);
var iT = [], o5 = {
  registerPreprocessor: SI,
  registerProcessor: EI,
  registerPostInit: e5,
  registerPostUpdate: t5,
  registerUpdateLifecycle: Ry,
  registerAction: Gn,
  registerCoordinateSystem: r5,
  registerLayout: n5,
  registerVisual: _o,
  registerTransform: i5,
  registerLoading: TI,
  registerMap: a5,
  registerImpl: P6,
  PRIORITY: K6,
  ComponentModel: De,
  ComponentView: st,
  SeriesModel: et,
  ChartView: Ke,
  // TODO Use ComponentModel and SeriesModel instead of Constructor
  registerComponentModel: function(t) {
    De.registerClass(t);
  },
  registerComponentView: function(t) {
    st.registerClass(t);
  },
  registerSeriesModel: function(t) {
    et.registerClass(t);
  },
  registerChartView: function(t) {
    Ke.registerClass(t);
  },
  registerSubTypeDefaulter: function(t, e) {
    De.registerSubTypeDefaulter(t, e);
  },
  registerPainter: function(t, e) {
    VF(t, e);
  }
};
function kt(t) {
  if (V(t)) {
    w(t, function(e) {
      kt(e);
    });
    return;
  }
  xe(iT, t) >= 0 || (iT.push(t), ae(t) && (t = {
    install: t
  }), t.install(o5));
}
function al(t) {
  return t == null ? 0 : t.length || 1;
}
function oT(t) {
  return t;
}
var ia = (
  /** @class */
  function() {
    function t(e, r, n, a, i, o) {
      this._old = e, this._new = r, this._oldKeyGetter = n || oT, this._newKeyGetter = a || oT, this.context = i, this._diffModeMultiple = o === "multiple";
    }
    return t.prototype.add = function(e) {
      return this._add = e, this;
    }, t.prototype.update = function(e) {
      return this._update = e, this;
    }, t.prototype.updateManyToOne = function(e) {
      return this._updateManyToOne = e, this;
    }, t.prototype.updateOneToMany = function(e) {
      return this._updateOneToMany = e, this;
    }, t.prototype.updateManyToMany = function(e) {
      return this._updateManyToMany = e, this;
    }, t.prototype.remove = function(e) {
      return this._remove = e, this;
    }, t.prototype.execute = function() {
      this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
    }, t.prototype._executeOneToOne = function() {
      var e = this._old, r = this._new, n = {}, a = new Array(e.length), i = new Array(r.length);
      this._initIndexMap(e, null, a, "_oldKeyGetter"), this._initIndexMap(r, n, i, "_newKeyGetter");
      for (var o = 0; o < e.length; o++) {
        var s = a[o], l = n[s], u = al(l);
        if (u > 1) {
          var c = l.shift();
          l.length === 1 && (n[s] = l[0]), this._update && this._update(c, o);
        } else u === 1 ? (n[s] = null, this._update && this._update(l, o)) : this._remove && this._remove(o);
      }
      this._performRestAdd(i, n);
    }, t.prototype._executeMultiple = function() {
      var e = this._old, r = this._new, n = {}, a = {}, i = [], o = [];
      this._initIndexMap(e, n, i, "_oldKeyGetter"), this._initIndexMap(r, a, o, "_newKeyGetter");
      for (var s = 0; s < i.length; s++) {
        var l = i[s], u = n[l], c = a[l], d = al(u), p = al(c);
        if (d > 1 && p === 1)
          this._updateManyToOne && this._updateManyToOne(c, u), a[l] = null;
        else if (d === 1 && p > 1)
          this._updateOneToMany && this._updateOneToMany(c, u), a[l] = null;
        else if (d === 1 && p === 1)
          this._update && this._update(c, u), a[l] = null;
        else if (d > 1 && p > 1)
          this._updateManyToMany && this._updateManyToMany(c, u), a[l] = null;
        else if (d > 1)
          for (var f = 0; f < d; f++)
            this._remove && this._remove(u[f]);
        else
          this._remove && this._remove(u);
      }
      this._performRestAdd(o, a);
    }, t.prototype._performRestAdd = function(e, r) {
      for (var n = 0; n < e.length; n++) {
        var a = e[n], i = r[a], o = al(i);
        if (o > 1)
          for (var s = 0; s < o; s++)
            this._add && this._add(i[s]);
        else o === 1 && this._add && this._add(i);
        r[a] = null;
      }
    }, t.prototype._initIndexMap = function(e, r, n, a) {
      for (var i = this._diffModeMultiple, o = 0; o < e.length; o++) {
        var s = "_ec_" + this[a](e[o], o);
        if (i || (n[o] = s), !!r) {
          var l = r[s], u = al(l);
          u === 0 ? (r[s] = o, i && n.push(s)) : u === 1 ? r[s] = [l, o] : l.push(o);
        }
      }
    }, t;
  }()
), s5 = (
  /** @class */
  function() {
    function t(e, r) {
      this._encode = e, this._schema = r;
    }
    return t.prototype.get = function() {
      return {
        // Do not generate full dimension name until fist used.
        fullDimensions: this._getFullDimensionNames(),
        encode: this._encode
      };
    }, t.prototype._getFullDimensionNames = function() {
      return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
    }, t;
  }()
);
function l5(t, e) {
  var r = {}, n = r.encode = {}, a = J(), i = [], o = [], s = {};
  w(t.dimensions, function(p) {
    var f = t.getDimensionInfo(p), h = f.coordDim;
    if (h) {
      var g = f.coordDimIndex;
      lg(n, h)[g] = p, f.isExtraCoord || (a.set(h, 1), u5(f.type) && (i[0] = p), lg(s, h)[g] = t.getDimensionIndex(f.name)), f.defaultTooltip && o.push(p);
    }
    gM.each(function(v, m) {
      var _ = lg(n, m), y = f.otherDims[m];
      y != null && y !== !1 && (_[y] = f.name);
    });
  });
  var l = [], u = {};
  a.each(function(p, f) {
    var h = n[f];
    u[f] = h[0], l = l.concat(h);
  }), r.dataDimsOnCoord = l, r.dataDimIndicesOnCoord = $(l, function(p) {
    return t.getDimensionInfo(p).storeDimIndex;
  }), r.encodeFirstDimNotExtra = u;
  var c = n.label;
  c && c.length && (i = c.slice());
  var d = n.tooltip;
  return d && d.length ? o = d.slice() : o.length || (o = i.slice()), n.defaultedLabel = i, n.defaultedTooltip = o, r.userOutput = new s5(s, e), r;
}
function lg(t, e) {
  return t.hasOwnProperty(e) || (t[e] = []), t[e];
}
function Sp(t) {
  return t === "category" ? "ordinal" : t === "time" ? "time" : "float";
}
function u5(t) {
  return !(t === "ordinal" || t === "time");
}
var Gd = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e) {
      this.otherDims = {}, e != null && G(this, e);
    }
    return t;
  }()
), c5 = Oe(), d5 = {
  float: "f",
  int: "i",
  ordinal: "o",
  number: "n",
  time: "t"
}, xI = (
  /** @class */
  function() {
    function t(e) {
      this.dimensions = e.dimensions, this._dimOmitted = e.dimensionOmitted, this.source = e.source, this._fullDimCount = e.fullDimensionCount, this._updateDimOmitted(e.dimensionOmitted);
    }
    return t.prototype.isDimensionOmitted = function() {
      return this._dimOmitted;
    }, t.prototype._updateDimOmitted = function(e) {
      this._dimOmitted = e, e && (this._dimNameMap || (this._dimNameMap = wI(this.source)));
    }, t.prototype.getSourceDimensionIndex = function(e) {
      return ge(this._dimNameMap.get(e), -1);
    }, t.prototype.getSourceDimension = function(e) {
      var r = this.source.dimensionsDefine;
      if (r)
        return r[e];
    }, t.prototype.makeStoreSchema = function() {
      for (var e = this._fullDimCount, r = AM(this.source), n = !DI(e), a = "", i = [], o = 0, s = 0; o < e; o++) {
        var l = void 0, u = void 0, c = void 0, d = this.dimensions[s];
        if (d && d.storeDimIndex === o)
          l = r ? d.name : null, u = d.type, c = d.ordinalMeta, s++;
        else {
          var p = this.getSourceDimension(o);
          p && (l = r ? p.name : null, u = p.type);
        }
        i.push({
          property: l,
          type: u,
          ordinalMeta: c
        }), r && l != null && (!d || !d.isCalculationCoord) && (a += n ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), a += "$", a += d5[u] || "f", c && (a += c.uid), a += "$";
      }
      var f = this.source, h = [f.seriesLayoutBy, f.startIndex, a].join("$$");
      return {
        dimensions: i,
        hash: h
      };
    }, t.prototype.makeOutputDimensionNames = function() {
      for (var e = [], r = 0, n = 0; r < this._fullDimCount; r++) {
        var a = void 0, i = this.dimensions[n];
        if (i && i.storeDimIndex === r)
          i.isCalculationCoord || (a = i.name), n++;
        else {
          var o = this.getSourceDimension(r);
          o && (a = o.name);
        }
        e.push(a);
      }
      return e;
    }, t.prototype.appendCalculationDimension = function(e) {
      this.dimensions.push(e), e.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
    }, t;
  }()
);
function CI(t) {
  return t instanceof xI;
}
function AI(t) {
  for (var e = J(), r = 0; r < (t || []).length; r++) {
    var n = t[r], a = se(n) ? n.name : n;
    a != null && e.get(a) == null && e.set(a, r);
  }
  return e;
}
function wI(t) {
  var e = c5(t);
  return e.dimNameMap || (e.dimNameMap = AI(t.dimensionsDefine));
}
function DI(t) {
  return t > 30;
}
var il = se, ya = $, p5 = typeof Int32Array > "u" ? Array : Int32Array, f5 = "e\0\0", sT = -1, h5 = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"], g5 = ["_approximateExtent"], lT, Vc, ol, sl, ug, ll, cg, rr = (
  /** @class */
  function() {
    function t(e, r) {
      this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "minmaxDownSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "minmaxDownSample", "lttbDownSample"];
      var n, a = !1;
      CI(e) ? (n = e.dimensions, this._dimOmitted = e.isDimensionOmitted(), this._schema = e) : (a = !0, n = e), n = n || ["x", "y"];
      for (var i = {}, o = [], s = {}, l = !1, u = {}, c = 0; c < n.length; c++) {
        var d = n[c], p = Y(d) ? new Gd({
          name: d
        }) : d instanceof Gd ? d : new Gd(d), f = p.name;
        p.type = p.type || "float", p.coordDim || (p.coordDim = f, p.coordDimIndex = 0);
        var h = p.otherDims = p.otherDims || {};
        o.push(f), i[f] = p, u[f] != null && (l = !0), p.createInvertedIndices && (s[f] = []), h.itemName === 0 && (this._nameDimIdx = c), h.itemId === 0 && (this._idDimIdx = c), a && (p.storeDimIndex = c);
      }
      if (this.dimensions = o, this._dimInfos = i, this._initGetDimensionInfo(l), this.hostModel = r, this._invertedIndicesMap = s, this._dimOmitted) {
        var g = this._dimIdxToName = J();
        w(o, function(v) {
          g.set(i[v].storeDimIndex, v);
        });
      }
    }
    return t.prototype.getDimension = function(e) {
      var r = this._recognizeDimIndex(e);
      if (r == null)
        return e;
      if (r = e, !this._dimOmitted)
        return this.dimensions[r];
      var n = this._dimIdxToName.get(r);
      if (n != null)
        return n;
      var a = this._schema.getSourceDimension(r);
      if (a)
        return a.name;
    }, t.prototype.getDimensionIndex = function(e) {
      var r = this._recognizeDimIndex(e);
      if (r != null)
        return r;
      if (e == null)
        return -1;
      var n = this._getDimInfo(e);
      return n ? n.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(e) : -1;
    }, t.prototype._recognizeDimIndex = function(e) {
      if (ke(e) || e != null && !isNaN(e) && !this._getDimInfo(e) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(e) < 0))
        return +e;
    }, t.prototype._getStoreDimIndex = function(e) {
      var r = this.getDimensionIndex(e);
      return r;
    }, t.prototype.getDimensionInfo = function(e) {
      return this._getDimInfo(this.getDimension(e));
    }, t.prototype._initGetDimensionInfo = function(e) {
      var r = this._dimInfos;
      this._getDimInfo = e ? function(n) {
        return r.hasOwnProperty(n) ? r[n] : void 0;
      } : function(n) {
        return r[n];
      };
    }, t.prototype.getDimensionsOnCoord = function() {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, t.prototype.mapDimension = function(e, r) {
      var n = this._dimSummary;
      if (r == null)
        return n.encodeFirstDimNotExtra[e];
      var a = n.encode[e];
      return a ? a[r] : null;
    }, t.prototype.mapDimensionsAll = function(e) {
      var r = this._dimSummary, n = r.encode[e];
      return (n || []).slice();
    }, t.prototype.getStore = function() {
      return this._store;
    }, t.prototype.initData = function(e, r, n) {
      var a = this, i;
      if (e instanceof Tm && (i = e), !i) {
        var o = this.dimensions, s = Ey(e) || Kt(e) ? new wM(e, o.length) : e;
        i = new Tm();
        var l = ya(o, function(u) {
          return {
            type: a._dimInfos[u].type,
            property: u
          };
        });
        i.initData(s, l, n);
      }
      this._store = i, this._nameList = (r || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = l5(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, t.prototype.appendData = function(e) {
      var r = this._store.appendData(e);
      this._doInit(r[0], r[1]);
    }, t.prototype.appendValues = function(e, r) {
      var n = this._store.appendValues(e, r && r.length), a = n.start, i = n.end, o = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), r)
        for (var s = a; s < i; s++) {
          var l = s - a;
          this._nameList[s] = r[l], o && cg(this, s);
        }
    }, t.prototype._updateOrdinalMeta = function() {
      for (var e = this._store, r = this.dimensions, n = 0; n < r.length; n++) {
        var a = this._dimInfos[r[n]];
        a.ordinalMeta && e.collectOrdinalMeta(a.storeDimIndex, a.ordinalMeta);
      }
    }, t.prototype._shouldMakeIdFromName = function() {
      var e = this._store.getProvider();
      return this._idDimIdx == null && e.getSource().sourceFormat !== Va && !e.fillStorage;
    }, t.prototype._doInit = function(e, r) {
      if (!(e >= r)) {
        var n = this._store, a = n.getProvider();
        this._updateOrdinalMeta();
        var i = this._nameList, o = this._idList, s = a.getSource().sourceFormat, l = s === Ur;
        if (l && !a.pure)
          for (var u = [], c = e; c < r; c++) {
            var d = a.getItem(c, u);
            if (!this.hasItemOption && jF(d) && (this.hasItemOption = !0), d) {
              var p = d.name;
              i[c] == null && p != null && (i[c] = St(p, null));
              var f = d.id;
              o[c] == null && f != null && (o[c] = St(f, null));
            }
          }
        if (this._shouldMakeIdFromName())
          for (var c = e; c < r; c++)
            cg(this, c);
        lT(this);
      }
    }, t.prototype.getApproximateExtent = function(e) {
      return this._approximateExtent[e] || this._store.getDataExtent(this._getStoreDimIndex(e));
    }, t.prototype.setApproximateExtent = function(e, r) {
      r = this.getDimension(r), this._approximateExtent[r] = e.slice();
    }, t.prototype.getCalculationInfo = function(e) {
      return this._calculationInfo[e];
    }, t.prototype.setCalculationInfo = function(e, r) {
      il(e) ? G(this._calculationInfo, e) : this._calculationInfo[e] = r;
    }, t.prototype.getName = function(e) {
      var r = this.getRawIndex(e), n = this._nameList[r];
      return n == null && this._nameDimIdx != null && (n = ol(this, this._nameDimIdx, r)), n == null && (n = ""), n;
    }, t.prototype._getCategory = function(e, r) {
      var n = this._store.get(e, r), a = this._store.getOrdinalMeta(e);
      return a ? a.categories[n] : n;
    }, t.prototype.getId = function(e) {
      return Vc(this, this.getRawIndex(e));
    }, t.prototype.count = function() {
      return this._store.count();
    }, t.prototype.get = function(e, r) {
      var n = this._store, a = this._dimInfos[e];
      if (a)
        return n.get(a.storeDimIndex, r);
    }, t.prototype.getByRawIndex = function(e, r) {
      var n = this._store, a = this._dimInfos[e];
      if (a)
        return n.getByRawIndex(a.storeDimIndex, r);
    }, t.prototype.getIndices = function() {
      return this._store.getIndices();
    }, t.prototype.getDataExtent = function(e) {
      return this._store.getDataExtent(this._getStoreDimIndex(e));
    }, t.prototype.getSum = function(e) {
      return this._store.getSum(this._getStoreDimIndex(e));
    }, t.prototype.getMedian = function(e) {
      return this._store.getMedian(this._getStoreDimIndex(e));
    }, t.prototype.getValues = function(e, r) {
      var n = this, a = this._store;
      return V(e) ? a.getValues(ya(e, function(i) {
        return n._getStoreDimIndex(i);
      }), r) : a.getValues(e);
    }, t.prototype.hasValue = function(e) {
      for (var r = this._dimSummary.dataDimIndicesOnCoord, n = 0, a = r.length; n < a; n++)
        if (isNaN(this._store.get(r[n], e)))
          return !1;
      return !0;
    }, t.prototype.indexOfName = function(e) {
      for (var r = 0, n = this._store.count(); r < n; r++)
        if (this.getName(r) === e)
          return r;
      return -1;
    }, t.prototype.getRawIndex = function(e) {
      return this._store.getRawIndex(e);
    }, t.prototype.indexOfRawIndex = function(e) {
      return this._store.indexOfRawIndex(e);
    }, t.prototype.rawIndexOf = function(e, r) {
      var n = e && this._invertedIndicesMap[e], a = n && n[r];
      return a == null || isNaN(a) ? sT : a;
    }, t.prototype.indicesOfNearest = function(e, r, n) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(e), r, n);
    }, t.prototype.each = function(e, r, n) {
      ae(e) && (n = r, r = e, e = []);
      var a = n || this, i = ya(sl(e), this._getStoreDimIndex, this);
      this._store.each(i, a ? K(r, a) : r);
    }, t.prototype.filterSelf = function(e, r, n) {
      ae(e) && (n = r, r = e, e = []);
      var a = n || this, i = ya(sl(e), this._getStoreDimIndex, this);
      return this._store = this._store.filter(i, a ? K(r, a) : r), this;
    }, t.prototype.selectRange = function(e) {
      var r = this, n = {}, a = Me(e);
      return w(a, function(i) {
        var o = r._getStoreDimIndex(i);
        n[o] = e[i];
      }), this._store = this._store.selectRange(n), this;
    }, t.prototype.mapArray = function(e, r, n) {
      ae(e) && (n = r, r = e, e = []), n = n || this;
      var a = [];
      return this.each(e, function() {
        a.push(r && r.apply(this, arguments));
      }, n), a;
    }, t.prototype.map = function(e, r, n, a) {
      var i = n || a || this, o = ya(sl(e), this._getStoreDimIndex, this), s = ll(this);
      return s._store = this._store.map(o, i ? K(r, i) : r), s;
    }, t.prototype.modify = function(e, r, n, a) {
      var i = n || a || this, o = ya(sl(e), this._getStoreDimIndex, this);
      this._store.modify(o, i ? K(r, i) : r);
    }, t.prototype.downSample = function(e, r, n, a) {
      var i = ll(this);
      return i._store = this._store.downSample(this._getStoreDimIndex(e), r, n, a), i;
    }, t.prototype.minmaxDownSample = function(e, r) {
      var n = ll(this);
      return n._store = this._store.minmaxDownSample(this._getStoreDimIndex(e), r), n;
    }, t.prototype.lttbDownSample = function(e, r) {
      var n = ll(this);
      return n._store = this._store.lttbDownSample(this._getStoreDimIndex(e), r), n;
    }, t.prototype.getRawDataItem = function(e) {
      return this._store.getRawDataItem(e);
    }, t.prototype.getItemModel = function(e) {
      var r = this.hostModel, n = this.getRawDataItem(e);
      return new He(n, r, r && r.ecModel);
    }, t.prototype.diff = function(e) {
      var r = this;
      return new ia(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function(n) {
        return Vc(e, n);
      }, function(n) {
        return Vc(r, n);
      });
    }, t.prototype.getVisual = function(e) {
      var r = this._visual;
      return r && r[e];
    }, t.prototype.setVisual = function(e, r) {
      this._visual = this._visual || {}, il(e) ? G(this._visual, e) : this._visual[e] = r;
    }, t.prototype.getItemVisual = function(e, r) {
      var n = this._itemVisuals[e], a = n && n[r];
      return a ?? this.getVisual(r);
    }, t.prototype.hasItemVisual = function() {
      return this._itemVisuals.length > 0;
    }, t.prototype.ensureUniqueItemVisual = function(e, r) {
      var n = this._itemVisuals, a = n[e];
      a || (a = n[e] = {});
      var i = a[r];
      return i == null && (i = this.getVisual(r), V(i) ? i = i.slice() : il(i) && (i = G({}, i)), a[r] = i), i;
    }, t.prototype.setItemVisual = function(e, r, n) {
      var a = this._itemVisuals[e] || {};
      this._itemVisuals[e] = a, il(r) ? G(a, r) : a[r] = n;
    }, t.prototype.clearAllVisual = function() {
      this._visual = {}, this._itemVisuals = [];
    }, t.prototype.setLayout = function(e, r) {
      il(e) ? G(this._layout, e) : this._layout[e] = r;
    }, t.prototype.getLayout = function(e) {
      return this._layout[e];
    }, t.prototype.getItemLayout = function(e) {
      return this._itemLayouts[e];
    }, t.prototype.setItemLayout = function(e, r, n) {
      this._itemLayouts[e] = n ? G(this._itemLayouts[e] || {}, r) : r;
    }, t.prototype.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }, t.prototype.setItemGraphicEl = function(e, r) {
      var n = this.hostModel && this.hostModel.seriesIndex;
      cm(n, this.dataType, e, r), this._graphicEls[e] = r;
    }, t.prototype.getItemGraphicEl = function(e) {
      return this._graphicEls[e];
    }, t.prototype.eachItemGraphicEl = function(e, r) {
      w(this._graphicEls, function(n, a) {
        n && e && e.call(r, n, a);
      });
    }, t.prototype.cloneShallow = function(e) {
      return e || (e = new t(this._schema ? this._schema : ya(this.dimensions, this._getDimInfo, this), this.hostModel)), ug(e, this), e._store = this._store, e;
    }, t.prototype.wrapMethod = function(e, r) {
      var n = this[e];
      ae(n) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(e), this[e] = function() {
        var a = n.apply(this, arguments);
        return r.apply(this, [a].concat(V_(arguments)));
      });
    }, t.internalField = function() {
      lT = function(e) {
        var r = e._invertedIndicesMap;
        w(r, function(n, a) {
          var i = e._dimInfos[a], o = i.ordinalMeta, s = e._store;
          if (o) {
            n = r[a] = new p5(o.categories.length);
            for (var l = 0; l < n.length; l++)
              n[l] = sT;
            for (var l = 0; l < s.count(); l++)
              n[s.get(i.storeDimIndex, l)] = l;
          }
        });
      }, ol = function(e, r, n) {
        return St(e._getCategory(r, n), null);
      }, Vc = function(e, r) {
        var n = e._idList[r];
        return n == null && e._idDimIdx != null && (n = ol(e, e._idDimIdx, r)), n == null && (n = f5 + r), n;
      }, sl = function(e) {
        return V(e) || (e = e != null ? [e] : []), e;
      }, ll = function(e) {
        var r = new t(e._schema ? e._schema : ya(e.dimensions, e._getDimInfo, e), e.hostModel);
        return ug(r, e), r;
      }, ug = function(e, r) {
        w(h5.concat(r.__wrappedMethods || []), function(n) {
          r.hasOwnProperty(n) && (e[n] = r[n]);
        }), e.__wrappedMethods = r.__wrappedMethods, w(g5, function(n) {
          e[n] = le(r[n]);
        }), e._calculationInfo = G({}, r._calculationInfo);
      }, cg = function(e, r) {
        var n = e._nameList, a = e._idList, i = e._nameDimIdx, o = e._idDimIdx, s = n[r], l = a[r];
        if (s == null && i != null && (n[r] = s = ol(e, i, r)), l == null && o != null && (a[r] = l = ol(e, o, r)), l == null && s != null) {
          var u = e._nameRepeatCount, c = u[s] = (u[s] || 0) + 1;
          l = s, c > 1 && (l += "__ec__" + c), a[r] = l;
        }
      };
    }(), t;
  }()
);
function Xu(t, e) {
  Ey(t) || (t = Ty(t)), e = e || {};
  var r = e.coordDimensions || [], n = e.dimensionsDefine || t.dimensionsDefine || [], a = J(), i = [], o = m5(t, r, n, e.dimensionsCount), s = e.canOmitUnusedDimensions && DI(o), l = n === t.dimensionsDefine, u = l ? wI(t) : AI(n), c = e.encodeDefine;
  !c && e.encodeDefaulter && (c = e.encodeDefaulter(t, o));
  for (var d = J(c), p = new PM(o), f = 0; f < p.length; f++)
    p[f] = -1;
  function h(C) {
    var A = p[C];
    if (A < 0) {
      var D = n[C], M = se(D) ? D : {
        name: D
      }, I = new Gd(), N = M.name;
      N != null && u.get(N) != null && (I.name = I.displayName = N), M.type != null && (I.type = M.type), M.displayName != null && (I.displayName = M.displayName);
      var R = i.length;
      return p[C] = R, I.storeDimIndex = C, i.push(I), I;
    }
    return i[A];
  }
  if (!s)
    for (var f = 0; f < o; f++)
      h(f);
  d.each(function(C, A) {
    var D = Ye(C).slice();
    if (D.length === 1 && !Y(D[0]) && D[0] < 0) {
      d.set(A, !1);
      return;
    }
    var M = d.set(A, []);
    w(D, function(I, N) {
      var R = Y(I) ? u.get(I) : I;
      R != null && R < o && (M[N] = R, v(h(R), A, N));
    });
  });
  var g = 0;
  w(r, function(C) {
    var A, D, M, I;
    if (Y(C))
      A = C, I = {};
    else {
      I = C, A = I.name;
      var N = I.ordinalMeta;
      I.ordinalMeta = null, I = G({}, I), I.ordinalMeta = N, D = I.dimsDef, M = I.otherDims, I.name = I.coordDim = I.coordDimIndex = I.dimsDef = I.otherDims = null;
    }
    var R = d.get(A);
    if (R !== !1) {
      if (R = Ye(R), !R.length)
        for (var O = 0; O < (D && D.length || 1); O++) {
          for (; g < o && h(g).coordDim != null; )
            g++;
          g < o && R.push(g++);
        }
      w(R, function(B, L) {
        var F = h(B);
        if (l && I.type != null && (F.type = I.type), v(ie(F, I), A, L), F.name == null && D) {
          var U = D[L];
          !se(U) && (U = {
            name: U
          }), F.name = F.displayName = U.name, F.defaultTooltip = U.defaultTooltip;
        }
        M && ie(F.otherDims, M);
      });
    }
  });
  function v(C, A, D) {
    gM.get(A) != null ? C.otherDims[A] = D : (C.coordDim = A, C.coordDimIndex = D, a.set(A, !0));
  }
  var m = e.generateCoord, _ = e.generateCoordCount, y = _ != null;
  _ = m ? _ || 1 : 0;
  var b = m || "value";
  function S(C) {
    C.name == null && (C.name = C.coordDim);
  }
  if (s)
    w(i, function(C) {
      S(C);
    }), i.sort(function(C, A) {
      return C.storeDimIndex - A.storeDimIndex;
    });
  else
    for (var E = 0; E < o; E++) {
      var T = h(E), x = T.coordDim;
      x == null && (T.coordDim = _5(b, a, y), T.coordDimIndex = 0, (!m || _ <= 0) && (T.isExtraCoord = !0), _--), S(T), T.type == null && (yM(t, E) === Gt.Must || T.isExtraCoord && (T.otherDims.itemName != null || T.otherDims.seriesName != null)) && (T.type = "ordinal");
    }
  return v5(i), new xI({
    source: t,
    dimensions: i,
    fullDimensionCount: o,
    dimensionOmitted: s
  });
}
function v5(t) {
  for (var e = J(), r = 0; r < t.length; r++) {
    var n = t[r], a = n.name, i = e.get(a) || 0;
    i > 0 && (n.name = a + (i - 1)), i++, e.set(a, i);
  }
}
function m5(t, e, r, n) {
  var a = Math.max(t.dimensionsDetectedCount || 1, e.length, r.length, n || 0);
  return w(e, function(i) {
    var o;
    se(i) && (o = i.dimsDef) && (a = Math.max(a, o.length));
  }), a;
}
function _5(t, e, r) {
  if (r || e.hasKey(t)) {
    for (var n = 0; e.hasKey(t + n); )
      n++;
    t += n;
  }
  return e.set(t, !0), t;
}
var y5 = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e) {
      this.coordSysDims = [], this.axisMap = J(), this.categoryAxisMap = J(), this.coordSysName = e;
    }
    return t;
  }()
);
function b5(t) {
  var e = t.get("coordinateSystem"), r = new y5(e), n = S5[e];
  if (n)
    return n(t, r, r.axisMap, r.categoryAxisMap), r;
}
var S5 = {
  cartesian2d: function(t, e, r, n) {
    var a = t.getReferringComponents("xAxis", vt).models[0], i = t.getReferringComponents("yAxis", vt).models[0];
    e.coordSysDims = ["x", "y"], r.set("x", a), r.set("y", i), Fo(a) && (n.set("x", a), e.firstCategoryDimIndex = 0), Fo(i) && (n.set("y", i), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  singleAxis: function(t, e, r, n) {
    var a = t.getReferringComponents("singleAxis", vt).models[0];
    e.coordSysDims = ["single"], r.set("single", a), Fo(a) && (n.set("single", a), e.firstCategoryDimIndex = 0);
  },
  polar: function(t, e, r, n) {
    var a = t.getReferringComponents("polar", vt).models[0], i = a.findAxisModel("radiusAxis"), o = a.findAxisModel("angleAxis");
    e.coordSysDims = ["radius", "angle"], r.set("radius", i), r.set("angle", o), Fo(i) && (n.set("radius", i), e.firstCategoryDimIndex = 0), Fo(o) && (n.set("angle", o), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  geo: function(t, e, r, n) {
    e.coordSysDims = ["lng", "lat"];
  },
  parallel: function(t, e, r, n) {
    var a = t.ecModel, i = a.getComponent("parallel", t.get("parallelIndex")), o = e.coordSysDims = i.dimensions.slice();
    w(i.parallelAxisIndex, function(s, l) {
      var u = a.getComponent("parallelAxis", s), c = o[l];
      r.set(c, u), Fo(u) && (n.set(c, u), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = l));
    });
  }
};
function Fo(t) {
  return t.get("type") === "category";
}
function E5(t, e, r) {
  r = r || {};
  var n = r.byIndex, a = r.stackedCoordDimension, i, o, s;
  T5(e) ? i = e : (o = e.schema, i = o.dimensions, s = e.store);
  var l = !!(t && t.get("stack")), u, c, d, p;
  if (w(i, function(_, y) {
    Y(_) && (i[y] = _ = {
      name: _
    }), l && !_.isExtraCoord && (!n && !u && _.ordinalMeta && (u = _), !c && _.type !== "ordinal" && _.type !== "time" && (!a || a === _.coordDim) && (c = _));
  }), c && !n && !u && (n = !0), c) {
    d = "__\0ecstackresult_" + t.id, p = "__\0ecstackedover_" + t.id, u && (u.createInvertedIndices = !0);
    var f = c.coordDim, h = c.type, g = 0;
    w(i, function(_) {
      _.coordDim === f && g++;
    });
    var v = {
      name: d,
      coordDim: f,
      coordDimIndex: g,
      type: h,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length
    }, m = {
      name: p,
      // This dimension contains stack base (generally, 0), so do not set it as
      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
      coordDim: p,
      coordDimIndex: g + 1,
      type: h,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length + 1
    };
    o ? (s && (v.storeDimIndex = s.ensureCalculationDimension(p, h), m.storeDimIndex = s.ensureCalculationDimension(d, h)), o.appendCalculationDimension(v), o.appendCalculationDimension(m)) : (i.push(v), i.push(m));
  }
  return {
    stackedDimension: c && c.name,
    stackedByDimension: u && u.name,
    isStackedByIndex: n,
    stackedOverDimension: p,
    stackResultDimension: d
  };
}
function T5(t) {
  return !CI(t.schema);
}
function Qa(t, e) {
  return !!e && e === t.getCalculationInfo("stackedDimension");
}
function MI(t, e) {
  return Qa(t, e) ? t.getCalculationInfo("stackResultDimension") : e;
}
function x5(t, e) {
  var r = t.get("coordinateSystem"), n = Ku.get(r), a;
  return e && e.coordSysDims && (a = $(e.coordSysDims, function(i) {
    var o = {
      name: i
    }, s = e.axisMap.get(i);
    if (s) {
      var l = s.get("type");
      o.type = Sp(l);
    }
    return o;
  })), a || (a = n && (n.getDimensionsInfo ? n.getDimensionsInfo() : n.dimensions.slice()) || ["x", "y"]), a;
}
function C5(t, e, r) {
  var n, a;
  return r && w(t, function(i, o) {
    var s = i.coordDim, l = r.categoryAxisMap.get(s);
    l && (n == null && (n = o), i.ordinalMeta = l.getOrdinalMeta(), e && (i.createInvertedIndices = !0)), i.otherDims.itemName != null && (a = !0);
  }), !a && n != null && (t[n].otherDims.itemName = 0), n;
}
function da(t, e, r) {
  r = r || {};
  var n = e.getSourceManager(), a, i = !1;
  t ? (i = !0, a = Ty(t)) : (a = n.getSource(), i = a.sourceFormat === Ur);
  var o = b5(e), s = x5(e, o), l = r.useEncodeDefaulter, u = ae(l) ? l : l ? _e(_M, s, e) : null, c = {
    coordDimensions: s,
    generateCoord: r.generateCoord,
    encodeDefine: e.getEncode(),
    encodeDefaulter: u,
    canOmitUnusedDimensions: !i
  }, d = Xu(a, c), p = C5(d.dimensions, r.createInvertedIndices, o), f = i ? null : n.getSharedDataStore(d), h = E5(e, {
    schema: d,
    store: f
  }), g = new rr(d, e);
  g.setCalculationInfo(h);
  var v = p != null && A5(a) ? function(m, _, y, b) {
    return b === p ? y : this.defaultDimValueGetter(m, _, y, b);
  } : null;
  return g.hasItemOption = !1, g.initData(
    // Try to reuse the data store in sourceManager if using dataset.
    i ? a : f,
    null,
    v
  ), g;
}
function A5(t) {
  if (t.sourceFormat === Ur) {
    var e = w5(t.data || []);
    return !V(Is(e));
  }
}
function w5(t) {
  for (var e = 0; e < t.length && t[e] == null; )
    e++;
  return t[e];
}
var Un = (
  /** @class */
  function() {
    function t(e) {
      this._setting = e || {}, this._extent = [1 / 0, -1 / 0];
    }
    return t.prototype.getSetting = function(e) {
      return this._setting[e];
    }, t.prototype.unionExtent = function(e) {
      var r = this._extent;
      e[0] < r[0] && (r[0] = e[0]), e[1] > r[1] && (r[1] = e[1]);
    }, t.prototype.unionExtentFromData = function(e, r) {
      this.unionExtent(e.getApproximateExtent(r));
    }, t.prototype.getExtent = function() {
      return this._extent.slice();
    }, t.prototype.setExtent = function(e, r) {
      var n = this._extent;
      isNaN(e) || (n[0] = e), isNaN(r) || (n[1] = r);
    }, t.prototype.isInExtentRange = function(e) {
      return this._extent[0] <= e && this._extent[1] >= e;
    }, t.prototype.isBlank = function() {
      return this._isBlank;
    }, t.prototype.setBlank = function(e) {
      this._isBlank = e;
    }, t;
  }()
);
of(Un);
var D5 = 0, Om = (
  /** @class */
  function() {
    function t(e) {
      this.categories = e.categories || [], this._needCollect = e.needCollect, this._deduplication = e.deduplication, this.uid = ++D5;
    }
    return t.createByAxisModel = function(e) {
      var r = e.option, n = r.data, a = n && $(n, M5);
      return new t({
        categories: a,
        needCollect: !a,
        // deduplication is default in axis.
        deduplication: r.dedplication !== !1
      });
    }, t.prototype.getOrdinal = function(e) {
      return this._getOrCreateMap().get(e);
    }, t.prototype.parseAndCollect = function(e) {
      var r, n = this._needCollect;
      if (!Y(e) && !n)
        return e;
      if (n && !this._deduplication)
        return r = this.categories.length, this.categories[r] = e, r;
      var a = this._getOrCreateMap();
      return r = a.get(e), r == null && (n ? (r = this.categories.length, this.categories[r] = e, a.set(e, r)) : r = NaN), r;
    }, t.prototype._getOrCreateMap = function() {
      return this._map || (this._map = J(this.categories));
    }, t;
  }()
);
function M5(t) {
  return se(t) && t.value != null ? t.value : t + "";
}
function Lm(t) {
  return t.type === "interval" || t.type === "log";
}
function I5(t, e, r, n) {
  var a = {}, i = t[1] - t[0], o = a.interval = nD(i / e);
  r != null && o < r && (o = a.interval = r), n != null && o > n && (o = a.interval = n);
  var s = a.intervalPrecision = II(o), l = a.niceTickExtent = [ut(Math.ceil(t[0] / o) * o, s), ut(Math.floor(t[1] / o) * o, s)];
  return N5(l, t), a;
}
function dg(t) {
  var e = Math.pow(10, X_(t)), r = t / e;
  return r ? r === 2 ? r = 3 : r === 3 ? r = 5 : r *= 2 : r = 1, ut(r * e);
}
function II(t) {
  return xn(t) + 2;
}
function uT(t, e, r) {
  t[e] = Math.max(Math.min(t[e], r[1]), r[0]);
}
function N5(t, e) {
  !isFinite(t[0]) && (t[0] = e[0]), !isFinite(t[1]) && (t[1] = e[1]), uT(t, 0, e), uT(t, 1, e), t[0] > t[1] && (t[0] = t[1]);
}
function wf(t, e) {
  return t >= e[0] && t <= e[1];
}
function Df(t, e) {
  return e[1] === e[0] ? 0.5 : (t - e[0]) / (e[1] - e[0]);
}
function Mf(t, e) {
  return t * (e[1] - e[0]) + e[0];
}
var If = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      n.type = "ordinal";
      var a = n.getSetting("ordinalMeta");
      return a || (a = new Om({})), V(a) && (a = new Om({
        categories: $(a, function(i) {
          return se(i) ? i.value : i;
        })
      })), n._ordinalMeta = a, n._extent = n.getSetting("extent") || [0, a.categories.length - 1], n;
    }
    return e.prototype.parse = function(r) {
      return r == null ? NaN : Y(r) ? this._ordinalMeta.getOrdinal(r) : Math.round(r);
    }, e.prototype.contain = function(r) {
      return r = this.parse(r), wf(r, this._extent) && this._ordinalMeta.categories[r] != null;
    }, e.prototype.normalize = function(r) {
      return r = this._getTickNumber(this.parse(r)), Df(r, this._extent);
    }, e.prototype.scale = function(r) {
      return r = Math.round(Mf(r, this._extent)), this.getRawOrdinalNumber(r);
    }, e.prototype.getTicks = function() {
      for (var r = [], n = this._extent, a = n[0]; a <= n[1]; )
        r.push({
          value: a
        }), a++;
      return r;
    }, e.prototype.getMinorTicks = function(r) {
    }, e.prototype.setSortInfo = function(r) {
      if (r == null) {
        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
        return;
      }
      for (var n = r.ordinalNumbers, a = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], o = 0, s = this._ordinalMeta.categories.length, l = Math.min(s, n.length); o < l; ++o) {
        var u = n[o];
        a[o] = u, i[u] = o;
      }
      for (var c = 0; o < s; ++o) {
        for (; i[c] != null; )
          c++;
        a.push(c), i[c] = o;
      }
    }, e.prototype._getTickNumber = function(r) {
      var n = this._ticksByOrdinalNumber;
      return n && r >= 0 && r < n.length ? n[r] : r;
    }, e.prototype.getRawOrdinalNumber = function(r) {
      var n = this._ordinalNumbersByTick;
      return n && r >= 0 && r < n.length ? n[r] : r;
    }, e.prototype.getLabel = function(r) {
      if (!this.isBlank()) {
        var n = this.getRawOrdinalNumber(r.value), a = this._ordinalMeta.categories[n];
        return a == null ? "" : a + "";
      }
    }, e.prototype.count = function() {
      return this._extent[1] - this._extent[0] + 1;
    }, e.prototype.unionExtentFromData = function(r, n) {
      this.unionExtent(r.getApproximateExtent(n));
    }, e.prototype.isInExtentRange = function(r) {
      return r = this._getTickNumber(r), this._extent[0] <= r && this._extent[1] >= r;
    }, e.prototype.getOrdinalMeta = function() {
      return this._ordinalMeta;
    }, e.prototype.calcNiceTicks = function() {
    }, e.prototype.calcNiceExtent = function() {
    }, e.type = "ordinal", e;
  }(Un)
);
Un.registerClass(If);
var xi = ut, oa = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "interval", r._interval = 0, r._intervalPrecision = 2, r;
    }
    return e.prototype.parse = function(r) {
      return r;
    }, e.prototype.contain = function(r) {
      return wf(r, this._extent);
    }, e.prototype.normalize = function(r) {
      return Df(r, this._extent);
    }, e.prototype.scale = function(r) {
      return Mf(r, this._extent);
    }, e.prototype.setExtent = function(r, n) {
      var a = this._extent;
      isNaN(r) || (a[0] = parseFloat(r)), isNaN(n) || (a[1] = parseFloat(n));
    }, e.prototype.unionExtent = function(r) {
      var n = this._extent;
      r[0] < n[0] && (n[0] = r[0]), r[1] > n[1] && (n[1] = r[1]), this.setExtent(n[0], n[1]);
    }, e.prototype.getInterval = function() {
      return this._interval;
    }, e.prototype.setInterval = function(r) {
      this._interval = r, this._niceExtent = this._extent.slice(), this._intervalPrecision = II(r);
    }, e.prototype.getTicks = function(r) {
      var n = this._interval, a = this._extent, i = this._niceExtent, o = this._intervalPrecision, s = [];
      if (!n)
        return s;
      var l = 1e4;
      a[0] < i[0] && (r ? s.push({
        value: xi(i[0] - n, o)
      }) : s.push({
        value: a[0]
      }));
      for (var u = i[0]; u <= i[1] && (s.push({
        value: u
      }), u = xi(u + n, o), u !== s[s.length - 1].value); )
        if (s.length > l)
          return [];
      var c = s.length ? s[s.length - 1].value : i[1];
      return a[1] > c && (r ? s.push({
        value: xi(c + n, o)
      }) : s.push({
        value: a[1]
      })), s;
    }, e.prototype.getMinorTicks = function(r) {
      for (var n = this.getTicks(!0), a = [], i = this.getExtent(), o = 1; o < n.length; o++) {
        for (var s = n[o], l = n[o - 1], u = 0, c = [], d = s.value - l.value, p = d / r; u < r - 1; ) {
          var f = xi(l.value + (u + 1) * p);
          f > i[0] && f < i[1] && c.push(f), u++;
        }
        a.push(c);
      }
      return a;
    }, e.prototype.getLabel = function(r, n) {
      if (r == null)
        return "";
      var a = n && n.precision;
      a == null ? a = xn(r.value) || 0 : a === "auto" && (a = this._intervalPrecision);
      var i = xi(r.value, a, !0);
      return uM(i);
    }, e.prototype.calcNiceTicks = function(r, n, a) {
      r = r || 5;
      var i = this._extent, o = i[1] - i[0];
      if (isFinite(o)) {
        o < 0 && (o = -o, i.reverse());
        var s = I5(i, r, n, a);
        this._intervalPrecision = s.intervalPrecision, this._interval = s.interval, this._niceExtent = s.niceTickExtent;
      }
    }, e.prototype.calcNiceExtent = function(r) {
      var n = this._extent;
      if (n[0] === n[1])
        if (n[0] !== 0) {
          var a = Math.abs(n[0]);
          r.fixMax || (n[1] += a / 2), n[0] -= a / 2;
        } else
          n[1] = 1;
      var i = n[1] - n[0];
      isFinite(i) || (n[0] = 0, n[1] = 1), this.calcNiceTicks(r.splitNumber, r.minInterval, r.maxInterval);
      var o = this._interval;
      r.fixMin || (n[0] = xi(Math.floor(n[0] / o) * o)), r.fixMax || (n[1] = xi(Math.ceil(n[1] / o) * o));
    }, e.prototype.setNiceExtent = function(r, n) {
      this._niceExtent = [r, n];
    }, e.type = "interval", e;
  }(Un)
);
Un.registerClass(oa);
var NI = typeof Float32Array < "u", R5 = NI ? Float32Array : Array;
function An(t) {
  return V(t) ? NI ? new Float32Array(t) : t : new R5(t);
}
var Pm = "__ec_stack_";
function RI(t) {
  return t.get("stack") || Pm + t.seriesIndex;
}
function Ly(t) {
  return t.dim + t.index;
}
function O5(t) {
  var e = [], r = t.axis, n = "axis0";
  if (r.type === "category") {
    for (var a = r.getBandWidth(), i = 0; i < t.count; i++)
      e.push(ie({
        bandWidth: a,
        axisKey: n,
        stackId: Pm + i
      }, t));
    for (var o = PI(e), s = [], i = 0; i < t.count; i++) {
      var l = o[n][Pm + i];
      l.offsetCenter = l.offset + l.width / 2, s.push(l);
    }
    return s;
  }
}
function OI(t, e) {
  var r = [];
  return e.eachSeriesByType(t, function(n) {
    FI(n) && r.push(n);
  }), r;
}
function L5(t) {
  var e = {};
  w(t, function(l) {
    var u = l.coordinateSystem, c = u.getBaseAxis();
    if (!(c.type !== "time" && c.type !== "value"))
      for (var d = l.getData(), p = c.dim + "_" + c.index, f = d.getDimensionIndex(d.mapDimension(c.dim)), h = d.getStore(), g = 0, v = h.count(); g < v; ++g) {
        var m = h.get(f, g);
        e[p] ? e[p].push(m) : e[p] = [m];
      }
  });
  var r = {};
  for (var n in e)
    if (e.hasOwnProperty(n)) {
      var a = e[n];
      if (a) {
        a.sort(function(l, u) {
          return l - u;
        });
        for (var i = null, o = 1; o < a.length; ++o) {
          var s = a[o] - a[o - 1];
          s > 0 && (i = i === null ? s : Math.min(i, s));
        }
        r[n] = i;
      }
    }
  return r;
}
function LI(t) {
  var e = L5(t), r = [];
  return w(t, function(n) {
    var a = n.coordinateSystem, i = a.getBaseAxis(), o = i.getExtent(), s;
    if (i.type === "category")
      s = i.getBandWidth();
    else if (i.type === "value" || i.type === "time") {
      var l = i.dim + "_" + i.index, u = e[l], c = Math.abs(o[1] - o[0]), d = i.scale.getExtent(), p = Math.abs(d[1] - d[0]);
      s = u ? c / p * u : c;
    } else {
      var f = n.getData();
      s = Math.abs(o[1] - o[0]) / f.count();
    }
    var h = q(n.get("barWidth"), s), g = q(n.get("barMaxWidth"), s), v = q(
      // barMinWidth by default is 0.5 / 1 in cartesian. Because in value axis,
      // the auto-calculated bar width might be less than 0.5 / 1.
      n.get("barMinWidth") || (GI(n) ? 0.5 : 1),
      s
    ), m = n.get("barGap"), _ = n.get("barCategoryGap");
    r.push({
      bandWidth: s,
      barWidth: h,
      barMaxWidth: g,
      barMinWidth: v,
      barGap: m,
      barCategoryGap: _,
      axisKey: Ly(i),
      stackId: RI(n)
    });
  }), PI(r);
}
function PI(t) {
  var e = {};
  w(t, function(n, a) {
    var i = n.axisKey, o = n.bandWidth, s = e[i] || {
      bandWidth: o,
      remainedWidth: o,
      autoWidthCount: 0,
      categoryGap: null,
      gap: "20%",
      stacks: {}
    }, l = s.stacks;
    e[i] = s;
    var u = n.stackId;
    l[u] || s.autoWidthCount++, l[u] = l[u] || {
      width: 0,
      maxWidth: 0
    };
    var c = n.barWidth;
    c && !l[u].width && (l[u].width = c, c = Math.min(s.remainedWidth, c), s.remainedWidth -= c);
    var d = n.barMaxWidth;
    d && (l[u].maxWidth = d);
    var p = n.barMinWidth;
    p && (l[u].minWidth = p);
    var f = n.barGap;
    f != null && (s.gap = f);
    var h = n.barCategoryGap;
    h != null && (s.categoryGap = h);
  });
  var r = {};
  return w(e, function(n, a) {
    r[a] = {};
    var i = n.stacks, o = n.bandWidth, s = n.categoryGap;
    if (s == null) {
      var l = Me(i).length;
      s = Math.max(35 - l * 4, 15) + "%";
    }
    var u = q(s, o), c = q(n.gap, 1), d = n.remainedWidth, p = n.autoWidthCount, f = (d - u) / (p + (p - 1) * c);
    f = Math.max(f, 0), w(i, function(m) {
      var _ = m.maxWidth, y = m.minWidth;
      if (m.width) {
        var b = m.width;
        _ && (b = Math.min(b, _)), y && (b = Math.max(b, y)), m.width = b, d -= b + c * b, p--;
      } else {
        var b = f;
        _ && _ < b && (b = Math.min(_, d)), y && y > b && (b = y), b !== f && (m.width = b, d -= b + c * b, p--);
      }
    }), f = (d - u) / (p + (p - 1) * c), f = Math.max(f, 0);
    var h = 0, g;
    w(i, function(m, _) {
      m.width || (m.width = f), g = m, h += m.width * (1 + c);
    }), g && (h -= g.width * c);
    var v = -h / 2;
    w(i, function(m, _) {
      r[a][_] = r[a][_] || {
        bandWidth: o,
        offset: v,
        width: m.width
      }, v += m.width * (1 + c);
    });
  }), r;
}
function P5(t, e, r) {
  if (t && e) {
    var n = t[Ly(e)];
    return n;
  }
}
function kI(t, e) {
  var r = OI(t, e), n = LI(r);
  w(r, function(a) {
    var i = a.getData(), o = a.coordinateSystem, s = o.getBaseAxis(), l = RI(a), u = n[Ly(s)][l], c = u.offset, d = u.width;
    i.setLayout({
      bandWidth: u.bandWidth,
      offset: c,
      size: d
    });
  });
}
function BI(t) {
  return {
    seriesType: t,
    plan: Fs(),
    reset: function(e) {
      if (FI(e)) {
        var r = e.getData(), n = e.coordinateSystem, a = n.getBaseAxis(), i = n.getOtherAxis(a), o = r.getDimensionIndex(r.mapDimension(i.dim)), s = r.getDimensionIndex(r.mapDimension(a.dim)), l = e.get("showBackground", !0), u = r.mapDimension(i.dim), c = r.getCalculationInfo("stackResultDimension"), d = Qa(r, u) && !!r.getCalculationInfo("stackedOnSeries"), p = i.isHorizontal(), f = k5(a, i), h = GI(e), g = e.get("barMinHeight") || 0, v = c && r.getDimensionIndex(c), m = r.getLayout("size"), _ = r.getLayout("offset");
        return {
          progress: function(y, b) {
            for (var S = y.count, E = h && An(S * 3), T = h && l && An(S * 3), x = h && An(S), C = n.master.getRect(), A = p ? C.width : C.height, D, M = b.getStore(), I = 0; (D = y.next()) != null; ) {
              var N = M.get(d ? v : o, D), R = M.get(s, D), O = f, B = void 0;
              d && (B = +N - M.get(o, D));
              var L = void 0, F = void 0, U = void 0, z = void 0;
              if (p) {
                var H = n.dataToPoint([N, R]);
                if (d) {
                  var Z = n.dataToPoint([B, R]);
                  O = Z[0];
                }
                L = O, F = H[1] + _, U = H[0] - O, z = m, Math.abs(U) < g && (U = (U < 0 ? -1 : 1) * g);
              } else {
                var H = n.dataToPoint([R, N]);
                if (d) {
                  var Z = n.dataToPoint([R, B]);
                  O = Z[1];
                }
                L = H[0] + _, F = O, U = m, z = H[1] - O, Math.abs(z) < g && (z = (z <= 0 ? -1 : 1) * g);
              }
              h ? (E[I] = L, E[I + 1] = F, E[I + 2] = p ? U : z, T && (T[I] = p ? C.x : L, T[I + 1] = p ? F : C.y, T[I + 2] = A), x[D] = D) : b.setItemLayout(D, {
                x: L,
                y: F,
                width: U,
                height: z
              }), I += 3;
            }
            h && b.setLayout({
              largePoints: E,
              largeDataIndices: x,
              largeBackgroundPoints: T,
              valueAxisHorizontal: p
            });
          }
        };
      }
    }
  };
}
function FI(t) {
  return t.coordinateSystem && t.coordinateSystem.type === "cartesian2d";
}
function GI(t) {
  return t.pipelineContext && t.pipelineContext.large;
}
function k5(t, e) {
  var r = e.model.get("startValue");
  return r || (r = 0), e.toGlobalCoord(e.dataToCoord(e.type === "log" ? r > 0 ? r : 1 : r));
}
var B5 = function(t, e, r, n) {
  for (; r < n; ) {
    var a = r + n >>> 1;
    t[a][1] < e ? r = a + 1 : n = a;
  }
  return r;
}, Py = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "time", n;
    }
    return e.prototype.getLabel = function(r) {
      var n = this.getSetting("useUTC");
      return mf(r.value, JS[_U(us(this._minLevelUnit))] || JS.second, n, this.getSetting("locale"));
    }, e.prototype.getFormattedLabel = function(r, n, a) {
      var i = this.getSetting("useUTC"), o = this.getSetting("locale");
      return yU(r, n, a, o, i);
    }, e.prototype.getTicks = function() {
      var r = this._interval, n = this._extent, a = [];
      if (!r)
        return a;
      a.push({
        value: n[0],
        level: 0
      });
      var i = this.getSetting("useUTC"), o = H5(this._minLevelUnit, this._approxInterval, i, n);
      return a = a.concat(o), a.push({
        value: n[1],
        level: 0
      }), a;
    }, e.prototype.calcNiceExtent = function(r) {
      var n = this._extent;
      if (n[0] === n[1] && (n[0] -= Pr, n[1] += Pr), n[1] === -1 / 0 && n[0] === 1 / 0) {
        var a = /* @__PURE__ */ new Date();
        n[1] = +new Date(a.getFullYear(), a.getMonth(), a.getDate()), n[0] = n[1] - Pr;
      }
      this.calcNiceTicks(r.splitNumber, r.minInterval, r.maxInterval);
    }, e.prototype.calcNiceTicks = function(r, n, a) {
      r = r || 10;
      var i = this._extent, o = i[1] - i[0];
      this._approxInterval = o / r, n != null && this._approxInterval < n && (this._approxInterval = n), a != null && this._approxInterval > a && (this._approxInterval = a);
      var s = $c.length, l = Math.min(B5($c, this._approxInterval, 0, s), s - 1);
      this._interval = $c[l][1], this._minLevelUnit = $c[Math.max(l - 1, 0)][0];
    }, e.prototype.parse = function(r) {
      return ke(r) ? r : +Ln(r);
    }, e.prototype.contain = function(r) {
      return wf(this.parse(r), this._extent);
    }, e.prototype.normalize = function(r) {
      return Df(this.parse(r), this._extent);
    }, e.prototype.scale = function(r) {
      return Mf(r, this._extent);
    }, e.type = "time", e;
  }(oa)
), $c = [
  // Format                           interval
  ["second", hy],
  ["minute", gy],
  ["hour", ql],
  ["quarter-day", ql * 6],
  ["half-day", ql * 12],
  ["day", Pr * 1.2],
  ["half-week", Pr * 3.5],
  ["week", Pr * 7],
  ["month", Pr * 31],
  ["quarter", Pr * 95],
  ["half-year", jS / 2],
  ["year", jS]
  // 1Y
];
function F5(t, e, r, n) {
  var a = Ln(e), i = Ln(r), o = function(h) {
    return eE(a, h, n) === eE(i, h, n);
  }, s = function() {
    return o("year");
  }, l = function() {
    return s() && o("month");
  }, u = function() {
    return l() && o("day");
  }, c = function() {
    return u() && o("hour");
  }, d = function() {
    return c() && o("minute");
  }, p = function() {
    return d() && o("second");
  }, f = function() {
    return p() && o("millisecond");
  };
  switch (t) {
    case "year":
      return s();
    case "month":
      return l();
    case "day":
      return u();
    case "hour":
      return c();
    case "minute":
      return d();
    case "second":
      return p();
    case "millisecond":
      return f();
  }
}
function G5(t, e) {
  return t /= Pr, t > 16 ? 16 : t > 7.5 ? 7 : t > 3.5 ? 4 : t > 1.5 ? 2 : 1;
}
function U5(t) {
  var e = 30 * Pr;
  return t /= e, t > 6 ? 6 : t > 3 ? 3 : t > 2 ? 2 : 1;
}
function z5(t) {
  return t /= ql, t > 12 ? 12 : t > 6 ? 6 : t > 3.5 ? 4 : t > 2 ? 2 : 1;
}
function cT(t, e) {
  return t /= e ? gy : hy, t > 30 ? 30 : t > 20 ? 20 : t > 15 ? 15 : t > 10 ? 10 : t > 5 ? 5 : t > 2 ? 2 : 1;
}
function V5(t) {
  return nD(t);
}
function $5(t, e, r) {
  var n = new Date(t);
  switch (us(e)) {
    case "year":
    case "month":
      n[nM(r)](0);
    case "day":
      n[aM(r)](1);
    case "hour":
      n[iM(r)](0);
    case "minute":
      n[oM(r)](0);
    case "second":
      n[sM(r)](0), n[lM(r)](0);
  }
  return n.getTime();
}
function H5(t, e, r, n) {
  var a = 1e4, i = tM, o = 0;
  function s(A, D, M, I, N, R, O) {
    for (var B = new Date(D), L = D, F = B[I](); L < M && L <= n[1]; )
      O.push({
        value: L
      }), F += A, B[N](F), L = B.getTime();
    O.push({
      value: L,
      notAdd: !0
    });
  }
  function l(A, D, M) {
    var I = [], N = !D.length;
    if (!F5(us(A), n[0], n[1], r)) {
      N && (D = [{
        // TODO Optimize. Not include so may ticks.
        value: $5(new Date(n[0]), A, r)
      }, {
        value: n[1]
      }]);
      for (var R = 0; R < D.length - 1; R++) {
        var O = D[R].value, B = D[R + 1].value;
        if (O !== B) {
          var L = void 0, F = void 0, U = void 0, z = !1;
          switch (A) {
            case "year":
              L = Math.max(1, Math.round(e / Pr / 365)), F = vy(r), U = bU(r);
              break;
            case "half-year":
            case "quarter":
            case "month":
              L = U5(e), F = cs(r), U = nM(r);
              break;
            case "week":
            // PENDING If week is added. Ignore day.
            case "half-week":
            case "day":
              L = G5(e), F = _f(r), U = aM(r), z = !0;
              break;
            case "half-day":
            case "quarter-day":
            case "hour":
              L = z5(e), F = vu(r), U = iM(r);
              break;
            case "minute":
              L = cT(e, !0), F = yf(r), U = oM(r);
              break;
            case "second":
              L = cT(e, !1), F = bf(r), U = sM(r);
              break;
            case "millisecond":
              L = V5(e), F = Sf(r), U = lM(r);
              break;
          }
          s(L, O, B, F, U, z, I), A === "year" && M.length > 1 && R === 0 && M.unshift({
            value: M[0].value - L
          });
        }
      }
      for (var R = 0; R < I.length; R++)
        M.push(I[R]);
      return I;
    }
  }
  for (var u = [], c = [], d = 0, p = 0, f = 0; f < i.length && o++ < a; ++f) {
    var h = us(i[f]);
    if (mU(i[f])) {
      l(i[f], u[u.length - 1] || [], c);
      var g = i[f + 1] ? us(i[f + 1]) : null;
      if (h !== g) {
        if (c.length) {
          p = d, c.sort(function(A, D) {
            return A.value - D.value;
          });
          for (var v = [], m = 0; m < c.length; ++m) {
            var _ = c[m].value;
            (m === 0 || c[m - 1].value !== _) && (v.push(c[m]), _ >= n[0] && _ <= n[1] && d++);
          }
          var y = (n[1] - n[0]) / e;
          if (d > y * 1.5 && p > y / 1.5 || (u.push(v), d > y || t === i[f]))
            break;
        }
        c = [];
      }
    }
  }
  for (var b = ze($(u, function(A) {
    return ze(A, function(D) {
      return D.value >= n[0] && D.value <= n[1] && !D.notAdd;
    });
  }), function(A) {
    return A.length > 0;
  }), S = [], E = b.length - 1, f = 0; f < b.length; ++f)
    for (var T = b[f], x = 0; x < T.length; ++x)
      S.push({
        value: T[x].value,
        level: E - f
      });
  S.sort(function(A, D) {
    return A.value - D.value;
  });
  for (var C = [], f = 0; f < S.length; ++f)
    (f === 0 || S[f].value !== S[f - 1].value) && C.push(S[f]);
  return C;
}
Un.registerClass(Py);
var dT = Un.prototype, Xl = oa.prototype, W5 = ut, q5 = Math.floor, Y5 = Math.ceil, Hc = Math.pow, Hr = Math.log, ky = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "log", r.base = 10, r._originalScale = new oa(), r._interval = 0, r;
    }
    return e.prototype.getTicks = function(r) {
      var n = this._originalScale, a = this._extent, i = n.getExtent(), o = Xl.getTicks.call(this, r);
      return $(o, function(s) {
        var l = s.value, u = ut(Hc(this.base, l));
        return u = l === a[0] && this._fixMin ? Wc(u, i[0]) : u, u = l === a[1] && this._fixMax ? Wc(u, i[1]) : u, {
          value: u
        };
      }, this);
    }, e.prototype.setExtent = function(r, n) {
      var a = Hr(this.base);
      r = Hr(Math.max(0, r)) / a, n = Hr(Math.max(0, n)) / a, Xl.setExtent.call(this, r, n);
    }, e.prototype.getExtent = function() {
      var r = this.base, n = dT.getExtent.call(this);
      n[0] = Hc(r, n[0]), n[1] = Hc(r, n[1]);
      var a = this._originalScale, i = a.getExtent();
      return this._fixMin && (n[0] = Wc(n[0], i[0])), this._fixMax && (n[1] = Wc(n[1], i[1])), n;
    }, e.prototype.unionExtent = function(r) {
      this._originalScale.unionExtent(r);
      var n = this.base;
      r[0] = Hr(r[0]) / Hr(n), r[1] = Hr(r[1]) / Hr(n), dT.unionExtent.call(this, r);
    }, e.prototype.unionExtentFromData = function(r, n) {
      this.unionExtent(r.getApproximateExtent(n));
    }, e.prototype.calcNiceTicks = function(r) {
      r = r || 10;
      var n = this._extent, a = n[1] - n[0];
      if (!(a === 1 / 0 || a <= 0)) {
        var i = QF(a), o = r / a * i;
        for (o <= 0.5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0; )
          i *= 10;
        var s = [ut(Y5(n[0] / i) * i), ut(q5(n[1] / i) * i)];
        this._interval = i, this._niceExtent = s;
      }
    }, e.prototype.calcNiceExtent = function(r) {
      Xl.calcNiceExtent.call(this, r), this._fixMin = r.fixMin, this._fixMax = r.fixMax;
    }, e.prototype.parse = function(r) {
      return r;
    }, e.prototype.contain = function(r) {
      return r = Hr(r) / Hr(this.base), wf(r, this._extent);
    }, e.prototype.normalize = function(r) {
      return r = Hr(r) / Hr(this.base), Df(r, this._extent);
    }, e.prototype.scale = function(r) {
      return r = Mf(r, this._extent), Hc(this.base, r);
    }, e.type = "log", e;
  }(Un)
), UI = ky.prototype;
UI.getMinorTicks = Xl.getMinorTicks;
UI.getLabel = Xl.getLabel;
function Wc(t, e) {
  return W5(t, xn(e));
}
Un.registerClass(ky);
var K5 = (
  /** @class */
  function() {
    function t(e, r, n) {
      this._prepareParams(e, r, n);
    }
    return t.prototype._prepareParams = function(e, r, n) {
      n[1] < n[0] && (n = [NaN, NaN]), this._dataMin = n[0], this._dataMax = n[1];
      var a = this._isOrdinal = e.type === "ordinal";
      this._needCrossZero = e.type === "interval" && r.getNeedCrossZero && r.getNeedCrossZero();
      var i = r.get("min", !0);
      i == null && (i = r.get("startValue", !0));
      var o = this._modelMinRaw = i;
      ae(o) ? this._modelMinNum = qc(e, o({
        min: n[0],
        max: n[1]
      })) : o !== "dataMin" && (this._modelMinNum = qc(e, o));
      var s = this._modelMaxRaw = r.get("max", !0);
      if (ae(s) ? this._modelMaxNum = qc(e, s({
        min: n[0],
        max: n[1]
      })) : s !== "dataMax" && (this._modelMaxNum = qc(e, s)), a)
        this._axisDataLen = r.getCategories().length;
      else {
        var l = r.get("boundaryGap"), u = V(l) ? l : [l || 0, l || 0];
        typeof u[0] == "boolean" || typeof u[1] == "boolean" ? this._boundaryGapInner = [0, 0] : this._boundaryGapInner = [tn(u[0], 1), tn(u[1], 1)];
      }
    }, t.prototype.calculate = function() {
      var e = this._isOrdinal, r = this._dataMin, n = this._dataMax, a = this._axisDataLen, i = this._boundaryGapInner, o = e ? null : n - r || Math.abs(r), s = this._modelMinRaw === "dataMin" ? r : this._modelMinNum, l = this._modelMaxRaw === "dataMax" ? n : this._modelMaxNum, u = s != null, c = l != null;
      s == null && (s = e ? a ? 0 : NaN : r - i[0] * o), l == null && (l = e ? a ? a - 1 : NaN : n + i[1] * o), (s == null || !isFinite(s)) && (s = NaN), (l == null || !isFinite(l)) && (l = NaN);
      var d = ou(s) || ou(l) || e && !a;
      this._needCrossZero && (s > 0 && l > 0 && !u && (s = 0), s < 0 && l < 0 && !c && (l = 0));
      var p = this._determinedMin, f = this._determinedMax;
      return p != null && (s = p, u = !0), f != null && (l = f, c = !0), {
        min: s,
        max: l,
        minFixed: u,
        maxFixed: c,
        isBlank: d
      };
    }, t.prototype.modifyDataMinMax = function(e, r) {
      this[X5[e]] = r;
    }, t.prototype.setDeterminedMinMax = function(e, r) {
      var n = Z5[e];
      this[n] = r;
    }, t.prototype.freeze = function() {
      this.frozen = !0;
    }, t;
  }()
), Z5 = {
  min: "_determinedMin",
  max: "_determinedMax"
}, X5 = {
  min: "_dataMin",
  max: "_dataMax"
};
function zI(t, e, r) {
  var n = t.rawExtentInfo;
  return n || (n = new K5(t, e, r), t.rawExtentInfo = n, n);
}
function qc(t, e) {
  return e == null ? null : ou(e) ? NaN : t.parse(e);
}
function VI(t, e) {
  var r = t.type, n = zI(t, e, t.getExtent()).calculate();
  t.setBlank(n.isBlank);
  var a = n.min, i = n.max, o = e.ecModel;
  if (o && r === "time") {
    var s = OI("bar", o), l = !1;
    if (w(s, function(d) {
      l = l || d.getBaseAxis() === e.axis;
    }), l) {
      var u = LI(s), c = Q5(a, i, e, u);
      a = c.min, i = c.max;
    }
  }
  return {
    extent: [a, i],
    // "fix" means "fixed", the value should not be
    // changed in the subsequent steps.
    fixMin: n.minFixed,
    fixMax: n.maxFixed
  };
}
function Q5(t, e, r, n) {
  var a = r.axis.getExtent(), i = Math.abs(a[1] - a[0]), o = P5(n, r.axis);
  if (o === void 0)
    return {
      min: t,
      max: e
    };
  var s = 1 / 0;
  w(o, function(f) {
    s = Math.min(f.offset, s);
  });
  var l = -1 / 0;
  w(o, function(f) {
    l = Math.max(f.offset + f.width, l);
  }), s = Math.abs(s), l = Math.abs(l);
  var u = s + l, c = e - t, d = 1 - (s + l) / i, p = c / d - c;
  return e += p * (l / u), t -= p * (s / u), {
    min: t,
    max: e
  };
}
function bs(t, e) {
  var r = e, n = VI(t, r), a = n.extent, i = r.get("splitNumber");
  t instanceof ky && (t.base = r.get("logBase"));
  var o = t.type, s = r.get("interval"), l = o === "interval" || o === "time";
  t.setExtent(a[0], a[1]), t.calcNiceExtent({
    splitNumber: i,
    fixMin: n.fixMin,
    fixMax: n.fixMax,
    minInterval: l ? r.get("minInterval") : null,
    maxInterval: l ? r.get("maxInterval") : null
  }), s != null && t.setInterval && t.setInterval(s);
}
function Nf(t, e) {
  if (e = e || t.get("type"), e)
    switch (e) {
      // Buildin scale
      case "category":
        return new If({
          ordinalMeta: t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new Py({
          locale: t.ecModel.getLocaleModel(),
          useUTC: t.ecModel.get("useUTC")
        });
      default:
        return new (Un.getClass(e) || oa)();
    }
}
function j5(t) {
  var e = t.scale.getExtent(), r = e[0], n = e[1];
  return !(r > 0 && n > 0 || r < 0 && n < 0);
}
function zs(t) {
  var e = t.getLabelModel().get("formatter"), r = t.type === "category" ? t.scale.getExtent()[0] : null;
  return t.scale.type === "time" ? /* @__PURE__ */ function(n) {
    return function(a, i) {
      return t.scale.getFormattedLabel(a, i, n);
    };
  }(e) : Y(e) ? /* @__PURE__ */ function(n) {
    return function(a) {
      var i = t.scale.getLabel(a), o = n.replace("{value}", i ?? "");
      return o;
    };
  }(e) : ae(e) ? /* @__PURE__ */ function(n) {
    return function(a, i) {
      return r != null && (i = a.value - r), n(By(t, a), i, a.level != null ? {
        level: a.level
      } : null);
    };
  }(e) : function(n) {
    return t.scale.getLabel(n);
  };
}
function By(t, e) {
  return t.type === "category" ? t.scale.getLabel(e) : e.value;
}
function J5(t) {
  var e = t.model, r = t.scale;
  if (!(!e.get(["axisLabel", "show"]) || r.isBlank())) {
    var n, a, i = r.getExtent();
    r instanceof If ? a = r.count() : (n = r.getTicks(), a = n.length);
    var o = t.getLabelModel(), s = zs(t), l, u = 1;
    a > 40 && (u = Math.ceil(a / 40));
    for (var c = 0; c < a; c += u) {
      var d = n ? n[c] : {
        value: i[0] + c
      }, p = s(d, c), f = o.getTextRect(p), h = e4(f, o.get("rotate") || 0);
      l ? l.union(h) : l = h;
    }
    return l;
  }
}
function e4(t, e) {
  var r = e * Math.PI / 180, n = t.width, a = t.height, i = n * Math.abs(Math.cos(r)) + Math.abs(a * Math.sin(r)), o = n * Math.abs(Math.sin(r)) + Math.abs(a * Math.cos(r)), s = new Te(t.x, t.y, i, o);
  return s;
}
function Fy(t) {
  var e = t.get("interval");
  return e ?? "auto";
}
function $I(t) {
  return t.type === "category" && Fy(t.getLabelModel()) === 0;
}
function Ep(t, e) {
  var r = {};
  return w(t.mapDimensionsAll(e), function(n) {
    r[MI(t, n)] = !0;
  }), Me(r);
}
function t4(t, e, r) {
  e && w(Ep(e, r), function(n) {
    var a = e.getApproximateExtent(n);
    a[0] < t[0] && (t[0] = a[0]), a[1] > t[1] && (t[1] = a[1]);
  });
}
var Qu = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.getNeedCrossZero = function() {
      var e = this.option;
      return !e.scale;
    }, t.prototype.getCoordSysModel = function() {
    }, t;
  }()
), r4 = 1e-8;
function pT(t, e) {
  return Math.abs(t - e) < r4;
}
function ki(t, e, r) {
  var n = 0, a = t[0];
  if (!a)
    return !1;
  for (var i = 1; i < t.length; i++) {
    var o = t[i];
    n += qn(a[0], a[1], o[0], o[1], e, r), a = o;
  }
  var s = t[0];
  return (!pT(a[0], s[0]) || !pT(a[1], s[1])) && (n += qn(a[0], a[1], s[0], s[1], e, r)), n !== 0;
}
var n4 = [];
function pg(t, e) {
  for (var r = 0; r < t.length; r++)
    Ut(t[r], t[r], e);
}
function fT(t, e, r, n) {
  for (var a = 0; a < t.length; a++) {
    var i = t[a];
    n && (i = n.project(i)), i && isFinite(i[0]) && isFinite(i[1]) && (Ra(e, e, i), Oa(r, r, i));
  }
}
function a4(t) {
  for (var e = 0, r = 0, n = 0, a = t.length, i = t[a - 1][0], o = t[a - 1][1], s = 0; s < a; s++) {
    var l = t[s][0], u = t[s][1], c = i * u - l * o;
    e += c, r += (i + l) * c, n += (o + u) * c, i = l, o = u;
  }
  return e ? [r / e / 3, n / e / 3, e] : [t[0][0] || 0, t[0][1] || 0];
}
var HI = (
  /** @class */
  function() {
    function t(e) {
      this.name = e;
    }
    return t.prototype.setCenter = function(e) {
      this._center = e;
    }, t.prototype.getCenter = function() {
      var e = this._center;
      return e || (e = this._center = this.calcCenter()), e;
    }, t;
  }()
), hT = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e, r) {
      this.type = "polygon", this.exterior = e, this.interiors = r;
    }
    return t;
  }()
), gT = (
  /** @class */
  /* @__PURE__ */ function() {
    function t(e) {
      this.type = "linestring", this.points = e;
    }
    return t;
  }()
), WI = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this, r) || this;
      return i.type = "geoJSON", i.geometries = n, i._center = a && [a[0], a[1]], i;
    }
    return e.prototype.calcCenter = function() {
      for (var r = this.geometries, n, a = 0, i = 0; i < r.length; i++) {
        var o = r[i], s = o.exterior, l = s && s.length;
        l > a && (n = o, a = l);
      }
      if (n)
        return a4(n.exterior);
      var u = this.getBoundingRect();
      return [u.x + u.width / 2, u.y + u.height / 2];
    }, e.prototype.getBoundingRect = function(r) {
      var n = this._rect;
      if (n && !r)
        return n;
      var a = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0], o = this.geometries;
      return w(o, function(s) {
        s.type === "polygon" ? fT(s.exterior, a, i, r) : w(s.points, function(l) {
          fT(l, a, i, r);
        });
      }), isFinite(a[0]) && isFinite(a[1]) && isFinite(i[0]) && isFinite(i[1]) || (a[0] = a[1] = i[0] = i[1] = 0), n = new Te(a[0], a[1], i[0] - a[0], i[1] - a[1]), r || (this._rect = n), n;
    }, e.prototype.contain = function(r) {
      var n = this.getBoundingRect(), a = this.geometries;
      if (!n.contain(r[0], r[1]))
        return !1;
      e: for (var i = 0, o = a.length; i < o; i++) {
        var s = a[i];
        if (s.type === "polygon") {
          var l = s.exterior, u = s.interiors;
          if (ki(l, r[0], r[1])) {
            for (var c = 0; c < (u ? u.length : 0); c++)
              if (ki(u[c], r[0], r[1]))
                continue e;
            return !0;
          }
        }
      }
      return !1;
    }, e.prototype.transformTo = function(r, n, a, i) {
      var o = this.getBoundingRect(), s = o.width / o.height;
      a ? i || (i = a / s) : a = s * i;
      for (var l = new Te(r, n, a, i), u = o.calculateTransform(l), c = this.geometries, d = 0; d < c.length; d++) {
        var p = c[d];
        p.type === "polygon" ? (pg(p.exterior, u), w(p.interiors, function(f) {
          pg(f, u);
        })) : w(p.points, function(f) {
          pg(f, u);
        });
      }
      o = this._rect, o.copy(l), this._center = [o.x + o.width / 2, o.y + o.height / 2];
    }, e.prototype.cloneShallow = function(r) {
      r == null && (r = this.name);
      var n = new e(r, this.geometries, this._center);
      return n._rect = this._rect, n.transformTo = null, n;
    }, e;
  }(HI)
), i4 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n) {
      var a = t.call(this, r) || this;
      return a.type = "geoSVG", a._elOnlyForCalculate = n, a;
    }
    return e.prototype.calcCenter = function() {
      for (var r = this._elOnlyForCalculate, n = r.getBoundingRect(), a = [n.x + n.width / 2, n.y + n.height / 2], i = tf(n4), o = r; o && !o.isGeoSVGGraphicRoot; )
        Xn(i, o.getLocalTransform(), i), o = o.parent;
      return Ms(i, i), Ut(a, a, i), a;
    }, e;
  }(HI)
);
function o4(t) {
  if (!t.UTF8Encoding)
    return t;
  var e = t, r = e.UTF8Scale;
  r == null && (r = 1024);
  var n = e.features;
  return w(n, function(a) {
    var i = a.geometry, o = i.encodeOffsets, s = i.coordinates;
    if (o)
      switch (i.type) {
        case "LineString":
          i.coordinates = qI(s, o, r);
          break;
        case "Polygon":
          fg(s, o, r);
          break;
        case "MultiLineString":
          fg(s, o, r);
          break;
        case "MultiPolygon":
          w(s, function(l, u) {
            return fg(l, o[u], r);
          });
      }
  }), e.UTF8Encoding = !1, e;
}
function fg(t, e, r) {
  for (var n = 0; n < t.length; n++)
    t[n] = qI(t[n], e[n], r);
}
function qI(t, e, r) {
  for (var n = [], a = e[0], i = e[1], o = 0; o < t.length; o += 2) {
    var s = t.charCodeAt(o) - 64, l = t.charCodeAt(o + 1) - 64;
    s = s >> 1 ^ -(s & 1), l = l >> 1 ^ -(l & 1), s += a, l += i, a = s, i = l, n.push([s / r, l / r]);
  }
  return n;
}
function s4(t, e) {
  return t = o4(t), $(ze(t.features, function(r) {
    return r.geometry && r.properties && r.geometry.coordinates.length > 0;
  }), function(r) {
    var n = r.properties, a = r.geometry, i = [];
    switch (a.type) {
      case "Polygon":
        var o = a.coordinates;
        i.push(new hT(o[0], o.slice(1)));
        break;
      case "MultiPolygon":
        w(a.coordinates, function(l) {
          l[0] && i.push(new hT(l[0], l.slice(1)));
        });
        break;
      case "LineString":
        i.push(new gT([a.coordinates]));
        break;
      case "MultiLineString":
        i.push(new gT(a.coordinates));
    }
    var s = new WI(n[e || "name"], i, n.cp);
    return s.properties = n, s;
  });
}
var Eu = Oe();
function YI(t, e) {
  var r = $(e, function(n) {
    return t.scale.parse(n);
  });
  return t.type === "time" && r.length > 0 && (r.sort(), r.unshift(r[0]), r.push(r[r.length - 1])), r;
}
function l4(t) {
  var e = t.getLabelModel().get("customValues");
  if (e) {
    var r = zs(t), n = t.scale.getExtent(), a = YI(t, e), i = ze(a, function(o) {
      return o >= n[0] && o <= n[1];
    });
    return {
      labels: $(i, function(o) {
        var s = {
          value: o
        };
        return {
          formattedLabel: r(s),
          rawLabel: t.scale.getLabel(s),
          tickValue: o
        };
      })
    };
  }
  return t.type === "category" ? c4(t) : p4(t);
}
function u4(t, e) {
  var r = t.getTickModel().get("customValues");
  if (r) {
    var n = t.scale.getExtent(), a = YI(t, r);
    return {
      ticks: ze(a, function(i) {
        return i >= n[0] && i <= n[1];
      })
    };
  }
  return t.type === "category" ? d4(t, e) : {
    ticks: $(t.scale.getTicks(), function(i) {
      return i.value;
    })
  };
}
function c4(t) {
  var e = t.getLabelModel(), r = KI(t, e);
  return !e.get("show") || t.scale.isBlank() ? {
    labels: [],
    labelCategoryInterval: r.labelCategoryInterval
  } : r;
}
function KI(t, e) {
  var r = ZI(t, "labels"), n = Fy(e), a = XI(r, n);
  if (a)
    return a;
  var i, o;
  return ae(n) ? i = JI(t, n) : (o = n === "auto" ? f4(t) : n, i = jI(t, o)), QI(r, n, {
    labels: i,
    labelCategoryInterval: o
  });
}
function d4(t, e) {
  var r = ZI(t, "ticks"), n = Fy(e), a = XI(r, n);
  if (a)
    return a;
  var i, o;
  if ((!e.get("show") || t.scale.isBlank()) && (i = []), ae(n))
    i = JI(t, n, !0);
  else if (n === "auto") {
    var s = KI(t, t.getLabelModel());
    o = s.labelCategoryInterval, i = $(s.labels, function(l) {
      return l.tickValue;
    });
  } else
    o = n, i = jI(t, o, !0);
  return QI(r, n, {
    ticks: i,
    tickCategoryInterval: o
  });
}
function p4(t) {
  var e = t.scale.getTicks(), r = zs(t);
  return {
    labels: $(e, function(n, a) {
      return {
        level: n.level,
        formattedLabel: r(n, a),
        rawLabel: t.scale.getLabel(n),
        tickValue: n.value
      };
    })
  };
}
function ZI(t, e) {
  return Eu(t)[e] || (Eu(t)[e] = []);
}
function XI(t, e) {
  for (var r = 0; r < t.length; r++)
    if (t[r].key === e)
      return t[r].value;
}
function QI(t, e, r) {
  return t.push({
    key: e,
    value: r
  }), r;
}
function f4(t) {
  var e = Eu(t).autoInterval;
  return e ?? (Eu(t).autoInterval = t.calculateCategoryInterval());
}
function h4(t) {
  var e = g4(t), r = zs(t), n = (e.axisRotate - e.labelRotate) / 180 * Math.PI, a = t.scale, i = a.getExtent(), o = a.count();
  if (i[1] - i[0] < 1)
    return 0;
  var s = 1;
  o > 40 && (s = Math.max(1, Math.floor(o / 40)));
  for (var l = i[0], u = t.dataToCoord(l + 1) - t.dataToCoord(l), c = Math.abs(u * Math.cos(n)), d = Math.abs(u * Math.sin(n)), p = 0, f = 0; l <= i[1]; l += s) {
    var h = 0, g = 0, v = Uu(r({
      value: l
    }), e.font, "center", "top");
    h = v.width * 1.3, g = v.height * 1.3, p = Math.max(p, h, 7), f = Math.max(f, g, 7);
  }
  var m = p / c, _ = f / d;
  isNaN(m) && (m = 1 / 0), isNaN(_) && (_ = 1 / 0);
  var y = Math.max(0, Math.floor(Math.min(m, _))), b = Eu(t.model), S = t.getExtent(), E = b.lastAutoInterval, T = b.lastTickCount;
  return E != null && T != null && Math.abs(E - y) <= 1 && Math.abs(T - o) <= 1 && E > y && b.axisExtent0 === S[0] && b.axisExtent1 === S[1] ? y = E : (b.lastTickCount = o, b.lastAutoInterval = y, b.axisExtent0 = S[0], b.axisExtent1 = S[1]), y;
}
function g4(t) {
  var e = t.getLabelModel();
  return {
    axisRotate: t.getRotate ? t.getRotate() : t.isHorizontal && !t.isHorizontal() ? 90 : 0,
    labelRotate: e.get("rotate") || 0,
    font: e.getFont()
  };
}
function jI(t, e, r) {
  var n = zs(t), a = t.scale, i = a.getExtent(), o = t.getLabelModel(), s = [], l = Math.max((e || 0) + 1, 1), u = i[0], c = a.count();
  u !== 0 && l > 1 && c / l > 2 && (u = Math.round(Math.ceil(u / l) * l));
  var d = $I(t), p = o.get("showMinLabel") || d, f = o.get("showMaxLabel") || d;
  p && u !== i[0] && g(i[0]);
  for (var h = u; h <= i[1]; h += l)
    g(h);
  f && h - l !== i[1] && g(i[1]);
  function g(v) {
    var m = {
      value: v
    };
    s.push(r ? v : {
      formattedLabel: n(m),
      rawLabel: a.getLabel(m),
      tickValue: v
    });
  }
  return s;
}
function JI(t, e, r) {
  var n = t.scale, a = zs(t), i = [];
  return w(n.getTicks(), function(o) {
    var s = n.getLabel(o), l = o.value;
    e(o.value, s) && i.push(r ? l : {
      formattedLabel: a(o),
      rawLabel: s,
      tickValue: l
    });
  }), i;
}
var vT = [0, 1], on = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.onBand = !1, this.inverse = !1, this.dim = e, this.scale = r, this._extent = n || [0, 0];
    }
    return t.prototype.contain = function(e) {
      var r = this._extent, n = Math.min(r[0], r[1]), a = Math.max(r[0], r[1]);
      return e >= n && e <= a;
    }, t.prototype.containData = function(e) {
      return this.scale.contain(e);
    }, t.prototype.getExtent = function() {
      return this._extent.slice();
    }, t.prototype.getPixelPrecision = function(e) {
      return tD(e || this.scale.getExtent(), this._extent);
    }, t.prototype.setExtent = function(e, r) {
      var n = this._extent;
      n[0] = e, n[1] = r;
    }, t.prototype.dataToCoord = function(e, r) {
      var n = this._extent, a = this.scale;
      return e = a.normalize(e), this.onBand && a.type === "ordinal" && (n = n.slice(), mT(n, a.count())), $e(e, vT, n, r);
    }, t.prototype.coordToData = function(e, r) {
      var n = this._extent, a = this.scale;
      this.onBand && a.type === "ordinal" && (n = n.slice(), mT(n, a.count()));
      var i = $e(e, n, vT, r);
      return this.scale.scale(i);
    }, t.prototype.pointToData = function(e, r) {
    }, t.prototype.getTicksCoords = function(e) {
      e = e || {};
      var r = e.tickModel || this.getTickModel(), n = u4(this, r), a = n.ticks, i = $(a, function(s) {
        return {
          coord: this.dataToCoord(this.scale.type === "ordinal" ? this.scale.getRawOrdinalNumber(s) : s),
          tickValue: s
        };
      }, this), o = r.get("alignWithLabel");
      return v4(this, i, o, e.clamp), i;
    }, t.prototype.getMinorTicksCoords = function() {
      if (this.scale.type === "ordinal")
        return [];
      var e = this.model.getModel("minorTick"), r = e.get("splitNumber");
      r > 0 && r < 100 || (r = 5);
      var n = this.scale.getMinorTicks(r), a = $(n, function(i) {
        return $(i, function(o) {
          return {
            coord: this.dataToCoord(o),
            tickValue: o
          };
        }, this);
      }, this);
      return a;
    }, t.prototype.getViewLabels = function() {
      return l4(this).labels;
    }, t.prototype.getLabelModel = function() {
      return this.model.getModel("axisLabel");
    }, t.prototype.getTickModel = function() {
      return this.model.getModel("axisTick");
    }, t.prototype.getBandWidth = function() {
      var e = this._extent, r = this.scale.getExtent(), n = r[1] - r[0] + (this.onBand ? 1 : 0);
      n === 0 && (n = 1);
      var a = Math.abs(e[1] - e[0]);
      return Math.abs(a) / n;
    }, t.prototype.calculateCategoryInterval = function() {
      return h4(this);
    }, t;
  }()
);
function mT(t, e) {
  var r = t[1] - t[0], n = e, a = r / n / 2;
  t[0] += a, t[1] -= a;
}
function v4(t, e, r, n) {
  var a = e.length;
  if (!t.onBand || r || !a)
    return;
  var i = t.getExtent(), o, s;
  if (a === 1)
    e[0].coord = i[0], o = e[1] = {
      coord: i[1],
      tickValue: e[0].tickValue
    };
  else {
    var l = e[a - 1].tickValue - e[0].tickValue, u = (e[a - 1].coord - e[0].coord) / l;
    w(e, function(f) {
      f.coord -= u / 2;
    });
    var c = t.scale.getExtent();
    s = 1 + c[1] - e[a - 1].tickValue, o = {
      coord: e[a - 1].coord + u * s,
      tickValue: c[1] + 1
    }, e.push(o);
  }
  var d = i[0] > i[1];
  p(e[0].coord, i[0]) && (n ? e[0].coord = i[0] : e.shift()), n && p(i[0], e[0].coord) && e.unshift({
    coord: i[0]
  }), p(i[1], o.coord) && (n ? o.coord = i[1] : e.pop()), n && p(o.coord, i[1]) && e.push({
    coord: i[1]
  });
  function p(f, h) {
    return f = ut(f), h = ut(h), d ? f > h : f < h;
  }
}
var ul = Math.PI * 2, Ci = Pn.CMD, m4 = ["top", "right", "bottom", "left"];
function _4(t, e, r, n, a) {
  var i = r.width, o = r.height;
  switch (t) {
    case "top":
      n.set(r.x + i / 2, r.y - e), a.set(0, -1);
      break;
    case "bottom":
      n.set(r.x + i / 2, r.y + o + e), a.set(0, 1);
      break;
    case "left":
      n.set(r.x - e, r.y + o / 2), a.set(-1, 0);
      break;
    case "right":
      n.set(r.x + i + e, r.y + o / 2), a.set(1, 0);
      break;
  }
}
function y4(t, e, r, n, a, i, o, s, l) {
  o -= t, s -= e;
  var u = Math.sqrt(o * o + s * s);
  o /= u, s /= u;
  var c = o * r + t, d = s * r + e;
  if (Math.abs(n - a) % ul < 1e-4)
    return l[0] = c, l[1] = d, u - r;
  if (i) {
    var p = n;
    n = _r(a), a = _r(p);
  } else
    n = _r(n), a = _r(a);
  n > a && (a += ul);
  var f = Math.atan2(s, o);
  if (f < 0 && (f += ul), f >= n && f <= a || f + ul >= n && f + ul <= a)
    return l[0] = c, l[1] = d, u - r;
  var h = r * Math.cos(n) + t, g = r * Math.sin(n) + e, v = r * Math.cos(a) + t, m = r * Math.sin(a) + e, _ = (h - o) * (h - o) + (g - s) * (g - s), y = (v - o) * (v - o) + (m - s) * (m - s);
  return _ < y ? (l[0] = h, l[1] = g, Math.sqrt(_)) : (l[0] = v, l[1] = m, Math.sqrt(y));
}
function Tp(t, e, r, n, a, i, o, s) {
  var l = a - t, u = i - e, c = r - t, d = n - e, p = Math.sqrt(c * c + d * d);
  c /= p, d /= p;
  var f = l * c + u * d, h = f / p;
  s && (h = Math.min(Math.max(h, 0), 1)), h *= p;
  var g = o[0] = t + h * c, v = o[1] = e + h * d;
  return Math.sqrt((g - a) * (g - a) + (v - i) * (v - i));
}
function eN(t, e, r, n, a, i, o) {
  r < 0 && (t = t + r, r = -r), n < 0 && (e = e + n, n = -n);
  var s = t + r, l = e + n, u = o[0] = Math.min(Math.max(a, t), s), c = o[1] = Math.min(Math.max(i, e), l);
  return Math.sqrt((u - a) * (u - a) + (c - i) * (c - i));
}
var Zr = [];
function b4(t, e, r) {
  var n = eN(e.x, e.y, e.width, e.height, t.x, t.y, Zr);
  return r.set(Zr[0], Zr[1]), n;
}
function S4(t, e, r) {
  for (var n = 0, a = 0, i = 0, o = 0, s, l, u = 1 / 0, c = e.data, d = t.x, p = t.y, f = 0; f < c.length; ) {
    var h = c[f++];
    f === 1 && (n = c[f], a = c[f + 1], i = n, o = a);
    var g = u;
    switch (h) {
      case Ci.M:
        i = c[f++], o = c[f++], n = i, a = o;
        break;
      case Ci.L:
        g = Tp(n, a, c[f], c[f + 1], d, p, Zr, !0), n = c[f++], a = c[f++];
        break;
      case Ci.C:
        g = Bw(n, a, c[f++], c[f++], c[f++], c[f++], c[f], c[f + 1], d, p, Zr), n = c[f++], a = c[f++];
        break;
      case Ci.Q:
        g = Gw(n, a, c[f++], c[f++], c[f], c[f + 1], d, p, Zr), n = c[f++], a = c[f++];
        break;
      case Ci.A:
        var v = c[f++], m = c[f++], _ = c[f++], y = c[f++], b = c[f++], S = c[f++];
        f += 1;
        var E = !!(1 - c[f++]);
        s = Math.cos(b) * _ + v, l = Math.sin(b) * y + m, f <= 1 && (i = s, o = l);
        var T = (d - v) * y / _ + v;
        g = y4(v, m, y, b, b + S, E, T, p, Zr), n = Math.cos(b + S) * _ + v, a = Math.sin(b + S) * y + m;
        break;
      case Ci.R:
        i = n = c[f++], o = a = c[f++];
        var x = c[f++], C = c[f++];
        g = eN(i, o, x, C, d, p, Zr);
        break;
      case Ci.Z:
        g = Tp(n, a, i, o, d, p, Zr, !0), n = i, a = o;
        break;
    }
    g < u && (u = g, r.set(Zr[0], Zr[1]));
  }
  return u;
}
var Qr = new Ee(), je = new Ee(), ct = new Ee(), wn = new Ee(), Sn = new Ee();
function _T(t, e) {
  if (t) {
    var r = t.getTextGuideLine(), n = t.getTextContent();
    if (n && r) {
      var a = t.textGuideLineConfig || {}, i = [[0, 0], [0, 0], [0, 0]], o = a.candidates || m4, s = n.getBoundingRect().clone();
      s.applyTransform(n.getComputedTransform());
      var l = 1 / 0, u = a.anchor, c = t.getComputedTransform(), d = c && Ms([], c), p = e.get("length2") || 0;
      u && ct.copy(u);
      for (var f = 0; f < o.length; f++) {
        var h = o[f];
        _4(h, 0, s, Qr, wn), Ee.scaleAndAdd(je, Qr, wn, p), je.transform(d);
        var g = t.getBoundingRect(), v = u ? u.distance(je) : t instanceof Ce ? S4(je, t.path, ct) : b4(je, g, ct);
        v < l && (l = v, je.transform(c), ct.transform(c), ct.toArray(i[0]), je.toArray(i[1]), Qr.toArray(i[2]));
      }
      tN(i, e.get("minTurnAngle")), r.setShape({
        points: i
      });
    }
  }
}
var xp = [], er = new Ee();
function tN(t, e) {
  if (e <= 180 && e > 0) {
    e = e / 180 * Math.PI, Qr.fromArray(t[0]), je.fromArray(t[1]), ct.fromArray(t[2]), Ee.sub(wn, Qr, je), Ee.sub(Sn, ct, je);
    var r = wn.len(), n = Sn.len();
    if (!(r < 1e-3 || n < 1e-3)) {
      wn.scale(1 / r), Sn.scale(1 / n);
      var a = wn.dot(Sn), i = Math.cos(e);
      if (i < a) {
        var o = Tp(je.x, je.y, ct.x, ct.y, Qr.x, Qr.y, xp, !1);
        er.fromArray(xp), er.scaleAndAdd(Sn, o / Math.tan(Math.PI - e));
        var s = ct.x !== je.x ? (er.x - je.x) / (ct.x - je.x) : (er.y - je.y) / (ct.y - je.y);
        if (isNaN(s))
          return;
        s < 0 ? Ee.copy(er, je) : s > 1 && Ee.copy(er, ct), er.toArray(t[1]);
      }
    }
  }
}
function E4(t, e, r) {
  if (r <= 180 && r > 0) {
    r = r / 180 * Math.PI, Qr.fromArray(t[0]), je.fromArray(t[1]), ct.fromArray(t[2]), Ee.sub(wn, je, Qr), Ee.sub(Sn, ct, je);
    var n = wn.len(), a = Sn.len();
    if (!(n < 1e-3 || a < 1e-3)) {
      wn.scale(1 / n), Sn.scale(1 / a);
      var i = wn.dot(e), o = Math.cos(r);
      if (i < o) {
        var s = Tp(je.x, je.y, ct.x, ct.y, Qr.x, Qr.y, xp, !1);
        er.fromArray(xp);
        var l = Math.PI / 2, u = Math.acos(Sn.dot(e)), c = l + u - r;
        if (c >= l)
          Ee.copy(er, ct);
        else {
          er.scaleAndAdd(Sn, s / Math.tan(Math.PI / 2 - c));
          var d = ct.x !== je.x ? (er.x - je.x) / (ct.x - je.x) : (er.y - je.y) / (ct.y - je.y);
          if (isNaN(d))
            return;
          d < 0 ? Ee.copy(er, je) : d > 1 && Ee.copy(er, ct);
        }
        er.toArray(t[1]);
      }
    }
  }
}
function hg(t, e, r, n) {
  var a = r === "normal", i = a ? t : t.ensureState(r);
  i.ignore = e;
  var o = n.get("smooth");
  o && o === !0 && (o = 0.3), i.shape = i.shape || {}, o > 0 && (i.shape.smooth = o);
  var s = n.getModel("lineStyle").getLineStyle();
  a ? t.useStyle(s) : i.style = s;
}
function T4(t, e) {
  var r = e.smooth, n = e.points;
  if (n)
    if (t.moveTo(n[0][0], n[0][1]), r > 0 && n.length >= 3) {
      var a = Na(n[0], n[1]), i = Na(n[1], n[2]);
      if (!a || !i) {
        t.lineTo(n[1][0], n[1][1]), t.lineTo(n[2][0], n[2][1]);
        return;
      }
      var o = Math.min(a, i) * r, s = Ad([], n[1], n[0], o / a), l = Ad([], n[1], n[2], o / i), u = Ad([], s, l, 0.5);
      t.bezierCurveTo(s[0], s[1], s[0], s[1], u[0], u[1]), t.bezierCurveTo(l[0], l[1], l[0], l[1], n[2][0], n[2][1]);
    } else
      for (var c = 1; c < n.length; c++)
        t.lineTo(n[c][0], n[c][1]);
}
function Gy(t, e, r) {
  var n = t.getTextGuideLine(), a = t.getTextContent();
  if (!a) {
    n && t.removeTextGuideLine();
    return;
  }
  for (var i = e.normal, o = i.get("show"), s = a.ignore, l = 0; l < fu.length; l++) {
    var u = fu[l], c = e[u], d = u === "normal";
    if (c) {
      var p = c.get("show"), f = d ? s : ge(a.states[u] && a.states[u].ignore, s);
      if (f || !ge(p, o)) {
        var h = d ? n : n && n.states[u];
        h && (h.ignore = !0), n && hg(n, !0, u, c);
        continue;
      }
      n || (n = new lr(), t.setTextGuideLine(n), !d && (s || !o) && hg(n, !0, "normal", e.normal), t.stateProxy && (n.stateProxy = t.stateProxy)), hg(n, !1, u, c);
    }
  }
  if (n) {
    ie(n.style, r), n.style.fill = null;
    var g = i.get("showAbove"), v = t.textGuideLineConfig = t.textGuideLineConfig || {};
    v.showAbove = g || !1, n.buildPath = T4;
  }
}
function Uy(t, e) {
  e = e || "labelLine";
  for (var r = {
    normal: t.getModel(e)
  }, n = 0; n < ir.length; n++) {
    var a = ir[n];
    r[a] = t.getModel([a, e]);
  }
  return r;
}
function rN(t) {
  for (var e = [], r = 0; r < t.length; r++) {
    var n = t[r];
    if (!n.defaultAttr.ignore) {
      var a = n.label, i = a.getComputedTransform(), o = a.getBoundingRect(), s = !i || i[1] < 1e-5 && i[2] < 1e-5, l = a.style.margin || 0, u = o.clone();
      u.applyTransform(i), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
      var c = s ? new lp(o, i) : null;
      e.push({
        label: a,
        labelLine: n.labelLine,
        rect: u,
        localRect: o,
        obb: c,
        priority: n.priority,
        defaultAttr: n.defaultAttr,
        layoutOption: n.computedLayoutOption,
        axisAligned: s,
        transform: i
      });
    }
  }
  return e;
}
function nN(t, e, r, n, a, i) {
  var o = t.length;
  if (o < 2)
    return;
  t.sort(function(E, T) {
    return E.rect[e] - T.rect[e];
  });
  for (var s = 0, l, u = !1, c = 0; c < o; c++) {
    var d = t[c], p = d.rect;
    l = p[e] - s, l < 0 && (p[e] -= l, d.label[e] -= l, u = !0), s = p[e] + p[r];
  }
  var f = t[0], h = t[o - 1], g, v;
  m(), g < 0 && b(-g, 0.8), v < 0 && b(v, 0.8), m(), _(g, v, 1), _(v, g, -1), m(), g < 0 && S(-g), v < 0 && S(v);
  function m() {
    g = f.rect[e] - n, v = a - h.rect[e] - h.rect[r];
  }
  function _(E, T, x) {
    if (E < 0) {
      var C = Math.min(T, -E);
      if (C > 0) {
        y(C * x, 0, o);
        var A = C + E;
        A < 0 && b(-A * x, 1);
      } else
        b(-E * x, 1);
    }
  }
  function y(E, T, x) {
    E !== 0 && (u = !0);
    for (var C = T; C < x; C++) {
      var A = t[C], D = A.rect;
      D[e] += E, A.label[e] += E;
    }
  }
  function b(E, T) {
    for (var x = [], C = 0, A = 1; A < o; A++) {
      var D = t[A - 1].rect, M = Math.max(t[A].rect[e] - D[e] - D[r], 0);
      x.push(M), C += M;
    }
    if (C) {
      var I = Math.min(Math.abs(E) / C, T);
      if (E > 0)
        for (var A = 0; A < o - 1; A++) {
          var N = x[A] * I;
          y(N, 0, A + 1);
        }
      else
        for (var A = o - 1; A > 0; A--) {
          var N = x[A - 1] * I;
          y(-N, A, o);
        }
    }
  }
  function S(E) {
    var T = E < 0 ? -1 : 1;
    E = Math.abs(E);
    for (var x = Math.ceil(E / (o - 1)), C = 0; C < o - 1; C++)
      if (T > 0 ? y(x, 0, C + 1) : y(-x, o - C - 1, o), E -= x, E <= 0)
        return;
  }
  return u;
}
function x4(t, e, r, n) {
  return nN(t, "x", "width", e, r);
}
function aN(t, e, r, n) {
  return nN(t, "y", "height", e, r);
}
function iN(t) {
  var e = [];
  t.sort(function(g, v) {
    return v.priority - g.priority;
  });
  var r = new Te(0, 0, 0, 0);
  function n(g) {
    if (!g.ignore) {
      var v = g.ensureState("emphasis");
      v.ignore == null && (v.ignore = !1);
    }
    g.ignore = !0;
  }
  for (var a = 0; a < t.length; a++) {
    var i = t[a], o = i.axisAligned, s = i.localRect, l = i.transform, u = i.label, c = i.labelLine;
    r.copy(i.rect), r.width -= 0.1, r.height -= 0.1, r.x += 0.05, r.y += 0.05;
    for (var d = i.obb, p = !1, f = 0; f < e.length; f++) {
      var h = e[f];
      if (r.intersect(h.rect)) {
        if (o && h.axisAligned) {
          p = !0;
          break;
        }
        if (h.obb || (h.obb = new lp(h.localRect, h.transform)), d || (d = new lp(s, l)), d.intersect(h.obb)) {
          p = !0;
          break;
        }
      }
    }
    p ? (n(u), c && n(c)) : (u.attr("ignore", i.defaultAttr.ignore), c && c.attr("ignore", i.defaultAttr.labelGuideIgnore), e.push(i));
  }
}
function C4(t) {
  if (t) {
    for (var e = [], r = 0; r < t.length; r++)
      e.push(t[r].slice());
    return e;
  }
}
function A4(t, e) {
  var r = t.label, n = e && e.getTextGuideLine();
  return {
    dataIndex: t.dataIndex,
    dataType: t.dataType,
    seriesIndex: t.seriesModel.seriesIndex,
    text: t.label.style.text,
    rect: t.hostRect,
    labelRect: t.rect,
    // x: labelAttr.x,
    // y: labelAttr.y,
    align: r.style.align,
    verticalAlign: r.style.verticalAlign,
    labelLinePoints: C4(n && n.shape.points)
  };
}
var yT = ["align", "verticalAlign", "width", "height", "fontSize"], Xt = new Yn(), gg = Oe(), w4 = Oe();
function Yc(t, e, r) {
  for (var n = 0; n < r.length; n++) {
    var a = r[n];
    e[a] != null && (t[a] = e[a]);
  }
}
var Kc = ["x", "y", "rotation"], D4 = (
  /** @class */
  function() {
    function t() {
      this._labelList = [], this._chartViewList = [];
    }
    return t.prototype.clearLabels = function() {
      this._labelList = [], this._chartViewList = [];
    }, t.prototype._addLabel = function(e, r, n, a, i) {
      var o = a.style, s = a.__hostTarget, l = s.textConfig || {}, u = a.getComputedTransform(), c = a.getBoundingRect().plain();
      Te.applyTransform(c, c, u), u ? Xt.setLocalTransform(u) : (Xt.x = Xt.y = Xt.rotation = Xt.originX = Xt.originY = 0, Xt.scaleX = Xt.scaleY = 1), Xt.rotation = _r(Xt.rotation);
      var d = a.__hostTarget, p;
      if (d) {
        p = d.getBoundingRect().plain();
        var f = d.getComputedTransform();
        Te.applyTransform(p, p, f);
      }
      var h = p && d.getTextGuideLine();
      this._labelList.push({
        label: a,
        labelLine: h,
        seriesModel: n,
        dataIndex: e,
        dataType: r,
        layoutOption: i,
        computedLayoutOption: null,
        rect: c,
        hostRect: p,
        // Label with lower priority will be hidden when overlapped
        // Use rect size as default priority
        priority: p ? p.width * p.height : 0,
        // Save default label attributes.
        // For restore if developers want get back to default value in callback.
        defaultAttr: {
          ignore: a.ignore,
          labelGuideIgnore: h && h.ignore,
          x: Xt.x,
          y: Xt.y,
          scaleX: Xt.scaleX,
          scaleY: Xt.scaleY,
          rotation: Xt.rotation,
          style: {
            x: o.x,
            y: o.y,
            align: o.align,
            verticalAlign: o.verticalAlign,
            width: o.width,
            height: o.height,
            fontSize: o.fontSize
          },
          cursor: a.cursor,
          attachedPos: l.position,
          attachedRot: l.rotation
        }
      });
    }, t.prototype.addLabelsOfSeries = function(e) {
      var r = this;
      this._chartViewList.push(e);
      var n = e.__model, a = n.get("labelLayout");
      (ae(a) || Me(a).length) && e.group.traverse(function(i) {
        if (i.ignore)
          return !0;
        var o = i.getTextContent(), s = pe(i);
        o && !o.disableLabelLayout && r._addLabel(s.dataIndex, s.dataType, n, o, a);
      });
    }, t.prototype.updateLayoutConfig = function(e) {
      var r = e.getWidth(), n = e.getHeight();
      function a(y, b) {
        return function() {
          _T(y, b);
        };
      }
      for (var i = 0; i < this._labelList.length; i++) {
        var o = this._labelList[i], s = o.label, l = s.__hostTarget, u = o.defaultAttr, c = void 0;
        ae(o.layoutOption) ? c = o.layoutOption(A4(o, l)) : c = o.layoutOption, c = c || {}, o.computedLayoutOption = c;
        var d = Math.PI / 180;
        l && l.setTextConfig({
          // Force to set local false.
          local: !1,
          // Ignore position and rotation config on the host el if x or y is changed.
          position: c.x != null || c.y != null ? null : u.attachedPos,
          // Ignore rotation config on the host el if rotation is changed.
          rotation: c.rotate != null ? c.rotate * d : u.attachedRot,
          offset: [c.dx || 0, c.dy || 0]
        });
        var p = !1;
        if (c.x != null ? (s.x = q(c.x, r), s.setStyle("x", 0), p = !0) : (s.x = u.x, s.setStyle("x", u.style.x)), c.y != null ? (s.y = q(c.y, n), s.setStyle("y", 0), p = !0) : (s.y = u.y, s.setStyle("y", u.style.y)), c.labelLinePoints) {
          var f = l.getTextGuideLine();
          f && (f.setShape({
            points: c.labelLinePoints
          }), p = !1);
        }
        var h = gg(s);
        h.needsUpdateLabelLine = p, s.rotation = c.rotate != null ? c.rotate * d : u.rotation, s.scaleX = u.scaleX, s.scaleY = u.scaleY;
        for (var g = 0; g < yT.length; g++) {
          var v = yT[g];
          s.setStyle(v, c[v] != null ? c[v] : u.style[v]);
        }
        if (c.draggable) {
          if (s.draggable = !0, s.cursor = "move", l) {
            var m = o.seriesModel;
            if (o.dataIndex != null) {
              var _ = o.seriesModel.getData(o.dataType);
              m = _.getItemModel(o.dataIndex);
            }
            s.on("drag", a(l, m.getModel("labelLine")));
          }
        } else
          s.off("drag"), s.cursor = u.cursor;
      }
    }, t.prototype.layout = function(e) {
      var r = e.getWidth(), n = e.getHeight(), a = rN(this._labelList), i = ze(a, function(l) {
        return l.layoutOption.moveOverlap === "shiftX";
      }), o = ze(a, function(l) {
        return l.layoutOption.moveOverlap === "shiftY";
      });
      x4(i, 0, r), aN(o, 0, n);
      var s = ze(a, function(l) {
        return l.layoutOption.hideOverlap;
      });
      iN(s);
    }, t.prototype.processLabelsOverall = function() {
      var e = this;
      w(this._chartViewList, function(r) {
        var n = r.__model, a = r.ignoreLabelLineUpdate, i = n.isAnimationEnabled();
        r.group.traverse(function(o) {
          if (o.ignore && !o.forceLabelAnimation)
            return !0;
          var s = !a, l = o.getTextContent();
          !s && l && (s = gg(l).needsUpdateLabelLine), s && e._updateLabelLine(o, n), i && e._animateLabels(o, n);
        });
      });
    }, t.prototype._updateLabelLine = function(e, r) {
      var n = e.getTextContent(), a = pe(e), i = a.dataIndex;
      if (n && i != null) {
        var o = r.getData(a.dataType), s = o.getItemModel(i), l = {}, u = o.getItemVisual(i, "style");
        if (u) {
          var c = o.getVisual("drawType");
          l.stroke = u[c];
        }
        var d = s.getModel("labelLine");
        Gy(e, Uy(s), l), _T(e, d);
      }
    }, t.prototype._animateLabels = function(e, r) {
      var n = e.getTextContent(), a = e.getTextGuideLine();
      if (n && (e.forceLabelAnimation || !n.ignore && !n.invisible && !e.disableLabelAnimation && !ss(e))) {
        var i = gg(n), o = i.oldLayout, s = pe(e), l = s.dataIndex, u = {
          x: n.x,
          y: n.y,
          rotation: n.rotation
        }, c = r.getData(s.dataType);
        if (o) {
          n.attr(o);
          var p = e.prevStates;
          p && (xe(p, "select") >= 0 && n.attr(i.oldLayoutSelect), xe(p, "emphasis") >= 0 && n.attr(i.oldLayoutEmphasis)), Fe(n, u, r, l);
        } else if (n.attr(u), !Os(n).valueAnimation) {
          var d = ge(n.style.opacity, 1);
          n.style.opacity = 0, rt(n, {
            style: {
              opacity: d
            }
          }, r, l);
        }
        if (i.oldLayout = u, n.states.select) {
          var f = i.oldLayoutSelect = {};
          Yc(f, u, Kc), Yc(f, n.states.select, Kc);
        }
        if (n.states.emphasis) {
          var h = i.oldLayoutEmphasis = {};
          Yc(h, u, Kc), Yc(h, n.states.emphasis, Kc);
        }
        XD(n, l, c, r, r);
      }
      if (a && !a.ignore && !a.invisible) {
        var i = w4(a), o = i.oldLayout, g = {
          points: a.shape.points
        };
        o ? (a.attr({
          shape: o
        }), Fe(a, {
          shape: g
        }, r)) : (a.setShape(g), a.style.strokePercent = 0, rt(a, {
          style: {
            strokePercent: 1
          }
        }, r)), i.oldLayout = g;
      }
    }, t;
  }()
), vg = Oe();
function pre(t) {
  t.registerUpdateLifecycle("series:beforeupdate", function(e, r, n) {
    var a = vg(r).labelManager;
    a || (a = vg(r).labelManager = new D4()), a.clearLabels();
  }), t.registerUpdateLifecycle("series:layoutlabels", function(e, r, n) {
    var a = vg(r).labelManager;
    n.updatedSeries.forEach(function(i) {
      a.addLabelsOfSeries(r.getViewOfSeriesModel(i));
    }), a.updateLayoutConfig(r), a.layout(r), a.processLabelsOverall();
  });
}
var mg = Math.sin, _g = Math.cos, oN = Math.PI, Ai = Math.PI * 2, M4 = 180 / oN, sN = function() {
  function t() {
  }
  return t.prototype.reset = function(e) {
    this._start = !0, this._d = [], this._str = "", this._p = Math.pow(10, e || 4);
  }, t.prototype.moveTo = function(e, r) {
    this._add("M", e, r);
  }, t.prototype.lineTo = function(e, r) {
    this._add("L", e, r);
  }, t.prototype.bezierCurveTo = function(e, r, n, a, i, o) {
    this._add("C", e, r, n, a, i, o);
  }, t.prototype.quadraticCurveTo = function(e, r, n, a) {
    this._add("Q", e, r, n, a);
  }, t.prototype.arc = function(e, r, n, a, i, o) {
    this.ellipse(e, r, n, n, 0, a, i, o);
  }, t.prototype.ellipse = function(e, r, n, a, i, o, s, l) {
    var u = s - o, c = !l, d = Math.abs(u), p = ka(d - Ai) || (c ? u >= Ai : -u >= Ai), f = u > 0 ? u % Ai : u % Ai + Ai, h = !1;
    p ? h = !0 : ka(d) ? h = !1 : h = f >= oN == !!c;
    var g = e + n * _g(o), v = r + a * mg(o);
    this._start && this._add("M", g, v);
    var m = Math.round(i * M4);
    if (p) {
      var _ = 1 / this._p, y = (c ? 1 : -1) * (Ai - _);
      this._add("A", n, a, m, 1, +c, e + n * _g(o + y), r + a * mg(o + y)), _ > 0.01 && this._add("A", n, a, m, 0, +c, g, v);
    } else {
      var b = e + n * _g(s), S = r + a * mg(s);
      this._add("A", n, a, m, +h, +c, b, S);
    }
  }, t.prototype.rect = function(e, r, n, a) {
    this._add("M", e, r), this._add("l", n, 0), this._add("l", 0, a), this._add("l", -n, 0), this._add("Z");
  }, t.prototype.closePath = function() {
    this._d.length > 0 && this._add("Z");
  }, t.prototype._add = function(e, r, n, a, i, o, s, l, u) {
    for (var c = [], d = this._p, p = 1; p < arguments.length; p++) {
      var f = arguments[p];
      if (isNaN(f)) {
        this._invalid = !0;
        return;
      }
      c.push(Math.round(f * d) / d);
    }
    this._d.push(e + c.join(" ")), this._start = e === "Z";
  }, t.prototype.generateStr = function() {
    this._str = this._invalid ? "" : this._d.join(""), this._d = [];
  }, t.prototype.getStr = function() {
    return this._str;
  }, t;
}(), zy = "none", I4 = Math.round;
function N4(t) {
  var e = t.fill;
  return e != null && e !== zy;
}
function R4(t) {
  var e = t.stroke;
  return e != null && e !== zy;
}
var km = ["lineCap", "miterLimit", "lineJoin"], O4 = $(km, function(t) {
  return "stroke-" + t.toLowerCase();
});
function L4(t, e, r, n) {
  var a = e.opacity == null ? 1 : e.opacity;
  if (r instanceof Bt) {
    t("opacity", a);
    return;
  }
  if (N4(e)) {
    var i = cu(e.fill);
    t("fill", i.color);
    var o = e.fillOpacity != null ? e.fillOpacity * i.opacity * a : i.opacity * a;
    o < 1 && t("fill-opacity", o);
  } else
    t("fill", zy);
  if (R4(e)) {
    var s = cu(e.stroke);
    t("stroke", s.color);
    var l = e.strokeNoScale ? r.getLineScale() : 1, u = l ? (e.lineWidth || 0) / l : 0, c = e.strokeOpacity != null ? e.strokeOpacity * s.opacity * a : s.opacity * a, d = e.strokeFirst;
    if (u !== 1 && t("stroke-width", u), d && t("paint-order", d ? "stroke" : "fill"), c < 1 && t("stroke-opacity", c), e.lineDash) {
      var p = Dy(r), f = p[0], h = p[1];
      f && (h = I4(h || 0), t("stroke-dasharray", f.join(",")), (h || n) && t("stroke-dashoffset", h));
    }
    for (var g = 0; g < km.length; g++) {
      var v = km[g];
      if (e[v] !== op[v]) {
        var m = e[v] || op[v];
        m && t(O4[g], m);
      }
    }
  }
}
var lN = "http://www.w3.org/2000/svg", uN = "http://www.w3.org/1999/xlink", P4 = "http://www.w3.org/2000/xmlns/", k4 = "http://www.w3.org/XML/1998/namespace", bT = "ecmeta_";
function cN(t) {
  return document.createElementNS(lN, t);
}
function At(t, e, r, n, a) {
  return {
    tag: t,
    attrs: r || {},
    children: n,
    text: a,
    key: e
  };
}
function B4(t, e) {
  var r = [];
  if (e)
    for (var n in e) {
      var a = e[n], i = n;
      a !== !1 && (a !== !0 && a != null && (i += '="' + a + '"'), r.push(i));
    }
  return "<" + t + " " + r.join(" ") + ">";
}
function F4(t) {
  return "</" + t + ">";
}
function Vy(t, e) {
  e = e || {};
  var r = e.newline ? `
` : "";
  function n(a) {
    var i = a.children, o = a.tag, s = a.attrs, l = a.text;
    return B4(o, s) + (o !== "style" ? tr(l) : l || "") + (i ? "" + r + $(i, function(u) {
      return n(u);
    }).join(r) + r : "") + F4(o);
  }
  return n(t);
}
function G4(t, e, r) {
  r = r || {};
  var n = r.newline ? `
` : "", a = " {" + n, i = n + "}", o = $(Me(t), function(l) {
    return l + a + $(Me(t[l]), function(u) {
      return u + ":" + t[l][u] + ";";
    }).join(n) + i;
  }).join(n), s = $(Me(e), function(l) {
    return "@keyframes " + l + a + $(Me(e[l]), function(u) {
      return u + a + $(Me(e[l][u]), function(c) {
        var d = e[l][u][c];
        return c === "d" && (d = 'path("' + d + '")'), c + ":" + d + ";";
      }).join(n) + i;
    }).join(n) + i;
  }).join(n);
  return !o && !s ? "" : ["<![CDATA[", o, s, "]]>"].join(n);
}
function Bm(t) {
  return {
    zrId: t,
    shadowCache: {},
    patternCache: {},
    gradientCache: {},
    clipPathCache: {},
    defs: {},
    cssNodes: {},
    cssAnims: {},
    cssStyleCache: {},
    cssAnimIdx: 0,
    shadowIdx: 0,
    gradientIdx: 0,
    patternIdx: 0,
    clipPathIdx: 0
  };
}
function ST(t, e, r, n) {
  return At("svg", "root", {
    width: t,
    height: e,
    xmlns: lN,
    "xmlns:xlink": uN,
    version: "1.1",
    baseProfile: "full",
    viewBox: n ? "0 0 " + t + " " + e : !1
  }, r);
}
var U4 = 0;
function dN() {
  return U4++;
}
var ET = {
  cubicIn: "0.32,0,0.67,0",
  cubicOut: "0.33,1,0.68,1",
  cubicInOut: "0.65,0,0.35,1",
  quadraticIn: "0.11,0,0.5,0",
  quadraticOut: "0.5,1,0.89,1",
  quadraticInOut: "0.45,0,0.55,1",
  quarticIn: "0.5,0,0.75,0",
  quarticOut: "0.25,1,0.5,1",
  quarticInOut: "0.76,0,0.24,1",
  quinticIn: "0.64,0,0.78,0",
  quinticOut: "0.22,1,0.36,1",
  quinticInOut: "0.83,0,0.17,1",
  sinusoidalIn: "0.12,0,0.39,0",
  sinusoidalOut: "0.61,1,0.88,1",
  sinusoidalInOut: "0.37,0,0.63,1",
  exponentialIn: "0.7,0,0.84,0",
  exponentialOut: "0.16,1,0.3,1",
  exponentialInOut: "0.87,0,0.13,1",
  circularIn: "0.55,0,1,0.45",
  circularOut: "0,0.55,0.45,1",
  circularInOut: "0.85,0,0.15,1"
}, Ii = "transform-origin";
function z4(t, e, r) {
  var n = G({}, t.shape);
  G(n, e), t.buildPath(r, n);
  var a = new sN();
  return a.reset(qw(t)), r.rebuildPath(a, 1), a.generateStr(), a.getStr();
}
function V4(t, e) {
  var r = e.originX, n = e.originY;
  (r || n) && (t[Ii] = r + "px " + n + "px");
}
var $4 = {
  fill: "fill",
  opacity: "opacity",
  lineWidth: "stroke-width",
  lineDashOffset: "stroke-dashoffset"
};
function pN(t, e) {
  var r = e.zrId + "-ani-" + e.cssAnimIdx++;
  return e.cssAnims[r] = t, r;
}
function H4(t, e, r) {
  var n = t.shape.paths, a = {}, i, o;
  if (w(n, function(l) {
    var u = Bm(r.zrId);
    u.animation = !0, Rf(l, {}, u, !0);
    var c = u.cssAnims, d = u.cssNodes, p = Me(c), f = p.length;
    if (f) {
      o = p[f - 1];
      var h = c[o];
      for (var g in h) {
        var v = h[g];
        a[g] = a[g] || { d: "" }, a[g].d += v.d || "";
      }
      for (var m in d) {
        var _ = d[m].animation;
        _.indexOf(o) >= 0 && (i = _);
      }
    }
  }), !!i) {
    e.d = !1;
    var s = pN(a, r);
    return i.replace(o, s);
  }
}
function TT(t) {
  return Y(t) ? ET[t] ? "cubic-bezier(" + ET[t] + ")" : Y_(t) ? t : "" : "";
}
function Rf(t, e, r, n) {
  var a = t.animators, i = a.length, o = [];
  if (t instanceof ly) {
    var s = H4(t, e, r);
    if (s)
      o.push(s);
    else if (!i)
      return;
  } else if (!i)
    return;
  for (var l = {}, u = 0; u < i; u++) {
    var c = a[u], d = [c.getMaxTime() / 1e3 + "s"], p = TT(c.getClip().easing), f = c.getDelay();
    p ? d.push(p) : d.push("linear"), f && d.push(f / 1e3 + "s"), c.getLoop() && d.push("infinite");
    var h = d.join(" ");
    l[h] = l[h] || [h, []], l[h][1].push(c);
  }
  function g(_) {
    var y = _[1], b = y.length, S = {}, E = {}, T = {}, x = "animation-timing-function";
    function C(fe, re, ve) {
      for (var j = fe.getTracks(), ce = fe.getMaxTime(), qe = 0; qe < j.length; qe++) {
        var Ge = j[qe];
        if (Ge.needsAnimate()) {
          var We = Ge.keyframes, ye = Ge.propName;
          if (ve && (ye = ve(ye)), ye)
            for (var nt = 0; nt < We.length; nt++) {
              var pt = We[nt], It = Math.round(pt.time / ce * 100) + "%", sn = TT(pt.easing), ln = pt.rawValue;
              (Y(ln) || ke(ln)) && (re[It] = re[It] || {}, re[It][ye] = pt.rawValue, sn && (re[It][x] = sn));
            }
        }
      }
    }
    for (var A = 0; A < b; A++) {
      var D = y[A], M = D.targetName;
      M ? M === "shape" && C(D, E) : !n && C(D, S);
    }
    for (var I in S) {
      var N = {};
      Qw(N, t), G(N, S[I]);
      var R = Yw(N), O = S[I][x];
      T[I] = R ? {
        transform: R
      } : {}, V4(T[I], N), O && (T[I][x] = O);
    }
    var B, L = !0;
    for (var I in E) {
      T[I] = T[I] || {};
      var F = !B, O = E[I][x];
      F && (B = new Pn());
      var U = B.len();
      B.reset(), T[I].d = z4(t, E[I], B);
      var z = B.len();
      if (!F && U !== z) {
        L = !1;
        break;
      }
      O && (T[I][x] = O);
    }
    if (!L)
      for (var I in T)
        delete T[I].d;
    if (!n)
      for (var A = 0; A < b; A++) {
        var D = y[A], M = D.targetName;
        M === "style" && C(D, T, function(j) {
          return $4[j];
        });
      }
    for (var H = Me(T), Z = !0, ee, A = 1; A < H.length; A++) {
      var oe = H[A - 1], Le = H[A];
      if (T[oe][Ii] !== T[Le][Ii]) {
        Z = !1;
        break;
      }
      ee = T[oe][Ii];
    }
    if (Z && ee) {
      for (var I in T)
        T[I][Ii] && delete T[I][Ii];
      e[Ii] = ee;
    }
    if (ze(H, function(fe) {
      return Me(T[fe]).length > 0;
    }).length) {
      var Xe = pN(T, r);
      return Xe + " " + _[0] + " both";
    }
  }
  for (var v in l) {
    var s = g(l[v]);
    s && o.push(s);
  }
  if (o.length) {
    var m = r.zrId + "-cls-" + dN();
    r.cssNodes["." + m] = {
      animation: o.join(",")
    }, e.class = m;
  }
}
function W4(t, e, r) {
  if (!t.ignore)
    if (t.isSilent()) {
      var n = {
        "pointer-events": "none"
      };
      xT(n, e, r);
    } else {
      var a = t.states.emphasis && t.states.emphasis.style ? t.states.emphasis.style : {}, i = a.fill;
      if (!i) {
        var o = t.style && t.style.fill, s = t.states.select && t.states.select.style && t.states.select.style.fill, l = t.currentStates.indexOf("select") >= 0 && s || o;
        l && (i = Zv(l));
      }
      var u = a.lineWidth;
      if (u) {
        var c = !a.strokeNoScale && t.transform ? t.transform[0] : 1;
        u = u / c;
      }
      var n = {
        cursor: "pointer"
      };
      i && (n.fill = i), a.stroke && (n.stroke = a.stroke), u && (n["stroke-width"] = u), xT(n, e, r);
    }
}
function xT(t, e, r, n) {
  var a = JSON.stringify(t), i = r.cssStyleCache[a];
  i || (i = r.zrId + "-cls-" + dN(), r.cssStyleCache[a] = i, r.cssNodes["." + i + ":hover"] = t), e.class = e.class ? e.class + " " + i : i;
}
var Tu = Math.round;
function fN(t) {
  return t && Y(t.src);
}
function hN(t) {
  return t && ae(t.toDataURL);
}
function $y(t, e, r, n) {
  L4(function(a, i) {
    var o = a === "fill" || a === "stroke";
    o && Ww(i) ? vN(e, t, a, n) : o && K_(i) ? mN(r, t, a, n) : t[a] = i, o && n.ssr && i === "none" && (t["pointer-events"] = "visible");
  }, e, r, !1), j4(r, t, n);
}
function Hy(t, e) {
  var r = $F(e);
  r && (r.each(function(n, a) {
    n != null && (t[(bT + a).toLowerCase()] = n + "");
  }), e.isSilent() && (t[bT + "silent"] = "true"));
}
function CT(t) {
  return ka(t[0] - 1) && ka(t[1]) && ka(t[2]) && ka(t[3] - 1);
}
function q4(t) {
  return ka(t[4]) && ka(t[5]);
}
function Wy(t, e, r) {
  if (e && !(q4(e) && CT(e))) {
    var n = 1e4;
    t.transform = CT(e) ? "translate(" + Tu(e[4] * n) / n + " " + Tu(e[5] * n) / n + ")" : dF(e);
  }
}
function AT(t, e, r) {
  for (var n = t.points, a = [], i = 0; i < n.length; i++)
    a.push(Tu(n[i][0] * r) / r), a.push(Tu(n[i][1] * r) / r);
  e.points = a.join(" ");
}
function wT(t) {
  return !t.smooth;
}
function Y4(t) {
  var e = $(t, function(r) {
    return typeof r == "string" ? [r, r] : r;
  });
  return function(r, n, a) {
    for (var i = 0; i < e.length; i++) {
      var o = e[i], s = r[o[0]];
      s != null && (n[o[1]] = Tu(s * a) / a);
    }
  };
}
var K4 = {
  circle: [Y4(["cx", "cy", "r"])],
  polyline: [AT, wT],
  polygon: [AT, wT]
};
function Z4(t) {
  for (var e = t.animators, r = 0; r < e.length; r++)
    if (e[r].targetName === "shape")
      return !0;
  return !1;
}
function gN(t, e) {
  var r = t.style, n = t.shape, a = K4[t.type], i = {}, o = e.animation, s = "path", l = t.style.strokePercent, u = e.compress && qw(t) || 4;
  if (a && !e.willUpdate && !(a[1] && !a[1](n)) && !(o && Z4(t)) && !(l < 1)) {
    s = t.type;
    var c = Math.pow(10, u);
    a[0](n, i, c);
  } else {
    var d = !t.path || t.shapeChanged();
    t.path || t.createPathProxy();
    var p = t.path;
    d && (p.beginPath(), t.buildPath(p, t.shape), t.pathUpdated());
    var f = p.getVersion(), h = t, g = h.__svgPathBuilder;
    (h.__svgPathVersion !== f || !g || l !== h.__svgPathStrokePercent) && (g || (g = h.__svgPathBuilder = new sN()), g.reset(u), p.rebuildPath(g, l), g.generateStr(), h.__svgPathVersion = f, h.__svgPathStrokePercent = l), i.d = g.getStr();
  }
  return Wy(i, t.transform), $y(i, r, t, e), Hy(i, t), e.animation && Rf(t, i, e), e.emphasis && W4(t, i, e), At(s, t.id + "", i);
}
function X4(t, e) {
  var r = t.style, n = r.image;
  if (n && !Y(n) && (fN(n) ? n = n.src : hN(n) && (n = n.toDataURL())), !!n) {
    var a = r.x || 0, i = r.y || 0, o = r.width, s = r.height, l = {
      href: n,
      width: o,
      height: s
    };
    return a && (l.x = a), i && (l.y = i), Wy(l, t.transform), $y(l, r, t, e), Hy(l, t), e.animation && Rf(t, l, e), At("image", t.id + "", l);
  }
}
function Q4(t, e) {
  var r = t.style, n = r.text;
  if (n != null && (n += ""), !(!n || isNaN(r.x) || isNaN(r.y))) {
    var a = r.font || qa, i = r.x || 0, o = fF(r.y || 0, nf(a), r.textBaseline), s = pF[r.textAlign] || r.textAlign, l = {
      "dominant-baseline": "central",
      "text-anchor": s
    };
    if (TD(r)) {
      var u = "", c = r.fontStyle, d = ED(r.fontSize);
      if (!parseFloat(d))
        return;
      var p = r.fontFamily || Sw, f = r.fontWeight;
      u += "font-size:" + d + ";font-family:" + p + ";", c && c !== "normal" && (u += "font-style:" + c + ";"), f && f !== "normal" && (u += "font-weight:" + f + ";"), l.style = u;
    } else
      l.style = "font: " + a;
    return n.match(/\s/) && (l["xml:space"] = "preserve"), i && (l.x = i), o && (l.y = o), Wy(l, t.transform), $y(l, r, t, e), Hy(l, t), e.animation && Rf(t, l, e), At("text", t.id + "", l, void 0, n);
  }
}
function DT(t, e) {
  if (t instanceof Ce)
    return gN(t, e);
  if (t instanceof Bt)
    return X4(t, e);
  if (t instanceof vs)
    return Q4(t, e);
}
function j4(t, e, r) {
  var n = t.style;
  if (hF(n)) {
    var a = gF(t), i = r.shadowCache, o = i[a];
    if (!o) {
      var s = t.getGlobalScale(), l = s[0], u = s[1];
      if (!l || !u)
        return;
      var c = n.shadowOffsetX || 0, d = n.shadowOffsetY || 0, p = n.shadowBlur, f = cu(n.shadowColor), h = f.opacity, g = f.color, v = p / 2 / l, m = p / 2 / u, _ = v + " " + m;
      o = r.zrId + "-s" + r.shadowIdx++, r.defs[o] = At("filter", o, {
        id: o,
        x: "-100%",
        y: "-100%",
        width: "300%",
        height: "300%"
      }, [
        At("feDropShadow", "", {
          dx: c / l,
          dy: d / u,
          stdDeviation: _,
          "flood-color": g,
          "flood-opacity": h
        })
      ]), i[a] = o;
    }
    e.filter = rf(o);
  }
}
function vN(t, e, r, n) {
  var a = t[r], i, o = {
    gradientUnits: a.global ? "userSpaceOnUse" : "objectBoundingBox"
  };
  if ($w(a))
    i = "linearGradient", o.x1 = a.x, o.y1 = a.y, o.x2 = a.x2, o.y2 = a.y2;
  else if (Hw(a))
    i = "radialGradient", o.cx = ge(a.x, 0.5), o.cy = ge(a.y, 0.5), o.r = ge(a.r, 0.5);
  else
    return;
  for (var s = a.colorStops, l = [], u = 0, c = s.length; u < c; ++u) {
    var d = Xv(s[u].offset) * 100 + "%", p = s[u].color, f = cu(p), h = f.color, g = f.opacity, v = {
      offset: d
    };
    v["stop-color"] = h, g < 1 && (v["stop-opacity"] = g), l.push(At("stop", u + "", v));
  }
  var m = At(i, "", o, l), _ = Vy(m), y = n.gradientCache, b = y[_];
  b || (b = n.zrId + "-g" + n.gradientIdx++, y[_] = b, o.id = b, n.defs[b] = At(i, b, o, l)), e[r] = rf(b);
}
function mN(t, e, r, n) {
  var a = t.style[r], i = t.getBoundingRect(), o = {}, s = a.repeat, l = s === "no-repeat", u = s === "repeat-x", c = s === "repeat-y", d;
  if (Vw(a)) {
    var p = a.imageWidth, f = a.imageHeight, h = void 0, g = a.image;
    if (Y(g) ? h = g : fN(g) ? h = g.src : hN(g) && (h = g.toDataURL()), typeof Image > "u") {
      var v = "Image width/height must been given explictly in svg-ssr renderer.";
      ar(p, v), ar(f, v);
    } else if (p == null || f == null) {
      var m = function(A, D) {
        if (A) {
          var M = A.elm, I = p || D.width, N = f || D.height;
          A.tag === "pattern" && (u ? (N = 1, I /= i.width) : c && (I = 1, N /= i.height)), A.attrs.width = I, A.attrs.height = N, M && (M.setAttribute("width", I), M.setAttribute("height", N));
        }
      }, _ = ey(h, null, t, function(A) {
        l || m(E, A), m(d, A);
      });
      _ && _.width && _.height && (p = p || _.width, f = f || _.height);
    }
    d = At("image", "img", {
      href: h,
      width: p,
      height: f
    }), o.width = p, o.height = f;
  } else a.svgElement && (d = le(a.svgElement), o.width = a.svgWidth, o.height = a.svgHeight);
  if (d) {
    var y, b;
    l ? y = b = 1 : u ? (b = 1, y = o.width / i.width) : c ? (y = 1, b = o.height / i.height) : o.patternUnits = "userSpaceOnUse", y != null && !isNaN(y) && (o.width = y), b != null && !isNaN(b) && (o.height = b);
    var S = Yw(a);
    S && (o.patternTransform = S);
    var E = At("pattern", "", o, [d]), T = Vy(E), x = n.patternCache, C = x[T];
    C || (C = n.zrId + "-p" + n.patternIdx++, x[T] = C, o.id = C, E = n.defs[C] = At("pattern", C, o, [d])), e[r] = rf(C);
  }
}
function J4(t, e, r) {
  var n = r.clipPathCache, a = r.defs, i = n[t.id];
  if (!i) {
    i = r.zrId + "-c" + r.clipPathIdx++;
    var o = {
      id: i
    };
    n[t.id] = i, a[i] = At("clipPath", i, o, [gN(t, r)]);
  }
  e["clip-path"] = rf(i);
}
function MT(t) {
  return document.createTextNode(t);
}
function Bi(t, e, r) {
  t.insertBefore(e, r);
}
function IT(t, e) {
  t.removeChild(e);
}
function NT(t, e) {
  t.appendChild(e);
}
function _N(t) {
  return t.parentNode;
}
function yN(t) {
  return t.nextSibling;
}
function yg(t, e) {
  t.textContent = e;
}
var RT = 58, eV = 120, tV = At("", "");
function Fm(t) {
  return t === void 0;
}
function yn(t) {
  return t !== void 0;
}
function rV(t, e, r) {
  for (var n = {}, a = e; a <= r; ++a) {
    var i = t[a].key;
    i !== void 0 && (n[i] = a);
  }
  return n;
}
function Ml(t, e) {
  var r = t.key === e.key, n = t.tag === e.tag;
  return n && r;
}
function xu(t) {
  var e, r = t.children, n = t.tag;
  if (yn(n)) {
    var a = t.elm = cN(n);
    if (qy(tV, t), V(r))
      for (e = 0; e < r.length; ++e) {
        var i = r[e];
        i != null && NT(a, xu(i));
      }
    else yn(t.text) && !se(t.text) && NT(a, MT(t.text));
  } else
    t.elm = MT(t.text);
  return t.elm;
}
function bN(t, e, r, n, a) {
  for (; n <= a; ++n) {
    var i = r[n];
    i != null && Bi(t, xu(i), e);
  }
}
function Cp(t, e, r, n) {
  for (; r <= n; ++r) {
    var a = e[r];
    if (a != null)
      if (yn(a.tag)) {
        var i = _N(a.elm);
        IT(i, a.elm);
      } else
        IT(t, a.elm);
  }
}
function qy(t, e) {
  var r, n = e.elm, a = t && t.attrs || {}, i = e.attrs || {};
  if (a !== i) {
    for (r in i) {
      var o = i[r], s = a[r];
      s !== o && (o === !0 ? n.setAttribute(r, "") : o === !1 ? n.removeAttribute(r) : r === "style" ? n.style.cssText = o : r.charCodeAt(0) !== eV ? n.setAttribute(r, o) : r === "xmlns:xlink" || r === "xmlns" ? n.setAttributeNS(P4, r, o) : r.charCodeAt(3) === RT ? n.setAttributeNS(k4, r, o) : r.charCodeAt(5) === RT ? n.setAttributeNS(uN, r, o) : n.setAttribute(r, o));
    }
    for (r in a)
      r in i || n.removeAttribute(r);
  }
}
function nV(t, e, r) {
  for (var n = 0, a = 0, i = e.length - 1, o = e[0], s = e[i], l = r.length - 1, u = r[0], c = r[l], d, p, f, h; n <= i && a <= l; )
    o == null ? o = e[++n] : s == null ? s = e[--i] : u == null ? u = r[++a] : c == null ? c = r[--l] : Ml(o, u) ? (Xo(o, u), o = e[++n], u = r[++a]) : Ml(s, c) ? (Xo(s, c), s = e[--i], c = r[--l]) : Ml(o, c) ? (Xo(o, c), Bi(t, o.elm, yN(s.elm)), o = e[++n], c = r[--l]) : Ml(s, u) ? (Xo(s, u), Bi(t, s.elm, o.elm), s = e[--i], u = r[++a]) : (Fm(d) && (d = rV(e, n, i)), p = d[u.key], Fm(p) ? Bi(t, xu(u), o.elm) : (f = e[p], f.tag !== u.tag ? Bi(t, xu(u), o.elm) : (Xo(f, u), e[p] = void 0, Bi(t, f.elm, o.elm))), u = r[++a]);
  (n <= i || a <= l) && (n > i ? (h = r[l + 1] == null ? null : r[l + 1].elm, bN(t, h, r, a, l)) : Cp(t, e, n, i));
}
function Xo(t, e) {
  var r = e.elm = t.elm, n = t.children, a = e.children;
  t !== e && (qy(t, e), Fm(e.text) ? yn(n) && yn(a) ? n !== a && nV(r, n, a) : yn(a) ? (yn(t.text) && yg(r, ""), bN(r, null, a, 0, a.length - 1)) : yn(n) ? Cp(r, n, 0, n.length - 1) : yn(t.text) && yg(r, "") : t.text !== e.text && (yn(n) && Cp(r, n, 0, n.length - 1), yg(r, e.text)));
}
function aV(t, e) {
  if (Ml(t, e))
    Xo(t, e);
  else {
    var r = t.elm, n = _N(r);
    xu(e), n !== null && (Bi(n, e.elm, yN(r)), Cp(n, [t], 0, 0));
  }
  return e;
}
var iV = 0, oV = function() {
  function t(e, r, n) {
    if (this.type = "svg", this.refreshHover = OT(), this.configLayer = OT(), this.storage = r, this._opts = n = G({}, n), this.root = e, this._id = "zr" + iV++, this._oldVNode = ST(n.width, n.height), e && !n.ssr) {
      var a = this._viewport = document.createElement("div");
      a.style.cssText = "position:relative;overflow:hidden";
      var i = this._svgDom = this._oldVNode.elm = cN("svg");
      qy(null, this._oldVNode), a.appendChild(i), e.appendChild(a);
    }
    this.resize(n.width, n.height);
  }
  return t.prototype.getType = function() {
    return this.type;
  }, t.prototype.getViewportRoot = function() {
    return this._viewport;
  }, t.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, t.prototype.getSvgDom = function() {
    return this._svgDom;
  }, t.prototype.refresh = function() {
    if (this.root) {
      var e = this.renderToVNode({
        willUpdate: !0
      });
      e.attrs.style = "position:absolute;left:0;top:0;user-select:none", aV(this._oldVNode, e), this._oldVNode = e;
    }
  }, t.prototype.renderOneToVNode = function(e) {
    return DT(e, Bm(this._id));
  }, t.prototype.renderToVNode = function(e) {
    e = e || {};
    var r = this.storage.getDisplayList(!0), n = this._width, a = this._height, i = Bm(this._id);
    i.animation = e.animation, i.willUpdate = e.willUpdate, i.compress = e.compress, i.emphasis = e.emphasis, i.ssr = this._opts.ssr;
    var o = [], s = this._bgVNode = sV(n, a, this._backgroundColor, i);
    s && o.push(s);
    var l = e.compress ? null : this._mainVNode = At("g", "main", {}, []);
    this._paintList(r, i, l ? l.children : o), l && o.push(l);
    var u = $(Me(i.defs), function(p) {
      return i.defs[p];
    });
    if (u.length && o.push(At("defs", "defs", {}, u)), e.animation) {
      var c = G4(i.cssNodes, i.cssAnims, { newline: !0 });
      if (c) {
        var d = At("style", "stl", {}, [], c);
        o.push(d);
      }
    }
    return ST(n, a, o, e.useViewBox);
  }, t.prototype.renderToString = function(e) {
    return e = e || {}, Vy(this.renderToVNode({
      animation: ge(e.cssAnimation, !0),
      emphasis: ge(e.cssEmphasis, !0),
      willUpdate: !1,
      compress: !0,
      useViewBox: ge(e.useViewBox, !0)
    }), { newline: !0 });
  }, t.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e;
  }, t.prototype.getSvgRoot = function() {
    return this._mainVNode && this._mainVNode.elm;
  }, t.prototype._paintList = function(e, r, n) {
    for (var a = e.length, i = [], o = 0, s, l, u = 0, c = 0; c < a; c++) {
      var d = e[c];
      if (!d.invisible) {
        var p = d.__clipPaths, f = p && p.length || 0, h = l && l.length || 0, g = void 0;
        for (g = Math.max(f - 1, h - 1); g >= 0 && !(p && l && p[g] === l[g]); g--)
          ;
        for (var v = h - 1; v > g; v--)
          o--, s = i[o - 1];
        for (var m = g + 1; m < f; m++) {
          var _ = {};
          J4(p[m], _, r);
          var y = At("g", "clip-g-" + u++, _, []);
          (s ? s.children : n).push(y), i[o++] = y, s = y;
        }
        l = p;
        var b = DT(d, r);
        b && (s ? s.children : n).push(b);
      }
    }
  }, t.prototype.resize = function(e, r) {
    var n = this._opts, a = this.root, i = this._viewport;
    if (e != null && (n.width = e), r != null && (n.height = r), a && i && (i.style.display = "none", e = ns(a, 0, n), r = ns(a, 1, n), i.style.display = ""), this._width !== e || this._height !== r) {
      if (this._width = e, this._height = r, i) {
        var o = i.style;
        o.width = e + "px", o.height = r + "px";
      }
      if (K_(this._backgroundColor))
        this.refresh();
      else {
        var s = this._svgDom;
        s && (s.setAttribute("width", e), s.setAttribute("height", r));
        var l = this._bgVNode && this._bgVNode.elm;
        l && (l.setAttribute("width", e), l.setAttribute("height", r));
      }
    }
  }, t.prototype.getWidth = function() {
    return this._width;
  }, t.prototype.getHeight = function() {
    return this._height;
  }, t.prototype.dispose = function() {
    this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;
  }, t.prototype.clear = function() {
    this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null;
  }, t.prototype.toDataURL = function(e) {
    var r = this.renderToString(), n = "data:image/svg+xml;";
    return e ? (r = mF(r), r && n + "base64," + r) : n + "charset=UTF-8," + encodeURIComponent(r);
  }, t;
}();
function OT(t) {
  return function() {
  };
}
function sV(t, e, r, n) {
  var a;
  if (r && r !== "none")
    if (a = At("rect", "bg", {
      width: t,
      height: e,
      x: "0",
      y: "0"
    }), Ww(r))
      vN({ fill: r }, a.attrs, "fill", n);
    else if (K_(r))
      mN({
        style: {
          fill: r
        },
        dirty: dt,
        getBoundingRect: function() {
          return { width: t, height: e };
        }
      }, a.attrs, "fill", n);
    else {
      var i = cu(r), o = i.color, s = i.opacity;
      a.attrs.fill = o, s < 1 && (a.attrs["fill-opacity"] = s);
    }
  return a;
}
function fre(t) {
  t.registerPainter("svg", oV);
}
function LT(t, e, r) {
  var n = Ya.createCanvas(), a = e.getWidth(), i = e.getHeight(), o = n.style;
  return o && (o.position = "absolute", o.left = "0", o.top = "0", o.width = a + "px", o.height = i + "px", n.setAttribute("data-zr-dom-id", t)), n.width = a * r, n.height = i * r, n;
}
var bg = function(t) {
  k(e, t);
  function e(r, n, a) {
    var i = t.call(this) || this;
    i.motionBlur = !1, i.lastFrameAlpha = 0.7, i.dpr = 1, i.virtual = !1, i.config = {}, i.incremental = !1, i.zlevel = 0, i.maxRepaintRectCount = 5, i.__dirty = !0, i.__firstTimePaint = !0, i.__used = !1, i.__drawIndex = 0, i.__startIndex = 0, i.__endIndex = 0, i.__prevStartIndex = null, i.__prevEndIndex = null;
    var o;
    a = a || ap, typeof r == "string" ? o = LT(r, n, a) : se(r) && (o = r, r = o.id), i.id = r, i.dom = o;
    var s = o.style;
    return s && (ww(o), o.onselectstart = function() {
      return !1;
    }, s.padding = "0", s.margin = "0", s.borderWidth = "0"), i.painter = n, i.dpr = a, i;
  }
  return e.prototype.getElementCount = function() {
    return this.__endIndex - this.__startIndex;
  }, e.prototype.afterBrush = function() {
    this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
  }, e.prototype.initContext = function() {
    this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
  }, e.prototype.setUnpainted = function() {
    this.__firstTimePaint = !0;
  }, e.prototype.createBackBuffer = function() {
    var r = this.dpr;
    this.domBack = LT("back-" + this.id, this.painter, r), this.ctxBack = this.domBack.getContext("2d"), r !== 1 && this.ctxBack.scale(r, r);
  }, e.prototype.createRepaintRects = function(r, n, a, i) {
    if (this.__firstTimePaint)
      return this.__firstTimePaint = !1, null;
    var o = [], s = this.maxRepaintRectCount, l = !1, u = new Te(0, 0, 0, 0);
    function c(_) {
      if (!(!_.isFinite() || _.isZero()))
        if (o.length === 0) {
          var y = new Te(0, 0, 0, 0);
          y.copy(_), o.push(y);
        } else {
          for (var b = !1, S = 1 / 0, E = 0, T = 0; T < o.length; ++T) {
            var x = o[T];
            if (x.intersect(_)) {
              var C = new Te(0, 0, 0, 0);
              C.copy(x), C.union(_), o[T] = C, b = !0;
              break;
            } else if (l) {
              u.copy(_), u.union(x);
              var A = _.width * _.height, D = x.width * x.height, M = u.width * u.height, I = M - A - D;
              I < S && (S = I, E = T);
            }
          }
          if (l && (o[E].union(_), b = !0), !b) {
            var y = new Te(0, 0, 0, 0);
            y.copy(_), o.push(y);
          }
          l || (l = o.length >= s);
        }
    }
    for (var d = this.__startIndex; d < this.__endIndex; ++d) {
      var p = r[d];
      if (p) {
        var f = p.shouldBePainted(a, i, !0, !0), h = p.__isRendered && (p.__dirty & Mn || !f) ? p.getPrevPaintRect() : null;
        h && c(h);
        var g = f && (p.__dirty & Mn || !p.__isRendered) ? p.getPaintRect() : null;
        g && c(g);
      }
    }
    for (var d = this.__prevStartIndex; d < this.__prevEndIndex; ++d) {
      var p = n[d], f = p && p.shouldBePainted(a, i, !0, !0);
      if (p && (!f || !p.__zr) && p.__isRendered) {
        var h = p.getPrevPaintRect();
        h && c(h);
      }
    }
    var v;
    do {
      v = !1;
      for (var d = 0; d < o.length; ) {
        if (o[d].isZero()) {
          o.splice(d, 1);
          continue;
        }
        for (var m = d + 1; m < o.length; )
          o[d].intersect(o[m]) ? (v = !0, o[d].union(o[m]), o.splice(m, 1)) : m++;
        d++;
      }
    } while (v);
    return this._paintRects = o, o;
  }, e.prototype.debugGetPaintRects = function() {
    return (this._paintRects || []).slice();
  }, e.prototype.resize = function(r, n) {
    var a = this.dpr, i = this.dom, o = i.style, s = this.domBack;
    o && (o.width = r + "px", o.height = n + "px"), i.width = r * a, i.height = n * a, s && (s.width = r * a, s.height = n * a, a !== 1 && this.ctxBack.scale(a, a));
  }, e.prototype.clear = function(r, n, a) {
    var i = this.dom, o = this.ctx, s = i.width, l = i.height;
    n = n || this.clearColor;
    var u = this.motionBlur && !r, c = this.lastFrameAlpha, d = this.dpr, p = this;
    u && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(i, 0, 0, s / d, l / d));
    var f = this.domBack;
    function h(g, v, m, _) {
      if (o.clearRect(g, v, m, _), n && n !== "transparent") {
        var y = void 0;
        if (Jp(n)) {
          var b = n.global || n.__width === m && n.__height === _;
          y = b && n.__canvasGradient || Dm(o, n, {
            x: 0,
            y: 0,
            width: m,
            height: _
          }), n.__canvasGradient = y, n.__width = m, n.__height = _;
        } else xB(n) && (n.scaleX = n.scaleX || d, n.scaleY = n.scaleY || d, y = Mm(o, n, {
          dirty: function() {
            p.setUnpainted(), p.painter.refresh();
          }
        }));
        o.save(), o.fillStyle = y || n, o.fillRect(g, v, m, _), o.restore();
      }
      u && (o.save(), o.globalAlpha = c, o.drawImage(f, g, v, m, _), o.restore());
    }
    !a || u ? h(0, 0, s, l) : a.length && w(a, function(g) {
      h(g.x * d, g.y * d, g.width * d, g.height * d);
    });
  }, e;
}(Gr), PT = 1e5, wi = 314159, Zc = 0.01, lV = 1e-3;
function uV(t) {
  return t ? t.__builtin__ ? !0 : !(typeof t.resize != "function" || typeof t.refresh != "function") : !1;
}
function cV(t, e) {
  var r = document.createElement("div");
  return r.style.cssText = [
    "position:relative",
    "width:" + t + "px",
    "height:" + e + "px",
    "padding:0",
    "margin:0",
    "border-width:0"
  ].join(";") + ";", r;
}
var dV = function() {
  function t(e, r, n, a) {
    this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
    var i = !e.nodeName || e.nodeName.toUpperCase() === "CANVAS";
    this._opts = n = G({}, n || {}), this.dpr = n.devicePixelRatio || ap, this._singleCanvas = i, this.root = e;
    var o = e.style;
    o && (ww(e), e.innerHTML = ""), this.storage = r;
    var s = this._zlevelList;
    this._prevDisplayList = [];
    var l = this._layers;
    if (i) {
      var c = e, d = c.width, p = c.height;
      n.width != null && (d = n.width), n.height != null && (p = n.height), this.dpr = n.devicePixelRatio || 1, c.width = d * this.dpr, c.height = p * this.dpr, this._width = d, this._height = p;
      var f = new bg(c, this, this.dpr);
      f.__builtin__ = !0, f.initContext(), l[wi] = f, f.zlevel = wi, s.push(wi), this._domRoot = e;
    } else {
      this._width = ns(e, 0, n), this._height = ns(e, 1, n);
      var u = this._domRoot = cV(this._width, this._height);
      e.appendChild(u);
    }
  }
  return t.prototype.getType = function() {
    return "canvas";
  }, t.prototype.isSingleCanvas = function() {
    return this._singleCanvas;
  }, t.prototype.getViewportRoot = function() {
    return this._domRoot;
  }, t.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, t.prototype.refresh = function(e) {
    var r = this.storage.getDisplayList(!0), n = this._prevDisplayList, a = this._zlevelList;
    this._redrawId = Math.random(), this._paintList(r, n, e, this._redrawId);
    for (var i = 0; i < a.length; i++) {
      var o = a[i], s = this._layers[o];
      if (!s.__builtin__ && s.refresh) {
        var l = i === 0 ? this._backgroundColor : null;
        s.refresh(l);
      }
    }
    return this._opts.useDirtyRect && (this._prevDisplayList = r.slice()), this;
  }, t.prototype.refreshHover = function() {
    this._paintHoverList(this.storage.getDisplayList(!1));
  }, t.prototype._paintHoverList = function(e) {
    var r = e.length, n = this._hoverlayer;
    if (n && n.clear(), !!r) {
      for (var a = {
        inHover: !0,
        viewWidth: this._width,
        viewHeight: this._height
      }, i, o = 0; o < r; o++) {
        var s = e[o];
        s.__inHover && (n || (n = this._hoverlayer = this.getLayer(PT)), i || (i = n.ctx, i.save()), Yi(i, s, a, o === r - 1));
      }
      i && i.restore();
    }
  }, t.prototype.getHoverLayer = function() {
    return this.getLayer(PT);
  }, t.prototype.paintOne = function(e, r) {
    aI(e, r);
  }, t.prototype._paintList = function(e, r, n, a) {
    if (this._redrawId === a) {
      n = n || !1, this._updateLayerStatus(e);
      var i = this._doPaintList(e, r, n), o = i.finished, s = i.needsRefreshHover;
      if (this._needsManuallyCompositing && this._compositeManually(), s && this._paintHoverList(e), o)
        this.eachLayer(function(u) {
          u.afterBrush && u.afterBrush();
        });
      else {
        var l = this;
        Jd(function() {
          l._paintList(e, r, n, a);
        });
      }
    }
  }, t.prototype._compositeManually = function() {
    var e = this.getLayer(wi).ctx, r = this._domRoot.width, n = this._domRoot.height;
    e.clearRect(0, 0, r, n), this.eachBuiltinLayer(function(a) {
      a.virtual && e.drawImage(a.dom, 0, 0, r, n);
    });
  }, t.prototype._doPaintList = function(e, r, n) {
    for (var a = this, i = [], o = this._opts.useDirtyRect, s = 0; s < this._zlevelList.length; s++) {
      var l = this._zlevelList[s], u = this._layers[l];
      u.__builtin__ && u !== this._hoverlayer && (u.__dirty || n) && i.push(u);
    }
    for (var c = !0, d = !1, p = function(g) {
      var v = i[g], m = v.ctx, _ = o && v.createRepaintRects(e, r, f._width, f._height), y = n ? v.__startIndex : v.__drawIndex, b = !n && v.incremental && Date.now, S = b && Date.now(), E = v.zlevel === f._zlevelList[0] ? f._backgroundColor : null;
      if (v.__startIndex === v.__endIndex)
        v.clear(!1, E, _);
      else if (y === v.__startIndex) {
        var T = e[y];
        (!T.incremental || !T.notClear || n) && v.clear(!1, E, _);
      }
      y === -1 && (console.error("For some unknown reason. drawIndex is -1"), y = v.__startIndex);
      var x, C = function(I) {
        var N = {
          inHover: !1,
          allClipped: !1,
          prevEl: null,
          viewWidth: a._width,
          viewHeight: a._height
        };
        for (x = y; x < v.__endIndex; x++) {
          var R = e[x];
          if (R.__inHover && (d = !0), a._doPaintEl(R, v, o, I, N, x === v.__endIndex - 1), b) {
            var O = Date.now() - S;
            if (O > 15)
              break;
          }
        }
        N.prevElClipPaths && m.restore();
      };
      if (_)
        if (_.length === 0)
          x = v.__endIndex;
        else
          for (var A = f.dpr, D = 0; D < _.length; ++D) {
            var M = _[D];
            m.save(), m.beginPath(), m.rect(M.x * A, M.y * A, M.width * A, M.height * A), m.clip(), C(M), m.restore();
          }
      else
        m.save(), C(), m.restore();
      v.__drawIndex = x, v.__drawIndex < v.__endIndex && (c = !1);
    }, f = this, h = 0; h < i.length; h++)
      p(h);
    return Ae.wxa && w(this._layers, function(g) {
      g && g.ctx && g.ctx.draw && g.ctx.draw();
    }), {
      finished: c,
      needsRefreshHover: d
    };
  }, t.prototype._doPaintEl = function(e, r, n, a, i, o) {
    var s = r.ctx;
    if (n) {
      var l = e.getPaintRect();
      (!a || l && l.intersect(a)) && (Yi(s, e, i, o), e.setPrevPaintRect(l));
    } else
      Yi(s, e, i, o);
  }, t.prototype.getLayer = function(e, r) {
    this._singleCanvas && !this._needsManuallyCompositing && (e = wi);
    var n = this._layers[e];
    return n || (n = new bg("zr_" + e, this, this.dpr), n.zlevel = e, n.__builtin__ = !0, this._layerConfig[e] ? be(n, this._layerConfig[e], !0) : this._layerConfig[e - Zc] && be(n, this._layerConfig[e - Zc], !0), r && (n.virtual = r), this.insertLayer(e, n), n.initContext()), n;
  }, t.prototype.insertLayer = function(e, r) {
    var n = this._layers, a = this._zlevelList, i = a.length, o = this._domRoot, s = null, l = -1;
    if (!n[e] && uV(r)) {
      if (i > 0 && e > a[0]) {
        for (l = 0; l < i - 1 && !(a[l] < e && a[l + 1] > e); l++)
          ;
        s = n[a[l]];
      }
      if (a.splice(l + 1, 0, e), n[e] = r, !r.virtual)
        if (s) {
          var u = s.dom;
          u.nextSibling ? o.insertBefore(r.dom, u.nextSibling) : o.appendChild(r.dom);
        } else
          o.firstChild ? o.insertBefore(r.dom, o.firstChild) : o.appendChild(r.dom);
      r.painter || (r.painter = this);
    }
  }, t.prototype.eachLayer = function(e, r) {
    for (var n = this._zlevelList, a = 0; a < n.length; a++) {
      var i = n[a];
      e.call(r, this._layers[i], i);
    }
  }, t.prototype.eachBuiltinLayer = function(e, r) {
    for (var n = this._zlevelList, a = 0; a < n.length; a++) {
      var i = n[a], o = this._layers[i];
      o.__builtin__ && e.call(r, o, i);
    }
  }, t.prototype.eachOtherLayer = function(e, r) {
    for (var n = this._zlevelList, a = 0; a < n.length; a++) {
      var i = n[a], o = this._layers[i];
      o.__builtin__ || e.call(r, o, i);
    }
  }, t.prototype.getLayers = function() {
    return this._layers;
  }, t.prototype._updateLayerStatus = function(e) {
    this.eachBuiltinLayer(function(d, p) {
      d.__dirty = d.__used = !1;
    });
    function r(d) {
      i && (i.__endIndex !== d && (i.__dirty = !0), i.__endIndex = d);
    }
    if (this._singleCanvas)
      for (var n = 1; n < e.length; n++) {
        var a = e[n];
        if (a.zlevel !== e[n - 1].zlevel || a.incremental) {
          this._needsManuallyCompositing = !0;
          break;
        }
      }
    var i = null, o = 0, s, l;
    for (l = 0; l < e.length; l++) {
      var a = e[l], u = a.zlevel, c = void 0;
      s !== u && (s = u, o = 0), a.incremental ? (c = this.getLayer(u + lV, this._needsManuallyCompositing), c.incremental = !0, o = 1) : c = this.getLayer(u + (o > 0 ? Zc : 0), this._needsManuallyCompositing), c.__builtin__ || U_("ZLevel " + u + " has been used by unkown layer " + c.id), c !== i && (c.__used = !0, c.__startIndex !== l && (c.__dirty = !0), c.__startIndex = l, c.incremental ? c.__drawIndex = -1 : c.__drawIndex = l, r(l), i = c), a.__dirty & Mn && !a.__inHover && (c.__dirty = !0, c.incremental && c.__drawIndex < 0 && (c.__drawIndex = l));
    }
    r(l), this.eachBuiltinLayer(function(d, p) {
      !d.__used && d.getElementCount() > 0 && (d.__dirty = !0, d.__startIndex = d.__endIndex = d.__drawIndex = 0), d.__dirty && d.__drawIndex < 0 && (d.__drawIndex = d.__startIndex);
    });
  }, t.prototype.clear = function() {
    return this.eachBuiltinLayer(this._clearLayer), this;
  }, t.prototype._clearLayer = function(e) {
    e.clear();
  }, t.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e, w(this._layers, function(r) {
      r.setUnpainted();
    });
  }, t.prototype.configLayer = function(e, r) {
    if (r) {
      var n = this._layerConfig;
      n[e] ? be(n[e], r, !0) : n[e] = r;
      for (var a = 0; a < this._zlevelList.length; a++) {
        var i = this._zlevelList[a];
        if (i === e || i === e + Zc) {
          var o = this._layers[i];
          be(o, n[e], !0);
        }
      }
    }
  }, t.prototype.delLayer = function(e) {
    var r = this._layers, n = this._zlevelList, a = r[e];
    a && (a.dom.parentNode.removeChild(a.dom), delete r[e], n.splice(xe(n, e), 1));
  }, t.prototype.resize = function(e, r) {
    if (this._domRoot.style) {
      var n = this._domRoot;
      n.style.display = "none";
      var a = this._opts, i = this.root;
      if (e != null && (a.width = e), r != null && (a.height = r), e = ns(i, 0, a), r = ns(i, 1, a), n.style.display = "", this._width !== e || r !== this._height) {
        n.style.width = e + "px", n.style.height = r + "px";
        for (var o in this._layers)
          this._layers.hasOwnProperty(o) && this._layers[o].resize(e, r);
        this.refresh(!0);
      }
      this._width = e, this._height = r;
    } else {
      if (e == null || r == null)
        return;
      this._width = e, this._height = r, this.getLayer(wi).resize(e, r);
    }
    return this;
  }, t.prototype.clearLayer = function(e) {
    var r = this._layers[e];
    r && r.clear();
  }, t.prototype.dispose = function() {
    this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
  }, t.prototype.getRenderedCanvas = function(e) {
    if (e = e || {}, this._singleCanvas && !this._compositeManually)
      return this._layers[wi].dom;
    var r = new bg("image", this, e.pixelRatio || this.dpr);
    r.initContext(), r.clear(!1, e.backgroundColor || this._backgroundColor);
    var n = r.ctx;
    if (e.pixelRatio <= this.dpr) {
      this.refresh();
      var a = r.dom.width, i = r.dom.height;
      this.eachLayer(function(d) {
        d.__builtin__ ? n.drawImage(d.dom, 0, 0, a, i) : d.renderToCanvas && (n.save(), d.renderToCanvas(n), n.restore());
      });
    } else
      for (var o = {
        inHover: !1,
        viewWidth: this._width,
        viewHeight: this._height
      }, s = this.storage.getDisplayList(!0), l = 0, u = s.length; l < u; l++) {
        var c = s[l];
        Yi(n, c, o, l === u - 1);
      }
    return r.dom;
  }, t.prototype.getWidth = function() {
    return this._width;
  }, t.prototype.getHeight = function() {
    return this._height;
  }, t;
}();
function hre(t) {
  t.registerPainter("canvas", dV);
}
var pV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r;
    }
    return e.prototype.getInitialData = function(r) {
      return da(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getLegendIcon = function(r) {
      var n = new de(), a = mt("line", 0, r.itemHeight / 2, r.itemWidth, 0, r.lineStyle.stroke, !1);
      n.add(a), a.setStyle(r.lineStyle);
      var i = this.getData().getVisual("symbol"), o = this.getData().getVisual("symbolRotate"), s = i === "none" ? "circle" : i, l = r.itemHeight * 0.8, u = mt(s, (r.itemWidth - l) / 2, (r.itemHeight - l) / 2, l, l, r.itemStyle.fill);
      n.add(u), u.setStyle(r.itemStyle);
      var c = r.iconRotate === "inherit" ? o : r.iconRotate || 0;
      return u.rotation = c * Math.PI / 180, u.setOrigin([r.itemWidth / 2, r.itemHeight / 2]), s.indexOf("empty") > -1 && (u.style.stroke = u.style.fill, u.style.fill = "#fff", u.style.lineWidth = 2), n;
    }, e.type = "series.line", e.dependencies = ["grid", "polar"], e.defaultOption = {
      // zlevel: 0,
      z: 3,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      clip: !0,
      label: {
        position: "top"
      },
      // itemStyle: {
      // },
      endLabel: {
        show: !1,
        valueAnimation: !0,
        distance: 8
      },
      lineStyle: {
        width: 2,
        type: "solid"
      },
      emphasis: {
        scale: !0
      },
      // areaStyle: {
      // origin of areaStyle. Valid values:
      // `'auto'/null/undefined`: from axisLine to data
      // `'start'`: from min to data
      // `'end'`: from data to max
      // origin: 'auto'
      // },
      // false, 'start', 'end', 'middle'
      step: !1,
      // Disabled if step is true
      smooth: !1,
      smoothMonotone: null,
      symbol: "emptyCircle",
      symbolSize: 4,
      symbolRotate: null,
      showSymbol: !0,
      // `false`: follow the label interval strategy.
      // `true`: show all symbols.
      // `'auto'`: If possible, show all symbols, otherwise
      //           follow the label interval strategy.
      showAllSymbol: "auto",
      // Whether to connect break point.
      connectNulls: !1,
      // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.
      sampling: "none",
      animationEasing: "linear",
      // Disable progressive
      progressive: 0,
      hoverLayerThreshold: 1 / 0,
      universalTransition: {
        divideShape: "clone"
      },
      triggerLineEvent: !1
    }, e;
  }(et)
);
function Ss(t, e) {
  var r = t.mapDimensionsAll("defaultedLabel"), n = r.length;
  if (n === 1) {
    var a = _s(t, e, r[0]);
    return a != null ? a + "" : null;
  } else if (n) {
    for (var i = [], o = 0; o < r.length; o++)
      i.push(_s(t, e, r[o]));
    return i.join(" ");
  }
}
function SN(t, e) {
  var r = t.mapDimensionsAll("defaultedLabel");
  if (!V(e))
    return e + "";
  for (var n = [], a = 0; a < r.length; a++) {
    var i = t.getDimensionIndex(r[a]);
    i >= 0 && n.push(e[i]);
  }
  return n.join(" ");
}
var ju = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i) {
      var o = t.call(this) || this;
      return o.updateData(r, n, a, i), o;
    }
    return e.prototype._createSymbol = function(r, n, a, i, o) {
      this.removeAll();
      var s = mt(r, -1, -1, 2, 2, null, o);
      s.attr({
        z2: 100,
        culling: !0,
        scaleX: i[0] / 2,
        scaleY: i[1] / 2
      }), s.drift = fV, this._symbolType = r, this.add(s);
    }, e.prototype.stopSymbolAnimation = function(r) {
      this.childAt(0).stopAnimation(null, r);
    }, e.prototype.getSymbolType = function() {
      return this._symbolType;
    }, e.prototype.getSymbolPath = function() {
      return this.childAt(0);
    }, e.prototype.highlight = function() {
      na(this.childAt(0));
    }, e.prototype.downplay = function() {
      aa(this.childAt(0));
    }, e.prototype.setZ = function(r, n) {
      var a = this.childAt(0);
      a.zlevel = r, a.z = n;
    }, e.prototype.setDraggable = function(r, n) {
      var a = this.childAt(0);
      a.draggable = r, a.cursor = !n && r ? "move" : a.cursor;
    }, e.prototype.updateData = function(r, n, a, i) {
      this.silent = !1;
      var o = r.getItemVisual(n, "symbol") || "circle", s = r.hostModel, l = e.getSymbolSize(r, n), u = o !== this._symbolType, c = i && i.disableAnimation;
      if (u) {
        var d = r.getItemVisual(n, "symbolKeepAspect");
        this._createSymbol(o, r, n, l, d);
      } else {
        var p = this.childAt(0);
        p.silent = !1;
        var f = {
          scaleX: l[0] / 2,
          scaleY: l[1] / 2
        };
        c ? p.attr(f) : Fe(p, f, s, n), rn(p);
      }
      if (this._updateCommon(r, n, l, a, i), u) {
        var p = this.childAt(0);
        if (!c) {
          var f = {
            scaleX: this._sizeX,
            scaleY: this._sizeY,
            style: {
              // Always fadeIn. Because it has fadeOut animation when symbol is removed..
              opacity: p.style.opacity
            }
          };
          p.scaleX = p.scaleY = 0, p.style.opacity = 0, rt(p, f, s, n);
        }
      }
      c && this.childAt(0).stopAnimation("leave");
    }, e.prototype._updateCommon = function(r, n, a, i, o) {
      var s = this.childAt(0), l = r.hostModel, u, c, d, p, f, h, g, v, m;
      if (i && (u = i.emphasisItemStyle, c = i.blurItemStyle, d = i.selectItemStyle, p = i.focus, f = i.blurScope, g = i.labelStatesModels, v = i.hoverScale, m = i.cursorStyle, h = i.emphasisDisabled), !i || r.hasItemOption) {
        var _ = i && i.itemModel ? i.itemModel : r.getItemModel(n), y = _.getModel("emphasis");
        u = y.getModel("itemStyle").getItemStyle(), d = _.getModel(["select", "itemStyle"]).getItemStyle(), c = _.getModel(["blur", "itemStyle"]).getItemStyle(), p = y.get("focus"), f = y.get("blurScope"), h = y.get("disabled"), g = Dt(_), v = y.getShallow("scale"), m = _.getShallow("cursor");
      }
      var b = r.getItemVisual(n, "symbolRotate");
      s.attr("rotation", (b || 0) * Math.PI / 180 || 0);
      var S = mo(r.getItemVisual(n, "symbolOffset"), a);
      S && (s.x = S[0], s.y = S[1]), m && s.attr("cursor", m);
      var E = r.getItemVisual(n, "style"), T = E.fill;
      if (s instanceof Bt) {
        var x = s.style;
        s.useStyle(G({
          // TODO other properties like x, y ?
          image: x.image,
          x: x.x,
          y: x.y,
          width: x.width,
          height: x.height
        }, E));
      } else
        s.__isEmptyBrush ? s.useStyle(G({}, E)) : s.useStyle(E), s.style.decal = null, s.setColor(T, o && o.symbolInnerColor), s.style.strokeNoScale = !0;
      var C = r.getItemVisual(n, "liftZ"), A = this._z2;
      C != null ? A == null && (this._z2 = s.z2, s.z2 += C) : A != null && (s.z2 = A, this._z2 = null);
      var D = o && o.useNameLabel;
      Vt(s, g, {
        labelFetcher: l,
        labelDataIndex: n,
        defaultText: M,
        inheritColor: T,
        defaultOpacity: E.opacity
      });
      function M(R) {
        return D ? r.getName(R) : Ss(r, R);
      }
      this._sizeX = a[0] / 2, this._sizeY = a[1] / 2;
      var I = s.ensureState("emphasis");
      I.style = u, s.ensureState("select").style = d, s.ensureState("blur").style = c;
      var N = v == null || v === !0 ? Math.max(1.1, 3 / this._sizeY) : isFinite(v) && v > 0 ? +v : 1;
      I.scaleX = this._sizeX * N, I.scaleY = this._sizeY * N, this.setSymbolScale(1), lt(this, p, f, h);
    }, e.prototype.setSymbolScale = function(r) {
      this.scaleX = this.scaleY = r;
    }, e.prototype.fadeOut = function(r, n, a) {
      var i = this.childAt(0), o = pe(this).dataIndex, s = a && a.animation;
      if (this.silent = i.silent = !0, a && a.fadeLabel) {
        var l = i.getTextContent();
        l && Za(l, {
          style: {
            opacity: 0
          }
        }, n, {
          dataIndex: o,
          removeOpt: s,
          cb: function() {
            i.removeTextContent();
          }
        });
      } else
        i.removeTextContent();
      Za(i, {
        style: {
          opacity: 0
        },
        scaleX: 0,
        scaleY: 0
      }, n, {
        dataIndex: o,
        cb: r,
        removeOpt: s
      });
    }, e.getSymbolSize = function(r, n) {
      return Us(r.getItemVisual(n, "symbolSize"));
    }, e;
  }(de)
);
function fV(t, e) {
  this.parent.drift(t, e);
}
function Sg(t, e, r, n) {
  return e && !isNaN(e[0]) && !isNaN(e[1]) && !(n.isIgnore && n.isIgnore(r)) && !(n.clipShape && !n.clipShape.contain(e[0], e[1])) && t.getItemVisual(r, "symbol") !== "none";
}
function kT(t) {
  return t != null && !se(t) && (t = {
    isIgnore: t
  }), t || {};
}
function BT(t) {
  var e = t.hostModel, r = e.getModel("emphasis");
  return {
    emphasisItemStyle: r.getModel("itemStyle").getItemStyle(),
    blurItemStyle: e.getModel(["blur", "itemStyle"]).getItemStyle(),
    selectItemStyle: e.getModel(["select", "itemStyle"]).getItemStyle(),
    focus: r.get("focus"),
    blurScope: r.get("blurScope"),
    emphasisDisabled: r.get("disabled"),
    hoverScale: r.get("scale"),
    labelStatesModels: Dt(e),
    cursorStyle: e.get("cursor")
  };
}
var Ju = (
  /** @class */
  function() {
    function t(e) {
      this.group = new de(), this._SymbolCtor = e || ju;
    }
    return t.prototype.updateData = function(e, r) {
      this._progressiveEls = null, r = kT(r);
      var n = this.group, a = e.hostModel, i = this._data, o = this._SymbolCtor, s = r.disableAnimation, l = BT(e), u = {
        disableAnimation: s
      }, c = r.getSymbolPoint || function(d) {
        return e.getItemLayout(d);
      };
      i || n.removeAll(), e.diff(i).add(function(d) {
        var p = c(d);
        if (Sg(e, p, d, r)) {
          var f = new o(e, d, l, u);
          f.setPosition(p), e.setItemGraphicEl(d, f), n.add(f);
        }
      }).update(function(d, p) {
        var f = i.getItemGraphicEl(p), h = c(d);
        if (!Sg(e, h, d, r)) {
          n.remove(f);
          return;
        }
        var g = e.getItemVisual(d, "symbol") || "circle", v = f && f.getSymbolType && f.getSymbolType();
        if (!f || v && v !== g)
          n.remove(f), f = new o(e, d, l, u), f.setPosition(h);
        else {
          f.updateData(e, d, l, u);
          var m = {
            x: h[0],
            y: h[1]
          };
          s ? f.attr(m) : Fe(f, m, a);
        }
        n.add(f), e.setItemGraphicEl(d, f);
      }).remove(function(d) {
        var p = i.getItemGraphicEl(d);
        p && p.fadeOut(function() {
          n.remove(p);
        }, a);
      }).execute(), this._getSymbolPoint = c, this._data = e;
    }, t.prototype.updateLayout = function() {
      var e = this, r = this._data;
      r && r.eachItemGraphicEl(function(n, a) {
        var i = e._getSymbolPoint(a);
        n.setPosition(i), n.markRedraw();
      });
    }, t.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = BT(e), this._data = null, this.group.removeAll();
    }, t.prototype.incrementalUpdate = function(e, r, n) {
      this._progressiveEls = [], n = kT(n);
      function a(l) {
        l.isGroup || (l.incremental = !0, l.ensureState("emphasis").hoverLayer = !0);
      }
      for (var i = e.start; i < e.end; i++) {
        var o = r.getItemLayout(i);
        if (Sg(r, o, i, n)) {
          var s = new this._SymbolCtor(r, i, this._seriesScope);
          s.traverse(a), s.setPosition(o), this.group.add(s), r.setItemGraphicEl(i, s), this._progressiveEls.push(s);
        }
      }
    }, t.prototype.eachRendered = function(e) {
      ei(this._progressiveEls || this.group, e);
    }, t.prototype.remove = function(e) {
      var r = this.group, n = this._data;
      n && e ? n.eachItemGraphicEl(function(a) {
        a.fadeOut(function() {
          r.remove(a);
        }, n.hostModel);
      }) : r.removeAll();
    }, t;
  }()
);
function EN(t, e, r) {
  var n = t.getBaseAxis(), a = t.getOtherAxis(n), i = hV(a, r), o = n.dim, s = a.dim, l = e.mapDimension(s), u = e.mapDimension(o), c = s === "x" || s === "radius" ? 1 : 0, d = $(t.dimensions, function(h) {
    return e.mapDimension(h);
  }), p = !1, f = e.getCalculationInfo("stackResultDimension");
  return Qa(
    e,
    d[0]
    /* , dims[1] */
  ) && (p = !0, d[0] = f), Qa(
    e,
    d[1]
    /* , dims[0] */
  ) && (p = !0, d[1] = f), {
    dataDimsForPoint: d,
    valueStart: i,
    valueAxisDim: s,
    baseAxisDim: o,
    stacked: !!p,
    valueDim: l,
    baseDim: u,
    baseDataOffset: c,
    stackedOverDimension: e.getCalculationInfo("stackedOverDimension")
  };
}
function hV(t, e) {
  var r = 0, n = t.scale.getExtent();
  return e === "start" ? r = n[0] : e === "end" ? r = n[1] : ke(e) && !isNaN(e) ? r = e : n[0] > 0 ? r = n[0] : n[1] < 0 && (r = n[1]), r;
}
function TN(t, e, r, n) {
  var a = NaN;
  t.stacked && (a = r.get(r.getCalculationInfo("stackedOverDimension"), n)), isNaN(a) && (a = t.valueStart);
  var i = t.baseDataOffset, o = [];
  return o[i] = r.get(t.baseDim, n), o[1 - i] = a, e.dataToPoint(o);
}
function gV(t, e) {
  var r = [];
  return e.diff(t).add(function(n) {
    r.push({
      cmd: "+",
      idx: n
    });
  }).update(function(n, a) {
    r.push({
      cmd: "=",
      idx: a,
      idx1: n
    });
  }).remove(function(n) {
    r.push({
      cmd: "-",
      idx: n
    });
  }).execute(), r;
}
function vV(t, e, r, n, a, i, o, s) {
  for (var l = gV(t, e), u = [], c = [], d = [], p = [], f = [], h = [], g = [], v = EN(a, e, o), m = t.getLayout("points") || [], _ = e.getLayout("points") || [], y = 0; y < l.length; y++) {
    var b = l[y], S = !0, E = void 0, T = void 0;
    switch (b.cmd) {
      case "=":
        E = b.idx * 2, T = b.idx1 * 2;
        var x = m[E], C = m[E + 1], A = _[T], D = _[T + 1];
        (isNaN(x) || isNaN(C)) && (x = A, C = D), u.push(x, C), c.push(A, D), d.push(r[E], r[E + 1]), p.push(n[T], n[T + 1]), g.push(e.getRawIndex(b.idx1));
        break;
      case "+":
        var M = b.idx, I = v.dataDimsForPoint, N = a.dataToPoint([e.get(I[0], M), e.get(I[1], M)]);
        T = M * 2, u.push(N[0], N[1]), c.push(_[T], _[T + 1]);
        var R = TN(v, a, e, M);
        d.push(R[0], R[1]), p.push(n[T], n[T + 1]), g.push(e.getRawIndex(M));
        break;
      case "-":
        S = !1;
    }
    S && (f.push(b), h.push(h.length));
  }
  h.sort(function(oe, Le) {
    return g[oe] - g[Le];
  });
  for (var O = u.length, B = An(O), L = An(O), F = An(O), U = An(O), z = [], y = 0; y < h.length; y++) {
    var H = h[y], Z = y * 2, ee = H * 2;
    B[Z] = u[ee], B[Z + 1] = u[ee + 1], L[Z] = c[ee], L[Z + 1] = c[ee + 1], F[Z] = d[ee], F[Z + 1] = d[ee + 1], U[Z] = p[ee], U[Z + 1] = p[ee + 1], z[y] = f[H];
  }
  return {
    current: B,
    next: L,
    stackedOnCurrent: F,
    stackedOnNext: U,
    status: z
  };
}
var ba = Math.min, Sa = Math.max;
function ro(t, e) {
  return isNaN(t) || isNaN(e);
}
function Gm(t, e, r, n, a, i, o, s, l) {
  for (var u, c, d, p, f, h, g = r, v = 0; v < n; v++) {
    var m = e[g * 2], _ = e[g * 2 + 1];
    if (g >= a || g < 0)
      break;
    if (ro(m, _)) {
      if (l) {
        g += i;
        continue;
      }
      break;
    }
    if (g === r)
      t[i > 0 ? "moveTo" : "lineTo"](m, _), d = m, p = _;
    else {
      var y = m - u, b = _ - c;
      if (y * y + b * b < 0.5) {
        g += i;
        continue;
      }
      if (o > 0) {
        for (var S = g + i, E = e[S * 2], T = e[S * 2 + 1]; E === m && T === _ && v < n; )
          v++, S += i, g += i, E = e[S * 2], T = e[S * 2 + 1], m = e[g * 2], _ = e[g * 2 + 1], y = m - u, b = _ - c;
        var x = v + 1;
        if (l)
          for (; ro(E, T) && x < n; )
            x++, S += i, E = e[S * 2], T = e[S * 2 + 1];
        var C = 0.5, A = 0, D = 0, M = void 0, I = void 0;
        if (x >= n || ro(E, T))
          f = m, h = _;
        else {
          A = E - u, D = T - c;
          var N = m - u, R = E - m, O = _ - c, B = T - _, L = void 0, F = void 0;
          if (s === "x") {
            L = Math.abs(N), F = Math.abs(R);
            var U = A > 0 ? 1 : -1;
            f = m - U * L * o, h = _, M = m + U * F * o, I = _;
          } else if (s === "y") {
            L = Math.abs(O), F = Math.abs(B);
            var z = D > 0 ? 1 : -1;
            f = m, h = _ - z * L * o, M = m, I = _ + z * F * o;
          } else
            L = Math.sqrt(N * N + O * O), F = Math.sqrt(R * R + B * B), C = F / (F + L), f = m - A * o * (1 - C), h = _ - D * o * (1 - C), M = m + A * o * C, I = _ + D * o * C, M = ba(M, Sa(E, m)), I = ba(I, Sa(T, _)), M = Sa(M, ba(E, m)), I = Sa(I, ba(T, _)), A = M - m, D = I - _, f = m - A * L / F, h = _ - D * L / F, f = ba(f, Sa(u, m)), h = ba(h, Sa(c, _)), f = Sa(f, ba(u, m)), h = Sa(h, ba(c, _)), A = m - f, D = _ - h, M = m + A * F / L, I = _ + D * F / L;
        }
        t.bezierCurveTo(d, p, f, h, m, _), d = M, p = I;
      } else
        t.lineTo(m, _);
    }
    u = m, c = _, g += i;
  }
  return v;
}
var xN = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.smooth = 0, this.smoothConstraint = !0;
    }
    return t;
  }()
), mV = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "ec-polyline", n;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new xN();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.points, i = 0, o = a.length / 2;
      if (n.connectNulls) {
        for (; o > 0 && ro(a[o * 2 - 2], a[o * 2 - 1]); o--)
          ;
        for (; i < o && ro(a[i * 2], a[i * 2 + 1]); i++)
          ;
      }
      for (; i < o; )
        i += Gm(r, a, i, o, o, 1, n.smooth, n.smoothMonotone, n.connectNulls) + 1;
    }, e.prototype.getPointOn = function(r, n) {
      this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
      for (var a = this.path, i = a.data, o = Pn.CMD, s, l, u = n === "x", c = [], d = 0; d < i.length; ) {
        var p = i[d++], f = void 0, h = void 0, g = void 0, v = void 0, m = void 0, _ = void 0, y = void 0;
        switch (p) {
          case o.M:
            s = i[d++], l = i[d++];
            break;
          case o.L:
            if (f = i[d++], h = i[d++], y = u ? (r - s) / (f - s) : (r - l) / (h - l), y <= 1 && y >= 0) {
              var b = u ? (h - l) * y + l : (f - s) * y + s;
              return u ? [r, b] : [b, r];
            }
            s = f, l = h;
            break;
          case o.C:
            f = i[d++], h = i[d++], g = i[d++], v = i[d++], m = i[d++], _ = i[d++];
            var S = u ? ep(s, f, g, m, r, c) : ep(l, h, v, _, r, c);
            if (S > 0)
              for (var E = 0; E < S; E++) {
                var T = c[E];
                if (T <= 1 && T >= 0) {
                  var b = u ? xt(l, h, v, _, T) : xt(s, f, g, m, T);
                  return u ? [r, b] : [b, r];
                }
              }
            s = m, l = _;
            break;
        }
      }
    }, e;
  }(Ce)
), _V = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e;
  }(xN)
), CN = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "ec-polygon", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new _V();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.points, i = n.stackedOnPoints, o = 0, s = a.length / 2, l = n.smoothMonotone;
      if (n.connectNulls) {
        for (; s > 0 && ro(a[s * 2 - 2], a[s * 2 - 1]); s--)
          ;
        for (; o < s && ro(a[o * 2], a[o * 2 + 1]); o++)
          ;
      }
      for (; o < s; ) {
        var u = Gm(r, a, o, s, s, 1, n.smooth, l, n.connectNulls);
        Gm(r, i, o + u - 1, u, s, -1, n.stackedOnSmooth, l, n.connectNulls), o += u + 1, r.closePath();
      }
    }, e;
  }(Ce)
);
function AN(t, e, r, n, a) {
  var i = t.getArea(), o = i.x, s = i.y, l = i.width, u = i.height, c = r.get(["lineStyle", "width"]) || 0;
  o -= c / 2, s -= c / 2, l += c, u += c, l = Math.ceil(l), o !== Math.floor(o) && (o = Math.floor(o), l++);
  var d = new Re({
    shape: {
      x: o,
      y: s,
      width: l,
      height: u
    }
  });
  if (e) {
    var p = t.getBaseAxis(), f = p.isHorizontal(), h = p.inverse;
    f ? (h && (d.shape.x += l), d.shape.width = 0) : (h || (d.shape.y += u), d.shape.height = 0);
    var g = ae(a) ? function(v) {
      a(v, d);
    } : null;
    rt(d, {
      shape: {
        width: l,
        height: u,
        x: o,
        y: s
      }
    }, r, null, n, g);
  }
  return d;
}
function wN(t, e, r) {
  var n = t.getArea(), a = ut(n.r0, 1), i = ut(n.r, 1), o = new or({
    shape: {
      cx: ut(t.cx, 1),
      cy: ut(t.cy, 1),
      r0: a,
      r: i,
      startAngle: n.startAngle,
      endAngle: n.endAngle,
      clockwise: n.clockwise
    }
  });
  if (e) {
    var s = t.getBaseAxis().dim === "angle";
    s ? o.shape.endAngle = n.startAngle : o.shape.r = a, rt(o, {
      shape: {
        endAngle: n.endAngle,
        r: i
      }
    }, r);
  }
  return o;
}
function ec(t, e, r, n, a) {
  if (t) {
    if (t.type === "polar")
      return wN(t, e, r);
    if (t.type === "cartesian2d")
      return AN(t, e, r, n, a);
  } else return null;
  return null;
}
function yo(t, e) {
  return t.type === e;
}
function FT(t, e) {
  if (t.length === e.length) {
    for (var r = 0; r < t.length; r++)
      if (t[r] !== e[r])
        return;
    return !0;
  }
}
function GT(t) {
  for (var e = 1 / 0, r = 1 / 0, n = -1 / 0, a = -1 / 0, i = 0; i < t.length; ) {
    var o = t[i++], s = t[i++];
    isNaN(o) || (e = Math.min(o, e), n = Math.max(o, n)), isNaN(s) || (r = Math.min(s, r), a = Math.max(s, a));
  }
  return [[e, r], [n, a]];
}
function UT(t, e) {
  var r = GT(t), n = r[0], a = r[1], i = GT(e), o = i[0], s = i[1];
  return Math.max(Math.abs(n[0] - o[0]), Math.abs(n[1] - o[1]), Math.abs(a[0] - s[0]), Math.abs(a[1] - s[1]));
}
function zT(t) {
  return ke(t) ? t : t ? 0.5 : 0;
}
function yV(t, e, r) {
  if (!r.valueDim)
    return [];
  for (var n = e.count(), a = An(n * 2), i = 0; i < n; i++) {
    var o = TN(r, t, e, i);
    a[i * 2] = o[0], a[i * 2 + 1] = o[1];
  }
  return a;
}
function Ea(t, e, r, n, a) {
  var i = r.getBaseAxis(), o = i.dim === "x" || i.dim === "radius" ? 0 : 1, s = [], l = 0, u = [], c = [], d = [], p = [];
  if (a) {
    for (l = 0; l < t.length; l += 2) {
      var f = e || t;
      !isNaN(f[l]) && !isNaN(f[l + 1]) && p.push(t[l], t[l + 1]);
    }
    t = p;
  }
  for (l = 0; l < t.length - 2; l += 2)
    switch (d[0] = t[l + 2], d[1] = t[l + 3], c[0] = t[l], c[1] = t[l + 1], s.push(c[0], c[1]), n) {
      case "end":
        u[o] = d[o], u[1 - o] = c[1 - o], s.push(u[0], u[1]);
        break;
      case "middle":
        var h = (c[o] + d[o]) / 2, g = [];
        u[o] = g[o] = h, u[1 - o] = c[1 - o], g[1 - o] = d[1 - o], s.push(u[0], u[1]), s.push(g[0], g[1]);
        break;
      default:
        u[o] = c[o], u[1 - o] = d[1 - o], s.push(u[0], u[1]);
    }
  return s.push(t[l++], t[l++]), s;
}
function bV(t, e) {
  var r = [], n = t.length, a, i;
  function o(c, d, p) {
    var f = c.coord, h = (p - f) / (d.coord - f), g = uF(h, [c.color, d.color]);
    return {
      coord: p,
      color: g
    };
  }
  for (var s = 0; s < n; s++) {
    var l = t[s], u = l.coord;
    if (u < 0)
      a = l;
    else if (u > e) {
      i ? r.push(o(i, l, e)) : a && r.push(o(a, l, 0), o(a, l, e));
      break;
    } else
      a && (r.push(o(a, l, 0)), a = null), r.push(l), i = l;
  }
  return r;
}
function SV(t, e, r) {
  var n = t.getVisual("visualMeta");
  if (!(!n || !n.length || !t.count()) && e.type === "cartesian2d") {
    for (var a, i, o = n.length - 1; o >= 0; o--) {
      var s = t.getDimensionInfo(n[o].dimension);
      if (a = s && s.coordDim, a === "x" || a === "y") {
        i = n[o];
        break;
      }
    }
    if (i) {
      var l = e.getAxis(a), u = $(i.stops, function(y) {
        return {
          coord: l.toGlobalCoord(l.dataToCoord(y.value)),
          color: y.color
        };
      }), c = u.length, d = i.outerColors.slice();
      c && u[0].coord > u[c - 1].coord && (u.reverse(), d.reverse());
      var p = bV(u, a === "x" ? r.getWidth() : r.getHeight()), f = p.length;
      if (!f && c)
        return u[0].coord < 0 ? d[1] ? d[1] : u[c - 1].color : d[0] ? d[0] : u[0].color;
      var h = 10, g = p[0].coord - h, v = p[f - 1].coord + h, m = v - g;
      if (m < 1e-3)
        return "transparent";
      w(p, function(y) {
        y.offset = (y.coord - g) / m;
      }), p.push({
        // NOTE: inRangeStopLen may still be 0 if stoplen is zero.
        offset: f ? p[f - 1].offset : 0.5,
        color: d[1] || "transparent"
      }), p.unshift({
        offset: f ? p[0].offset : 0.5,
        color: d[0] || "transparent"
      });
      var _ = new Wu(0, 0, 0, 0, p, !0);
      return _[a] = g, _[a + "2"] = v, _;
    }
  }
}
function EV(t, e, r) {
  var n = t.get("showAllSymbol"), a = n === "auto";
  if (!(n && !a)) {
    var i = r.getAxesByScale("ordinal")[0];
    if (i && !(a && TV(i, e))) {
      var o = e.mapDimension(i.dim), s = {};
      return w(i.getViewLabels(), function(l) {
        var u = i.scale.getRawOrdinalNumber(l.tickValue);
        s[u] = 1;
      }), function(l) {
        return !s.hasOwnProperty(e.get(o, l));
      };
    }
  }
}
function TV(t, e) {
  var r = t.getExtent(), n = Math.abs(r[1] - r[0]) / t.scale.count();
  isNaN(n) && (n = 0);
  for (var a = e.count(), i = Math.max(1, Math.round(a / 5)), o = 0; o < a; o += i)
    if (ju.getSymbolSize(
      e,
      o
      // Only for cartesian, where `isHorizontal` exists.
    )[t.isHorizontal() ? 1 : 0] * 1.5 > n)
      return !1;
  return !0;
}
function xV(t, e) {
  return isNaN(t) || isNaN(e);
}
function CV(t) {
  for (var e = t.length / 2; e > 0 && xV(t[e * 2 - 2], t[e * 2 - 1]); e--)
    ;
  return e - 1;
}
function VT(t, e) {
  return [t[e * 2], t[e * 2 + 1]];
}
function AV(t, e, r) {
  for (var n = t.length / 2, a = r === "x" ? 0 : 1, i, o, s = 0, l = -1, u = 0; u < n; u++)
    if (o = t[u * 2 + a], !(isNaN(o) || isNaN(t[u * 2 + 1 - a]))) {
      if (u === 0) {
        i = o;
        continue;
      }
      if (i <= e && o >= e || i >= e && o <= e) {
        l = u;
        break;
      }
      s = u, i = o;
    }
  return {
    range: [s, l],
    t: (e - i) / (o - i)
  };
}
function DN(t) {
  if (t.get(["endLabel", "show"]))
    return !0;
  for (var e = 0; e < ir.length; e++)
    if (t.get([ir[e], "endLabel", "show"]))
      return !0;
  return !1;
}
function Eg(t, e, r, n) {
  if (yo(e, "cartesian2d")) {
    var a = n.getModel("endLabel"), i = a.get("valueAnimation"), o = n.getData(), s = {
      lastFrameIndex: 0
    }, l = DN(n) ? function(f, h) {
      t._endLabelOnDuring(f, h, o, s, i, a, e);
    } : null, u = e.getBaseAxis().isHorizontal(), c = AN(e, r, n, function() {
      var f = t._endLabel;
      f && r && s.originalX != null && f.attr({
        x: s.originalX,
        y: s.originalY
      });
    }, l);
    if (!n.get("clip", !0)) {
      var d = c.shape, p = Math.max(d.width, d.height);
      u ? (d.y -= p, d.height += p * 2) : (d.x -= p, d.width += p * 2);
    }
    return l && l(1, c), c;
  } else
    return wN(e, r, n);
}
function wV(t, e) {
  var r = e.getBaseAxis(), n = r.isHorizontal(), a = r.inverse, i = n ? a ? "right" : "left" : "center", o = n ? "middle" : a ? "top" : "bottom";
  return {
    normal: {
      align: t.get("align") || i,
      verticalAlign: t.get("verticalAlign") || o
    }
  };
}
var DV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.init = function() {
      var r = new de(), n = new Ju();
      this.group.add(n.group), this._symbolDraw = n, this._lineGroup = r, this._changePolyState = K(this._changePolyState, this);
    }, e.prototype.render = function(r, n, a) {
      var i = r.coordinateSystem, o = this.group, s = r.getData(), l = r.getModel("lineStyle"), u = r.getModel("areaStyle"), c = s.getLayout("points") || [], d = i.type === "polar", p = this._coordSys, f = this._symbolDraw, h = this._polyline, g = this._polygon, v = this._lineGroup, m = !n.ssr && r.get("animation"), _ = !u.isEmpty(), y = u.get("origin"), b = EN(i, s, y), S = _ && yV(i, s, b), E = r.get("showSymbol"), T = r.get("connectNulls"), x = E && !d && EV(r, s, i), C = this._data;
      C && C.eachItemGraphicEl(function(oe, Le) {
        oe.__temp && (o.remove(oe), C.setItemGraphicEl(Le, null));
      }), E || f.remove(), o.add(v);
      var A = d ? !1 : r.get("step"), D;
      i && i.getArea && r.get("clip", !0) && (D = i.getArea(), D.width != null ? (D.x -= 0.1, D.y -= 0.1, D.width += 0.2, D.height += 0.2) : D.r0 && (D.r0 -= 0.5, D.r += 0.5)), this._clipShapeForSymbol = D;
      var M = SV(s, i, a) || s.getVisual("style")[s.getVisual("drawType")];
      if (!(h && p.type === i.type && A === this._step))
        E && f.updateData(s, {
          isIgnore: x,
          clipShape: D,
          disableAnimation: !0,
          getSymbolPoint: function(oe) {
            return [c[oe * 2], c[oe * 2 + 1]];
          }
        }), m && this._initSymbolLabelAnimation(s, i, D), A && (S && (S = Ea(S, c, i, A, T)), c = Ea(c, null, i, A, T)), h = this._newPolyline(c), _ ? g = this._newPolygon(c, S) : g && (v.remove(g), g = this._polygon = null), d || this._initOrUpdateEndLabel(r, i, uo(M)), v.setClipPath(Eg(this, i, !0, r));
      else {
        _ && !g ? g = this._newPolygon(c, S) : g && !_ && (v.remove(g), g = this._polygon = null), d || this._initOrUpdateEndLabel(r, i, uo(M));
        var I = v.getClipPath();
        if (I) {
          var N = Eg(this, i, !1, r);
          rt(I, {
            shape: N.shape
          }, r);
        } else
          v.setClipPath(Eg(this, i, !0, r));
        E && f.updateData(s, {
          isIgnore: x,
          clipShape: D,
          disableAnimation: !0,
          getSymbolPoint: function(oe) {
            return [c[oe * 2], c[oe * 2 + 1]];
          }
        }), (!FT(this._stackedOnPoints, S) || !FT(this._points, c)) && (m ? this._doUpdateAnimation(s, S, i, a, A, y, T) : (A && (S && (S = Ea(S, c, i, A, T)), c = Ea(c, null, i, A, T)), h.setShape({
          points: c
        }), g && g.setShape({
          points: c,
          stackedOnPoints: S
        })));
      }
      var R = r.getModel("emphasis"), O = R.get("focus"), B = R.get("blurScope"), L = R.get("disabled");
      if (h.useStyle(ie(
        // Use color in lineStyle first
        l.getLineStyle(),
        {
          fill: "none",
          stroke: M,
          lineJoin: "bevel"
        }
      )), zt(h, r, "lineStyle"), h.style.lineWidth > 0 && r.get(["emphasis", "lineStyle", "width"]) === "bolder") {
        var F = h.getState("emphasis").style;
        F.lineWidth = +h.style.lineWidth + 1;
      }
      pe(h).seriesIndex = r.seriesIndex, lt(h, O, B, L);
      var U = zT(r.get("smooth")), z = r.get("smoothMonotone");
      if (h.setShape({
        smooth: U,
        smoothMonotone: z,
        connectNulls: T
      }), g) {
        var H = s.getCalculationInfo("stackedOnSeries"), Z = 0;
        g.useStyle(ie(u.getAreaStyle(), {
          fill: M,
          opacity: 0.7,
          lineJoin: "bevel",
          decal: s.getVisual("style").decal
        })), H && (Z = zT(H.get("smooth"))), g.setShape({
          smooth: U,
          stackedOnSmooth: Z,
          smoothMonotone: z,
          connectNulls: T
        }), zt(g, r, "areaStyle"), pe(g).seriesIndex = r.seriesIndex, lt(g, O, B, L);
      }
      var ee = this._changePolyState;
      s.eachItemGraphicEl(function(oe) {
        oe && (oe.onHoverStateChange = ee);
      }), this._polyline.onHoverStateChange = ee, this._data = s, this._coordSys = i, this._stackedOnPoints = S, this._points = c, this._step = A, this._valueOrigin = y, r.get("triggerLineEvent") && (this.packEventData(r, h), g && this.packEventData(r, g));
    }, e.prototype.packEventData = function(r, n) {
      pe(n).eventData = {
        componentType: "series",
        componentSubType: "line",
        componentIndex: r.componentIndex,
        seriesIndex: r.seriesIndex,
        seriesName: r.name,
        seriesType: "line"
      };
    }, e.prototype.highlight = function(r, n, a, i) {
      var o = r.getData(), s = oo(o, i);
      if (this._changePolyState("emphasis"), !(s instanceof Array) && s != null && s >= 0) {
        var l = o.getLayout("points"), u = o.getItemGraphicEl(s);
        if (!u) {
          var c = l[s * 2], d = l[s * 2 + 1];
          if (isNaN(c) || isNaN(d) || this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(c, d))
            return;
          var p = r.get("zlevel") || 0, f = r.get("z") || 0;
          u = new ju(o, s), u.x = c, u.y = d, u.setZ(p, f);
          var h = u.getSymbolPath().getTextContent();
          h && (h.zlevel = p, h.z = f, h.z2 = this._polyline.z2 + 1), u.__temp = !0, o.setItemGraphicEl(s, u), u.stopSymbolAnimation(!0), this.group.add(u);
        }
        u.highlight();
      } else
        Ke.prototype.highlight.call(this, r, n, a, i);
    }, e.prototype.downplay = function(r, n, a, i) {
      var o = r.getData(), s = oo(o, i);
      if (this._changePolyState("normal"), s != null && s >= 0) {
        var l = o.getItemGraphicEl(s);
        l && (l.__temp ? (o.setItemGraphicEl(s, null), this.group.remove(l)) : l.downplay());
      } else
        Ke.prototype.downplay.call(this, r, n, a, i);
    }, e.prototype._changePolyState = function(r) {
      var n = this._polygon;
      sp(this._polyline, r), n && sp(n, r);
    }, e.prototype._newPolyline = function(r) {
      var n = this._polyline;
      return n && this._lineGroup.remove(n), n = new mV({
        shape: {
          points: r
        },
        segmentIgnoreThreshold: 2,
        z2: 10
      }), this._lineGroup.add(n), this._polyline = n, n;
    }, e.prototype._newPolygon = function(r, n) {
      var a = this._polygon;
      return a && this._lineGroup.remove(a), a = new CN({
        shape: {
          points: r,
          stackedOnPoints: n
        },
        segmentIgnoreThreshold: 2
      }), this._lineGroup.add(a), this._polygon = a, a;
    }, e.prototype._initSymbolLabelAnimation = function(r, n, a) {
      var i, o, s = n.getBaseAxis(), l = s.inverse;
      n.type === "cartesian2d" ? (i = s.isHorizontal(), o = !1) : n.type === "polar" && (i = s.dim === "angle", o = !0);
      var u = r.hostModel, c = u.get("animationDuration");
      ae(c) && (c = c(null));
      var d = u.get("animationDelay") || 0, p = ae(d) ? d(null) : d;
      r.eachItemGraphicEl(function(f, h) {
        var g = f;
        if (g) {
          var v = [f.x, f.y], m = void 0, _ = void 0, y = void 0;
          if (a)
            if (o) {
              var b = a, S = n.pointToCoord(v);
              i ? (m = b.startAngle, _ = b.endAngle, y = -S[1] / 180 * Math.PI) : (m = b.r0, _ = b.r, y = S[0]);
            } else {
              var E = a;
              i ? (m = E.x, _ = E.x + E.width, y = f.x) : (m = E.y + E.height, _ = E.y, y = f.y);
            }
          var T = _ === m ? 0 : (y - m) / (_ - m);
          l && (T = 1 - T);
          var x = ae(d) ? d(h) : c * T + p, C = g.getSymbolPath(), A = C.getTextContent();
          g.attr({
            scaleX: 0,
            scaleY: 0
          }), g.animateTo({
            scaleX: 1,
            scaleY: 1
          }, {
            duration: 200,
            setToFinal: !0,
            delay: x
          }), A && A.animateFrom({
            style: {
              opacity: 0
            }
          }, {
            duration: 300,
            delay: x
          }), C.disableLabelAnimation = !0;
        }
      });
    }, e.prototype._initOrUpdateEndLabel = function(r, n, a) {
      var i = r.getModel("endLabel");
      if (DN(r)) {
        var o = r.getData(), s = this._polyline, l = o.getLayout("points");
        if (!l) {
          s.removeTextContent(), this._endLabel = null;
          return;
        }
        var u = this._endLabel;
        u || (u = this._endLabel = new Pe({
          z2: 200
          // should be higher than item symbol
        }), u.ignoreClip = !0, s.setTextContent(this._endLabel), s.disableLabelAnimation = !0);
        var c = CV(l);
        c >= 0 && (Vt(s, Dt(r, "endLabel"), {
          inheritColor: a,
          labelFetcher: r,
          labelDataIndex: c,
          defaultText: function(d, p, f) {
            return f != null ? SN(o, f) : Ss(o, d);
          },
          enableTextSetter: !0
        }, wV(i, n)), s.textConfig.position = null);
      } else this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
    }, e.prototype._endLabelOnDuring = function(r, n, a, i, o, s, l) {
      var u = this._endLabel, c = this._polyline;
      if (u) {
        r < 1 && i.originalX == null && (i.originalX = u.x, i.originalY = u.y);
        var d = a.getLayout("points"), p = a.hostModel, f = p.get("connectNulls"), h = s.get("precision"), g = s.get("distance") || 0, v = l.getBaseAxis(), m = v.isHorizontal(), _ = v.inverse, y = n.shape, b = _ ? m ? y.x : y.y + y.height : m ? y.x + y.width : y.y, S = (m ? g : 0) * (_ ? -1 : 1), E = (m ? 0 : -g) * (_ ? -1 : 1), T = m ? "x" : "y", x = AV(d, b, T), C = x.range, A = C[1] - C[0], D = void 0;
        if (A >= 1) {
          if (A > 1 && !f) {
            var M = VT(d, C[0]);
            u.attr({
              x: M[0] + S,
              y: M[1] + E
            }), o && (D = p.getRawValue(C[0]));
          } else {
            var M = c.getPointOn(b, T);
            M && u.attr({
              x: M[0] + S,
              y: M[1] + E
            });
            var I = p.getRawValue(C[0]), N = p.getRawValue(C[1]);
            o && (D = pD(a, h, I, N, x.t));
          }
          i.lastFrameIndex = C[0];
        } else {
          var R = r === 1 || i.lastFrameIndex > 0 ? C[0] : 0, M = VT(d, R);
          o && (D = p.getRawValue(R)), u.attr({
            x: M[0] + S,
            y: M[1] + E
          });
        }
        if (o) {
          var O = Os(u);
          typeof O.setLabelText == "function" && O.setLabelText(D);
        }
      }
    }, e.prototype._doUpdateAnimation = function(r, n, a, i, o, s, l) {
      var u = this._polyline, c = this._polygon, d = r.hostModel, p = vV(this._data, r, this._stackedOnPoints, n, this._coordSys, a, this._valueOrigin), f = p.current, h = p.stackedOnCurrent, g = p.next, v = p.stackedOnNext;
      if (o && (h = Ea(p.stackedOnCurrent, p.current, a, o, l), f = Ea(p.current, null, a, o, l), v = Ea(p.stackedOnNext, p.next, a, o, l), g = Ea(p.next, null, a, o, l)), UT(f, g) > 3e3 || c && UT(h, v) > 3e3) {
        u.stopAnimation(), u.setShape({
          points: g
        }), c && (c.stopAnimation(), c.setShape({
          points: g,
          stackedOnPoints: v
        }));
        return;
      }
      u.shape.__points = p.current, u.shape.points = f;
      var m = {
        shape: {
          points: g
        }
      };
      p.current !== f && (m.shape.__points = p.next), u.stopAnimation(), Fe(u, m, d), c && (c.setShape({
        // Reuse the points with polyline.
        points: f,
        stackedOnPoints: h
      }), c.stopAnimation(), Fe(c, {
        shape: {
          stackedOnPoints: v
        }
      }, d), u.shape.points !== c.shape.points && (c.shape.points = u.shape.points));
      for (var _ = [], y = p.status, b = 0; b < y.length; b++) {
        var S = y[b].cmd;
        if (S === "=") {
          var E = r.getItemGraphicEl(y[b].idx1);
          E && _.push({
            el: E,
            ptIdx: b
            // Index of points
          });
        }
      }
      u.animators && u.animators.length && u.animators[0].during(function() {
        c && c.dirtyShape();
        for (var T = u.shape.__points, x = 0; x < _.length; x++) {
          var C = _[x].el, A = _[x].ptIdx * 2;
          C.x = T[A], C.y = T[A + 1], C.markRedraw();
        }
      });
    }, e.prototype.remove = function(r) {
      var n = this.group, a = this._data;
      this._lineGroup.removeAll(), this._symbolDraw.remove(!0), a && a.eachItemGraphicEl(function(i, o) {
        i.__temp && (n.remove(i), a.setItemGraphicEl(o, null));
      }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
    }, e.type = "line", e;
  }(Ke)
);
function tc(t, e) {
  return {
    seriesType: t,
    plan: Fs(),
    reset: function(r) {
      var n = r.getData(), a = r.coordinateSystem, i = r.pipelineContext, o = e || i.large;
      if (a) {
        var s = $(a.dimensions, function(f) {
          return n.mapDimension(f);
        }).slice(0, 2), l = s.length, u = n.getCalculationInfo("stackResultDimension");
        Qa(n, s[0]) && (s[0] = u), Qa(n, s[1]) && (s[1] = u);
        var c = n.getStore(), d = n.getDimensionIndex(s[0]), p = n.getDimensionIndex(s[1]);
        return l && {
          progress: function(f, h) {
            for (var g = f.end - f.start, v = o && An(g * l), m = [], _ = [], y = f.start, b = 0; y < f.end; y++) {
              var S = void 0;
              if (l === 1) {
                var E = c.get(d, y);
                S = a.dataToPoint(E, null, _);
              } else
                m[0] = c.get(d, y), m[1] = c.get(p, y), S = a.dataToPoint(m, null, _);
              o ? (v[b++] = S[0], v[b++] = S[1]) : h.setItemLayout(y, S.slice());
            }
            o && h.setLayout("points", v);
          }
        };
      }
    }
  };
}
var MV = {
  average: function(t) {
    for (var e = 0, r = 0, n = 0; n < t.length; n++)
      isNaN(t[n]) || (e += t[n], r++);
    return r === 0 ? NaN : e / r;
  },
  sum: function(t) {
    for (var e = 0, r = 0; r < t.length; r++)
      e += t[r] || 0;
    return e;
  },
  max: function(t) {
    for (var e = -1 / 0, r = 0; r < t.length; r++)
      t[r] > e && (e = t[r]);
    return isFinite(e) ? e : NaN;
  },
  min: function(t) {
    for (var e = 1 / 0, r = 0; r < t.length; r++)
      t[r] < e && (e = t[r]);
    return isFinite(e) ? e : NaN;
  },
  // TODO
  // Median
  nearest: function(t) {
    return t[0];
  }
}, IV = function(t) {
  return Math.round(t.length / 2);
};
function MN(t) {
  return {
    seriesType: t,
    // FIXME:TS never used, so comment it
    // modifyOutputEnd: true,
    reset: function(e, r, n) {
      var a = e.getData(), i = e.get("sampling"), o = e.coordinateSystem, s = a.count();
      if (s > 10 && o.type === "cartesian2d" && i) {
        var l = o.getBaseAxis(), u = o.getOtherAxis(l), c = l.getExtent(), d = n.getDevicePixelRatio(), p = Math.abs(c[1] - c[0]) * (d || 1), f = Math.round(s / p);
        if (isFinite(f) && f > 1) {
          i === "lttb" ? e.setData(a.lttbDownSample(a.mapDimension(u.dim), 1 / f)) : i === "minmax" && e.setData(a.minmaxDownSample(a.mapDimension(u.dim), 1 / f));
          var h = void 0;
          Y(i) ? h = MV[i] : ae(i) && (h = i), h && e.setData(a.downSample(a.mapDimension(u.dim), 1 / f, h, IV));
        }
      }
    }
  };
}
function gre(t) {
  t.registerChartView(DV), t.registerSeriesModel(pV), t.registerLayout(tc("line", !0)), t.registerVisual({
    seriesType: "line",
    reset: function(e) {
      var r = e.getData(), n = e.getModel("lineStyle").getLineStyle();
      n && !n.stroke && (n.stroke = r.getVisual("style").fill), r.setVisual("legendLineStyle", n);
    }
  }), t.registerProcessor(t.PRIORITY.PROCESSOR.STATISTIC, MN("line"));
}
var Cu = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return da(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getMarkerPosition = function(r, n, a) {
      var i = this.coordinateSystem;
      if (i && i.clampData) {
        var o = i.clampData(r), s = i.dataToPoint(o);
        if (a)
          w(i.getAxes(), function(p, f) {
            if (p.type === "category" && n != null) {
              var h = p.getTicksCoords(), g = p.getTickModel().get("alignWithLabel"), v = o[f], m = n[f] === "x1" || n[f] === "y1";
              if (m && !g && (v += 1), h.length < 2)
                return;
              if (h.length === 2) {
                s[f] = p.toGlobalCoord(p.getExtent()[m ? 1 : 0]);
                return;
              }
              for (var _ = void 0, y = void 0, b = 1, S = 0; S < h.length; S++) {
                var E = h[S].coord, T = S === h.length - 1 ? h[S - 1].tickValue + b : h[S].tickValue;
                if (T === v) {
                  y = E;
                  break;
                } else if (T < v)
                  _ = E;
                else if (_ != null && T > v) {
                  y = (E + _) / 2;
                  break;
                }
                S === 1 && (b = T - h[0].tickValue);
              }
              y == null && (_ ? _ && (y = h[h.length - 1].coord) : y = h[0].coord), s[f] = p.toGlobalCoord(y);
            }
          });
        else {
          var l = this.getData(), u = l.getLayout("offset"), c = l.getLayout("size"), d = i.getBaseAxis().isHorizontal() ? 0 : 1;
          s[d] += u + c / 2;
        }
        return s;
      }
      return [NaN, NaN];
    }, e.type = "series.__base_bar__", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // stack: null
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      barMinHeight: 0,
      barMinAngle: 0,
      // cursor: null,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: "mod"
    }, e;
  }(et)
);
et.registerClass(Cu);
var NV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.getInitialData = function() {
      return da(null, this, {
        useEncodeDefaulter: !0,
        createInvertedIndices: !!this.get("realtimeSort", !0) || null
      });
    }, e.prototype.getProgressive = function() {
      return this.get("large") ? this.get("progressive") : !1;
    }, e.prototype.getProgressiveThreshold = function() {
      var r = this.get("progressiveThreshold"), n = this.get("largeThreshold");
      return n > r && (r = n), r;
    }, e.prototype.brushSelector = function(r, n, a) {
      return a.rect(n.getItemLayout(r));
    }, e.type = "series.bar", e.dependencies = ["grid", "polar"], e.defaultOption = ti(Cu.defaultOption, {
      // If clipped
      // Only available on cartesian2d
      clip: !0,
      roundCap: !1,
      showBackground: !1,
      backgroundStyle: {
        color: "rgba(180, 180, 180, 0.2)",
        borderColor: null,
        borderWidth: 0,
        borderType: "solid",
        borderRadius: 0,
        shadowBlur: 0,
        shadowColor: null,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      realtimeSort: !1
    }), e;
  }(Cu)
), RV = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
    }
    return t;
  }()
), Ap = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "sausage", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new RV();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.cx, i = n.cy, o = Math.max(n.r0 || 0, 0), s = Math.max(n.r, 0), l = (s - o) * 0.5, u = o + l, c = n.startAngle, d = n.endAngle, p = n.clockwise, f = Math.PI * 2, h = p ? d - c < f : c - d < f;
      h || (c = d - (p ? f : -f));
      var g = Math.cos(c), v = Math.sin(c), m = Math.cos(d), _ = Math.sin(d);
      h ? (r.moveTo(g * o + a, v * o + i), r.arc(g * u + a, v * u + i, l, -Math.PI + c, c, !p)) : r.moveTo(g * s + a, v * s + i), r.arc(a, i, s, c, d, !p), r.arc(m * u + a, _ * u + i, l, d - Math.PI * 2, d - Math.PI, !p), o !== 0 && r.arc(a, i, o, d, c, p);
    }, e;
  }(Ce)
);
function OV(t, e) {
  e = e || {};
  var r = e.isRoundCap;
  return function(n, a, i) {
    var o = a.position;
    if (!o || o instanceof Array)
      return ip(n, a, i);
    var s = t(o), l = a.distance != null ? a.distance : 5, u = this.shape, c = u.cx, d = u.cy, p = u.r, f = u.r0, h = (p + f) / 2, g = u.startAngle, v = u.endAngle, m = (g + v) / 2, _ = r ? Math.abs(p - f) / 2 : 0, y = Math.cos, b = Math.sin, S = c + p * y(g), E = d + p * b(g), T = "left", x = "top";
    switch (s) {
      case "startArc":
        S = c + (f - l) * y(m), E = d + (f - l) * b(m), T = "center", x = "top";
        break;
      case "insideStartArc":
        S = c + (f + l) * y(m), E = d + (f + l) * b(m), T = "center", x = "bottom";
        break;
      case "startAngle":
        S = c + h * y(g) + Xc(g, l + _, !1), E = d + h * b(g) + Qc(g, l + _, !1), T = "right", x = "middle";
        break;
      case "insideStartAngle":
        S = c + h * y(g) + Xc(g, -l + _, !1), E = d + h * b(g) + Qc(g, -l + _, !1), T = "left", x = "middle";
        break;
      case "middle":
        S = c + h * y(m), E = d + h * b(m), T = "center", x = "middle";
        break;
      case "endArc":
        S = c + (p + l) * y(m), E = d + (p + l) * b(m), T = "center", x = "bottom";
        break;
      case "insideEndArc":
        S = c + (p - l) * y(m), E = d + (p - l) * b(m), T = "center", x = "top";
        break;
      case "endAngle":
        S = c + h * y(v) + Xc(v, l + _, !0), E = d + h * b(v) + Qc(v, l + _, !0), T = "left", x = "middle";
        break;
      case "insideEndAngle":
        S = c + h * y(v) + Xc(v, -l + _, !0), E = d + h * b(v) + Qc(v, -l + _, !0), T = "right", x = "middle";
        break;
      default:
        return ip(n, a, i);
    }
    return n = n || {}, n.x = S, n.y = E, n.align = T, n.verticalAlign = x, n;
  };
}
function LV(t, e, r, n) {
  if (ke(n)) {
    t.setTextConfig({
      rotation: n
    });
    return;
  } else if (V(e)) {
    t.setTextConfig({
      rotation: 0
    });
    return;
  }
  var a = t.shape, i = a.clockwise ? a.startAngle : a.endAngle, o = a.clockwise ? a.endAngle : a.startAngle, s = (i + o) / 2, l, u = r(e);
  switch (u) {
    case "startArc":
    case "insideStartArc":
    case "middle":
    case "insideEndArc":
    case "endArc":
      l = s;
      break;
    case "startAngle":
    case "insideStartAngle":
      l = i;
      break;
    case "endAngle":
    case "insideEndAngle":
      l = o;
      break;
    default:
      t.setTextConfig({
        rotation: 0
      });
      return;
  }
  var c = Math.PI * 1.5 - l;
  u === "middle" && c > Math.PI / 2 && c < Math.PI * 1.5 && (c -= Math.PI), t.setTextConfig({
    rotation: c
  });
}
function Xc(t, e, r) {
  return e * Math.sin(t) * (r ? -1 : 1);
}
function Qc(t, e, r) {
  return e * Math.cos(t) * (r ? 1 : -1);
}
function Ki(t, e, r) {
  var n = t.get("borderRadius");
  if (n == null)
    return r ? {
      cornerRadius: 0
    } : null;
  V(n) || (n = [n, n, n, n]);
  var a = Math.abs(e.r || 0 - e.r0 || 0);
  return {
    cornerRadius: $(n, function(i) {
      return tn(i, a);
    })
  };
}
var Tg = Math.max, xg = Math.min;
function PV(t, e) {
  var r = t.getArea && t.getArea();
  if (yo(t, "cartesian2d")) {
    var n = t.getBaseAxis();
    if (n.type !== "category" || !n.onBand) {
      var a = e.getLayout("bandWidth");
      n.isHorizontal() ? (r.x -= a, r.width += a * 2) : (r.y -= a, r.height += a * 2);
    }
  }
  return r;
}
var kV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t.call(this) || this;
      return r.type = e.type, r._isFirstFrame = !0, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      this._model = r, this._removeOnRenderedListener(a), this._updateDrawMode(r);
      var o = r.get("coordinateSystem");
      (o === "cartesian2d" || o === "polar") && (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(r, n, a) : this._renderNormal(r, n, a, i));
    }, e.prototype.incrementalPrepareRender = function(r) {
      this._clear(), this._updateDrawMode(r), this._updateLargeClip(r);
    }, e.prototype.incrementalRender = function(r, n) {
      this._progressiveEls = [], this._incrementalRenderLarge(r, n);
    }, e.prototype.eachRendered = function(r) {
      ei(this._progressiveEls || this.group, r);
    }, e.prototype._updateDrawMode = function(r) {
      var n = r.pipelineContext.large;
      (this._isLargeDraw == null || n !== this._isLargeDraw) && (this._isLargeDraw = n, this._clear());
    }, e.prototype._renderNormal = function(r, n, a, i) {
      var o = this.group, s = r.getData(), l = this._data, u = r.coordinateSystem, c = u.getBaseAxis(), d;
      u.type === "cartesian2d" ? d = c.isHorizontal() : u.type === "polar" && (d = c.dim === "angle");
      var p = r.isAnimationEnabled() ? r : null, f = BV(r, u);
      f && this._enableRealtimeSort(f, s, a);
      var h = r.get("clip", !0) || f, g = PV(u, s);
      o.removeClipPath();
      var v = r.get("roundCap", !0), m = r.get("showBackground", !0), _ = r.getModel("backgroundStyle"), y = _.get("borderRadius") || 0, b = [], S = this._backgroundEls, E = i && i.isInitSort, T = i && i.type === "changeAxisOrder";
      function x(D) {
        var M = jc[u.type](s, D), I = HV(u, d, M);
        return I.useStyle(_.getItemStyle()), u.type === "cartesian2d" ? I.setShape("r", y) : I.setShape("cornerRadius", y), b[D] = I, I;
      }
      s.diff(l).add(function(D) {
        var M = s.getItemModel(D), I = jc[u.type](s, D, M);
        if (m && x(D), !(!s.hasValue(D) || !YT[u.type](I))) {
          var N = !1;
          h && (N = $T[u.type](g, I));
          var R = HT[u.type](r, s, D, I, d, p, c.model, !1, v);
          f && (R.forceLabelAnimation = !0), KT(R, s, D, M, I, r, d, u.type === "polar"), E ? R.attr({
            shape: I
          }) : f ? WT(f, p, R, I, D, d, !1, !1) : rt(R, {
            shape: I
          }, r, D), s.setItemGraphicEl(D, R), o.add(R), R.ignore = N;
        }
      }).update(function(D, M) {
        var I = s.getItemModel(D), N = jc[u.type](s, D, I);
        if (m) {
          var R = void 0;
          S.length === 0 ? R = x(M) : (R = S[M], R.useStyle(_.getItemStyle()), u.type === "cartesian2d" ? R.setShape("r", y) : R.setShape("cornerRadius", y), b[D] = R);
          var O = jc[u.type](s, D), B = NN(d, O, u);
          Fe(R, {
            shape: B
          }, p, D);
        }
        var L = l.getItemGraphicEl(M);
        if (!s.hasValue(D) || !YT[u.type](N)) {
          o.remove(L);
          return;
        }
        var F = !1;
        if (h && (F = $T[u.type](g, N), F && o.remove(L)), L ? rn(L) : L = HT[u.type](r, s, D, N, d, p, c.model, !!L, v), f && (L.forceLabelAnimation = !0), T) {
          var U = L.getTextContent();
          if (U) {
            var z = Os(U);
            z.prevValue != null && (z.prevValue = z.value);
          }
        } else
          KT(L, s, D, I, N, r, d, u.type === "polar");
        E ? L.attr({
          shape: N
        }) : f ? WT(f, p, L, N, D, d, !0, T) : Fe(L, {
          shape: N
        }, r, D, null), s.setItemGraphicEl(D, L), L.ignore = F, o.add(L);
      }).remove(function(D) {
        var M = l.getItemGraphicEl(D);
        M && gu(M, r, D);
      }).execute();
      var C = this._backgroundGroup || (this._backgroundGroup = new de());
      C.removeAll();
      for (var A = 0; A < b.length; ++A)
        C.add(b[A]);
      o.add(C), this._backgroundEls = b, this._data = s;
    }, e.prototype._renderLarge = function(r, n, a) {
      this._clear(), XT(r, this.group), this._updateLargeClip(r);
    }, e.prototype._incrementalRenderLarge = function(r, n) {
      this._removeBackground(), XT(n, this.group, this._progressiveEls, !0);
    }, e.prototype._updateLargeClip = function(r) {
      var n = r.get("clip", !0) && ec(r.coordinateSystem, !1, r), a = this.group;
      n ? a.setClipPath(n) : a.removeClipPath();
    }, e.prototype._enableRealtimeSort = function(r, n, a) {
      var i = this;
      if (n.count()) {
        var o = r.baseAxis;
        if (this._isFirstFrame)
          this._dispatchInitSort(n, r, a), this._isFirstFrame = !1;
        else {
          var s = function(l) {
            var u = n.getItemGraphicEl(l), c = u && u.shape;
            return c && // The result should be consistent with the initial sort by data value.
            // Do not support the case that both positive and negative exist.
            Math.abs(o.isHorizontal() ? c.height : c.width) || 0;
          };
          this._onRendered = function() {
            i._updateSortWithinSameData(n, s, o, a);
          }, a.getZr().on("rendered", this._onRendered);
        }
      }
    }, e.prototype._dataSort = function(r, n, a) {
      var i = [];
      return r.each(r.mapDimension(n.dim), function(o, s) {
        var l = a(s);
        l = l ?? NaN, i.push({
          dataIndex: s,
          mappedValue: l,
          ordinalNumber: o
        });
      }), i.sort(function(o, s) {
        return s.mappedValue - o.mappedValue;
      }), {
        ordinalNumbers: $(i, function(o) {
          return o.ordinalNumber;
        })
      };
    }, e.prototype._isOrderChangedWithinSameData = function(r, n, a) {
      for (var i = a.scale, o = r.mapDimension(a.dim), s = Number.MAX_VALUE, l = 0, u = i.getOrdinalMeta().categories.length; l < u; ++l) {
        var c = r.rawIndexOf(o, i.getRawOrdinalNumber(l)), d = c < 0 ? Number.MIN_VALUE : n(r.indexOfRawIndex(c));
        if (d > s)
          return !0;
        s = d;
      }
      return !1;
    }, e.prototype._isOrderDifferentInView = function(r, n) {
      for (var a = n.scale, i = a.getExtent(), o = Math.max(0, i[0]), s = Math.min(i[1], a.getOrdinalMeta().categories.length - 1); o <= s; ++o)
        if (r.ordinalNumbers[o] !== a.getRawOrdinalNumber(o))
          return !0;
    }, e.prototype._updateSortWithinSameData = function(r, n, a, i) {
      if (this._isOrderChangedWithinSameData(r, n, a)) {
        var o = this._dataSort(r, a, n);
        this._isOrderDifferentInView(o, a) && (this._removeOnRenderedListener(i), i.dispatchAction({
          type: "changeAxisOrder",
          componentType: a.dim + "Axis",
          axisId: a.index,
          sortInfo: o
        }));
      }
    }, e.prototype._dispatchInitSort = function(r, n, a) {
      var i = n.baseAxis, o = this._dataSort(r, i, function(s) {
        return r.get(r.mapDimension(n.otherAxis.dim), s);
      });
      a.dispatchAction({
        type: "changeAxisOrder",
        componentType: i.dim + "Axis",
        isInitSort: !0,
        axisId: i.index,
        sortInfo: o
      });
    }, e.prototype.remove = function(r, n) {
      this._clear(this._model), this._removeOnRenderedListener(n);
    }, e.prototype.dispose = function(r, n) {
      this._removeOnRenderedListener(n);
    }, e.prototype._removeOnRenderedListener = function(r) {
      this._onRendered && (r.getZr().off("rendered", this._onRendered), this._onRendered = null);
    }, e.prototype._clear = function(r) {
      var n = this.group, a = this._data;
      r && r.isAnimationEnabled() && a && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], a.eachItemGraphicEl(function(i) {
        gu(i, r, pe(i).dataIndex);
      })) : n.removeAll(), this._data = null, this._isFirstFrame = !0;
    }, e.prototype._removeBackground = function() {
      this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
    }, e.type = "bar", e;
  }(Ke)
), $T = {
  cartesian2d: function(t, e) {
    var r = e.width < 0 ? -1 : 1, n = e.height < 0 ? -1 : 1;
    r < 0 && (e.x += e.width, e.width = -e.width), n < 0 && (e.y += e.height, e.height = -e.height);
    var a = t.x + t.width, i = t.y + t.height, o = Tg(e.x, t.x), s = xg(e.x + e.width, a), l = Tg(e.y, t.y), u = xg(e.y + e.height, i), c = s < o, d = u < l;
    return e.x = c && o > a ? s : o, e.y = d && l > i ? u : l, e.width = c ? 0 : s - o, e.height = d ? 0 : u - l, r < 0 && (e.x += e.width, e.width = -e.width), n < 0 && (e.y += e.height, e.height = -e.height), c || d;
  },
  polar: function(t, e) {
    var r = e.r0 <= e.r ? 1 : -1;
    if (r < 0) {
      var n = e.r;
      e.r = e.r0, e.r0 = n;
    }
    var a = xg(e.r, t.r), i = Tg(e.r0, t.r0);
    e.r = a, e.r0 = i;
    var o = a - i < 0;
    if (r < 0) {
      var n = e.r;
      e.r = e.r0, e.r0 = n;
    }
    return o;
  }
}, HT = {
  cartesian2d: function(t, e, r, n, a, i, o, s, l) {
    var u = new Re({
      shape: G({}, n),
      z2: 1
    });
    if (u.__dataIndex = r, u.name = "item", i) {
      var c = u.shape, d = a ? "height" : "width";
      c[d] = 0;
    }
    return u;
  },
  polar: function(t, e, r, n, a, i, o, s, l) {
    var u = !a && l ? Ap : or, c = new u({
      shape: n,
      z2: 1
    });
    c.name = "item";
    var d = IN(a);
    if (c.calculateTextPosition = OV(d, {
      isRoundCap: u === Ap
    }), i) {
      var p = c.shape, f = a ? "r" : "endAngle", h = {};
      p[f] = a ? n.r0 : n.startAngle, h[f] = n[f], (s ? Fe : rt)(c, {
        shape: h
        // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue
      }, i);
    }
    return c;
  }
};
function BV(t, e) {
  var r = t.get("realtimeSort", !0), n = e.getBaseAxis();
  if (r && n.type === "category" && e.type === "cartesian2d")
    return {
      baseAxis: n,
      otherAxis: e.getOtherAxis(n)
    };
}
function WT(t, e, r, n, a, i, o, s) {
  var l, u;
  i ? (u = {
    x: n.x,
    width: n.width
  }, l = {
    y: n.y,
    height: n.height
  }) : (u = {
    y: n.y,
    height: n.height
  }, l = {
    x: n.x,
    width: n.width
  }), s || (o ? Fe : rt)(r, {
    shape: l
  }, e, a, null);
  var c = e ? t.baseAxis.model : null;
  (o ? Fe : rt)(r, {
    shape: u
  }, c, a);
}
function qT(t, e) {
  for (var r = 0; r < e.length; r++)
    if (!isFinite(t[e[r]]))
      return !0;
  return !1;
}
var FV = ["x", "y", "width", "height"], GV = ["cx", "cy", "r", "startAngle", "endAngle"], YT = {
  cartesian2d: function(t) {
    return !qT(t, FV);
  },
  polar: function(t) {
    return !qT(t, GV);
  }
}, jc = {
  // itemModel is only used to get borderWidth, which is not needed
  // when calculating bar background layout.
  cartesian2d: function(t, e, r) {
    var n = t.getItemLayout(e), a = r ? zV(r, n) : 0, i = n.width > 0 ? 1 : -1, o = n.height > 0 ? 1 : -1;
    return {
      x: n.x + i * a / 2,
      y: n.y + o * a / 2,
      width: n.width - i * a,
      height: n.height - o * a
    };
  },
  polar: function(t, e, r) {
    var n = t.getItemLayout(e);
    return {
      cx: n.cx,
      cy: n.cy,
      r0: n.r0,
      r: n.r,
      startAngle: n.startAngle,
      endAngle: n.endAngle,
      clockwise: n.clockwise
    };
  }
};
function UV(t) {
  return t.startAngle != null && t.endAngle != null && t.startAngle === t.endAngle;
}
function IN(t) {
  return /* @__PURE__ */ function(e) {
    var r = e ? "Arc" : "Angle";
    return function(n) {
      switch (n) {
        case "start":
        case "insideStart":
        case "end":
        case "insideEnd":
          return n + r;
        default:
          return n;
      }
    };
  }(t);
}
function KT(t, e, r, n, a, i, o, s) {
  var l = e.getItemVisual(r, "style");
  if (s) {
    if (!i.get("roundCap")) {
      var c = t.shape, d = Ki(n.getModel("itemStyle"), c, !0);
      G(c, d), t.setShape(c);
    }
  } else {
    var u = n.get(["itemStyle", "borderRadius"]) || 0;
    t.setShape("r", u);
  }
  t.useStyle(l);
  var p = n.getShallow("cursor");
  p && t.attr("cursor", p);
  var f = s ? o ? a.r >= a.r0 ? "endArc" : "startArc" : a.endAngle >= a.startAngle ? "endAngle" : "startAngle" : o ? a.height >= 0 ? "bottom" : "top" : a.width >= 0 ? "right" : "left", h = Dt(n);
  Vt(t, h, {
    labelFetcher: i,
    labelDataIndex: r,
    defaultText: Ss(i.getData(), r),
    inheritColor: l.fill,
    defaultOpacity: l.opacity,
    defaultOutsidePosition: f
  });
  var g = t.getTextContent();
  if (s && g) {
    var v = n.get(["label", "position"]);
    t.textConfig.inside = v === "middle" ? !0 : null, LV(t, v === "outside" ? f : v, IN(o), n.get(["label", "rotate"]));
  }
  ZD(g, h, i.getRawValue(r), function(_) {
    return SN(e, _);
  });
  var m = n.getModel(["emphasis"]);
  lt(t, m.get("focus"), m.get("blurScope"), m.get("disabled")), zt(t, n), UV(a) && (t.style.fill = "none", t.style.stroke = "none", w(t.states, function(_) {
    _.style && (_.style.fill = _.style.stroke = "none");
  }));
}
function zV(t, e) {
  var r = t.get(["itemStyle", "borderColor"]);
  if (!r || r === "none")
    return 0;
  var n = t.get(["itemStyle", "borderWidth"]) || 0, a = isNaN(e.width) ? Number.MAX_VALUE : Math.abs(e.width), i = isNaN(e.height) ? Number.MAX_VALUE : Math.abs(e.height);
  return Math.min(n, a, i);
}
var VV = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), ZT = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "largeBar", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new VV();
    }, e.prototype.buildPath = function(r, n) {
      for (var a = n.points, i = this.baseDimIdx, o = 1 - this.baseDimIdx, s = [], l = [], u = this.barWidth, c = 0; c < a.length; c += 3)
        l[i] = u, l[o] = a[c + 2], s[i] = a[c + i], s[o] = a[c + o], r.rect(s[0], s[1], l[0], l[1]);
    }, e;
  }(Ce)
);
function XT(t, e, r, n) {
  var a = t.getData(), i = a.getLayout("valueAxisHorizontal") ? 1 : 0, o = a.getLayout("largeDataIndices"), s = a.getLayout("size"), l = t.getModel("backgroundStyle"), u = a.getLayout("largeBackgroundPoints");
  if (u) {
    var c = new ZT({
      shape: {
        points: u
      },
      incremental: !!n,
      silent: !0,
      z2: 0
    });
    c.baseDimIdx = i, c.largeDataIndices = o, c.barWidth = s, c.useStyle(l.getItemStyle()), e.add(c), r && r.push(c);
  }
  var d = new ZT({
    shape: {
      points: a.getLayout("largePoints")
    },
    incremental: !!n,
    ignoreCoarsePointer: !0,
    z2: 1
  });
  d.baseDimIdx = i, d.largeDataIndices = o, d.barWidth = s, e.add(d), d.useStyle(a.getVisual("style")), d.style.stroke = null, pe(d).seriesIndex = t.seriesIndex, t.get("silent") || (d.on("mousedown", QT), d.on("mousemove", QT)), r && r.push(d);
}
var QT = Ay(function(t) {
  var e = this, r = $V(e, t.offsetX, t.offsetY);
  pe(e).dataIndex = r >= 0 ? r : null;
}, 30, !1);
function $V(t, e, r) {
  for (var n = t.baseDimIdx, a = 1 - n, i = t.shape.points, o = t.largeDataIndices, s = [], l = [], u = t.barWidth, c = 0, d = i.length / 3; c < d; c++) {
    var p = c * 3;
    if (l[n] = u, l[a] = i[p + 2], s[n] = i[p + n], s[a] = i[p + a], l[a] < 0 && (s[a] += l[a], l[a] = -l[a]), e >= s[0] && e <= s[0] + l[0] && r >= s[1] && r <= s[1] + l[1])
      return o[c];
  }
  return -1;
}
function NN(t, e, r) {
  if (yo(r, "cartesian2d")) {
    var n = e, a = r.getArea();
    return {
      x: t ? n.x : a.x,
      y: t ? a.y : n.y,
      width: t ? n.width : a.width,
      height: t ? a.height : n.height
    };
  } else {
    var a = r.getArea(), i = e;
    return {
      cx: a.cx,
      cy: a.cy,
      r0: t ? a.r0 : i.r0,
      r: t ? a.r : i.r,
      startAngle: t ? i.startAngle : 0,
      endAngle: t ? i.endAngle : Math.PI * 2
    };
  }
}
function HV(t, e, r) {
  var n = t.type === "polar" ? or : Re;
  return new n({
    shape: NN(e, r, t),
    silent: !0,
    z2: 0
  });
}
function vre(t) {
  t.registerChartView(kV), t.registerSeriesModel(NV), t.registerLayout(t.PRIORITY.VISUAL.LAYOUT, _e(kI, "bar")), t.registerLayout(t.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, BI("bar")), t.registerProcessor(t.PRIORITY.PROCESSOR.STATISTIC, MN("bar")), t.registerAction({
    type: "changeAxisOrder",
    event: "changeAxisOrder",
    update: "update"
  }, function(e, r) {
    var n = e.componentType || "series";
    r.eachComponent({
      mainType: n,
      query: e
    }, function(a) {
      e.sortInfo && a.axis.setCategorySortInfo(e.sortInfo);
    });
  });
}
var jT = Math.PI * 2, Jc = Math.PI / 180;
function RN(t, e) {
  return Et(t.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function ON(t, e) {
  var r = RN(t, e), n = t.get("center"), a = t.get("radius");
  V(a) || (a = [0, a]);
  var i = q(r.width, e.getWidth()), o = q(r.height, e.getHeight()), s = Math.min(i, o), l = q(a[0], s / 2), u = q(a[1], s / 2), c, d, p = t.coordinateSystem;
  if (p) {
    var f = p.dataToPoint(n);
    c = f[0] || 0, d = f[1] || 0;
  } else
    V(n) || (n = [n, n]), c = q(n[0], i) + r.x, d = q(n[1], o) + r.y;
  return {
    cx: c,
    cy: d,
    r0: l,
    r: u
  };
}
function WV(t, e, r) {
  e.eachSeriesByType(t, function(n) {
    var a = n.getData(), i = a.mapDimension("value"), o = RN(n, r), s = ON(n, r), l = s.cx, u = s.cy, c = s.r, d = s.r0, p = -n.get("startAngle") * Jc, f = n.get("endAngle"), h = n.get("padAngle") * Jc;
    f = f === "auto" ? p - jT : -f * Jc;
    var g = n.get("minAngle") * Jc, v = g + h, m = 0;
    a.each(i, function(B) {
      !isNaN(B) && m++;
    });
    var _ = a.getSum(i), y = Math.PI / (_ || m) * 2, b = n.get("clockwise"), S = n.get("roseType"), E = n.get("stillShowZeroSum"), T = a.getDataExtent(i);
    T[0] = 0;
    var x = b ? 1 : -1, C = [p, f], A = x * h / 2;
    ty(C, !b), p = C[0], f = C[1];
    var D = LN(n);
    D.startAngle = p, D.endAngle = f, D.clockwise = b;
    var M = Math.abs(f - p), I = M, N = 0, R = p;
    if (a.setLayout({
      viewRect: o,
      r: c
    }), a.each(i, function(B, L) {
      var F;
      if (isNaN(B)) {
        a.setItemLayout(L, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: b,
          cx: l,
          cy: u,
          r0: d,
          r: S ? NaN : c
        });
        return;
      }
      S !== "area" ? F = _ === 0 && E ? y : B * y : F = M / m, F < v ? (F = v, I -= v) : N += B;
      var U = R + x * F, z = 0, H = 0;
      h > F ? (z = R + x * F / 2, H = z) : (z = R + A, H = U - A), a.setItemLayout(L, {
        angle: F,
        startAngle: z,
        endAngle: H,
        clockwise: b,
        cx: l,
        cy: u,
        r0: d,
        r: S ? $e(B, T, [d, c]) : c
      }), R = U;
    }), I < jT && m)
      if (I <= 1e-3) {
        var O = M / m;
        a.each(i, function(B, L) {
          if (!isNaN(B)) {
            var F = a.getItemLayout(L);
            F.angle = O;
            var U = 0, z = 0;
            O < h ? (U = p + x * (L + 1 / 2) * O, z = U) : (U = p + x * L * O + A, z = p + x * (L + 1) * O - A), F.startAngle = U, F.endAngle = z;
          }
        });
      } else
        y = I / N, R = p, a.each(i, function(B, L) {
          if (!isNaN(B)) {
            var F = a.getItemLayout(L), U = F.angle === v ? v : B * y, z = 0, H = 0;
            U < h ? (z = R + x * U / 2, H = z) : (z = R + A, H = R + x * U - A), F.startAngle = z, F.endAngle = H, R += x * U;
          }
        });
  });
}
var LN = Oe();
function rc(t) {
  return {
    seriesType: t,
    reset: function(e, r) {
      var n = r.findComponents({
        mainType: "legend"
      });
      if (!(!n || !n.length)) {
        var a = e.getData();
        a.filterSelf(function(i) {
          for (var o = a.getName(i), s = 0; s < n.length; s++)
            if (!n[s].isSelected(o))
              return !1;
          return !0;
        });
      }
    }
  };
}
var qV = Math.PI / 180;
function JT(t, e, r, n, a, i, o, s, l, u) {
  if (t.length < 2)
    return;
  function c(g) {
    for (var v = g.rB, m = v * v, _ = 0; _ < g.list.length; _++) {
      var y = g.list[_], b = Math.abs(y.label.y - r), S = n + y.len, E = S * S, T = Math.sqrt(Math.abs((1 - b * b / m) * E)), x = e + (T + y.len2) * a, C = x - y.label.x, A = y.targetTextWidth - C * a;
      PN(y, A, !0), y.label.x = x;
    }
  }
  function d(g) {
    for (var v = {
      list: [],
      maxY: 0
    }, m = {
      list: [],
      maxY: 0
    }, _ = 0; _ < g.length; _++)
      if (g[_].labelAlignTo === "none") {
        var y = g[_], b = y.label.y > r ? m : v, S = Math.abs(y.label.y - r);
        if (S >= b.maxY) {
          var E = y.label.x - e - y.len2 * a, T = n + y.len, x = Math.abs(E) < T ? Math.sqrt(S * S / (1 - E * E / T / T)) : T;
          b.rB = x, b.maxY = S;
        }
        b.list.push(y);
      }
    c(v), c(m);
  }
  for (var p = t.length, f = 0; f < p; f++)
    if (t[f].position === "outer" && t[f].labelAlignTo === "labelLine") {
      var h = t[f].label.x - u;
      t[f].linePoints[1][0] += h, t[f].label.x = u;
    }
  aN(t, l, l + o) && d(t);
}
function YV(t, e, r, n, a, i, o, s) {
  for (var l = [], u = [], c = Number.MAX_VALUE, d = -Number.MAX_VALUE, p = 0; p < t.length; p++) {
    var f = t[p].label;
    Cg(t[p]) || (f.x < e ? (c = Math.min(c, f.x), l.push(t[p])) : (d = Math.max(d, f.x), u.push(t[p])));
  }
  for (var p = 0; p < t.length; p++) {
    var h = t[p];
    if (!Cg(h) && h.linePoints) {
      if (h.labelStyleWidth != null)
        continue;
      var f = h.label, g = h.linePoints, v = void 0;
      h.labelAlignTo === "edge" ? f.x < e ? v = g[2][0] - h.labelDistance - o - h.edgeDistance : v = o + a - h.edgeDistance - g[2][0] - h.labelDistance : h.labelAlignTo === "labelLine" ? f.x < e ? v = c - o - h.bleedMargin : v = o + a - d - h.bleedMargin : f.x < e ? v = f.x - o - h.bleedMargin : v = o + a - f.x - h.bleedMargin, h.targetTextWidth = v, PN(h, v);
    }
  }
  JT(u, e, r, n, 1, a, i, o, s, d), JT(l, e, r, n, -1, a, i, o, s, c);
  for (var p = 0; p < t.length; p++) {
    var h = t[p];
    if (!Cg(h) && h.linePoints) {
      var f = h.label, g = h.linePoints, m = h.labelAlignTo === "edge", _ = f.style.padding, y = _ ? _[1] + _[3] : 0, b = f.style.backgroundColor ? 0 : y, S = h.rect.width + b, E = g[1][0] - g[2][0];
      m ? f.x < e ? g[2][0] = o + h.edgeDistance + S + h.labelDistance : g[2][0] = o + a - h.edgeDistance - S - h.labelDistance : (f.x < e ? g[2][0] = f.x + h.labelDistance : g[2][0] = f.x - h.labelDistance, g[1][0] = g[2][0] + E), g[1][1] = g[2][1] = f.y;
    }
  }
}
function PN(t, e, r) {
  if (r === void 0 && (r = !1), t.labelStyleWidth == null) {
    var n = t.label, a = n.style, i = t.rect, o = a.backgroundColor, s = a.padding, l = s ? s[1] + s[3] : 0, u = a.overflow, c = i.width + (o ? 0 : l);
    if (e < c || r) {
      var d = i.height;
      if (u && u.match("break")) {
        n.setStyle("backgroundColor", null), n.setStyle("width", e - l);
        var p = n.getBoundingRect();
        n.setStyle("width", Math.ceil(p.width)), n.setStyle("backgroundColor", o);
      } else {
        var f = e - l, h = e < c ? f : (
          // Current available width is enough, but the text may have
          // already been wrapped with a smaller available width.
          r ? f > t.unconstrainedWidth ? null : f : null
        );
        n.setStyle("width", h);
      }
      var g = n.getBoundingRect();
      i.width = g.width;
      var v = (n.style.margin || 0) + 2.1;
      i.height = g.height + v, i.y -= (i.height - d) / 2;
    }
  }
}
function Cg(t) {
  return t.position === "center";
}
function KV(t) {
  var e = t.getData(), r = [], n, a, i = !1, o = (t.get("minShowLabelAngle") || 0) * qV, s = e.getLayout("viewRect"), l = e.getLayout("r"), u = s.width, c = s.x, d = s.y, p = s.height;
  function f(E) {
    E.ignore = !0;
  }
  function h(E) {
    if (!E.ignore)
      return !0;
    for (var T in E.states)
      if (E.states[T].ignore === !1)
        return !0;
    return !1;
  }
  e.each(function(E) {
    var T = e.getItemGraphicEl(E), x = T.shape, C = T.getTextContent(), A = T.getTextGuideLine(), D = e.getItemModel(E), M = D.getModel("label"), I = M.get("position") || D.get(["emphasis", "label", "position"]), N = M.get("distanceToLabelLine"), R = M.get("alignTo"), O = q(M.get("edgeDistance"), u), B = M.get("bleedMargin"), L = D.getModel("labelLine"), F = L.get("length");
    F = q(F, u);
    var U = L.get("length2");
    if (U = q(U, u), Math.abs(x.endAngle - x.startAngle) < o) {
      w(C.states, f), C.ignore = !0, A && (w(A.states, f), A.ignore = !0);
      return;
    }
    if (h(C)) {
      var z = (x.startAngle + x.endAngle) / 2, H = Math.cos(z), Z = Math.sin(z), ee, oe, Le, Xe;
      n = x.cx, a = x.cy;
      var fe = I === "inside" || I === "inner";
      if (I === "center")
        ee = x.cx, oe = x.cy, Xe = "center";
      else {
        var re = (fe ? (x.r + x.r0) / 2 * H : x.r * H) + n, ve = (fe ? (x.r + x.r0) / 2 * Z : x.r * Z) + a;
        if (ee = re + H * 3, oe = ve + Z * 3, !fe) {
          var j = re + H * (F + l - x.r), ce = ve + Z * (F + l - x.r), qe = j + (H < 0 ? -1 : 1) * U, Ge = ce;
          R === "edge" ? ee = H < 0 ? c + O : c + u - O : ee = qe + (H < 0 ? -N : N), oe = Ge, Le = [[re, ve], [j, ce], [qe, Ge]];
        }
        Xe = fe ? "center" : R === "edge" ? H > 0 ? "right" : "left" : H > 0 ? "left" : "right";
      }
      var We = Math.PI, ye = 0, nt = M.get("rotate");
      if (ke(nt))
        ye = nt * (We / 180);
      else if (I === "center")
        ye = 0;
      else if (nt === "radial" || nt === !0) {
        var pt = H < 0 ? -z + We : -z;
        ye = pt;
      } else if (nt === "tangential" && I !== "outside" && I !== "outer") {
        var It = Math.atan2(H, Z);
        It < 0 && (It = We * 2 + It);
        var sn = Z > 0;
        sn && (It = We + It), ye = It - We;
      }
      if (i = !!ye, C.x = ee, C.y = oe, C.rotation = ye, C.setStyle({
        verticalAlign: "middle"
      }), fe) {
        C.setStyle({
          align: Xe
        });
        var Eo = C.states.select;
        Eo && (Eo.x += C.x, Eo.y += C.y);
      } else {
        var ln = C.getBoundingRect().clone();
        ln.applyTransform(C.getComputedTransform());
        var oc = (C.style.margin || 0) + 2.1;
        ln.y -= oc / 2, ln.height += oc, r.push({
          label: C,
          labelLine: A,
          position: I,
          len: F,
          len2: U,
          minTurnAngle: L.get("minTurnAngle"),
          maxSurfaceAngle: L.get("maxSurfaceAngle"),
          surfaceNormal: new Ee(H, Z),
          linePoints: Le,
          textAlign: Xe,
          labelDistance: N,
          labelAlignTo: R,
          edgeDistance: O,
          bleedMargin: B,
          rect: ln,
          unconstrainedWidth: ln.width,
          labelStyleWidth: C.style.width
        });
      }
      T.setTextConfig({
        inside: fe
      });
    }
  }), !i && t.get("avoidLabelOverlap") && YV(r, n, a, l, u, p, c, d);
  for (var g = 0; g < r.length; g++) {
    var v = r[g], m = v.label, _ = v.labelLine, y = isNaN(m.x) || isNaN(m.y);
    if (m) {
      m.setStyle({
        align: v.textAlign
      }), y && (w(m.states, f), m.ignore = !0);
      var b = m.states.select;
      b && (b.x += m.x, b.y += m.y);
    }
    if (_) {
      var S = v.linePoints;
      y || !S ? (w(_.states, f), _.ignore = !0) : (tN(S, v.minTurnAngle), E4(S, v.surfaceNormal, v.maxSurfaceAngle), _.setShape({
        points: S
      }), m.__hostTarget.textGuideLineConfig = {
        anchor: new Ee(S[0][0], S[0][1])
      });
    }
  }
}
var ZV = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this) || this;
      i.z2 = 2;
      var o = new Pe();
      return i.setTextContent(o), i.updateData(r, n, a, !0), i;
    }
    return e.prototype.updateData = function(r, n, a, i) {
      var o = this, s = r.hostModel, l = r.getItemModel(n), u = l.getModel("emphasis"), c = r.getItemLayout(n), d = G(Ki(l.getModel("itemStyle"), c, !0), c);
      if (isNaN(d.startAngle)) {
        o.setShape(d);
        return;
      }
      if (i) {
        o.setShape(d);
        var p = s.getShallow("animationType");
        s.ecModel.ssr ? (rt(o, {
          scaleX: 0,
          scaleY: 0
        }, s, {
          dataIndex: n,
          isFrom: !0
        }), o.originX = d.cx, o.originY = d.cy) : p === "scale" ? (o.shape.r = c.r0, rt(o, {
          shape: {
            r: c.r
          }
        }, s, n)) : a != null ? (o.setShape({
          startAngle: a,
          endAngle: a
        }), rt(o, {
          shape: {
            startAngle: c.startAngle,
            endAngle: c.endAngle
          }
        }, s, n)) : (o.shape.endAngle = c.startAngle, Fe(o, {
          shape: {
            endAngle: c.endAngle
          }
        }, s, n));
      } else
        rn(o), Fe(o, {
          shape: d
        }, s, n);
      o.useStyle(r.getItemVisual(n, "style")), zt(o, l);
      var f = (c.startAngle + c.endAngle) / 2, h = s.get("selectedOffset"), g = Math.cos(f) * h, v = Math.sin(f) * h, m = l.getShallow("cursor");
      m && o.attr("cursor", m), this._updateLabel(s, r, n), o.ensureState("emphasis").shape = G({
        r: c.r + (u.get("scale") && u.get("scaleSize") || 0)
      }, Ki(u.getModel("itemStyle"), c)), G(o.ensureState("select"), {
        x: g,
        y: v,
        shape: Ki(l.getModel(["select", "itemStyle"]), c)
      }), G(o.ensureState("blur"), {
        shape: Ki(l.getModel(["blur", "itemStyle"]), c)
      });
      var _ = o.getTextGuideLine(), y = o.getTextContent();
      _ && G(_.ensureState("select"), {
        x: g,
        y: v
      }), G(y.ensureState("select"), {
        x: g,
        y: v
      }), lt(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(r, n, a) {
      var i = this, o = n.getItemModel(a), s = o.getModel("labelLine"), l = n.getItemVisual(a, "style"), u = l && l.fill, c = l && l.opacity;
      Vt(i, Dt(o), {
        labelFetcher: n.hostModel,
        labelDataIndex: a,
        inheritColor: u,
        defaultOpacity: c,
        defaultText: r.getFormattedLabel(a, "normal") || n.getName(a)
      });
      var d = i.getTextContent();
      i.setTextConfig({
        // reset position, rotation
        position: null,
        rotation: null
      }), d.attr({
        z2: 10
      });
      var p = r.get(["label", "position"]);
      if (p !== "outside" && p !== "outer")
        i.removeTextGuideLine();
      else {
        var f = this.getTextGuideLine();
        f || (f = new lr(), this.setTextGuideLine(f)), Gy(this, Uy(o), {
          stroke: u,
          opacity: Dn(s.get(["lineStyle", "opacity"]), c, 1)
        });
      }
    }, e;
  }(or)
), XV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.ignoreLabelLineUpdate = !0, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      var o = r.getData(), s = this._data, l = this.group, u;
      if (!s && o.count() > 0) {
        for (var c = o.getItemLayout(0), d = 1; isNaN(c && c.startAngle) && d < o.count(); ++d)
          c = o.getItemLayout(d);
        c && (u = c.startAngle);
      }
      if (this._emptyCircleSector && l.remove(this._emptyCircleSector), o.count() === 0 && r.get("showEmptyCircle")) {
        var p = LN(r), f = new or({
          shape: G(ON(r, a), p)
        });
        f.useStyle(r.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = f, l.add(f);
      }
      o.diff(s).add(function(h) {
        var g = new ZV(o, h, u);
        o.setItemGraphicEl(h, g), l.add(g);
      }).update(function(h, g) {
        var v = s.getItemGraphicEl(g);
        v.updateData(o, h, u), v.off("click"), l.add(v), o.setItemGraphicEl(h, v);
      }).remove(function(h) {
        var g = s.getItemGraphicEl(h);
        gu(g, r, h);
      }).execute(), KV(r), r.get("animationTypeUpdate") !== "expansion" && (this._data = o);
    }, e.prototype.dispose = function() {
    }, e.prototype.containPoint = function(r, n) {
      var a = n.getData(), i = a.getItemLayout(0);
      if (i) {
        var o = r[0] - i.cx, s = r[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, e.type = "pie", e;
  }(Ke)
);
function Vs(t, e, r) {
  e = V(e) && {
    coordDimensions: e
  } || G({
    encodeDefine: t.getEncode()
  }, e);
  var n = t.getSource(), a = Xu(n, e).dimensions, i = new rr(a, t);
  return i.initData(n, r), i;
}
var nc = (
  /** @class */
  function() {
    function t(e, r) {
      this._getDataWithEncodedVisual = e, this._getRawData = r;
    }
    return t.prototype.getAllNames = function() {
      var e = this._getRawData();
      return e.mapArray(e.getName);
    }, t.prototype.containName = function(e) {
      var r = this._getRawData();
      return r.indexOfName(e) >= 0;
    }, t.prototype.indexOfName = function(e) {
      var r = this._getDataWithEncodedVisual();
      return r.indexOfName(e);
    }, t.prototype.getItemVisual = function(e, r) {
      var n = this._getDataWithEncodedVisual();
      return n.getItemVisual(e, r);
    }, t;
  }()
), QV = Oe(), jV = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.init = function(r) {
      t.prototype.init.apply(this, arguments), this.legendVisualProvider = new nc(K(this.getData, this), K(this.getRawData, this)), this._defaultLabelLine(r);
    }, e.prototype.mergeOption = function() {
      t.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.getInitialData = function() {
      return Vs(this, {
        coordDimensions: ["value"],
        encodeDefaulter: _e(_y, this)
      });
    }, e.prototype.getDataParams = function(r) {
      var n = this.getData(), a = QV(n), i = a.seats;
      if (!i) {
        var o = [];
        n.each(n.mapDimension("value"), function(l) {
          o.push(l);
        }), i = a.seats = KF(o, n.hostModel.get("percentPrecision"));
      }
      var s = t.prototype.getDataParams.call(this, r);
      return s.percent = i[r] || 0, s.$vars.push("percent"), s;
    }, e.prototype._defaultLabelLine = function(r) {
      io(r, "labelLine", ["show"]);
      var n = r.labelLine, a = r.emphasis.labelLine;
      n.show = n.show && r.label.show, a.show = a.show && r.emphasis.label.show;
    }, e.type = "series.pie", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      endAngle: "auto",
      padAngle: 0,
      // 最小角度改为0
      minAngle: 0,
      // If the angle of a sector less than `minShowLabelAngle`,
      // the label will not be displayed.
      minShowLabelAngle: 0,
      // 选中时扇区偏移量
      selectedOffset: 10,
      // 选择模式，默认关闭，可选single，multiple
      // selectedMode: false,
      // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
      // roseType: null,
      percentPrecision: 2,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // cursor: null,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        // color: 'inherit',
        // If rotate around circle
        rotate: 0,
        show: !0,
        overflow: "truncate",
        // 'outer', 'inside', 'center'
        position: "outer",
        // 'none', 'labelLine', 'edge'. Works only when position is 'outer'
        alignTo: "none",
        // Closest distance between label and chart edge.
        // Works only position is 'outer' and alignTo is 'edge'.
        edgeDistance: "25%",
        // Works only position is 'outer' and alignTo is not 'edge'.
        bleedMargin: 10,
        // Distance between text and label line.
        distanceToLabelLine: 5
        // formatter: 标签文本格式器，同 tooltip.formatter，不支持异步回调
        // 默认使用全局文本样式，详见 textStyle
        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数
      },
      // Enabled when label.normal.position is 'outer'
      labelLine: {
        show: !0,
        // 引导线两段中的第一段长度
        length: 15,
        // 引导线两段中的第二段长度
        length2: 15,
        smooth: !1,
        minTurnAngle: 90,
        maxSurfaceAngle: 90,
        lineStyle: {
          // color: 各异,
          width: 1,
          type: "solid"
        }
      },
      itemStyle: {
        borderWidth: 1,
        borderJoin: "round"
      },
      showEmptyCircle: !0,
      emptyCircleStyle: {
        color: "lightgray",
        opacity: 1
      },
      labelLayout: {
        // Hide the overlapped label.
        hideOverlap: !0
      },
      emphasis: {
        scale: !0,
        scaleSize: 5
      },
      // If use strategy to avoid label overlapping
      avoidLabelOverlap: !0,
      // Animation type. Valid values: expansion, scale
      animationType: "expansion",
      animationDuration: 1e3,
      // Animation type when update. Valid values: transition, expansion
      animationTypeUpdate: "transition",
      animationEasingUpdate: "cubicInOut",
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut"
    }, e;
  }(et)
);
function JV(t) {
  return {
    seriesType: t,
    reset: function(e, r) {
      var n = e.getData();
      n.filterSelf(function(a) {
        var i = n.mapDimension("value"), o = n.get(i, a);
        return !(ke(o) && !isNaN(o) && o < 0);
      });
    }
  };
}
function mre(t) {
  t.registerChartView(XV), t.registerSeriesModel(jV), tI("pie", t.registerAction), t.registerLayout(_e(WV, "pie")), t.registerProcessor(rc("pie")), t.registerProcessor(JV("pie"));
}
var e$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return da(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getProgressive = function() {
      var r = this.option.progressive;
      return r ?? (this.option.large ? 5e3 : this.get("progressive"));
    }, e.prototype.getProgressiveThreshold = function() {
      var r = this.option.progressiveThreshold;
      return r ?? (this.option.large ? 1e4 : this.get("progressiveThreshold"));
    }, e.prototype.brushSelector = function(r, n, a) {
      return a.point(n.getItemLayout(r));
    }, e.prototype.getZLevelKey = function() {
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
    }, e.type = "series.scatter", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      symbolSize: 10,
      // symbolRotate: null,  // 图形旋转控制
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      // cursor: null,
      itemStyle: {
        opacity: 0.8
        // color: 各异
      },
      emphasis: {
        scale: !0
      },
      // If clip the overflow graphics
      // Works on cartesian / polar series
      clip: !0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      universalTransition: {
        divideShape: "clone"
      }
      // progressive: null
    }, e;
  }(et)
), kN = 4, t$ = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), r$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n._off = 0, n.hoverDataIdx = -1, n;
    }
    return e.prototype.getDefaultShape = function() {
      return new t$();
    }, e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.buildPath = function(r, n) {
      var a = n.points, i = n.size, o = this.symbolProxy, s = o.shape, l = r.getContext ? r.getContext() : r, u = l && i[0] < kN, c = this.softClipShape, d;
      if (u) {
        this._ctx = l;
        return;
      }
      for (this._ctx = null, d = this._off; d < a.length; ) {
        var p = a[d++], f = a[d++];
        isNaN(p) || isNaN(f) || c && !c.contain(p, f) || (s.x = p - i[0] / 2, s.y = f - i[1] / 2, s.width = i[0], s.height = i[1], o.buildPath(r, s, !0));
      }
      this.incremental && (this._off = d, this.notClear = !0);
    }, e.prototype.afterBrush = function() {
      var r = this.shape, n = r.points, a = r.size, i = this._ctx, o = this.softClipShape, s;
      if (i) {
        for (s = this._off; s < n.length; ) {
          var l = n[s++], u = n[s++];
          isNaN(l) || isNaN(u) || o && !o.contain(l, u) || i.fillRect(l - a[0] / 2, u - a[1] / 2, a[0], a[1]);
        }
        this.incremental && (this._off = s, this.notClear = !0);
      }
    }, e.prototype.findDataIndex = function(r, n) {
      for (var a = this.shape, i = a.points, o = a.size, s = Math.max(o[0], 4), l = Math.max(o[1], 4), u = i.length / 2 - 1; u >= 0; u--) {
        var c = u * 2, d = i[c] - s / 2, p = i[c + 1] - l / 2;
        if (r >= d && n >= p && r <= d + s && n <= p + l)
          return u;
      }
      return -1;
    }, e.prototype.contain = function(r, n) {
      var a = this.transformCoordToLocal(r, n), i = this.getBoundingRect();
      if (r = a[0], n = a[1], i.contain(r, n)) {
        var o = this.hoverDataIdx = this.findDataIndex(r, n);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var r = this._rect;
      if (!r) {
        for (var n = this.shape, a = n.points, i = n.size, o = i[0], s = i[1], l = 1 / 0, u = 1 / 0, c = -1 / 0, d = -1 / 0, p = 0; p < a.length; ) {
          var f = a[p++], h = a[p++];
          l = Math.min(f, l), c = Math.max(f, c), u = Math.min(h, u), d = Math.max(h, d);
        }
        r = this._rect = new Te(l - o / 2, u - s / 2, c - l + o, d - u + s);
      }
      return r;
    }, e;
  }(Ce)
), n$ = (
  /** @class */
  function() {
    function t() {
      this.group = new de();
    }
    return t.prototype.updateData = function(e, r) {
      this._clear();
      var n = this._create();
      n.setShape({
        points: e.getLayout("points")
      }), this._setCommon(n, e, r);
    }, t.prototype.updateLayout = function(e) {
      var r = e.getLayout("points");
      this.group.eachChild(function(n) {
        if (n.startIndex != null) {
          var a = (n.endIndex - n.startIndex) * 2, i = n.startIndex * 4 * 2;
          r = new Float32Array(r.buffer, i, a);
        }
        n.setShape("points", r), n.reset();
      });
    }, t.prototype.incrementalPrepareUpdate = function(e) {
      this._clear();
    }, t.prototype.incrementalUpdate = function(e, r, n) {
      var a = this._newAdded[0], i = r.getLayout("points"), o = a && a.shape.points;
      if (o && o.length < 2e4) {
        var s = o.length, l = new Float32Array(s + i.length);
        l.set(o), l.set(i, s), a.endIndex = e.end, a.setShape({
          points: l
        });
      } else {
        this._newAdded = [];
        var u = this._create();
        u.startIndex = e.start, u.endIndex = e.end, u.incremental = !0, u.setShape({
          points: i
        }), this._setCommon(u, r, n);
      }
    }, t.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, t.prototype._create = function() {
      var e = new r$({
        cursor: "default"
      });
      return e.ignoreCoarsePointer = !0, this.group.add(e), this._newAdded.push(e), e;
    }, t.prototype._setCommon = function(e, r, n) {
      var a = r.hostModel;
      n = n || {};
      var i = r.getVisual("symbolSize");
      e.setShape("size", i instanceof Array ? i : [i, i]), e.softClipShape = n.clipShape || null, e.symbolProxy = mt(r.getVisual("symbol"), 0, 0, 0, 0), e.setColor = e.symbolProxy.setColor;
      var o = e.shape.size[0] < kN;
      e.useStyle(
        // Draw shadow when doing fillRect is extremely slow.
        a.getModel("itemStyle").getItemStyle(o ? ["color", "shadowBlur", "shadowColor"] : ["color"])
      );
      var s = r.getVisual("style"), l = s && s.fill;
      l && e.setColor(l);
      var u = pe(e);
      u.seriesIndex = a.seriesIndex, e.on("mousemove", function(c) {
        u.dataIndex = null;
        var d = e.hoverDataIdx;
        d >= 0 && (u.dataIndex = d + (e.startIndex || 0));
      });
    }, t.prototype.remove = function() {
      this._clear();
    }, t.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, t;
  }()
), a$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this._updateSymbolDraw(i, r);
      o.updateData(i, {
        // TODO
        // If this parameter should be a shape or a bounding volume
        // shape will be more general.
        // But bounding volume like bounding rect will be much faster in the contain calculation
        clipShape: this._getClipShape(r)
      }), this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      var i = r.getData(), o = this._updateSymbolDraw(i, r);
      o.incrementalPrepareUpdate(i), this._finished = !1;
    }, e.prototype.incrementalRender = function(r, n, a) {
      this._symbolDraw.incrementalUpdate(r, n.getData(), {
        clipShape: this._getClipShape(n)
      }), this._finished = r.end === n.getData().count();
    }, e.prototype.updateTransform = function(r, n, a) {
      var i = r.getData();
      if (this.group.dirty(), !this._finished || i.count() > 1e4)
        return {
          update: !0
        };
      var o = tc("").reset(r, n, a);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout(i);
    }, e.prototype.eachRendered = function(r) {
      this._symbolDraw && this._symbolDraw.eachRendered(r);
    }, e.prototype._getClipShape = function(r) {
      if (r.get("clip", !0)) {
        var n = r.coordinateSystem;
        return n && n.getArea && n.getArea(0.1);
      }
    }, e.prototype._updateSymbolDraw = function(r, n) {
      var a = this._symbolDraw, i = n.pipelineContext, o = i.large;
      return (!a || o !== this._isLargeDraw) && (a && a.remove(), a = this._symbolDraw = o ? new n$() : new Ju(), this._isLargeDraw = o, this.group.removeAll()), this.group.add(a.group), a;
    }, e.prototype.remove = function(r, n) {
      this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null;
    }, e.prototype.dispose = function() {
    }, e.type = "scatter", e;
  }(Ke)
), i$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.type = "grid", e.dependencies = ["xAxis", "yAxis"], e.layoutMode = "box", e.defaultOption = {
      show: !1,
      // zlevel: 0,
      z: 0,
      left: "10%",
      top: 60,
      right: "10%",
      bottom: 70,
      // If grid size contain label
      containLabel: !1,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      backgroundColor: "rgba(0,0,0,0)",
      borderWidth: 1,
      borderColor: "#ccc"
    }, e;
  }(De)
), Um = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("grid", vt).models[0];
    }, e.type = "cartesian2dAxis", e;
  }(De)
);
_t(Um, Qu);
var BN = {
  show: !0,
  // zlevel: 0,
  z: 0,
  // Inverse the axis.
  inverse: !1,
  // Axis name displayed.
  name: "",
  // 'start' | 'middle' | 'end'
  nameLocation: "end",
  // By degree. By default auto rotate by nameLocation.
  nameRotate: null,
  nameTruncate: {
    maxWidth: null,
    ellipsis: "...",
    placeholder: "."
  },
  // Use global text style by default.
  nameTextStyle: {},
  // The gap between axisName and axisLine.
  nameGap: 15,
  // Default `false` to support tooltip.
  silent: !1,
  // Default `false` to avoid legacy user event listener fail.
  triggerEvent: !1,
  tooltip: {
    show: !1
  },
  axisPointer: {},
  axisLine: {
    show: !0,
    onZero: !0,
    onZeroAxisIndex: null,
    lineStyle: {
      color: "#6E7079",
      width: 1,
      type: "solid"
    },
    // The arrow at both ends the the axis.
    symbol: ["none", "none"],
    symbolSize: [10, 15]
  },
  axisTick: {
    show: !0,
    // Whether axisTick is inside the grid or outside the grid.
    inside: !1,
    // The length of axisTick.
    length: 5,
    lineStyle: {
      width: 1
    }
  },
  axisLabel: {
    show: !0,
    // Whether axisLabel is inside the grid or outside the grid.
    inside: !1,
    rotate: 0,
    // true | false | null/undefined (auto)
    showMinLabel: null,
    // true | false | null/undefined (auto)
    showMaxLabel: null,
    margin: 8,
    // formatter: null,
    fontSize: 12
  },
  splitLine: {
    show: !0,
    showMinLine: !0,
    showMaxLine: !0,
    lineStyle: {
      color: ["#E0E6F1"],
      width: 1,
      type: "solid"
    }
  },
  splitArea: {
    show: !1,
    areaStyle: {
      color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
    }
  }
}, o$ = be({
  // The gap at both ends of the axis. For categoryAxis, boolean.
  boundaryGap: !0,
  // Set false to faster category collection.
  deduplication: null,
  // splitArea: {
  // show: false
  // },
  splitLine: {
    show: !1
  },
  axisTick: {
    // If tick is align with label when boundaryGap is true
    alignWithLabel: !1,
    interval: "auto"
  },
  axisLabel: {
    interval: "auto"
  }
}, BN), Yy = be({
  boundaryGap: [0, 0],
  axisLine: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  axisTick: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  // TODO
  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
  splitNumber: 5,
  minorTick: {
    // Minor tick, not available for cateogry axis.
    show: !1,
    // Split number of minor ticks. The value should be in range of (0, 100)
    splitNumber: 5,
    // Length of minor tick
    length: 3,
    // Line style
    lineStyle: {
      // Default to be same with axisTick
    }
  },
  minorSplitLine: {
    show: !1,
    lineStyle: {
      color: "#F4F7FD",
      width: 1
    }
  }
}, BN), s$ = be({
  splitNumber: 6,
  axisLabel: {
    // To eliminate labels that are not nice
    showMinLabel: !1,
    showMaxLabel: !1,
    rich: {
      primary: {
        fontWeight: "bold"
      }
    }
  },
  splitLine: {
    show: !1
  }
}, Yy), l$ = ie({
  logBase: 10
}, Yy);
const FN = {
  category: o$,
  value: Yy,
  time: s$,
  log: l$
};
var u$ = {
  value: 1,
  category: 1,
  time: 1,
  log: 1
};
function Es(t, e, r, n) {
  w(u$, function(a, i) {
    var o = be(be({}, FN[i], !0), n, !0), s = (
      /** @class */
      function(l) {
        k(u, l);
        function u() {
          var c = l !== null && l.apply(this, arguments) || this;
          return c.type = e + "Axis." + i, c;
        }
        return u.prototype.mergeDefaultAndTheme = function(c, d) {
          var p = mu(this), f = p ? ks(c) : {}, h = d.getTheme();
          be(c, h.get(i + "Axis")), be(c, this.getDefaultOption()), c.type = ex(c), p && Xa(c, f, p);
        }, u.prototype.optionUpdated = function() {
          var c = this.option;
          c.type === "category" && (this.__ordinalMeta = Om.createByAxisModel(this));
        }, u.prototype.getCategories = function(c) {
          var d = this.option;
          if (d.type === "category")
            return c ? d.data : this.__ordinalMeta.categories;
        }, u.prototype.getOrdinalMeta = function() {
          return this.__ordinalMeta;
        }, u.type = e + "Axis." + i, u.defaultOption = o, u;
      }(r)
    );
    t.registerComponentModel(s);
  }), t.registerSubTypeDefaulter(e + "Axis", ex);
}
function ex(t) {
  return t.type || (t.data ? "category" : "value");
}
var c$ = (
  /** @class */
  function() {
    function t(e) {
      this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = e || "";
    }
    return t.prototype.getAxis = function(e) {
      return this._axes[e];
    }, t.prototype.getAxes = function() {
      return $(this._dimList, function(e) {
        return this._axes[e];
      }, this);
    }, t.prototype.getAxesByScale = function(e) {
      return e = e.toLowerCase(), ze(this.getAxes(), function(r) {
        return r.scale.type === e;
      });
    }, t.prototype.addAxis = function(e) {
      var r = e.dim;
      this._axes[r] = e, this._dimList.push(r);
    }, t;
  }()
), zm = ["x", "y"];
function tx(t) {
  return t.type === "interval" || t.type === "time";
}
var d$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "cartesian2d", r.dimensions = zm, r;
    }
    return e.prototype.calcAffineTransform = function() {
      this._transform = this._invTransform = null;
      var r = this.getAxis("x").scale, n = this.getAxis("y").scale;
      if (!(!tx(r) || !tx(n))) {
        var a = r.getExtent(), i = n.getExtent(), o = this.dataToPoint([a[0], i[0]]), s = this.dataToPoint([a[1], i[1]]), l = a[1] - a[0], u = i[1] - i[0];
        if (!(!l || !u)) {
          var c = (s[0] - o[0]) / l, d = (s[1] - o[1]) / u, p = o[0] - a[0] * c, f = o[1] - i[0] * d, h = this._transform = [c, 0, 0, d, p, f];
          this._invTransform = Ms([], h);
        }
      }
    }, e.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
    }, e.prototype.containPoint = function(r) {
      var n = this.getAxis("x"), a = this.getAxis("y");
      return n.contain(n.toLocalCoord(r[0])) && a.contain(a.toLocalCoord(r[1]));
    }, e.prototype.containData = function(r) {
      return this.getAxis("x").containData(r[0]) && this.getAxis("y").containData(r[1]);
    }, e.prototype.containZone = function(r, n) {
      var a = this.dataToPoint(r), i = this.dataToPoint(n), o = this.getArea(), s = new Te(a[0], a[1], i[0] - a[0], i[1] - a[1]);
      return o.intersect(s);
    }, e.prototype.dataToPoint = function(r, n, a) {
      a = a || [];
      var i = r[0], o = r[1];
      if (this._transform && i != null && isFinite(i) && o != null && isFinite(o))
        return Ut(a, r, this._transform);
      var s = this.getAxis("x"), l = this.getAxis("y");
      return a[0] = s.toGlobalCoord(s.dataToCoord(i, n)), a[1] = l.toGlobalCoord(l.dataToCoord(o, n)), a;
    }, e.prototype.clampData = function(r, n) {
      var a = this.getAxis("x").scale, i = this.getAxis("y").scale, o = a.getExtent(), s = i.getExtent(), l = a.parse(r[0]), u = i.parse(r[1]);
      return n = n || [], n[0] = Math.min(Math.max(Math.min(o[0], o[1]), l), Math.max(o[0], o[1])), n[1] = Math.min(Math.max(Math.min(s[0], s[1]), u), Math.max(s[0], s[1])), n;
    }, e.prototype.pointToData = function(r, n) {
      var a = [];
      if (this._invTransform)
        return Ut(a, r, this._invTransform);
      var i = this.getAxis("x"), o = this.getAxis("y");
      return a[0] = i.coordToData(i.toLocalCoord(r[0]), n), a[1] = o.coordToData(o.toLocalCoord(r[1]), n), a;
    }, e.prototype.getOtherAxis = function(r) {
      return this.getAxis(r.dim === "x" ? "y" : "x");
    }, e.prototype.getArea = function(r) {
      r = r || 0;
      var n = this.getAxis("x").getGlobalExtent(), a = this.getAxis("y").getGlobalExtent(), i = Math.min(n[0], n[1]) - r, o = Math.min(a[0], a[1]) - r, s = Math.max(n[0], n[1]) - i + r, l = Math.max(a[0], a[1]) - o + r;
      return new Te(i, o, s, l);
    }, e;
  }(c$)
), p$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i, o) {
      var s = t.call(this, r, n, a) || this;
      return s.index = 0, s.type = i || "value", s.position = o || "bottom", s;
    }
    return e.prototype.isHorizontal = function() {
      var r = this.position;
      return r === "top" || r === "bottom";
    }, e.prototype.getGlobalExtent = function(r) {
      var n = this.getExtent();
      return n[0] = this.toGlobalCoord(n[0]), n[1] = this.toGlobalCoord(n[1]), r && n[0] > n[1] && n.reverse(), n;
    }, e.prototype.pointToData = function(r, n) {
      return this.coordToData(this.toLocalCoord(r[this.dim === "x" ? 0 : 1]), n);
    }, e.prototype.setCategorySortInfo = function(r) {
      if (this.type !== "category")
        return !1;
      this.model.option.categorySortInfo = r, this.scale.setSortInfo(r);
    }, e;
  }(on)
);
function Vm(t, e, r) {
  r = r || {};
  var n = t.coordinateSystem, a = e.axis, i = {}, o = a.getAxesOnZeroOf()[0], s = a.position, l = o ? "onZero" : s, u = a.dim, c = n.getRect(), d = [c.x, c.x + c.width, c.y, c.y + c.height], p = {
    left: 0,
    right: 1,
    top: 0,
    bottom: 1,
    onZero: 2
  }, f = e.get("offset") || 0, h = u === "x" ? [d[2] - f, d[3] + f] : [d[0] - f, d[1] + f];
  if (o) {
    var g = o.toGlobalCoord(o.dataToCoord(0));
    h[p.onZero] = Math.max(Math.min(g, h[1]), h[0]);
  }
  i.position = [u === "y" ? h[p[l]] : d[0], u === "x" ? h[p[l]] : d[3]], i.rotation = Math.PI / 2 * (u === "x" ? 0 : 1);
  var v = {
    top: -1,
    bottom: 1,
    left: -1,
    right: 1
  };
  i.labelDirection = i.tickDirection = i.nameDirection = v[s], i.labelOffset = o ? h[p[s]] - h[p.onZero] : 0, e.get(["axisTick", "inside"]) && (i.tickDirection = -i.tickDirection), Pt(r.labelInside, e.get(["axisLabel", "inside"])) && (i.labelDirection = -i.labelDirection);
  var m = e.get(["axisLabel", "rotate"]);
  return i.labelRotate = l === "top" ? -m : m, i.z2 = 1, i;
}
function rx(t) {
  return t.get("coordinateSystem") === "cartesian2d";
}
function nx(t) {
  var e = {
    xAxisModel: null,
    yAxisModel: null
  };
  return w(e, function(r, n) {
    var a = n.replace(/Model$/, ""), i = t.getReferringComponents(a, vt).models[0];
    e[n] = i;
  }), e;
}
var Ag = Math.log;
function GN(t, e, r) {
  var n = oa.prototype, a = n.getTicks.call(r), i = n.getTicks.call(r, !0), o = a.length - 1, s = n.getInterval.call(r), l = VI(t, e), u = l.extent, c = l.fixMin, d = l.fixMax;
  if (t.type === "log") {
    var p = Ag(t.base);
    u = [Ag(u[0]) / p, Ag(u[1]) / p];
  }
  t.setExtent(u[0], u[1]), t.calcNiceExtent({
    splitNumber: o,
    fixMin: c,
    fixMax: d
  });
  var f = n.getExtent.call(t);
  c && (u[0] = f[0]), d && (u[1] = f[1]);
  var h = n.getInterval.call(t), g = u[0], v = u[1];
  if (c && d)
    h = (v - g) / o;
  else if (c)
    for (v = u[0] + h * o; v < u[1] && isFinite(v) && isFinite(u[1]); )
      h = dg(h), v = u[0] + h * o;
  else if (d)
    for (g = u[1] - h * o; g > u[0] && isFinite(g) && isFinite(u[0]); )
      h = dg(h), g = u[1] - h * o;
  else {
    var m = t.getTicks().length - 1;
    m > o && (h = dg(h));
    var _ = h * o;
    v = Math.ceil(u[1] / h) * h, g = ut(v - _), g < 0 && u[0] >= 0 ? (g = 0, v = ut(_)) : v > 0 && u[1] <= 0 && (v = 0, g = -ut(_));
  }
  var y = (a[0].value - i[0].value) / s, b = (a[o].value - i[o].value) / s;
  n.setExtent.call(t, g + h * y, v + h * b), n.setInterval.call(t, h), (y || b) && n.setNiceExtent.call(t, g + h, v - h);
}
var f$ = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = zm, this._initCartesian(e, r, n), this.model = e;
    }
    return t.prototype.getRect = function() {
      return this._rect;
    }, t.prototype.update = function(e, r) {
      var n = this._axesMap;
      this._updateScale(e, this.model);
      function a(o) {
        var s, l = Me(o), u = l.length;
        if (u) {
          for (var c = [], d = u - 1; d >= 0; d--) {
            var p = +l[d], f = o[p], h = f.model, g = f.scale;
            // Only value and log axis without interval support alignTicks.
            Lm(g) && h.get("alignTicks") && h.get("interval") == null ? c.push(f) : (bs(g, h), Lm(g) && (s = f));
          }
          c.length && (s || (s = c.pop(), bs(s.scale, s.model)), w(c, function(v) {
            GN(v.scale, v.model, s.scale);
          }));
        }
      }
      a(n.x), a(n.y);
      var i = {};
      w(n.x, function(o) {
        ax(n, "y", o, i);
      }), w(n.y, function(o) {
        ax(n, "x", o, i);
      }), this.resize(this.model, r);
    }, t.prototype.resize = function(e, r, n) {
      var a = e.getBoxLayoutParams(), i = !n && e.get("containLabel"), o = Et(a, {
        width: r.getWidth(),
        height: r.getHeight()
      });
      this._rect = o;
      var s = this._axesList;
      l(), i && (w(s, function(u) {
        if (!u.model.get(["axisLabel", "inside"])) {
          var c = J5(u);
          if (c) {
            var d = u.isHorizontal() ? "height" : "width", p = u.model.get(["axisLabel", "margin"]);
            o[d] -= c[d] + p, u.position === "top" ? o.y += c.height + p : u.position === "left" && (o.x += c.width + p);
          }
        }
      }), l()), w(this._coordsList, function(u) {
        u.calcAffineTransform();
      });
      function l() {
        w(s, function(u) {
          var c = u.isHorizontal(), d = c ? [0, o.width] : [0, o.height], p = u.inverse ? 1 : 0;
          u.setExtent(d[p], d[1 - p]), h$(u, c ? o.x : o.y);
        });
      }
    }, t.prototype.getAxis = function(e, r) {
      var n = this._axesMap[e];
      if (n != null)
        return n[r || 0];
    }, t.prototype.getAxes = function() {
      return this._axesList.slice();
    }, t.prototype.getCartesian = function(e, r) {
      if (e != null && r != null) {
        var n = "x" + e + "y" + r;
        return this._coordsMap[n];
      }
      se(e) && (r = e.yAxisIndex, e = e.xAxisIndex);
      for (var a = 0, i = this._coordsList; a < i.length; a++)
        if (i[a].getAxis("x").index === e || i[a].getAxis("y").index === r)
          return i[a];
    }, t.prototype.getCartesians = function() {
      return this._coordsList.slice();
    }, t.prototype.convertToPixel = function(e, r, n) {
      var a = this._findConvertTarget(r);
      return a.cartesian ? a.cartesian.dataToPoint(n) : a.axis ? a.axis.toGlobalCoord(a.axis.dataToCoord(n)) : null;
    }, t.prototype.convertFromPixel = function(e, r, n) {
      var a = this._findConvertTarget(r);
      return a.cartesian ? a.cartesian.pointToData(n) : a.axis ? a.axis.coordToData(a.axis.toLocalCoord(n)) : null;
    }, t.prototype._findConvertTarget = function(e) {
      var r = e.seriesModel, n = e.xAxisModel || r && r.getReferringComponents("xAxis", vt).models[0], a = e.yAxisModel || r && r.getReferringComponents("yAxis", vt).models[0], i = e.gridModel, o = this._coordsList, s, l;
      if (r)
        s = r.coordinateSystem, xe(o, s) < 0 && (s = null);
      else if (n && a)
        s = this.getCartesian(n.componentIndex, a.componentIndex);
      else if (n)
        l = this.getAxis("x", n.componentIndex);
      else if (a)
        l = this.getAxis("y", a.componentIndex);
      else if (i) {
        var u = i.coordinateSystem;
        u === this && (s = this._coordsList[0]);
      }
      return {
        cartesian: s,
        axis: l
      };
    }, t.prototype.containPoint = function(e) {
      var r = this._coordsList[0];
      if (r)
        return r.containPoint(e);
    }, t.prototype._initCartesian = function(e, r, n) {
      var a = this, i = this, o = {
        left: !1,
        right: !1,
        top: !1,
        bottom: !1
      }, s = {
        x: {},
        y: {}
      }, l = {
        x: 0,
        y: 0
      };
      if (r.eachComponent("xAxis", u("x"), this), r.eachComponent("yAxis", u("y"), this), !l.x || !l.y) {
        this._axesMap = {}, this._axesList = [];
        return;
      }
      this._axesMap = s, w(s.x, function(c, d) {
        w(s.y, function(p, f) {
          var h = "x" + d + "y" + f, g = new d$(h);
          g.master = a, g.model = e, a._coordsMap[h] = g, a._coordsList.push(g), g.addAxis(c), g.addAxis(p);
        });
      });
      function u(c) {
        return function(d, p) {
          if (wg(d, e)) {
            var f = d.get("position");
            c === "x" ? f !== "top" && f !== "bottom" && (f = o.bottom ? "top" : "bottom") : f !== "left" && f !== "right" && (f = o.left ? "right" : "left"), o[f] = !0;
            var h = new p$(c, Nf(d), [0, 0], d.get("type"), f), g = h.type === "category";
            h.onBand = g && d.get("boundaryGap"), h.inverse = d.get("inverse"), d.axis = h, h.model = d, h.grid = i, h.index = p, i._axesList.push(h), s[c][p] = h, l[c]++;
          }
        };
      }
    }, t.prototype._updateScale = function(e, r) {
      w(this._axesList, function(a) {
        if (a.scale.setExtent(1 / 0, -1 / 0), a.type === "category") {
          var i = a.model.get("categorySortInfo");
          a.scale.setSortInfo(i);
        }
      }), e.eachSeries(function(a) {
        if (rx(a)) {
          var i = nx(a), o = i.xAxisModel, s = i.yAxisModel;
          if (!wg(o, r) || !wg(s, r))
            return;
          var l = this.getCartesian(o.componentIndex, s.componentIndex), u = a.getData(), c = l.getAxis("x"), d = l.getAxis("y");
          n(u, c), n(u, d);
        }
      }, this);
      function n(a, i) {
        w(Ep(a, i.dim), function(o) {
          i.scale.unionExtentFromData(a, o);
        });
      }
    }, t.prototype.getTooltipAxes = function(e) {
      var r = [], n = [];
      return w(this.getCartesians(), function(a) {
        var i = e != null && e !== "auto" ? a.getAxis(e) : a.getBaseAxis(), o = a.getOtherAxis(i);
        xe(r, i) < 0 && r.push(i), xe(n, o) < 0 && n.push(o);
      }), {
        baseAxes: r,
        otherAxes: n
      };
    }, t.create = function(e, r) {
      var n = [];
      return e.eachComponent("grid", function(a, i) {
        var o = new t(a, e, r);
        o.name = "grid_" + i, o.resize(a, r, !0), a.coordinateSystem = o, n.push(o);
      }), e.eachSeries(function(a) {
        if (rx(a)) {
          var i = nx(a), o = i.xAxisModel, s = i.yAxisModel, l = o.getCoordSysModel(), u = l.coordinateSystem;
          a.coordinateSystem = u.getCartesian(o.componentIndex, s.componentIndex);
        }
      }), n;
    }, t.dimensions = zm, t;
  }()
);
function wg(t, e) {
  return t.getCoordSysModel() === e;
}
function ax(t, e, r, n) {
  r.getAxesOnZeroOf = function() {
    return i ? [i] : [];
  };
  var a = t[e], i, o = r.model, s = o.get(["axisLine", "onZero"]), l = o.get(["axisLine", "onZeroAxisIndex"]);
  if (!s)
    return;
  if (l != null)
    ix(a[l]) && (i = a[l]);
  else
    for (var u in a)
      if (a.hasOwnProperty(u) && ix(a[u]) && !n[c(a[u])]) {
        i = a[u];
        break;
      }
  i && (n[c(i)] = !0);
  function c(d) {
    return d.dim + "_" + d.index;
  }
}
function ix(t) {
  return t && t.type !== "category" && t.type !== "time" && j5(t);
}
function h$(t, e) {
  var r = t.getExtent(), n = r[0] + r[1];
  t.toGlobalCoord = t.dim === "x" ? function(a) {
    return a + e;
  } : function(a) {
    return n - a + e;
  }, t.toLocalCoord = t.dim === "x" ? function(a) {
    return a - e;
  } : function(a) {
    return n - a + e;
  };
}
var Ba = Math.PI, nr = (
  /** @class */
  function() {
    function t(e, r) {
      this.group = new de(), this.opt = r, this.axisModel = e, ie(r, {
        labelOffset: 0,
        nameDirection: 1,
        tickDirection: 1,
        labelDirection: 1,
        silent: !0,
        handleAutoShown: function() {
          return !0;
        }
      });
      var n = new de({
        x: r.position[0],
        y: r.position[1],
        rotation: r.rotation
      });
      n.updateTransform(), this._transformGroup = n;
    }
    return t.prototype.hasBuilder = function(e) {
      return !!ox[e];
    }, t.prototype.add = function(e) {
      ox[e](this.opt, this.axisModel, this.group, this._transformGroup);
    }, t.prototype.getGroup = function() {
      return this.group;
    }, t.innerTextLayout = function(e, r, n) {
      var a = rD(r - e), i, o;
      return du(a) ? (o = n > 0 ? "top" : "bottom", i = "center") : du(a - Ba) ? (o = n > 0 ? "bottom" : "top", i = "center") : (o = "middle", a > 0 && a < Ba ? i = n > 0 ? "right" : "left" : i = n > 0 ? "left" : "right"), {
        rotation: a,
        textAlign: i,
        textVerticalAlign: o
      };
    }, t.makeAxisEventDataBase = function(e) {
      var r = {
        componentType: e.mainType,
        componentIndex: e.componentIndex
      };
      return r[e.mainType + "Index"] = e.componentIndex, r;
    }, t.isLabelSilent = function(e) {
      var r = e.get("tooltip");
      return e.get("silent") || !(e.get("triggerEvent") || r && r.show);
    }, t;
  }()
), ox = {
  axisLine: function(t, e, r, n) {
    var a = e.get(["axisLine", "show"]);
    if (a === "auto" && t.handleAutoShown && (a = t.handleAutoShown("axisLine")), !!a) {
      var i = e.axis.getExtent(), o = n.transform, s = [i[0], 0], l = [i[1], 0], u = s[0] > l[0];
      o && (Ut(s, s, o), Ut(l, l, o));
      var c = G({
        lineCap: "round"
      }, e.getModel(["axisLine", "lineStyle"]).getLineStyle()), d = new Ct({
        shape: {
          x1: s[0],
          y1: s[1],
          x2: l[0],
          y2: l[1]
        },
        style: c,
        strokeContainThreshold: t.strokeContainThreshold || 5,
        silent: !0,
        z2: 1
      });
      ms(d.shape, d.style.lineWidth), d.anid = "line", r.add(d);
      var p = e.get(["axisLine", "symbol"]);
      if (p != null) {
        var f = e.get(["axisLine", "symbolSize"]);
        Y(p) && (p = [p, p]), (Y(f) || ke(f)) && (f = [f, f]);
        var h = mo(e.get(["axisLine", "symbolOffset"]) || 0, f), g = f[0], v = f[1];
        w([{
          rotate: t.rotation + Math.PI / 2,
          offset: h[0],
          r: 0
        }, {
          rotate: t.rotation - Math.PI / 2,
          offset: h[1],
          r: Math.sqrt((s[0] - l[0]) * (s[0] - l[0]) + (s[1] - l[1]) * (s[1] - l[1]))
        }], function(m, _) {
          if (p[_] !== "none" && p[_] != null) {
            var y = mt(p[_], -g / 2, -v / 2, g, v, c.stroke, !0), b = m.r + m.offset, S = u ? l : s;
            y.attr({
              rotation: m.rotate,
              x: S[0] + b * Math.cos(t.rotation),
              y: S[1] - b * Math.sin(t.rotation),
              silent: !0,
              z2: 11
            }), r.add(y);
          }
        });
      }
    }
  },
  axisTickLabel: function(t, e, r, n) {
    var a = m$(r, n, e, t), i = y$(r, n, e, t);
    if (v$(e, i, a), _$(r, n, e, t.tickDirection), e.get(["axisLabel", "hideOverlap"])) {
      var o = rN($(i, function(s) {
        return {
          label: s,
          priority: s.z2,
          defaultAttr: {
            ignore: s.ignore
          }
        };
      }));
      iN(o);
    }
  },
  axisName: function(t, e, r, n) {
    var a = Pt(t.axisName, e.get("name"));
    if (a) {
      var i = e.get("nameLocation"), o = t.nameDirection, s = e.getModel("nameTextStyle"), l = e.get("nameGap") || 0, u = e.axis.getExtent(), c = u[0] > u[1] ? -1 : 1, d = [
        i === "start" ? u[0] - c * l : i === "end" ? u[1] + c * l : (u[0] + u[1]) / 2,
        // Reuse labelOffset.
        lx(i) ? t.labelOffset + o * l : 0
      ], p, f = e.get("nameRotate");
      f != null && (f = f * Ba / 180);
      var h;
      lx(i) ? p = nr.innerTextLayout(
        t.rotation,
        f ?? t.rotation,
        // Adapt to axis.
        o
      ) : (p = g$(t.rotation, i, f || 0, u), h = t.axisNameAvailableWidth, h != null && (h = Math.abs(h / Math.sin(p.rotation)), !isFinite(h) && (h = null)));
      var g = s.getFont(), v = e.get("nameTruncate", !0) || {}, m = v.ellipsis, _ = Pt(t.nameTruncateMaxWidth, v.maxWidth, h), y = new Pe({
        x: d[0],
        y: d[1],
        rotation: p.rotation,
        silent: nr.isLabelSilent(e),
        style: Je(s, {
          text: a,
          font: g,
          overflow: "truncate",
          width: _,
          ellipsis: m,
          fill: s.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          align: s.get("align") || p.textAlign,
          verticalAlign: s.get("verticalAlign") || p.textVerticalAlign
        }),
        z2: 1
      });
      if (go({
        el: y,
        componentModel: e,
        itemName: a
      }), y.__fullText = a, y.anid = "name", e.get("triggerEvent")) {
        var b = nr.makeAxisEventDataBase(e);
        b.targetType = "axisName", b.name = a, pe(y).eventData = b;
      }
      n.add(y), y.updateTransform(), r.add(y), y.decomposeTransform();
    }
  }
};
function g$(t, e, r, n) {
  var a = rD(r - t), i, o, s = n[0] > n[1], l = e === "start" && !s || e !== "start" && s;
  return du(a - Ba / 2) ? (o = l ? "bottom" : "top", i = "center") : du(a - Ba * 1.5) ? (o = l ? "top" : "bottom", i = "center") : (o = "middle", a < Ba * 1.5 && a > Ba / 2 ? i = l ? "left" : "right" : i = l ? "right" : "left"), {
    rotation: a,
    textAlign: i,
    textVerticalAlign: o
  };
}
function v$(t, e, r) {
  if (!$I(t.axis)) {
    var n = t.get(["axisLabel", "showMinLabel"]), a = t.get(["axisLabel", "showMaxLabel"]);
    e = e || [], r = r || [];
    var i = e[0], o = e[1], s = e[e.length - 1], l = e[e.length - 2], u = r[0], c = r[1], d = r[r.length - 1], p = r[r.length - 2];
    n === !1 ? (xr(i), xr(u)) : sx(i, o) && (n ? (xr(o), xr(c)) : (xr(i), xr(u))), a === !1 ? (xr(s), xr(d)) : sx(l, s) && (a ? (xr(l), xr(p)) : (xr(s), xr(d)));
  }
}
function xr(t) {
  t && (t.ignore = !0);
}
function sx(t, e) {
  var r = t && t.getBoundingRect().clone(), n = e && e.getBoundingRect().clone();
  if (!(!r || !n)) {
    var a = tf([]);
    return ho(a, a, -t.rotation), r.applyTransform(Xn([], a, t.getLocalTransform())), n.applyTransform(Xn([], a, e.getLocalTransform())), r.intersect(n);
  }
}
function lx(t) {
  return t === "middle" || t === "center";
}
function UN(t, e, r, n, a) {
  for (var i = [], o = [], s = [], l = 0; l < t.length; l++) {
    var u = t[l].coord;
    o[0] = u, o[1] = 0, s[0] = u, s[1] = r, e && (Ut(o, o, e), Ut(s, s, e));
    var c = new Ct({
      shape: {
        x1: o[0],
        y1: o[1],
        x2: s[0],
        y2: s[1]
      },
      style: n,
      z2: 2,
      autoBatch: !0,
      silent: !0
    });
    ms(c.shape, c.style.lineWidth), c.anid = a + "_" + t[l].tickValue, i.push(c);
  }
  return i;
}
function m$(t, e, r, n) {
  var a = r.axis, i = r.getModel("axisTick"), o = i.get("show");
  if (o === "auto" && n.handleAutoShown && (o = n.handleAutoShown("axisTick")), !(!o || a.scale.isBlank())) {
    for (var s = i.getModel("lineStyle"), l = n.tickDirection * i.get("length"), u = a.getTicksCoords(), c = UN(u, e.transform, l, ie(s.getLineStyle(), {
      stroke: r.get(["axisLine", "lineStyle", "color"])
    }), "ticks"), d = 0; d < c.length; d++)
      t.add(c[d]);
    return c;
  }
}
function _$(t, e, r, n) {
  var a = r.axis, i = r.getModel("minorTick");
  if (!(!i.get("show") || a.scale.isBlank())) {
    var o = a.getMinorTicksCoords();
    if (o.length)
      for (var s = i.getModel("lineStyle"), l = n * i.get("length"), u = ie(s.getLineStyle(), ie(r.getModel("axisTick").getLineStyle(), {
        stroke: r.get(["axisLine", "lineStyle", "color"])
      })), c = 0; c < o.length; c++)
        for (var d = UN(o[c], e.transform, l, u, "minorticks_" + c), p = 0; p < d.length; p++)
          t.add(d[p]);
  }
}
function y$(t, e, r, n) {
  var a = r.axis, i = Pt(n.axisLabelShow, r.get(["axisLabel", "show"]));
  if (!(!i || a.scale.isBlank())) {
    var o = r.getModel("axisLabel"), s = o.get("margin"), l = a.getViewLabels(), u = (Pt(n.labelRotate, o.get("rotate")) || 0) * Ba / 180, c = nr.innerTextLayout(n.rotation, u, n.labelDirection), d = r.getCategories && r.getCategories(!0), p = [], f = nr.isLabelSilent(r), h = r.get("triggerEvent");
    return w(l, function(g, v) {
      var m = a.scale.type === "ordinal" ? a.scale.getRawOrdinalNumber(g.tickValue) : g.tickValue, _ = g.formattedLabel, y = g.rawLabel, b = o;
      if (d && d[m]) {
        var S = d[m];
        se(S) && S.textStyle && (b = new He(S.textStyle, o, r.ecModel));
      }
      var E = b.getTextColor() || r.get(["axisLine", "lineStyle", "color"]), T = a.dataToCoord(m), x = b.getShallow("align", !0) || c.textAlign, C = ge(b.getShallow("alignMinLabel", !0), x), A = ge(b.getShallow("alignMaxLabel", !0), x), D = b.getShallow("verticalAlign", !0) || b.getShallow("baseline", !0) || c.textVerticalAlign, M = ge(b.getShallow("verticalAlignMinLabel", !0), D), I = ge(b.getShallow("verticalAlignMaxLabel", !0), D), N = new Pe({
        x: T,
        y: n.labelOffset + n.labelDirection * s,
        rotation: c.rotation,
        silent: f,
        z2: 10 + (g.level || 0),
        style: Je(b, {
          text: _,
          align: v === 0 ? C : v === l.length - 1 ? A : x,
          verticalAlign: v === 0 ? M : v === l.length - 1 ? I : D,
          fill: ae(E) ? E(
            // (1) In category axis with data zoom, tick is not the original
            // index of axis.data. So tick should not be exposed to user
            // in category axis.
            // (2) Compatible with previous version, which always use formatted label as
            // input. But in interval scale the formatted label is like '223,445', which
            // maked user replace ','. So we modify it to return original val but remain
            // it as 'string' to avoid error in replacing.
            a.type === "category" ? y : a.type === "value" ? m + "" : m,
            v
          ) : E
        })
      });
      if (N.anid = "label_" + m, go({
        el: N,
        componentModel: r,
        itemName: _,
        formatterParamsExtra: {
          isTruncated: function() {
            return N.isTruncated;
          },
          value: y,
          tickIndex: v
        }
      }), h) {
        var R = nr.makeAxisEventDataBase(r);
        R.targetType = "axisLabel", R.value = y, R.tickIndex = v, a.type === "category" && (R.dataIndex = m), pe(N).eventData = R;
      }
      e.add(N), N.updateTransform(), p.push(N), t.add(N), N.decomposeTransform();
    }), p;
  }
}
function b$(t, e) {
  var r = {
    /**
     * key: makeKey(axis.model)
     * value: {
     *      axis,
     *      coordSys,
     *      axisPointerModel,
     *      triggerTooltip,
     *      triggerEmphasis,
     *      involveSeries,
     *      snap,
     *      seriesModels,
     *      seriesDataCount
     * }
     */
    axesInfo: {},
    seriesInvolved: !1,
    /**
     * key: makeKey(coordSys.model)
     * value: Object: key makeKey(axis.model), value: axisInfo
     */
    coordSysAxesInfo: {},
    coordSysMap: {}
  };
  return S$(r, t, e), r.seriesInvolved && T$(r, t), r;
}
function S$(t, e, r) {
  var n = e.getComponent("tooltip"), a = e.getComponent("axisPointer"), i = a.get("link", !0) || [], o = [];
  w(r.getCoordinateSystems(), function(s) {
    if (!s.axisPointerEnabled)
      return;
    var l = Au(s.model), u = t.coordSysAxesInfo[l] = {};
    t.coordSysMap[l] = s;
    var c = s.model, d = c.getModel("tooltip", n);
    if (w(s.getAxes(), _e(g, !1, null)), s.getTooltipAxes && n && d.get("show")) {
      var p = d.get("trigger") === "axis", f = d.get(["axisPointer", "type"]) === "cross", h = s.getTooltipAxes(d.get(["axisPointer", "axis"]));
      (p || f) && w(h.baseAxes, _e(g, f ? "cross" : !0, p)), f && w(h.otherAxes, _e(g, "cross", !1));
    }
    function g(v, m, _) {
      var y = _.model.getModel("axisPointer", a), b = y.get("show");
      if (!(!b || b === "auto" && !v && !$m(y))) {
        m == null && (m = y.get("triggerTooltip")), y = v ? E$(_, d, a, e, v, m) : y;
        var S = y.get("snap"), E = y.get("triggerEmphasis"), T = Au(_.model), x = m || S || _.type === "category", C = t.axesInfo[T] = {
          key: T,
          axis: _,
          coordSys: s,
          axisPointerModel: y,
          triggerTooltip: m,
          triggerEmphasis: E,
          involveSeries: x,
          snap: S,
          useHandle: $m(y),
          seriesModels: [],
          linkGroup: null
        };
        u[T] = C, t.seriesInvolved = t.seriesInvolved || x;
        var A = x$(i, _);
        if (A != null) {
          var D = o[A] || (o[A] = {
            axesInfo: {}
          });
          D.axesInfo[T] = C, D.mapper = i[A].mapper, C.linkGroup = D;
        }
      }
    }
  });
}
function E$(t, e, r, n, a, i) {
  var o = e.getModel("axisPointer"), s = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], l = {};
  w(s, function(p) {
    l[p] = le(o.get(p));
  }), l.snap = t.type !== "category" && !!i, o.get("type") === "cross" && (l.type = "line");
  var u = l.label || (l.label = {});
  if (u.show == null && (u.show = !1), a === "cross") {
    var c = o.get(["label", "show"]);
    if (u.show = c ?? !0, !i) {
      var d = l.lineStyle = o.get("crossStyle");
      d && ie(u, d.textStyle);
    }
  }
  return t.model.getModel("axisPointer", new He(l, r, n));
}
function T$(t, e) {
  e.eachSeries(function(r) {
    var n = r.coordinateSystem, a = r.get(["tooltip", "trigger"], !0), i = r.get(["tooltip", "show"], !0);
    !n || a === "none" || a === !1 || a === "item" || i === !1 || r.get(["axisPointer", "show"], !0) === !1 || w(t.coordSysAxesInfo[Au(n.model)], function(o) {
      var s = o.axis;
      n.getAxis(s.dim) === s && (o.seriesModels.push(r), o.seriesDataCount == null && (o.seriesDataCount = 0), o.seriesDataCount += r.getData().count());
    });
  });
}
function x$(t, e) {
  for (var r = e.model, n = e.dim, a = 0; a < t.length; a++) {
    var i = t[a] || {};
    if (Dg(i[n + "AxisId"], r.id) || Dg(i[n + "AxisIndex"], r.componentIndex) || Dg(i[n + "AxisName"], r.name))
      return a;
  }
}
function Dg(t, e) {
  return t === "all" || V(t) && xe(t, e) >= 0 || t === e;
}
function C$(t) {
  var e = Ky(t);
  if (e) {
    var r = e.axisPointerModel, n = e.axis.scale, a = r.option, i = r.get("status"), o = r.get("value");
    o != null && (o = n.parse(o));
    var s = $m(r);
    i == null && (a.status = s ? "show" : "hide");
    var l = n.getExtent().slice();
    l[0] > l[1] && l.reverse(), // Pick a value on axis when initializing.
    (o == null || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), a.value = o, s && (a.status = e.axis.scale.isBlank() ? "hide" : "show");
  }
}
function Ky(t) {
  var e = (t.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
  return e && e.axesInfo[Au(t)];
}
function A$(t) {
  var e = Ky(t);
  return e && e.axisPointerModel;
}
function $m(t) {
  return !!t.get(["handle", "show"]);
}
function Au(t) {
  return t.type + "||" + t.id;
}
var ux = {}, bo = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      this.axisPointerClass && C$(r), t.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(r, a, !0);
    }, e.prototype.updateAxisPointer = function(r, n, a, i) {
      this._doUpdateAxisPointerClass(r, a, !1);
    }, e.prototype.remove = function(r, n) {
      var a = this._axisPointer;
      a && a.remove(n);
    }, e.prototype.dispose = function(r, n) {
      this._disposeAxisPointer(n), t.prototype.dispose.apply(this, arguments);
    }, e.prototype._doUpdateAxisPointerClass = function(r, n, a) {
      var i = e.getAxisPointerClass(this.axisPointerClass);
      if (i) {
        var o = A$(r);
        o ? (this._axisPointer || (this._axisPointer = new i())).render(r, o, n, a) : this._disposeAxisPointer(n);
      }
    }, e.prototype._disposeAxisPointer = function(r) {
      this._axisPointer && this._axisPointer.dispose(r), this._axisPointer = null;
    }, e.registerAxisPointerClass = function(r, n) {
      ux[r] = n;
    }, e.getAxisPointerClass = function(r) {
      return r && ux[r];
    }, e.type = "axis", e;
  }(st)
), Hm = Oe();
function zN(t, e, r, n) {
  var a = r.axis;
  if (!a.scale.isBlank()) {
    var i = r.getModel("splitArea"), o = i.getModel("areaStyle"), s = o.get("color"), l = n.coordinateSystem.getRect(), u = a.getTicksCoords({
      tickModel: i,
      clamp: !0
    });
    if (u.length) {
      var c = s.length, d = Hm(t).splitAreaColors, p = J(), f = 0;
      if (d)
        for (var h = 0; h < u.length; h++) {
          var g = d.get(u[h].tickValue);
          if (g != null) {
            f = (g + (c - 1) * h) % c;
            break;
          }
        }
      var v = a.toGlobalCoord(u[0].coord), m = o.getAreaStyle();
      s = V(s) ? s : [s];
      for (var h = 1; h < u.length; h++) {
        var _ = a.toGlobalCoord(u[h].coord), y = void 0, b = void 0, S = void 0, E = void 0;
        a.isHorizontal() ? (y = v, b = l.y, S = _ - y, E = l.height, v = y + S) : (y = l.x, b = v, S = l.width, E = _ - b, v = b + E);
        var T = u[h - 1].tickValue;
        T != null && p.set(T, f), e.add(new Re({
          anid: T != null ? "area_" + T : null,
          shape: {
            x: y,
            y: b,
            width: S,
            height: E
          },
          style: ie({
            fill: s[f]
          }, m),
          autoBatch: !0,
          silent: !0
        })), f = (f + 1) % c;
      }
      Hm(t).splitAreaColors = p;
    }
  }
}
function VN(t) {
  Hm(t).splitAreaColors = null;
}
var w$ = ["axisLine", "axisTickLabel", "axisName"], D$ = ["splitArea", "splitLine", "minorSplitLine"], $N = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.axisPointerClass = "CartesianAxisPointer", r;
    }
    return e.prototype.render = function(r, n, a, i) {
      this.group.removeAll();
      var o = this._axisGroup;
      if (this._axisGroup = new de(), this.group.add(this._axisGroup), !!r.get("show")) {
        var s = r.getCoordSysModel(), l = Vm(s, r), u = new nr(r, G({
          handleAutoShown: function(d) {
            for (var p = s.coordinateSystem.getCartesians(), f = 0; f < p.length; f++)
              if (Lm(p[f].getOtherAxis(r.axis).scale))
                return !0;
            return !1;
          }
        }, l));
        w(w$, u.add, u), this._axisGroup.add(u.getGroup()), w(D$, function(d) {
          r.get([d, "show"]) && M$[d](this, this._axisGroup, r, s);
        }, this);
        var c = i && i.type === "changeAxisOrder" && i.isInitSort;
        c || qu(o, this._axisGroup, r), t.prototype.render.call(this, r, n, a, i);
      }
    }, e.prototype.remove = function() {
      VN(this);
    }, e.type = "cartesianAxis", e;
  }(bo)
), M$ = {
  splitLine: function(t, e, r, n) {
    var a = r.axis;
    if (!a.scale.isBlank()) {
      var i = r.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color"), l = i.get("showMinLine") !== !1, u = i.get("showMaxLine") !== !1;
      s = V(s) ? s : [s];
      for (var c = n.coordinateSystem.getRect(), d = a.isHorizontal(), p = 0, f = a.getTicksCoords({
        tickModel: i
      }), h = [], g = [], v = o.getLineStyle(), m = 0; m < f.length; m++) {
        var _ = a.toGlobalCoord(f[m].coord);
        if (!(m === 0 && !l || m === f.length - 1 && !u)) {
          var y = f[m].tickValue;
          d ? (h[0] = _, h[1] = c.y, g[0] = _, g[1] = c.y + c.height) : (h[0] = c.x, h[1] = _, g[0] = c.x + c.width, g[1] = _);
          var b = p++ % s.length, S = new Ct({
            anid: y != null ? "line_" + y : null,
            autoBatch: !0,
            shape: {
              x1: h[0],
              y1: h[1],
              x2: g[0],
              y2: g[1]
            },
            style: ie({
              stroke: s[b]
            }, v),
            silent: !0
          });
          ms(S.shape, v.lineWidth), e.add(S);
        }
      }
    }
  },
  minorSplitLine: function(t, e, r, n) {
    var a = r.axis, i = r.getModel("minorSplitLine"), o = i.getModel("lineStyle"), s = n.coordinateSystem.getRect(), l = a.isHorizontal(), u = a.getMinorTicksCoords();
    if (u.length)
      for (var c = [], d = [], p = o.getLineStyle(), f = 0; f < u.length; f++)
        for (var h = 0; h < u[f].length; h++) {
          var g = a.toGlobalCoord(u[f][h].coord);
          l ? (c[0] = g, c[1] = s.y, d[0] = g, d[1] = s.y + s.height) : (c[0] = s.x, c[1] = g, d[0] = s.x + s.width, d[1] = g);
          var v = new Ct({
            anid: "minor_line_" + u[f][h].tickValue,
            autoBatch: !0,
            shape: {
              x1: c[0],
              y1: c[1],
              x2: d[0],
              y2: d[1]
            },
            style: p,
            silent: !0
          });
          ms(v.shape, p.lineWidth), e.add(v);
        }
  },
  splitArea: function(t, e, r, n) {
    zN(t, e, r, n);
  }
}, HN = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "xAxis", e;
  }($N)
), I$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = HN.type, r;
    }
    return e.type = "yAxis", e;
  }($N)
), N$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "grid", r;
    }
    return e.prototype.render = function(r, n) {
      this.group.removeAll(), r.get("show") && this.group.add(new Re({
        shape: r.coordinateSystem.getRect(),
        style: ie({
          fill: r.get("backgroundColor")
        }, r.getItemStyle()),
        silent: !0,
        z2: -1
      }));
    }, e.type = "grid", e;
  }(st)
), cx = {
  // gridIndex: 0,
  // gridId: '',
  offset: 0
};
function WN(t) {
  t.registerComponentView(N$), t.registerComponentModel(i$), t.registerCoordinateSystem("cartesian2d", f$), Es(t, "x", Um, cx), Es(t, "y", Um, cx), t.registerComponentView(HN), t.registerComponentView(I$), t.registerPreprocessor(function(e) {
    e.xAxis && e.yAxis && !e.grid && (e.grid = {});
  });
}
function _re(t) {
  kt(WN), t.registerSeriesModel(e$), t.registerChartView(a$), t.registerLayout(tc("scatter"));
}
function R$(t) {
  t.eachSeriesByType("radar", function(e) {
    var r = e.getData(), n = [], a = e.coordinateSystem;
    if (a) {
      var i = a.getIndicatorAxes();
      w(i, function(o, s) {
        r.each(r.mapDimension(i[s].dim), function(l, u) {
          n[u] = n[u] || [];
          var c = a.dataToPoint(l, s);
          n[u][s] = dx(c) ? c : px(a);
        });
      }), r.each(function(o) {
        var s = EB(n[o], function(l) {
          return dx(l);
        }) || px(a);
        n[o].push(s.slice()), r.setItemLayout(o, n[o]);
      });
    }
  });
}
function dx(t) {
  return !isNaN(t[0]) && !isNaN(t[1]);
}
function px(t) {
  return [t.cx, t.cy];
}
function O$(t) {
  var e = t.polar;
  if (e) {
    V(e) || (e = [e]);
    var r = [];
    w(e, function(n, a) {
      n.indicator ? (n.type && !n.shape && (n.shape = n.type), t.radar = t.radar || [], V(t.radar) || (t.radar = [t.radar]), t.radar.push(n)) : r.push(n);
    }), t.polar = r;
  }
  w(t.series, function(n) {
    n && n.type === "radar" && n.polarIndex && (n.radarIndex = n.polarIndex);
  });
}
var L$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.coordinateSystem, o = this.group, s = r.getData(), l = this._data;
      function u(p, f) {
        var h = p.getItemVisual(f, "symbol") || "circle";
        if (h !== "none") {
          var g = Us(p.getItemVisual(f, "symbolSize")), v = mt(h, -1, -1, 2, 2), m = p.getItemVisual(f, "symbolRotate") || 0;
          return v.attr({
            style: {
              strokeNoScale: !0
            },
            z2: 100,
            scaleX: g[0] / 2,
            scaleY: g[1] / 2,
            rotation: m * Math.PI / 180 || 0
          }), v;
        }
      }
      function c(p, f, h, g, v, m) {
        h.removeAll();
        for (var _ = 0; _ < f.length - 1; _++) {
          var y = u(g, v);
          y && (y.__dimIdx = _, p[_] ? (y.setPosition(p[_]), vo[m ? "initProps" : "updateProps"](y, {
            x: f[_][0],
            y: f[_][1]
          }, r, v)) : y.setPosition(f[_]), h.add(y));
        }
      }
      function d(p) {
        return $(p, function(f) {
          return [i.cx, i.cy];
        });
      }
      s.diff(l).add(function(p) {
        var f = s.getItemLayout(p);
        if (f) {
          var h = new sr(), g = new lr(), v = {
            shape: {
              points: f
            }
          };
          h.shape.points = d(f), g.shape.points = d(f), rt(h, v, r, p), rt(g, v, r, p);
          var m = new de(), _ = new de();
          m.add(g), m.add(h), m.add(_), c(g.shape.points, f, _, s, p, !0), s.setItemGraphicEl(p, m);
        }
      }).update(function(p, f) {
        var h = l.getItemGraphicEl(f), g = h.childAt(0), v = h.childAt(1), m = h.childAt(2), _ = {
          shape: {
            points: s.getItemLayout(p)
          }
        };
        _.shape.points && (c(g.shape.points, _.shape.points, m, s, p, !1), rn(v), rn(g), Fe(g, _, r), Fe(v, _, r), s.setItemGraphicEl(p, h));
      }).remove(function(p) {
        o.remove(l.getItemGraphicEl(p));
      }).execute(), s.eachItemGraphicEl(function(p, f) {
        var h = s.getItemModel(f), g = p.childAt(0), v = p.childAt(1), m = p.childAt(2), _ = s.getItemVisual(f, "style"), y = _.fill;
        o.add(p), g.useStyle(ie(h.getModel("lineStyle").getLineStyle(), {
          fill: "none",
          stroke: y
        })), zt(g, h, "lineStyle"), zt(v, h, "areaStyle");
        var b = h.getModel("areaStyle"), S = b.isEmpty() && b.parentModel.isEmpty();
        v.ignore = S, w(["emphasis", "select", "blur"], function(x) {
          var C = h.getModel([x, "areaStyle"]), A = C.isEmpty() && C.parentModel.isEmpty();
          v.ensureState(x).ignore = A && S;
        }), v.useStyle(ie(b.getAreaStyle(), {
          fill: y,
          opacity: 0.7,
          decal: _.decal
        }));
        var E = h.getModel("emphasis"), T = E.getModel("itemStyle").getItemStyle();
        m.eachChild(function(x) {
          if (x instanceof Bt) {
            var C = x.style;
            x.useStyle(G({
              // TODO other properties like x, y ?
              image: C.image,
              x: C.x,
              y: C.y,
              width: C.width,
              height: C.height
            }, _));
          } else
            x.useStyle(_), x.setColor(y), x.style.strokeNoScale = !0;
          var A = x.ensureState("emphasis");
          A.style = le(T);
          var D = s.getStore().get(s.getDimensionIndex(x.__dimIdx), f);
          (D == null || isNaN(D)) && (D = ""), Vt(x, Dt(h), {
            labelFetcher: s.hostModel,
            labelDataIndex: f,
            labelDimIndex: x.__dimIdx,
            defaultText: D,
            inheritColor: y,
            defaultOpacity: _.opacity
          });
        }), lt(p, E.get("focus"), E.get("blurScope"), E.get("disabled"));
      }), this._data = s;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "radar", e;
  }(Ke)
), P$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r;
    }
    return e.prototype.init = function(r) {
      t.prototype.init.apply(this, arguments), this.legendVisualProvider = new nc(K(this.getData, this), K(this.getRawData, this));
    }, e.prototype.getInitialData = function(r, n) {
      return Vs(this, {
        generateCoord: "indicator_",
        generateCoordCount: 1 / 0
      });
    }, e.prototype.formatTooltip = function(r, n, a) {
      var i = this.getData(), o = this.coordinateSystem, s = o.getIndicatorAxes(), l = this.getData().getName(r), u = l === "" ? this.name : l, c = $M(this, r);
      return Mt("section", {
        header: u,
        sortBlocks: !0,
        blocks: $(s, function(d) {
          var p = i.get(i.mapDimension(d.dim), r);
          return Mt("nameValue", {
            markerType: "subItem",
            markerColor: c,
            name: d.name,
            value: p,
            sortParam: p
          });
        })
      });
    }, e.prototype.getTooltipPosition = function(r) {
      if (r != null) {
        for (var n = this.getData(), a = this.coordinateSystem, i = n.getValues($(a.dimensions, function(u) {
          return n.mapDimension(u);
        }), r), o = 0, s = i.length; o < s; o++)
          if (!isNaN(i[o])) {
            var l = a.getIndicatorAxes();
            return a.coordToPoint(l[o].dataToCoord(i[o]), o);
          }
      }
    }, e.type = "series.radar", e.dependencies = ["radar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "radar",
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: {
        width: 2,
        type: "solid",
        join: "round"
      },
      label: {
        position: "top"
      },
      // areaStyle: {
      // },
      // itemStyle: {}
      symbolSize: 8
      // symbolRotate: null
    }, e;
  }(et)
), cl = FN.value;
function ed(t, e) {
  return ie({
    show: e
  }, t);
}
var k$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.optionUpdated = function() {
      var r = this.get("boundaryGap"), n = this.get("splitNumber"), a = this.get("scale"), i = this.get("axisLine"), o = this.get("axisTick"), s = this.get("axisLabel"), l = this.get("axisName"), u = this.get(["axisName", "show"]), c = this.get(["axisName", "formatter"]), d = this.get("axisNameGap"), p = this.get("triggerEvent"), f = $(this.get("indicator") || [], function(h) {
        h.max != null && h.max > 0 && !h.min ? h.min = 0 : h.min != null && h.min < 0 && !h.max && (h.max = 0);
        var g = l;
        h.color != null && (g = ie({
          color: h.color
        }, l));
        var v = be(le(h), {
          boundaryGap: r,
          splitNumber: n,
          scale: a,
          axisLine: i,
          axisTick: o,
          // axisType: axisType,
          axisLabel: s,
          // Compatible with 2 and use text
          name: h.text,
          showName: u,
          nameLocation: "end",
          nameGap: d,
          // min: 0,
          nameTextStyle: g,
          triggerEvent: p
        }, !1);
        if (Y(c)) {
          var m = v.name;
          v.name = c.replace("{value}", m ?? "");
        } else ae(c) && (v.name = c(v.name, v));
        var _ = new He(v, null, this.ecModel);
        return _t(_, Qu.prototype), _.mainType = "radar", _.componentIndex = this.componentIndex, _;
      }, this);
      this._indicatorModels = f;
    }, e.prototype.getIndicatorModels = function() {
      return this._indicatorModels;
    }, e.type = "radar", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "75%",
      startAngle: 90,
      axisName: {
        show: !0
        // formatter: null
        // textStyle: {}
      },
      boundaryGap: [0, 0],
      splitNumber: 5,
      axisNameGap: 15,
      scale: !1,
      // Polygon or circle
      shape: "polygon",
      axisLine: be({
        lineStyle: {
          color: "#bbb"
        }
      }, cl.axisLine),
      axisLabel: ed(cl.axisLabel, !1),
      axisTick: ed(cl.axisTick, !1),
      // axisType: 'value',
      splitLine: ed(cl.splitLine, !0),
      splitArea: ed(cl.splitArea, !0),
      // {text, min, max}
      indicator: []
    }, e;
  }(De)
), B$ = ["axisLine", "axisTickLabel", "axisName"], F$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = this.group;
      i.removeAll(), this._buildAxes(r), this._buildSplitLineAndArea(r);
    }, e.prototype._buildAxes = function(r) {
      var n = r.coordinateSystem, a = n.getIndicatorAxes(), i = $(a, function(o) {
        var s = o.model.get("showName") ? o.name : "", l = new nr(o.model, {
          axisName: s,
          position: [n.cx, n.cy],
          rotation: o.angle,
          labelDirection: -1,
          tickDirection: -1,
          nameDirection: 1
        });
        return l;
      });
      w(i, function(o) {
        w(B$, o.add, o), this.group.add(o.getGroup());
      }, this);
    }, e.prototype._buildSplitLineAndArea = function(r) {
      var n = r.coordinateSystem, a = n.getIndicatorAxes();
      if (!a.length)
        return;
      var i = r.get("shape"), o = r.getModel("splitLine"), s = r.getModel("splitArea"), l = o.getModel("lineStyle"), u = s.getModel("areaStyle"), c = o.get("show"), d = s.get("show"), p = l.get("color"), f = u.get("color"), h = V(p) ? p : [p], g = V(f) ? f : [f], v = [], m = [];
      function _(R, O, B) {
        var L = B % O.length;
        return R[L] = R[L] || [], L;
      }
      if (i === "circle")
        for (var y = a[0].getTicksCoords(), b = n.cx, S = n.cy, E = 0; E < y.length; E++) {
          if (c) {
            var T = _(v, h, E);
            v[T].push(new ca({
              shape: {
                cx: b,
                cy: S,
                r: y[E].coord
              }
            }));
          }
          if (d && E < y.length - 1) {
            var T = _(m, g, E);
            m[T].push(new $u({
              shape: {
                cx: b,
                cy: S,
                r0: y[E].coord,
                r: y[E + 1].coord
              }
            }));
          }
        }
      else
        for (var x, C = $(a, function(R, O) {
          var B = R.getTicksCoords();
          return x = x == null ? B.length - 1 : Math.min(B.length - 1, x), $(B, function(L) {
            return n.coordToPoint(L.coord, O);
          });
        }), A = [], E = 0; E <= x; E++) {
          for (var D = [], M = 0; M < a.length; M++)
            D.push(C[M][E]);
          if (D[0] && D.push(D[0].slice()), c) {
            var T = _(v, h, E);
            v[T].push(new lr({
              shape: {
                points: D
              }
            }));
          }
          if (d && A) {
            var T = _(m, g, E - 1);
            m[T].push(new sr({
              shape: {
                points: D.concat(A)
              }
            }));
          }
          A = D.slice().reverse();
        }
      var I = l.getLineStyle(), N = u.getAreaStyle();
      w(m, function(R, O) {
        this.group.add(Lr(R, {
          style: ie({
            stroke: "none",
            fill: g[O % g.length]
          }, N),
          silent: !0
        }));
      }, this), w(v, function(R, O) {
        this.group.add(Lr(R, {
          style: ie({
            fill: "none",
            stroke: h[O % h.length]
          }, I),
          silent: !0
        }));
      }, this);
    }, e.type = "radar", e;
  }(st)
), G$ = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this, r, n, a) || this;
      return i.type = "value", i.angle = 0, i.name = "", i;
    }
    return e;
  }(on)
), U$ = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.dimensions = [], this._model = e, this._indicatorAxes = $(e.getIndicatorModels(), function(a, i) {
        var o = "indicator_" + i, s = new G$(
          o,
          new oa()
          // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()
        );
        return s.name = a.get("name"), s.model = a, a.axis = s, this.dimensions.push(o), s;
      }, this), this.resize(e, n);
    }
    return t.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }, t.prototype.dataToPoint = function(e, r) {
      var n = this._indicatorAxes[r];
      return this.coordToPoint(n.dataToCoord(e), r);
    }, t.prototype.coordToPoint = function(e, r) {
      var n = this._indicatorAxes[r], a = n.angle, i = this.cx + e * Math.cos(a), o = this.cy - e * Math.sin(a);
      return [i, o];
    }, t.prototype.pointToData = function(e) {
      var r = e[0] - this.cx, n = e[1] - this.cy, a = Math.sqrt(r * r + n * n);
      r /= a, n /= a;
      for (var i = Math.atan2(-n, r), o = 1 / 0, s, l = -1, u = 0; u < this._indicatorAxes.length; u++) {
        var c = this._indicatorAxes[u], d = Math.abs(i - c.angle);
        d < o && (s = c, l = u, o = d);
      }
      return [l, +(s && s.coordToData(a))];
    }, t.prototype.resize = function(e, r) {
      var n = e.get("center"), a = r.getWidth(), i = r.getHeight(), o = Math.min(a, i) / 2;
      this.cx = q(n[0], a), this.cy = q(n[1], i), this.startAngle = e.get("startAngle") * Math.PI / 180;
      var s = e.get("radius");
      (Y(s) || ke(s)) && (s = [0, s]), this.r0 = q(s[0], o), this.r = q(s[1], o), w(this._indicatorAxes, function(l, u) {
        l.setExtent(this.r0, this.r);
        var c = this.startAngle + u * Math.PI * 2 / this._indicatorAxes.length;
        c = Math.atan2(Math.sin(c), Math.cos(c)), l.angle = c;
      }, this);
    }, t.prototype.update = function(e, r) {
      var n = this._indicatorAxes, a = this._model;
      w(n, function(s) {
        s.scale.setExtent(1 / 0, -1 / 0);
      }), e.eachSeriesByType("radar", function(s, l) {
        if (!(s.get("coordinateSystem") !== "radar" || e.getComponent("radar", s.get("radarIndex")) !== a)) {
          var u = s.getData();
          w(n, function(c) {
            c.scale.unionExtentFromData(u, u.mapDimension(c.dim));
          });
        }
      }, this);
      var i = a.get("splitNumber"), o = new oa();
      o.setExtent(0, i), o.setInterval(1), w(n, function(s, l) {
        GN(s.scale, s.model, o);
      });
    }, t.prototype.convertToPixel = function(e, r, n) {
      return console.warn("Not implemented."), null;
    }, t.prototype.convertFromPixel = function(e, r, n) {
      return console.warn("Not implemented."), null;
    }, t.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, t.create = function(e, r) {
      var n = [];
      return e.eachComponent("radar", function(a) {
        var i = new t(a, e, r);
        n.push(i), a.coordinateSystem = i;
      }), e.eachSeriesByType("radar", function(a) {
        a.get("coordinateSystem") === "radar" && (a.coordinateSystem = n[a.get("radarIndex") || 0]);
      }), n;
    }, t.dimensions = [], t;
  }()
);
function z$(t) {
  t.registerCoordinateSystem("radar", U$), t.registerComponentModel(k$), t.registerComponentView(F$), t.registerVisual({
    seriesType: "radar",
    reset: function(e) {
      var r = e.getData();
      r.each(function(n) {
        r.setItemVisual(n, "legendIcon", "roundRect");
      }), r.setVisual("legendIcon", "roundRect");
    }
  });
}
function yre(t) {
  kt(z$), t.registerChartView(L$), t.registerSeriesModel(P$), t.registerLayout(R$), t.registerProcessor(rc("radar")), t.registerPreprocessor(O$);
}
var fx = "\0_ec_interaction_mutex";
function V$(t, e, r) {
  var n = Zy(t);
  n[e] = r;
}
function $$(t, e, r) {
  var n = Zy(t), a = n[e];
  a === r && (n[e] = null);
}
function hx(t, e) {
  return !!Zy(t)[e];
}
function Zy(t) {
  return t[fx] || (t[fx] = {});
}
Gn({
  type: "takeGlobalCursor",
  event: "globalCursorTaken",
  update: "update"
}, dt);
var ac = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this) || this;
      n._zr = r;
      var a = K(n._mousedownHandler, n), i = K(n._mousemoveHandler, n), o = K(n._mouseupHandler, n), s = K(n._mousewheelHandler, n), l = K(n._pinchHandler, n);
      return n.enable = function(u, c) {
        this.disable(), this._opt = ie(le(c) || {}, {
          zoomOnMouseWheel: !0,
          moveOnMouseMove: !0,
          // By default, wheel do not trigger move.
          moveOnMouseWheel: !1,
          preventDefaultMouseMove: !0
        }), u == null && (u = !0), (u === !0 || u === "move" || u === "pan") && (r.on("mousedown", a), r.on("mousemove", i), r.on("mouseup", o)), (u === !0 || u === "scale" || u === "zoom") && (r.on("mousewheel", s), r.on("pinch", l));
      }, n.disable = function() {
        r.off("mousedown", a), r.off("mousemove", i), r.off("mouseup", o), r.off("mousewheel", s), r.off("pinch", l);
      }, n;
    }
    return e.prototype.isDragging = function() {
      return this._dragging;
    }, e.prototype.isPinching = function() {
      return this._pinching;
    }, e.prototype.setPointerChecker = function(r) {
      this.pointerChecker = r;
    }, e.prototype.dispose = function() {
      this.disable();
    }, e.prototype._mousedownHandler = function(r) {
      if (!$0(r)) {
        for (var n = r.target; n; ) {
          if (n.draggable)
            return;
          n = n.__hostTarget || n.parent;
        }
        var a = r.offsetX, i = r.offsetY;
        this.pointerChecker && this.pointerChecker(r, a, i) && (this._x = a, this._y = i, this._dragging = !0);
      }
    }, e.prototype._mousemoveHandler = function(r) {
      if (!(!this._dragging || !Ud("moveOnMouseMove", r, this._opt) || r.gestureEvent === "pinch" || hx(this._zr, "globalPan"))) {
        var n = r.offsetX, a = r.offsetY, i = this._x, o = this._y, s = n - i, l = a - o;
        this._x = n, this._y = a, this._opt.preventDefaultMouseMove && ta(r.event), qN(this, "pan", "moveOnMouseMove", r, {
          dx: s,
          dy: l,
          oldX: i,
          oldY: o,
          newX: n,
          newY: a,
          isAvailableBehavior: null
        });
      }
    }, e.prototype._mouseupHandler = function(r) {
      $0(r) || (this._dragging = !1);
    }, e.prototype._mousewheelHandler = function(r) {
      var n = Ud("zoomOnMouseWheel", r, this._opt), a = Ud("moveOnMouseWheel", r, this._opt), i = r.wheelDelta, o = Math.abs(i), s = r.offsetX, l = r.offsetY;
      if (!(i === 0 || !n && !a)) {
        if (n) {
          var u = o > 3 ? 1.4 : o > 1 ? 1.2 : 1.1, c = i > 0 ? u : 1 / u;
          Mg(this, "zoom", "zoomOnMouseWheel", r, {
            scale: c,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
        if (a) {
          var d = Math.abs(i), p = (i > 0 ? 1 : -1) * (d > 3 ? 0.4 : d > 1 ? 0.15 : 0.05);
          Mg(this, "scrollMove", "moveOnMouseWheel", r, {
            scrollDelta: p,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
      }
    }, e.prototype._pinchHandler = function(r) {
      if (!hx(this._zr, "globalPan")) {
        var n = r.pinchScale > 1 ? 1.1 : 1 / 1.1;
        Mg(this, "zoom", null, r, {
          scale: n,
          originX: r.pinchX,
          originY: r.pinchY,
          isAvailableBehavior: null
        });
      }
    }, e;
  }(Gr)
);
function Mg(t, e, r, n, a) {
  t.pointerChecker && t.pointerChecker(n, a.originX, a.originY) && (ta(n.event), qN(t, e, r, n, a));
}
function qN(t, e, r, n, a) {
  a.isAvailableBehavior = K(Ud, null, r, n), t.trigger(e, a);
}
function Ud(t, e, r) {
  var n = r[t];
  return !t || n && (!Y(n) || e.event[n + "Key"]);
}
function Xy(t, e, r) {
  var n = t.target;
  n.x += e, n.y += r, n.dirty();
}
function Qy(t, e, r, n) {
  var a = t.target, i = t.zoomLimit, o = t.zoom = t.zoom || 1;
  if (o *= e, i) {
    var s = i.min || 0, l = i.max || 1 / 0;
    o = Math.max(Math.min(l, o), s);
  }
  var u = o / t.zoom;
  t.zoom = o, a.x -= (r - a.x) * (u - 1), a.y -= (n - a.y) * (u - 1), a.scaleX *= u, a.scaleY *= u, a.dirty();
}
var H$ = {
  axisPointer: 1,
  tooltip: 1,
  brush: 1
};
function Of(t, e, r) {
  var n = e.getComponentByElement(t.topTarget), a = n && n.coordinateSystem;
  return n && n !== r && !H$.hasOwnProperty(n.mainType) && a && a.model !== r;
}
function YN(t) {
  if (Y(t)) {
    var e = new DOMParser();
    t = e.parseFromString(t, "text/xml");
  }
  var r = t;
  for (r.nodeType === 9 && (r = r.firstChild); r.nodeName.toLowerCase() !== "svg" || r.nodeType !== 1; )
    r = r.nextSibling;
  return r;
}
var Ig, wp = {
  fill: "fill",
  stroke: "stroke",
  "stroke-width": "lineWidth",
  opacity: "opacity",
  "fill-opacity": "fillOpacity",
  "stroke-opacity": "strokeOpacity",
  "stroke-dasharray": "lineDash",
  "stroke-dashoffset": "lineDashOffset",
  "stroke-linecap": "lineCap",
  "stroke-linejoin": "lineJoin",
  "stroke-miterlimit": "miterLimit",
  "font-family": "fontFamily",
  "font-size": "fontSize",
  "font-style": "fontStyle",
  "font-weight": "fontWeight",
  "text-anchor": "textAlign",
  visibility: "visibility",
  display: "display"
}, gx = Me(wp), Dp = {
  "alignment-baseline": "textBaseline",
  "stop-color": "stopColor"
}, vx = Me(Dp), W$ = function() {
  function t() {
    this._defs = {}, this._root = null;
  }
  return t.prototype.parse = function(e, r) {
    r = r || {};
    var n = YN(e);
    this._defsUsePending = [];
    var a = new de();
    this._root = a;
    var i = [], o = n.getAttribute("viewBox") || "", s = parseFloat(n.getAttribute("width") || r.width), l = parseFloat(n.getAttribute("height") || r.height);
    isNaN(s) && (s = null), isNaN(l) && (l = null), mr(n, a, null, !0, !1);
    for (var u = n.firstChild; u; )
      this._parseNode(u, a, i, null, !1, !1), u = u.nextSibling;
    K$(this._defs, this._defsUsePending), this._defsUsePending = [];
    var c, d;
    if (o) {
      var p = Lf(o);
      p.length >= 4 && (c = {
        x: parseFloat(p[0] || 0),
        y: parseFloat(p[1] || 0),
        width: parseFloat(p[2]),
        height: parseFloat(p[3])
      });
    }
    if (c && s != null && l != null && (d = ZN(c, { x: 0, y: 0, width: s, height: l }), !r.ignoreViewBox)) {
      var f = a;
      a = new de(), a.add(f), f.scaleX = f.scaleY = d.scale, f.x = d.x, f.y = d.y;
    }
    return !r.ignoreRootClip && s != null && l != null && a.setClipPath(new Re({
      shape: { x: 0, y: 0, width: s, height: l }
    })), {
      root: a,
      width: s,
      height: l,
      viewBoxRect: c,
      viewBoxTransform: d,
      named: i
    };
  }, t.prototype._parseNode = function(e, r, n, a, i, o) {
    var s = e.nodeName.toLowerCase(), l, u = a;
    if (s === "defs" && (i = !0), s === "text" && (o = !0), s === "defs" || s === "switch")
      l = r;
    else {
      if (!i) {
        var c = Ig[s];
        if (c && Q(Ig, s)) {
          l = c.call(this, e, r);
          var d = e.getAttribute("name");
          if (d) {
            var p = {
              name: d,
              namedFrom: null,
              svgNodeTagLower: s,
              el: l
            };
            n.push(p), s === "g" && (u = p);
          } else a && n.push({
            name: a.name,
            namedFrom: a,
            svgNodeTagLower: s,
            el: l
          });
          r.add(l);
        }
      }
      var f = mx[s];
      if (f && Q(mx, s)) {
        var h = f.call(this, e), g = e.getAttribute("id");
        g && (this._defs[g] = h);
      }
    }
    if (l && l.isGroup)
      for (var v = e.firstChild; v; )
        v.nodeType === 1 ? this._parseNode(v, l, n, u, i, o) : v.nodeType === 3 && o && this._parseText(v, l), v = v.nextSibling;
  }, t.prototype._parseText = function(e, r) {
    var n = new vs({
      style: {
        text: e.textContent
      },
      silent: !0,
      x: this._textX || 0,
      y: this._textY || 0
    });
    Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), q$(n, r);
    var a = n.style, i = a.fontSize;
    i && i < 9 && (a.fontSize = 9, n.scaleX *= i / 9, n.scaleY *= i / 9);
    var o = (a.fontSize || a.fontFamily) && [
      a.fontStyle,
      a.fontWeight,
      (a.fontSize || 12) + "px",
      a.fontFamily || "sans-serif"
    ].join(" ");
    a.font = o;
    var s = n.getBoundingRect();
    return this._textX += s.width, r.add(n), n;
  }, t.internalField = function() {
    Ig = {
      g: function(e, r) {
        var n = new de();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n;
      },
      rect: function(e, r) {
        var n = new Re();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n.setShape({
          x: parseFloat(e.getAttribute("x") || "0"),
          y: parseFloat(e.getAttribute("y") || "0"),
          width: parseFloat(e.getAttribute("width") || "0"),
          height: parseFloat(e.getAttribute("height") || "0")
        }), n.silent = !0, n;
      },
      circle: function(e, r) {
        var n = new ca();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          r: parseFloat(e.getAttribute("r") || "0")
        }), n.silent = !0, n;
      },
      line: function(e, r) {
        var n = new Ct();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n.setShape({
          x1: parseFloat(e.getAttribute("x1") || "0"),
          y1: parseFloat(e.getAttribute("y1") || "0"),
          x2: parseFloat(e.getAttribute("x2") || "0"),
          y2: parseFloat(e.getAttribute("y2") || "0")
        }), n.silent = !0, n;
      },
      ellipse: function(e, r) {
        var n = new pf();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          rx: parseFloat(e.getAttribute("rx") || "0"),
          ry: parseFloat(e.getAttribute("ry") || "0")
        }), n.silent = !0, n;
      },
      polygon: function(e, r) {
        var n = e.getAttribute("points"), a;
        n && (a = bx(n));
        var i = new sr({
          shape: {
            points: a || []
          },
          silent: !0
        });
        return Cr(r, i), mr(e, i, this._defsUsePending, !1, !1), i;
      },
      polyline: function(e, r) {
        var n = e.getAttribute("points"), a;
        n && (a = bx(n));
        var i = new lr({
          shape: {
            points: a || []
          },
          silent: !0
        });
        return Cr(r, i), mr(e, i, this._defsUsePending, !1, !1), i;
      },
      image: function(e, r) {
        var n = new Bt();
        return Cr(r, n), mr(e, n, this._defsUsePending, !1, !1), n.setStyle({
          image: e.getAttribute("xlink:href") || e.getAttribute("href"),
          x: +e.getAttribute("x"),
          y: +e.getAttribute("y"),
          width: +e.getAttribute("width"),
          height: +e.getAttribute("height")
        }), n.silent = !0, n;
      },
      text: function(e, r) {
        var n = e.getAttribute("x") || "0", a = e.getAttribute("y") || "0", i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0";
        this._textX = parseFloat(n) + parseFloat(i), this._textY = parseFloat(a) + parseFloat(o);
        var s = new de();
        return Cr(r, s), mr(e, s, this._defsUsePending, !1, !0), s;
      },
      tspan: function(e, r) {
        var n = e.getAttribute("x"), a = e.getAttribute("y");
        n != null && (this._textX = parseFloat(n)), a != null && (this._textY = parseFloat(a));
        var i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0", s = new de();
        return Cr(r, s), mr(e, s, this._defsUsePending, !1, !0), this._textX += parseFloat(i), this._textY += parseFloat(o), s;
      },
      path: function(e, r) {
        var n = e.getAttribute("d") || "", a = BD(n);
        return Cr(r, a), mr(e, a, this._defsUsePending, !1, !1), a.silent = !0, a;
      }
    };
  }(), t;
}(), mx = {
  lineargradient: function(t) {
    var e = parseInt(t.getAttribute("x1") || "0", 10), r = parseInt(t.getAttribute("y1") || "0", 10), n = parseInt(t.getAttribute("x2") || "10", 10), a = parseInt(t.getAttribute("y2") || "0", 10), i = new Wu(e, r, n, a);
    return _x(t, i), yx(t, i), i;
  },
  radialgradient: function(t) {
    var e = parseInt(t.getAttribute("cx") || "0", 10), r = parseInt(t.getAttribute("cy") || "0", 10), n = parseInt(t.getAttribute("r") || "0", 10), a = new zD(e, r, n);
    return _x(t, a), yx(t, a), a;
  }
};
function _x(t, e) {
  var r = t.getAttribute("gradientUnits");
  r === "userSpaceOnUse" && (e.global = !0);
}
function yx(t, e) {
  for (var r = t.firstChild; r; ) {
    if (r.nodeType === 1 && r.nodeName.toLocaleLowerCase() === "stop") {
      var n = r.getAttribute("offset"), a = void 0;
      n && n.indexOf("%") > 0 ? a = parseInt(n, 10) / 100 : n ? a = parseFloat(n) : a = 0;
      var i = {};
      KN(r, i, i);
      var o = i.stopColor || r.getAttribute("stop-color") || "#000000";
      e.colorStops.push({
        offset: a,
        color: o
      });
    }
    r = r.nextSibling;
  }
}
function Cr(t, e) {
  t && t.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), ie(e.__inheritedStyle, t.__inheritedStyle));
}
function bx(t) {
  for (var e = Lf(t), r = [], n = 0; n < e.length; n += 2) {
    var a = parseFloat(e[n]), i = parseFloat(e[n + 1]);
    r.push([a, i]);
  }
  return r;
}
function mr(t, e, r, n, a) {
  var i = e, o = i.__inheritedStyle = i.__inheritedStyle || {}, s = {};
  t.nodeType === 1 && (Q$(t, e), KN(t, o, s), n || j$(t, o, s)), i.style = i.style || {}, o.fill != null && (i.style.fill = Sx(i, "fill", o.fill, r)), o.stroke != null && (i.style.stroke = Sx(i, "stroke", o.stroke, r)), w([
    "lineWidth",
    "opacity",
    "fillOpacity",
    "strokeOpacity",
    "miterLimit",
    "fontSize"
  ], function(l) {
    o[l] != null && (i.style[l] = parseFloat(o[l]));
  }), w([
    "lineDashOffset",
    "lineCap",
    "lineJoin",
    "fontWeight",
    "fontFamily",
    "fontStyle",
    "textAlign"
  ], function(l) {
    o[l] != null && (i.style[l] = o[l]);
  }), a && (i.__selfStyle = s), o.lineDash && (i.style.lineDash = $(Lf(o.lineDash), function(l) {
    return parseFloat(l);
  })), (o.visibility === "hidden" || o.visibility === "collapse") && (i.invisible = !0), o.display === "none" && (i.ignore = !0);
}
function q$(t, e) {
  var r = e.__selfStyle;
  if (r) {
    var n = r.textBaseline, a = n;
    !n || n === "auto" || n === "baseline" ? a = "alphabetic" : n === "before-edge" || n === "text-before-edge" ? a = "top" : n === "after-edge" || n === "text-after-edge" ? a = "bottom" : (n === "central" || n === "mathematical") && (a = "middle"), t.style.textBaseline = a;
  }
  var i = e.__inheritedStyle;
  if (i) {
    var o = i.textAlign, s = o;
    o && (o === "middle" && (s = "center"), t.style.textAlign = s);
  }
}
var Y$ = /^url\(\s*#(.*?)\)/;
function Sx(t, e, r, n) {
  var a = r && r.match(Y$);
  if (a) {
    var i = Xr(a[1]);
    n.push([t, e, i]);
    return;
  }
  return r === "none" && (r = null), r;
}
function K$(t, e) {
  for (var r = 0; r < e.length; r++) {
    var n = e[r];
    n[0].style[n[1]] = t[n[2]];
  }
}
var Z$ = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function Lf(t) {
  return t.match(Z$) || [];
}
var X$ = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g, Ng = Math.PI / 180;
function Q$(t, e) {
  var r = t.getAttribute("transform");
  if (r) {
    r = r.replace(/,/g, " ");
    var n = [], a = null;
    r.replace(X$, function(d, p, f) {
      return n.push(p, f), "";
    });
    for (var i = n.length - 1; i > 0; i -= 2) {
      var o = n[i], s = n[i - 1], l = Lf(o);
      switch (a = a || yr(), s) {
        case "translate":
          Rn(a, a, [parseFloat(l[0]), parseFloat(l[1] || "0")]);
          break;
        case "scale":
          q_(a, a, [parseFloat(l[0]), parseFloat(l[1] || l[0])]);
          break;
        case "rotate":
          ho(a, a, -parseFloat(l[0]) * Ng, [
            parseFloat(l[1] || "0"),
            parseFloat(l[2] || "0")
          ]);
          break;
        case "skewX":
          var u = Math.tan(parseFloat(l[0]) * Ng);
          Xn(a, [1, 0, u, 1, 0, 0], a);
          break;
        case "skewY":
          var c = Math.tan(parseFloat(l[0]) * Ng);
          Xn(a, [1, c, 0, 1, 0, 0], a);
          break;
        case "matrix":
          a[0] = parseFloat(l[0]), a[1] = parseFloat(l[1]), a[2] = parseFloat(l[2]), a[3] = parseFloat(l[3]), a[4] = parseFloat(l[4]), a[5] = parseFloat(l[5]);
          break;
      }
    }
    e.setLocalTransform(a);
  }
}
var Ex = /([^\s:;]+)\s*:\s*([^:;]+)/g;
function KN(t, e, r) {
  var n = t.getAttribute("style");
  if (n) {
    Ex.lastIndex = 0;
    for (var a; (a = Ex.exec(n)) != null; ) {
      var i = a[1], o = Q(wp, i) ? wp[i] : null;
      o && (e[o] = a[2]);
      var s = Q(Dp, i) ? Dp[i] : null;
      s && (r[s] = a[2]);
    }
  }
}
function j$(t, e, r) {
  for (var n = 0; n < gx.length; n++) {
    var a = gx[n], i = t.getAttribute(a);
    i != null && (e[wp[a]] = i);
  }
  for (var n = 0; n < vx.length; n++) {
    var a = vx[n], i = t.getAttribute(a);
    i != null && (r[Dp[a]] = i);
  }
}
function ZN(t, e) {
  var r = e.width / t.width, n = e.height / t.height, a = Math.min(r, n);
  return {
    scale: a,
    x: -(t.x + t.width / 2) * a + (e.x + e.width / 2),
    y: -(t.y + t.height / 2) * a + (e.y + e.height / 2)
  };
}
function J$(t, e) {
  var r = new W$();
  return r.parse(t, e);
}
var eH = J([
  "rect",
  "circle",
  "line",
  "ellipse",
  "polygon",
  "polyline",
  "path",
  // <text> <tspan> are also enabled because some SVG might paint text itself,
  // but still need to trigger events or tooltip.
  "text",
  "tspan",
  // <g> is also enabled because this case: if multiple tags share one name
  // and need label displayed, every tags will display the name, which is not
  // expected. So we can put them into a <g name="xxx">. Thereby only one label
  // displayed and located based on the bounding rect of the <g>.
  "g"
]), tH = (
  /** @class */
  function() {
    function t(e, r) {
      this.type = "geoSVG", this._usedGraphicMap = J(), this._freedGraphics = [], this._mapName = e, this._parsedXML = YN(r);
    }
    return t.prototype.load = function() {
      var e = this._firstGraphic;
      if (!e) {
        e = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(e), this._boundingRect = this._firstGraphic.boundingRect.clone();
        var r = nH(e.named), n = r.regions, a = r.regionsMap;
        this._regions = n, this._regionsMap = a;
      }
      return {
        boundingRect: this._boundingRect,
        regions: this._regions,
        regionsMap: this._regionsMap
      };
    }, t.prototype._buildGraphic = function(e) {
      var r, n;
      try {
        r = e && J$(e, {
          ignoreViewBox: !0,
          ignoreRootClip: !0
        }) || {}, n = r.root, ar(n != null);
      } catch (v) {
        throw new Error(`Invalid svg format
` + v.message);
      }
      var a = new de();
      a.add(n), a.isGeoSVGGraphicRoot = !0;
      var i = r.width, o = r.height, s = r.viewBoxRect, l = this._boundingRect;
      if (!l) {
        var u = void 0, c = void 0, d = void 0, p = void 0;
        if (i != null ? (u = 0, d = i) : s && (u = s.x, d = s.width), o != null ? (c = 0, p = o) : s && (c = s.y, p = s.height), u == null || c == null) {
          var f = n.getBoundingRect();
          u == null && (u = f.x, d = f.width), c == null && (c = f.y, p = f.height);
        }
        l = this._boundingRect = new Te(u, c, d, p);
      }
      if (s) {
        var h = ZN(s, l);
        n.scaleX = n.scaleY = h.scale, n.x = h.x, n.y = h.y;
      }
      a.setClipPath(new Re({
        shape: l.plain()
      }));
      var g = [];
      return w(r.named, function(v) {
        eH.get(v.svgNodeTagLower) != null && (g.push(v), rH(v.el));
      }), {
        root: a,
        boundingRect: l,
        named: g
      };
    }, t.prototype.useGraphic = function(e) {
      var r = this._usedGraphicMap, n = r.get(e);
      return n || (n = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), r.set(e, n), n);
    }, t.prototype.freeGraphic = function(e) {
      var r = this._usedGraphicMap, n = r.get(e);
      n && (r.removeKey(e), this._freedGraphics.push(n));
    }, t;
  }()
);
function rH(t) {
  t.silent = !1, t.isGroup && t.traverse(function(e) {
    e.silent = !1;
  });
}
function nH(t) {
  var e = [], r = J();
  return w(t, function(n) {
    if (n.namedFrom == null) {
      var a = new i4(n.name, n.el);
      e.push(a), r.set(n.name, a);
    }
  }), {
    regions: e,
    regionsMap: r
  };
}
var Wm = [126, 25], Tx = "南海诸岛", Ni = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];
for (var Di = 0; Di < Ni.length; Di++)
  for (var Go = 0; Go < Ni[Di].length; Go++)
    Ni[Di][Go][0] /= 10.5, Ni[Di][Go][1] /= -10.5 / 0.75, Ni[Di][Go][0] += Wm[0], Ni[Di][Go][1] += Wm[1];
function aH(t, e) {
  if (t === "china") {
    for (var r = 0; r < e.length; r++)
      if (e[r].name === Tx)
        return;
    e.push(new WI(Tx, $(Ni, function(n) {
      return {
        type: "polygon",
        exterior: n
      };
    }), Wm));
  }
}
var iH = {
  南海诸岛: [32, 80],
  // 全国
  广东: [0, -10],
  香港: [10, 5],
  澳门: [-10, 10],
  // '北京': [-10, 0],
  天津: [5, 5]
};
function oH(t, e) {
  if (t === "china") {
    var r = iH[e.name];
    if (r) {
      var n = e.getCenter();
      n[0] += r[0] / 10.5, n[1] += -r[1] / (10.5 / 0.75), e.setCenter(n);
    }
  }
}
var sH = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
function lH(t, e) {
  t === "china" && e.name === "台湾" && e.geometries.push({
    type: "polygon",
    exterior: sH[0]
  });
}
var uH = "name", cH = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.type = "geoJSON", this._parsedMap = J(), this._mapName = e, this._specialAreas = n, this._geoJSON = pH(r);
    }
    return t.prototype.load = function(e, r) {
      r = r || uH;
      var n = this._parsedMap.get(r);
      if (!n) {
        var a = this._parseToRegions(r);
        n = this._parsedMap.set(r, {
          regions: a,
          boundingRect: dH(a)
        });
      }
      var i = J(), o = [];
      return w(n.regions, function(s) {
        var l = s.name;
        e && Q(e, l) && (s = s.cloneShallow(l = e[l])), o.push(s), i.set(l, s);
      }), {
        regions: o,
        boundingRect: n.boundingRect || new Te(0, 0, 0, 0),
        regionsMap: i
      };
    }, t.prototype._parseToRegions = function(e) {
      var r = this._mapName, n = this._geoJSON, a;
      try {
        a = n ? s4(n, e) : [];
      } catch (i) {
        throw new Error(`Invalid geoJson format
` + i.message);
      }
      return aH(r, a), w(a, function(i) {
        var o = i.name;
        oH(r, i), lH(r, i);
        var s = this._specialAreas && this._specialAreas[o];
        s && i.transformTo(s.left, s.top, s.width, s.height);
      }, this), a;
    }, t.prototype.getMapForUser = function() {
      return {
        // For backward compatibility, use geoJson
        // PENDING: it has been returning them without clone.
        // do we need to avoid outsite modification?
        geoJson: this._geoJSON,
        geoJSON: this._geoJSON,
        specialAreas: this._specialAreas
      };
    }, t;
  }()
);
function dH(t) {
  for (var e, r = 0; r < t.length; r++) {
    var n = t[r].getBoundingRect();
    e = e || n.clone(), e.union(n);
  }
  return e;
}
function pH(t) {
  return Y(t) ? typeof JSON < "u" && JSON.parse ? JSON.parse(t) : new Function("return (" + t + ");")() : t;
}
var dl = J();
const sa = {
  /**
   * Compatible with previous `echarts.registerMap`.
   *
   * @usage
   * ```js
   *
   * echarts.registerMap('USA', geoJson, specialAreas);
   *
   * echarts.registerMap('USA', {
   *     geoJson: geoJson,
   *     specialAreas: {...}
   * });
   * echarts.registerMap('USA', {
   *     geoJSON: geoJson,
   *     specialAreas: {...}
   * });
   *
   * echarts.registerMap('airport', {
   *     svg: svg
   * }
   * ```
   *
   * Note:
   * Do not support that register multiple geoJSON or SVG
   * one map name. Because different geoJSON and SVG have
   * different unit. It's not easy to make sure how those
   * units are mapping/normalize.
   * If intending to use multiple geoJSON or SVG, we can
   * use multiple geo coordinate system.
   */
  registerMap: function(t, e, r) {
    if (e.svg) {
      var n = new tH(t, e.svg);
      dl.set(t, n);
    } else {
      var a = e.geoJson || e.geoJSON;
      a && !e.features ? r = e.specialAreas : a = e;
      var n = new cH(t, a, r);
      dl.set(t, n);
    }
  },
  getGeoResource: function(t) {
    return dl.get(t);
  },
  /**
   * Only for exporting to users.
   * **MUST NOT** used internally.
   */
  getMapForUser: function(t) {
    var e = dl.get(t);
    return e && e.type === "geoJSON" && e.getMapForUser();
  },
  load: function(t, e, r) {
    var n = dl.get(t);
    if (n)
      return n.load(e, r);
  }
};
var jy = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"], fH = J(jy), hH = J(jy.concat(["g"])), gH = J(jy.concat(["g"])), XN = Oe();
function td(t) {
  var e = t.getItemStyle(), r = t.get("areaColor");
  return r != null && (e.fill = r), e;
}
function xx(t) {
  var e = t.style;
  e && (e.stroke = e.stroke || e.fill, e.fill = null);
}
var QN = (
  /** @class */
  function() {
    function t(e) {
      var r = new de();
      this.uid = Ls("ec_map_draw"), this._controller = new ac(e.getZr()), this._controllerHost = {
        target: r
      }, this.group = r, r.add(this._regionsGroup = new de()), r.add(this._svgGroup = new de());
    }
    return t.prototype.draw = function(e, r, n, a, i) {
      var o = e.mainType === "geo", s = e.getData && e.getData();
      o && r.eachComponent({
        mainType: "series",
        subType: "map"
      }, function(m) {
        !s && m.getHostGeoModel() === e && (s = m.getData());
      });
      var l = e.coordinateSystem, u = this._regionsGroup, c = this.group, d = l.getTransformInfo(), p = d.raw, f = d.roam, h = !u.childAt(0) || i;
      h ? (c.x = f.x, c.y = f.y, c.scaleX = f.scaleX, c.scaleY = f.scaleY, c.dirty()) : Fe(c, f, e);
      var g = s && s.getVisual("visualMeta") && s.getVisual("visualMeta").length > 0, v = {
        api: n,
        geo: l,
        mapOrGeoModel: e,
        data: s,
        isVisualEncodedByVisualMap: g,
        isGeo: o,
        transformInfoRaw: p
      };
      l.resourceType === "geoJSON" ? this._buildGeoJSON(v) : l.resourceType === "geoSVG" && this._buildSVG(v), this._updateController(e, r, n), this._updateMapSelectHandler(e, u, n, a);
    }, t.prototype._buildGeoJSON = function(e) {
      var r = this._regionsGroupByName = J(), n = J(), a = this._regionsGroup, i = e.transformInfoRaw, o = e.mapOrGeoModel, s = e.data, l = e.geo.projection, u = l && l.stream;
      function c(f, h) {
        return h && (f = h(f)), f && [f[0] * i.scaleX + i.x, f[1] * i.scaleY + i.y];
      }
      function d(f) {
        for (var h = [], g = !u && l && l.project, v = 0; v < f.length; ++v) {
          var m = c(f[v], g);
          m && h.push(m);
        }
        return h;
      }
      function p(f) {
        return {
          shape: {
            points: d(f)
          }
        };
      }
      a.removeAll(), w(e.geo.regions, function(f) {
        var h = f.name, g = r.get(h), v = n.get(h) || {}, m = v.dataIdx, _ = v.regionModel;
        if (!g) {
          g = r.set(h, new de()), a.add(g), m = s ? s.indexOfName(h) : null, _ = e.isGeo ? o.getRegionModel(h) : s ? s.getItemModel(m) : null;
          var y = _.get("silent", !0);
          y != null && (g.silent = y), n.set(h, {
            dataIdx: m,
            regionModel: _
          });
        }
        var b = [], S = [];
        w(f.geometries, function(x) {
          if (x.type === "polygon") {
            var C = [x.exterior].concat(x.interiors || []);
            u && (C = Nx(C, u)), w(C, function(D) {
              b.push(new sr(p(D)));
            });
          } else {
            var A = x.points;
            u && (A = Nx(A, u, !0)), w(A, function(D) {
              S.push(new lr(p(D)));
            });
          }
        });
        var E = c(f.getCenter(), l && l.project);
        function T(x, C) {
          if (x.length) {
            var A = new ly({
              culling: !0,
              segmentIgnoreThreshold: 1,
              shape: {
                paths: x
              }
            });
            g.add(A), Cx(e, A, m, _), Ax(e, A, h, _, o, m, E), C && (xx(A), w(A.states, xx));
          }
        }
        T(b), T(S, !0);
      }), r.each(function(f, h) {
        var g = n.get(h), v = g.dataIdx, m = g.regionModel;
        Dx(e, f, h, m, o, v), Mx(e, f, h, m, o), Ix(e, f, h, m, o);
      }, this);
    }, t.prototype._buildSVG = function(e) {
      var r = e.geo.map, n = e.transformInfoRaw;
      this._svgGroup.x = n.x, this._svgGroup.y = n.y, this._svgGroup.scaleX = n.scaleX, this._svgGroup.scaleY = n.scaleY, this._svgResourceChanged(r) && (this._freeSVG(), this._useSVG(r));
      var a = this._svgDispatcherMap = J(), i = !1;
      w(this._svgGraphicRecord.named, function(o) {
        var s = o.name, l = e.mapOrGeoModel, u = e.data, c = o.svgNodeTagLower, d = o.el, p = u ? u.indexOfName(s) : null, f = l.getRegionModel(s);
        fH.get(c) != null && d instanceof Fr && Cx(e, d, p, f), d instanceof Fr && (d.culling = !0);
        var h = f.get("silent", !0);
        if (h != null && (d.silent = h), d.z2EmphasisLift = 0, !o.namedFrom && (gH.get(c) != null && Ax(e, d, s, f, l, p, null), Dx(e, d, s, f, l, p), Mx(e, d, s, f, l), hH.get(c) != null)) {
          var g = Ix(e, d, s, f, l);
          g === "self" && (i = !0);
          var v = a.get(s) || a.set(s, []);
          v.push(d);
        }
      }, this), this._enableBlurEntireSVG(i, e);
    }, t.prototype._enableBlurEntireSVG = function(e, r) {
      if (e && r.isGeo) {
        var n = r.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(), a = n.opacity;
        this._svgGraphicRecord.root.traverse(function(i) {
          if (!i.isGroup) {
            lo(i);
            var o = i.ensureState("blur").style || {};
            o.opacity == null && a != null && (o.opacity = a), i.ensureState("emphasis");
          }
        });
      }
    }, t.prototype.remove = function() {
      this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
    }, t.prototype.findHighDownDispatchers = function(e, r) {
      if (e == null)
        return [];
      var n = r.coordinateSystem;
      if (n.resourceType === "geoJSON") {
        var a = this._regionsGroupByName;
        if (a) {
          var i = a.get(e);
          return i ? [i] : [];
        }
      } else if (n.resourceType === "geoSVG")
        return this._svgDispatcherMap && this._svgDispatcherMap.get(e) || [];
    }, t.prototype._svgResourceChanged = function(e) {
      return this._svgMapName !== e;
    }, t.prototype._useSVG = function(e) {
      var r = sa.getGeoResource(e);
      if (r && r.type === "geoSVG") {
        var n = r.useGraphic(this.uid);
        this._svgGroup.add(n.root), this._svgGraphicRecord = n, this._svgMapName = e;
      }
    }, t.prototype._freeSVG = function() {
      var e = this._svgMapName;
      if (e != null) {
        var r = sa.getGeoResource(e);
        r && r.type === "geoSVG" && r.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
      }
    }, t.prototype._updateController = function(e, r, n) {
      var a = e.coordinateSystem, i = this._controller, o = this._controllerHost;
      o.zoomLimit = e.get("scaleLimit"), o.zoom = a.getZoom(), i.enable(e.get("roam") || !1);
      var s = e.mainType;
      function l() {
        var u = {
          type: "geoRoam",
          componentType: s
        };
        return u[s + "Id"] = e.id, u;
      }
      i.off("pan").on("pan", function(u) {
        this._mouseDownFlag = !1, Xy(o, u.dx, u.dy), n.dispatchAction(G(l(), {
          dx: u.dx,
          dy: u.dy,
          animation: {
            duration: 0
          }
        }));
      }, this), i.off("zoom").on("zoom", function(u) {
        this._mouseDownFlag = !1, Qy(o, u.scale, u.originX, u.originY), n.dispatchAction(G(l(), {
          totalZoom: o.zoom,
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY,
          animation: {
            duration: 0
          }
        }));
      }, this), i.setPointerChecker(function(u, c, d) {
        return a.containPoint([c, d]) && !Of(u, n, e);
      });
    }, t.prototype.resetForLabelLayout = function() {
      this.group.traverse(function(e) {
        var r = e.getTextContent();
        r && (r.ignore = XN(r).ignore);
      });
    }, t.prototype._updateMapSelectHandler = function(e, r, n, a) {
      var i = this;
      r.off("mousedown"), r.off("click"), e.get("selectedMode") && (r.on("mousedown", function() {
        i._mouseDownFlag = !0;
      }), r.on("click", function(o) {
        i._mouseDownFlag && (i._mouseDownFlag = !1);
      }));
    }, t;
  }()
);
function Cx(t, e, r, n) {
  var a = n.getModel("itemStyle"), i = n.getModel(["emphasis", "itemStyle"]), o = n.getModel(["blur", "itemStyle"]), s = n.getModel(["select", "itemStyle"]), l = td(a), u = td(i), c = td(s), d = td(o), p = t.data;
  if (p) {
    var f = p.getItemVisual(r, "style"), h = p.getItemVisual(r, "decal");
    t.isVisualEncodedByVisualMap && f.fill && (l.fill = f.fill), h && (l.decal = ys(h, t.api));
  }
  e.setStyle(l), e.style.strokeNoScale = !0, e.ensureState("emphasis").style = u, e.ensureState("select").style = c, e.ensureState("blur").style = d, lo(e);
}
function Ax(t, e, r, n, a, i, o) {
  var s = t.data, l = t.isGeo, u = s && isNaN(s.get(s.mapDimension("value"), i)), c = s && s.getItemLayout(i);
  if (l || u || c && c.showLabel) {
    var d = l ? r : i, p = void 0;
    (!s || i >= 0) && (p = a);
    var f = o ? {
      normal: {
        align: "center",
        verticalAlign: "middle"
      }
    } : null;
    Vt(e, Dt(n), {
      labelFetcher: p,
      labelDataIndex: d,
      defaultText: r
    }, f);
    var h = e.getTextContent();
    if (h && (XN(h).ignore = h.ignore, e.textConfig && o)) {
      var g = e.getBoundingRect().clone();
      e.textConfig.layoutRect = g, e.textConfig.position = [(o[0] - g.x) / g.width * 100 + "%", (o[1] - g.y) / g.height * 100 + "%"];
    }
    e.disableLabelAnimation = !0;
  } else
    e.removeTextContent(), e.removeTextConfig(), e.disableLabelAnimation = null;
}
function Dx(t, e, r, n, a, i) {
  t.data ? t.data.setItemGraphicEl(i, e) : pe(e).eventData = {
    componentType: "geo",
    componentIndex: a.componentIndex,
    geoIndex: a.componentIndex,
    name: r,
    region: n && n.option || {}
  };
}
function Mx(t, e, r, n, a) {
  t.data || go({
    el: e,
    componentModel: a,
    itemName: r,
    // @ts-ignore FIXME:TS fix the "compatible with each other"?
    itemTooltipOption: n.get("tooltip")
  });
}
function Ix(t, e, r, n, a) {
  e.highDownSilentOnTouch = !!a.get("selectedMode");
  var i = n.getModel("emphasis"), o = i.get("focus");
  return lt(e, o, i.get("blurScope"), i.get("disabled")), t.isGeo && SG(e, a, r), o;
}
function Nx(t, e, r) {
  var n = [], a;
  function i() {
    a = [];
  }
  function o() {
    a.length && (n.push(a), a = []);
  }
  var s = e({
    polygonStart: i,
    polygonEnd: o,
    lineStart: i,
    lineEnd: o,
    point: function(l, u) {
      isFinite(l) && isFinite(u) && a.push([l, u]);
    },
    sphere: function() {
    }
  });
  return !r && s.polygonStart(), w(t, function(l) {
    s.lineStart();
    for (var u = 0; u < l.length; u++)
      s.point(l[u][0], l[u][1]);
    s.lineEnd();
  }), !r && s.polygonEnd(), n;
}
var vH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      if (!(i && i.type === "mapToggleSelect" && i.from === this.uid)) {
        var o = this.group;
        if (o.removeAll(), !r.getHostGeoModel()) {
          if (this._mapDraw && i && i.type === "geoRoam" && this._mapDraw.resetForLabelLayout(), i && i.type === "geoRoam" && i.componentType === "series" && i.seriesId === r.id) {
            var s = this._mapDraw;
            s && o.add(s.group);
          } else if (r.needsDrawMap) {
            var s = this._mapDraw || new QN(a);
            o.add(s.group), s.draw(r, n, a, this, i), this._mapDraw = s;
          } else
            this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          r.get("showLegendSymbol") && n.getComponent("legend") && this._renderSymbols(r, n, a);
        }
      }
    }, e.prototype.remove = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
    }, e.prototype._renderSymbols = function(r, n, a) {
      var i = r.originalData, o = this.group;
      i.each(i.mapDimension("value"), function(s, l) {
        if (!isNaN(s)) {
          var u = i.getItemLayout(l);
          if (!(!u || !u.point)) {
            var c = u.point, d = u.offset, p = new ca({
              style: {
                // Because the special of map draw.
                // Which needs statistic of multiple series and draw on one map.
                // And each series also need a symbol with legend color
                //
                // Layout and visual are put one the different data
                // TODO
                fill: r.getData().getVisual("style").fill
              },
              shape: {
                cx: c[0] + d * 9,
                cy: c[1],
                r: 3
              },
              silent: !0,
              // Do not overlap the first series, on which labels are displayed.
              z2: 8 + (d ? 0 : Ns + 1)
            });
            if (!d) {
              var f = r.mainSeries.getData(), h = i.getName(l), g = f.indexOfName(h), v = i.getItemModel(l), m = v.getModel("label"), _ = f.getItemGraphicEl(g);
              Vt(p, Dt(v), {
                labelFetcher: {
                  getFormattedLabel: function(y, b) {
                    return r.getFormattedLabel(g, b);
                  }
                },
                defaultText: h
              }), p.disableLabelAnimation = !0, m.get("position") || p.setTextConfig({
                position: "bottom"
              }), _.onHoverStateChange = function(y) {
                sp(p, y);
              };
            }
            o.add(p);
          }
        }
      });
    }, e.type = "map", e;
  }(Ke)
), mH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.needsDrawMap = !1, r.seriesGroup = [], r.getTooltipPosition = function(n) {
        if (n != null) {
          var a = this.getData().getName(n), i = this.coordinateSystem, o = i.getRegion(a);
          return o && i.dataToPoint(o.getCenter());
        }
      }, r;
    }
    return e.prototype.getInitialData = function(r) {
      for (var n = Vs(this, {
        coordDimensions: ["value"],
        encodeDefaulter: _e(_y, this)
      }), a = J(), i = [], o = 0, s = n.count(); o < s; o++) {
        var l = n.getName(o);
        a.set(l, o);
      }
      var u = sa.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
      return w(u.regions, function(c) {
        var d = c.name, p = a.get(d), f = c.properties && c.properties.echartsStyle, h;
        p == null ? (h = {
          name: d
        }, i.push(h)) : h = n.getRawDataItem(p), f && be(h, f);
      }), n.appendData(i), n;
    }, e.prototype.getHostGeoModel = function() {
      var r = this.option.geoIndex;
      return r != null ? this.ecModel.getComponent("geo", r) : null;
    }, e.prototype.getMapType = function() {
      return (this.getHostGeoModel() || this).option.map;
    }, e.prototype.getRawValue = function(r) {
      var n = this.getData();
      return n.get(n.mapDimension("value"), r);
    }, e.prototype.getRegionModel = function(r) {
      var n = this.getData();
      return n.getItemModel(n.indexOfName(r));
    }, e.prototype.formatTooltip = function(r, n, a) {
      for (var i = this.getData(), o = this.getRawValue(r), s = i.getName(r), l = this.seriesGroup, u = [], c = 0; c < l.length; c++) {
        var d = l[c].originalData.indexOfName(s), p = i.mapDimension("value");
        isNaN(l[c].originalData.get(p, d)) || u.push(l[c].name);
      }
      return Mt("section", {
        header: u.join(", "),
        noHeader: !u.length,
        blocks: [Mt("nameValue", {
          name: s,
          value: o
        })]
      });
    }, e.prototype.setZoom = function(r) {
      this.option.zoom = r;
    }, e.prototype.setCenter = function(r) {
      this.option.center = r;
    }, e.prototype.getLegendIcon = function(r) {
      var n = r.icon || "roundRect", a = mt(n, 0, 0, r.itemWidth, r.itemHeight, r.itemStyle.fill);
      return a.setStyle(r.itemStyle), a.style.stroke = "none", n.indexOf("empty") > -1 && (a.style.stroke = a.style.fill, a.style.fill = "#fff", a.style.lineWidth = 2), a;
    }, e.type = "series.map", e.dependencies = ["geo"], e.layoutMode = "box", e.defaultOption = {
      // 一级层叠
      // zlevel: 0,
      // 二级层叠
      z: 2,
      coordinateSystem: "geo",
      // map should be explicitly specified since ec3.
      map: "",
      // If `geoIndex` is not specified, a exclusive geo will be
      // created. Otherwise use the specified geo component, and
      // `map` and `mapType` are ignored.
      // geoIndex: 0,
      // 'center' | 'left' | 'right' | 'x%' | {number}
      left: "center",
      // 'center' | 'top' | 'bottom' | 'x%' | {number}
      top: "center",
      // right
      // bottom
      // width:
      // height
      // Aspect is width / height. Inited to be geoJson bbox aspect
      // This parameter is used for scale this aspect
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient.
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      showLegendSymbol: !0,
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ],
      // higher priority than center and zoom
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      selectedMode: !0,
      label: {
        show: !1,
        color: "#000"
      },
      // scaleLimit: null,
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444",
        areaColor: "#eee"
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          areaColor: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      nameProperty: "name"
    }, e;
  }(et)
);
function _H(t, e) {
  var r = {};
  return w(t, function(n) {
    n.each(n.mapDimension("value"), function(a, i) {
      var o = "ec-" + n.getName(i);
      r[o] = r[o] || [], isNaN(a) || r[o].push(a);
    });
  }), t[0].map(t[0].mapDimension("value"), function(n, a) {
    for (var i = "ec-" + t[0].getName(a), o = 0, s = 1 / 0, l = -1 / 0, u = r[i].length, c = 0; c < u; c++)
      s = Math.min(s, r[i][c]), l = Math.max(l, r[i][c]), o += r[i][c];
    var d;
    return e === "min" ? d = s : e === "max" ? d = l : e === "average" ? d = o / u : d = o, u === 0 ? NaN : d;
  });
}
function yH(t) {
  var e = {};
  t.eachSeriesByType("map", function(r) {
    var n = r.getHostGeoModel(), a = n ? "o" + n.id : "i" + r.getMapType();
    (e[a] = e[a] || []).push(r);
  }), w(e, function(r, n) {
    for (var a = _H($(r, function(o) {
      return o.getData();
    }), r[0].get("mapValueCalculation")), i = 0; i < r.length; i++)
      r[i].originalData = r[i].getData();
    for (var i = 0; i < r.length; i++)
      r[i].seriesGroup = r, r[i].needsDrawMap = i === 0 && !r[i].getHostGeoModel(), r[i].setData(a.cloneShallow()), r[i].mainSeries = r[0];
  });
}
function bH(t) {
  var e = {};
  t.eachSeriesByType("map", function(r) {
    var n = r.getMapType();
    if (!(r.getHostGeoModel() || e[n])) {
      var a = {};
      w(r.seriesGroup, function(o) {
        var s = o.coordinateSystem, l = o.originalData;
        o.get("showLegendSymbol") && t.getComponent("legend") && l.each(l.mapDimension("value"), function(u, c) {
          var d = l.getName(c), p = s.getRegion(d);
          if (!(!p || isNaN(u))) {
            var f = a[d] || 0, h = s.dataToPoint(p.getCenter());
            a[d] = f + 1, l.setItemLayout(c, {
              point: h,
              offset: f
            });
          }
        });
      });
      var i = r.getData();
      i.each(function(o) {
        var s = i.getName(o), l = i.getItemLayout(o) || {};
        l.showLabel = !a[s], i.setItemLayout(o, l);
      }), e[n] = !0;
    }
  });
}
var Rx = Ut, ic = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this) || this;
      return n.type = "view", n.dimensions = ["x", "y"], n._roamTransformable = new Yn(), n._rawTransformable = new Yn(), n.name = r, n;
    }
    return e.prototype.setBoundingRect = function(r, n, a, i) {
      return this._rect = new Te(r, n, a, i), this._rect;
    }, e.prototype.getBoundingRect = function() {
      return this._rect;
    }, e.prototype.setViewRect = function(r, n, a, i) {
      this._transformTo(r, n, a, i), this._viewRect = new Te(r, n, a, i);
    }, e.prototype._transformTo = function(r, n, a, i) {
      var o = this.getBoundingRect(), s = this._rawTransformable;
      s.transform = o.calculateTransform(new Te(r, n, a, i));
      var l = s.parent;
      s.parent = null, s.decomposeTransform(), s.parent = l, this._updateTransform();
    }, e.prototype.setCenter = function(r, n) {
      r && (this._center = [q(r[0], n.getWidth()), q(r[1], n.getHeight())], this._updateCenterAndZoom());
    }, e.prototype.setZoom = function(r) {
      r = r || 1;
      var n = this.zoomLimit;
      n && (n.max != null && (r = Math.min(n.max, r)), n.min != null && (r = Math.max(n.min, r))), this._zoom = r, this._updateCenterAndZoom();
    }, e.prototype.getDefaultCenter = function() {
      var r = this.getBoundingRect(), n = r.x + r.width / 2, a = r.y + r.height / 2;
      return [n, a];
    }, e.prototype.getCenter = function() {
      return this._center || this.getDefaultCenter();
    }, e.prototype.getZoom = function() {
      return this._zoom || 1;
    }, e.prototype.getRoamTransform = function() {
      return this._roamTransformable.getLocalTransform();
    }, e.prototype._updateCenterAndZoom = function() {
      var r = this._rawTransformable.getLocalTransform(), n = this._roamTransformable, a = this.getDefaultCenter(), i = this.getCenter(), o = this.getZoom();
      i = Ut([], i, r), a = Ut([], a, r), n.originX = i[0], n.originY = i[1], n.x = a[0] - i[0], n.y = a[1] - i[1], n.scaleX = n.scaleY = o, this._updateTransform();
    }, e.prototype._updateTransform = function() {
      var r = this._roamTransformable, n = this._rawTransformable;
      n.parent = r, r.updateTransform(), n.updateTransform(), W_(this.transform || (this.transform = []), n.transform || yr()), this._rawTransform = n.getLocalTransform(), this.invTransform = this.invTransform || [], Ms(this.invTransform, this.transform), this.decomposeTransform();
    }, e.prototype.getTransformInfo = function() {
      var r = this._rawTransformable, n = this._roamTransformable, a = new Yn();
      return a.transform = n.transform, a.decomposeTransform(), {
        roam: {
          x: a.x,
          y: a.y,
          scaleX: a.scaleX,
          scaleY: a.scaleY
        },
        raw: {
          x: r.x,
          y: r.y,
          scaleX: r.scaleX,
          scaleY: r.scaleY
        }
      };
    }, e.prototype.getViewRect = function() {
      return this._viewRect;
    }, e.prototype.getViewRectAfterRoam = function() {
      var r = this.getBoundingRect().clone();
      return r.applyTransform(this.transform), r;
    }, e.prototype.dataToPoint = function(r, n, a) {
      var i = n ? this._rawTransform : this.transform;
      return a = a || [], i ? Rx(a, r, i) : Qt(a, r);
    }, e.prototype.pointToData = function(r) {
      var n = this.invTransform;
      return n ? Rx([], r, n) : [r[0], r[1]];
    }, e.prototype.convertToPixel = function(r, n, a) {
      var i = Ox(n);
      return i === this ? i.dataToPoint(a) : null;
    }, e.prototype.convertFromPixel = function(r, n, a) {
      var i = Ox(n);
      return i === this ? i.pointToData(a) : null;
    }, e.prototype.containPoint = function(r) {
      return this.getViewRectAfterRoam().contain(r[0], r[1]);
    }, e.dimensions = ["x", "y"], e;
  }(Yn)
);
function Ox(t) {
  var e = t.seriesModel;
  return e ? e.coordinateSystem : null;
}
var SH = {
  geoJSON: {
    aspectScale: 0.75,
    invertLongitute: !0
  },
  geoSVG: {
    aspectScale: 1,
    invertLongitute: !1
  }
}, jN = ["lng", "lat"], qm = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this, r) || this;
      i.dimensions = jN, i.type = "geo", i._nameCoordMap = J(), i.map = n;
      var o = a.projection, s = sa.load(n, a.nameMap, a.nameProperty), l = sa.getGeoResource(n);
      i.resourceType = l ? l.type : null;
      var u = i.regions = s.regions, c = SH[l.type];
      i._regionsMap = s.regionsMap, i.regions = s.regions, i.projection = o;
      var d;
      if (o)
        for (var p = 0; p < u.length; p++) {
          var f = u[p].getBoundingRect(o);
          d = d || f.clone(), d.union(f);
        }
      else
        d = s.boundingRect;
      return i.setBoundingRect(d.x, d.y, d.width, d.height), i.aspectScale = o ? 1 : ge(a.aspectScale, c.aspectScale), i._invertLongitute = o ? !1 : c.invertLongitute, i;
    }
    return e.prototype._transformTo = function(r, n, a, i) {
      var o = this.getBoundingRect(), s = this._invertLongitute;
      o = o.clone(), s && (o.y = -o.y - o.height);
      var l = this._rawTransformable;
      l.transform = o.calculateTransform(new Te(r, n, a, i));
      var u = l.parent;
      l.parent = null, l.decomposeTransform(), l.parent = u, s && (l.scaleY = -l.scaleY), this._updateTransform();
    }, e.prototype.getRegion = function(r) {
      return this._regionsMap.get(r);
    }, e.prototype.getRegionByCoord = function(r) {
      for (var n = this.regions, a = 0; a < n.length; a++) {
        var i = n[a];
        if (i.type === "geoJSON" && i.contain(r))
          return n[a];
      }
    }, e.prototype.addGeoCoord = function(r, n) {
      this._nameCoordMap.set(r, n);
    }, e.prototype.getGeoCoord = function(r) {
      var n = this._regionsMap.get(r);
      return this._nameCoordMap.get(r) || n && n.getCenter();
    }, e.prototype.dataToPoint = function(r, n, a) {
      if (Y(r) && (r = this.getGeoCoord(r)), r) {
        var i = this.projection;
        return i && (r = i.project(r)), r && this.projectedToPoint(r, n, a);
      }
    }, e.prototype.pointToData = function(r) {
      var n = this.projection;
      return n && (r = n.unproject(r)), r && this.pointToProjected(r);
    }, e.prototype.pointToProjected = function(r) {
      return t.prototype.pointToData.call(this, r);
    }, e.prototype.projectedToPoint = function(r, n, a) {
      return t.prototype.dataToPoint.call(this, r, n, a);
    }, e.prototype.convertToPixel = function(r, n, a) {
      var i = Lx(n);
      return i === this ? i.dataToPoint(a) : null;
    }, e.prototype.convertFromPixel = function(r, n, a) {
      var i = Lx(n);
      return i === this ? i.pointToData(a) : null;
    }, e;
  }(ic)
);
_t(qm, ic);
function Lx(t) {
  var e = t.geoModel, r = t.seriesModel;
  return e ? e.coordinateSystem : r ? r.coordinateSystem || (r.getReferringComponents("geo", vt).models[0] || {}).coordinateSystem : null;
}
function Px(t, e) {
  var r = t.get("boundingCoords");
  if (r != null) {
    var n = r[0], a = r[1];
    if (isFinite(n[0]) && isFinite(n[1]) && isFinite(a[0]) && isFinite(a[1])) {
      var i = this.projection;
      if (i) {
        var o = n[0], s = n[1], l = a[0], u = a[1];
        n = [1 / 0, 1 / 0], a = [-1 / 0, -1 / 0];
        var c = function(E, T, x, C) {
          for (var A = x - E, D = C - T, M = 0; M <= 100; M++) {
            var I = M / 100, N = i.project([E + A * I, T + D * I]);
            Ra(n, n, N), Oa(a, a, N);
          }
        };
        c(o, s, l, s), c(l, s, l, u), c(l, u, o, u), c(o, u, l, s);
      }
      this.setBoundingRect(n[0], n[1], a[0] - n[0], a[1] - n[1]);
    }
  }
  var d = this.getBoundingRect(), p = t.get("layoutCenter"), f = t.get("layoutSize"), h = e.getWidth(), g = e.getHeight(), v = d.width / d.height * this.aspectScale, m = !1, _, y;
  p && f && (_ = [q(p[0], h), q(p[1], g)], y = q(f, Math.min(h, g)), !isNaN(_[0]) && !isNaN(_[1]) && !isNaN(y) && (m = !0));
  var b;
  if (m)
    b = {}, v > 1 ? (b.width = y, b.height = y / v) : (b.height = y, b.width = y * v), b.y = _[1] - b.height / 2, b.x = _[0] - b.width / 2;
  else {
    var S = t.getBoxLayoutParams();
    S.aspect = v, b = Et(S, {
      width: h,
      height: g
    });
  }
  this.setViewRect(b.x, b.y, b.width, b.height), this.setCenter(t.get("center"), e), this.setZoom(t.get("zoom"));
}
function EH(t, e) {
  w(e.get("geoCoord"), function(r, n) {
    t.addGeoCoord(n, r);
  });
}
var TH = (
  /** @class */
  function() {
    function t() {
      this.dimensions = jN;
    }
    return t.prototype.create = function(e, r) {
      var n = [];
      function a(o) {
        return {
          nameProperty: o.get("nameProperty"),
          aspectScale: o.get("aspectScale"),
          projection: o.get("projection")
        };
      }
      e.eachComponent("geo", function(o, s) {
        var l = o.get("map"), u = new qm(l + s, l, G({
          nameMap: o.get("nameMap")
        }, a(o)));
        u.zoomLimit = o.get("scaleLimit"), n.push(u), o.coordinateSystem = u, u.model = o, u.resize = Px, u.resize(o, r);
      }), e.eachSeries(function(o) {
        var s = o.get("coordinateSystem");
        if (s === "geo") {
          var l = o.get("geoIndex") || 0;
          o.coordinateSystem = n[l];
        }
      });
      var i = {};
      return e.eachSeriesByType("map", function(o) {
        if (!o.getHostGeoModel()) {
          var s = o.getMapType();
          i[s] = i[s] || [], i[s].push(o);
        }
      }), w(i, function(o, s) {
        var l = $(o, function(c) {
          return c.get("nameMap");
        }), u = new qm(s, s, G({
          nameMap: z_(l)
        }, a(o[0])));
        u.zoomLimit = Pt.apply(null, $(o, function(c) {
          return c.get("scaleLimit");
        })), n.push(u), u.resize = Px, u.resize(o[0], r), w(o, function(c) {
          c.coordinateSystem = u, EH(u, c);
        });
      }), n;
    }, t.prototype.getFilledRegions = function(e, r, n, a) {
      for (var i = (e || []).slice(), o = J(), s = 0; s < i.length; s++)
        o.set(i[s].name, i[s]);
      var l = sa.load(r, n, a);
      return w(l.regions, function(u) {
        var c = u.name, d = o.get(c), p = u.properties && u.properties.echartsStyle;
        d || (d = {
          name: c
        }, i.push(d)), p && be(d, p);
      }), i;
    }, t;
  }()
), JN = new TH(), xH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n, a) {
      var i = sa.getGeoResource(r.map);
      if (i && i.type === "geoJSON") {
        var o = r.itemStyle = r.itemStyle || {};
        "color" in o || (o.color = "#eee");
      }
      this.mergeDefaultAndTheme(r, a), io(r, "label", ["show"]);
    }, e.prototype.optionUpdated = function() {
      var r = this, n = this.option;
      n.regions = JN.getFilledRegions(n.regions, n.map, n.nameMap, n.nameProperty);
      var a = {};
      this._optionModelMap = Nn(n.regions || [], function(i, o) {
        var s = o.name;
        return s && (i.set(s, new He(o, r, r.ecModel)), o.selected && (a[s] = !0)), i;
      }, J()), n.selectedMap || (n.selectedMap = a);
    }, e.prototype.getRegionModel = function(r) {
      return this._optionModelMap.get(r) || new He(null, this, this.ecModel);
    }, e.prototype.getFormattedLabel = function(r, n) {
      var a = this.getRegionModel(r), i = n === "normal" ? a.get(["label", "formatter"]) : a.get(["emphasis", "label", "formatter"]), o = {
        name: r
      };
      if (ae(i))
        return o.status = n, i(o);
      if (Y(i))
        return i.replace("{a}", r ?? "");
    }, e.prototype.setZoom = function(r) {
      this.option.zoom = r;
    }, e.prototype.setCenter = function(r) {
      this.option.center = r;
    }, e.prototype.select = function(r) {
      var n = this.option, a = n.selectedMode;
      if (a) {
        a !== "multiple" && (n.selectedMap = null);
        var i = n.selectedMap || (n.selectedMap = {});
        i[r] = !0;
      }
    }, e.prototype.unSelect = function(r) {
      var n = this.option.selectedMap;
      n && (n[r] = !1);
    }, e.prototype.toggleSelected = function(r) {
      this[this.isSelected(r) ? "unSelect" : "select"](r);
    }, e.prototype.isSelected = function(r) {
      var n = this.option.selectedMap;
      return !!(n && n[r]);
    }, e.type = "geo", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      show: !0,
      left: "center",
      top: "center",
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // /// Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      silent: !1,
      // Map type
      map: "",
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ]
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      // selectedMode: false
      label: {
        show: !1,
        color: "#000"
      },
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444"
        // Default color:
        // + geoJSON: #eee
        // + geoSVG: null (use SVG original `fill`)
        // color: '#eee'
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      regions: []
      // tooltip: {
      //     show: false
      // }
    }, e;
  }(De)
);
function kx(t, e) {
  return t.pointToProjected ? t.pointToProjected(e) : t.pointToData(e);
}
function Jy(t, e, r, n) {
  var a = t.getZoom(), i = t.getCenter(), o = e.zoom, s = t.projectedToPoint ? t.projectedToPoint(i) : t.dataToPoint(i);
  if (e.dx != null && e.dy != null && (s[0] -= e.dx, s[1] -= e.dy, t.setCenter(kx(t, s), n)), o != null) {
    if (r) {
      var l = r.min || 0, u = r.max || 1 / 0;
      o = Math.max(Math.min(a * o, u), l) / a;
    }
    t.scaleX *= o, t.scaleY *= o;
    var c = (e.originX - t.x) * (o - 1), d = (e.originY - t.y) * (o - 1);
    t.x -= c, t.y -= d, t.updateTransform(), t.setCenter(kx(t, s), n), t.setZoom(o * a);
  }
  return {
    center: t.getCenter(),
    zoom: t.getZoom()
  };
}
var CH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.focusBlurEnabled = !0, r;
    }
    return e.prototype.init = function(r, n) {
      this._api = n;
    }, e.prototype.render = function(r, n, a, i) {
      if (this._model = r, !r.get("show")) {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
        return;
      }
      this._mapDraw || (this._mapDraw = new QN(a));
      var o = this._mapDraw;
      o.draw(r, n, a, this, i), o.group.on("click", this._handleRegionClick, this), o.group.silent = r.get("silent"), this.group.add(o.group), this.updateSelectStatus(r, n, a);
    }, e.prototype._handleRegionClick = function(r) {
      var n;
      Wi(r.target, function(a) {
        return (n = pe(a).eventData) != null;
      }, !0), n && this._api.dispatchAction({
        type: "geoToggleSelect",
        geoId: this._model.id,
        name: n.name
      });
    }, e.prototype.updateSelectStatus = function(r, n, a) {
      var i = this;
      this._mapDraw.group.traverse(function(o) {
        var s = pe(o).eventData;
        if (s)
          return i._model.isSelected(s.name) ? a.enterSelect(o) : a.leaveSelect(o), !0;
      });
    }, e.prototype.findHighDownDispatchers = function(r) {
      return this._mapDraw && this._mapDraw.findHighDownDispatchers(r, this._model);
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove();
    }, e.type = "geo", e;
  }(st)
);
function AH(t, e, r) {
  sa.registerMap(t, e, r);
}
function wH(t) {
  t.registerCoordinateSystem("geo", JN), t.registerComponentModel(xH), t.registerComponentView(CH), t.registerImpl("registerMap", AH), t.registerImpl("getMap", function(r) {
    return sa.getMapForUser(r);
  });
  function e(r, n) {
    n.update = "geo:updateSelectStatus", t.registerAction(n, function(a, i) {
      var o = {}, s = [];
      return i.eachComponent({
        mainType: "geo",
        query: a
      }, function(l) {
        l[r](a.name);
        var u = l.coordinateSystem;
        w(u.regions, function(d) {
          o[d.name] = l.isSelected(d.name) || !1;
        });
        var c = [];
        w(o, function(d, p) {
          o[p] && c.push(p);
        }), s.push({
          geoIndex: l.componentIndex,
          // Use singular, the same naming convention as the event `selectchanged`.
          name: c
        });
      }), {
        selected: o,
        allSelected: s,
        name: a.name
      };
    });
  }
  e("toggleSelected", {
    type: "geoToggleSelect",
    event: "geoselectchanged"
  }), e("select", {
    type: "geoSelect",
    event: "geoselected"
  }), e("unSelect", {
    type: "geoUnSelect",
    event: "geounselected"
  }), t.registerAction({
    type: "geoRoam",
    event: "geoRoam",
    update: "updateTransform"
  }, function(r, n, a) {
    var i = r.componentType || "series";
    n.eachComponent({
      mainType: i,
      query: r
    }, function(o) {
      var s = o.coordinateSystem;
      if (s.type === "geo") {
        var l = Jy(s, r, o.get("scaleLimit"), a);
        o.setCenter && o.setCenter(l.center), o.setZoom && o.setZoom(l.zoom), i === "series" && w(o.seriesGroup, function(u) {
          u.setCenter(l.center), u.setZoom(l.zoom);
        });
      }
    });
  });
}
function bre(t) {
  kt(wH), t.registerChartView(vH), t.registerSeriesModel(mH), t.registerLayout(bH), t.registerProcessor(t.PRIORITY.PROCESSOR.STATISTIC, yH), tI("map", t.registerAction);
}
function DH(t) {
  var e = t;
  e.hierNode = {
    defaultAncestor: null,
    ancestor: e,
    prelim: 0,
    modifier: 0,
    change: 0,
    shift: 0,
    i: 0,
    thread: null
  };
  for (var r = [e], n, a; n = r.pop(); )
    if (a = n.children, n.isExpand && a.length)
      for (var i = a.length, o = i - 1; o >= 0; o--) {
        var s = a[o];
        s.hierNode = {
          defaultAncestor: null,
          ancestor: s,
          prelim: 0,
          modifier: 0,
          change: 0,
          shift: 0,
          i: o,
          thread: null
        }, r.push(s);
      }
}
function MH(t, e) {
  var r = t.isExpand ? t.children : [], n = t.parentNode.children, a = t.hierNode.i ? n[t.hierNode.i - 1] : null;
  if (r.length) {
    RH(t);
    var i = (r[0].hierNode.prelim + r[r.length - 1].hierNode.prelim) / 2;
    a ? (t.hierNode.prelim = a.hierNode.prelim + e(t, a), t.hierNode.modifier = t.hierNode.prelim - i) : t.hierNode.prelim = i;
  } else a && (t.hierNode.prelim = a.hierNode.prelim + e(t, a));
  t.parentNode.hierNode.defaultAncestor = OH(t, a, t.parentNode.hierNode.defaultAncestor || n[0], e);
}
function IH(t) {
  var e = t.hierNode.prelim + t.parentNode.hierNode.modifier;
  t.setLayout({
    x: e
  }, !0), t.hierNode.modifier += t.parentNode.hierNode.modifier;
}
function Bx(t) {
  return arguments.length ? t : kH;
}
function Il(t, e) {
  return t -= Math.PI / 2, {
    x: e * Math.cos(t),
    y: e * Math.sin(t)
  };
}
function NH(t, e) {
  return Et(t.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function RH(t) {
  for (var e = t.children, r = e.length, n = 0, a = 0; --r >= 0; ) {
    var i = e[r];
    i.hierNode.prelim += n, i.hierNode.modifier += n, a += i.hierNode.change, n += i.hierNode.shift + a;
  }
}
function OH(t, e, r, n) {
  if (e) {
    for (var a = t, i = t, o = i.parentNode.children[0], s = e, l = a.hierNode.modifier, u = i.hierNode.modifier, c = o.hierNode.modifier, d = s.hierNode.modifier; s = Rg(s), i = Og(i), s && i; ) {
      a = Rg(a), o = Og(o), a.hierNode.ancestor = t;
      var p = s.hierNode.prelim + d - i.hierNode.prelim - u + n(s, i);
      p > 0 && (PH(LH(s, t, r), t, p), u += p, l += p), d += s.hierNode.modifier, u += i.hierNode.modifier, l += a.hierNode.modifier, c += o.hierNode.modifier;
    }
    s && !Rg(a) && (a.hierNode.thread = s, a.hierNode.modifier += d - l), i && !Og(o) && (o.hierNode.thread = i, o.hierNode.modifier += u - c, r = t);
  }
  return r;
}
function Rg(t) {
  var e = t.children;
  return e.length && t.isExpand ? e[e.length - 1] : t.hierNode.thread;
}
function Og(t) {
  var e = t.children;
  return e.length && t.isExpand ? e[0] : t.hierNode.thread;
}
function LH(t, e, r) {
  return t.hierNode.ancestor.parentNode === e.parentNode ? t.hierNode.ancestor : r;
}
function PH(t, e, r) {
  var n = r / (e.hierNode.i - t.hierNode.i);
  e.hierNode.change -= n, e.hierNode.shift += r, e.hierNode.modifier += r, e.hierNode.prelim += r, t.hierNode.change += n;
}
function kH(t, e) {
  return t.parentNode === e.parentNode ? 1 : 2;
}
var BH = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.parentPoint = [], this.childPoints = [];
    }
    return t;
  }()
), FH = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      return t.call(this, r) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new BH();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.childPoints, i = a.length, o = n.parentPoint, s = a[0], l = a[i - 1];
      if (i === 1) {
        r.moveTo(o[0], o[1]), r.lineTo(s[0], s[1]);
        return;
      }
      var u = n.orient, c = u === "TB" || u === "BT" ? 0 : 1, d = 1 - c, p = q(n.forkPosition, 1), f = [];
      f[c] = o[c], f[d] = o[d] + (l[d] - o[d]) * p, r.moveTo(o[0], o[1]), r.lineTo(f[0], f[1]), r.moveTo(s[0], s[1]), f[c] = s[c], r.lineTo(f[0], f[1]), f[c] = l[c], r.lineTo(f[0], f[1]), r.lineTo(l[0], l[1]);
      for (var h = 1; h < i - 1; h++) {
        var g = a[h];
        r.moveTo(g[0], g[1]), f[c] = g[c], r.lineTo(f[0], f[1]);
      }
    }, e;
  }(Ce)
), GH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._mainGroup = new de(), r;
    }
    return e.prototype.init = function(r, n) {
      this._controller = new ac(n.getZr()), this._controllerHost = {
        target: this.group
      }, this.group.add(this._mainGroup);
    }, e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = r.layoutInfo, s = this._mainGroup, l = r.get("layout");
      l === "radial" ? (s.x = o.x + o.width / 2, s.y = o.y + o.height / 2) : (s.x = o.x, s.y = o.y), this._updateViewCoordSys(r, a), this._updateController(r, n, a);
      var u = this._data;
      i.diff(u).add(function(c) {
        Fx(i, c) && Gx(i, c, null, s, r);
      }).update(function(c, d) {
        var p = u.getItemGraphicEl(d);
        if (!Fx(i, c)) {
          p && zx(u, d, p, s, r);
          return;
        }
        Gx(i, c, p, s, r);
      }).remove(function(c) {
        var d = u.getItemGraphicEl(c);
        d && zx(u, c, d, s, r);
      }).execute(), this._nodeScaleRatio = r.get("nodeScaleRatio"), this._updateNodeAndLinkScale(r), r.get("expandAndCollapse") === !0 && i.eachItemGraphicEl(function(c, d) {
        c.off("click").on("click", function() {
          a.dispatchAction({
            type: "treeExpandAndCollapse",
            seriesId: r.id,
            dataIndex: d
          });
        });
      }), this._data = i;
    }, e.prototype._updateViewCoordSys = function(r, n) {
      var a = r.getData(), i = [];
      a.each(function(d) {
        var p = a.getItemLayout(d);
        p && !isNaN(p.x) && !isNaN(p.y) && i.push([+p.x, +p.y]);
      });
      var o = [], s = [];
      uf(i, o, s);
      var l = this._min, u = this._max;
      s[0] - o[0] === 0 && (o[0] = l ? l[0] : o[0] - 1, s[0] = u ? u[0] : s[0] + 1), s[1] - o[1] === 0 && (o[1] = l ? l[1] : o[1] - 1, s[1] = u ? u[1] : s[1] + 1);
      var c = r.coordinateSystem = new ic();
      c.zoomLimit = r.get("scaleLimit"), c.setBoundingRect(o[0], o[1], s[0] - o[0], s[1] - o[1]), c.setCenter(r.get("center"), n), c.setZoom(r.get("zoom")), this.group.attr({
        x: c.x,
        y: c.y,
        scaleX: c.scaleX,
        scaleY: c.scaleY
      }), this._min = o, this._max = s;
    }, e.prototype._updateController = function(r, n, a) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      o.setPointerChecker(function(u, c, d) {
        var p = l.getBoundingRect();
        return p.applyTransform(l.transform), p.contain(c, d) && !Of(u, a, r);
      }), o.enable(r.get("roam")), s.zoomLimit = r.get("scaleLimit"), s.zoom = r.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        Xy(s, u.dx, u.dy), a.dispatchAction({
          seriesId: r.id,
          type: "treeRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        Qy(s, u.scale, u.originX, u.originY), a.dispatchAction({
          seriesId: r.id,
          type: "treeRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(r), a.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function(r) {
      var n = r.getData(), a = this._getNodeGlobalScale(r);
      n.eachItemGraphicEl(function(i, o) {
        i.setSymbolScale(a);
      });
    }, e.prototype._getNodeGlobalScale = function(r) {
      var n = r.coordinateSystem;
      if (n.type !== "view")
        return 1;
      var a = this._nodeScaleRatio, i = n.scaleX || 1, o = n.getZoom(), s = (o - 1) * a + 1;
      return s / i;
    }, e.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype.remove = function() {
      this._mainGroup.removeAll(), this._data = null;
    }, e.type = "tree", e;
  }(Ke)
);
function Fx(t, e) {
  var r = t.getItemLayout(e);
  return r && !isNaN(r.x) && !isNaN(r.y);
}
function Gx(t, e, r, n, a) {
  var i = !r, o = t.tree.getNodeByDataIndex(e), s = o.getModel(), l = o.getVisual("style").fill, u = o.isExpand === !1 && o.children.length !== 0 ? l : "#fff", c = t.tree.root, d = o.parentNode === c ? o : o.parentNode || o, p = t.getItemGraphicEl(d.dataIndex), f = d.getLayout(), h = p ? {
    x: p.__oldX,
    y: p.__oldY,
    rawX: p.__radialOldRawX,
    rawY: p.__radialOldRawY
  } : f, g = o.getLayout();
  i ? (r = new ju(t, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), r.x = h.x, r.y = h.y) : r.updateData(t, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), r.__radialOldRawX = r.__radialRawX, r.__radialOldRawY = r.__radialRawY, r.__radialRawX = g.rawX, r.__radialRawY = g.rawY, n.add(r), t.setItemGraphicEl(e, r), r.__oldX = r.x, r.__oldY = r.y, Fe(r, {
    x: g.x,
    y: g.y
  }, a);
  var v = r.getSymbolPath();
  if (a.get("layout") === "radial") {
    var m = c.children[0], _ = m.getLayout(), y = m.children.length, b = void 0, S = void 0;
    if (g.x === _.x && o.isExpand === !0 && m.children.length) {
      var E = {
        x: (m.children[0].getLayout().x + m.children[y - 1].getLayout().x) / 2,
        y: (m.children[0].getLayout().y + m.children[y - 1].getLayout().y) / 2
      };
      b = Math.atan2(E.y - _.y, E.x - _.x), b < 0 && (b = Math.PI * 2 + b), S = E.x < _.x, S && (b = b - Math.PI);
    } else
      b = Math.atan2(g.y - _.y, g.x - _.x), b < 0 && (b = Math.PI * 2 + b), o.children.length === 0 || o.children.length !== 0 && o.isExpand === !1 ? (S = g.x < _.x, S && (b = b - Math.PI)) : (S = g.x > _.x, S || (b = b - Math.PI));
    var T = S ? "left" : "right", x = s.getModel("label"), C = x.get("rotate"), A = C * (Math.PI / 180), D = v.getTextContent();
    D && (v.setTextConfig({
      position: x.get("position") || T,
      rotation: C == null ? -b : A,
      origin: "center"
    }), D.setStyle("verticalAlign", "middle"));
  }
  var M = s.get(["emphasis", "focus"]), I = M === "relative" ? su(o.getAncestorsIndices(), o.getDescendantIndices()) : M === "ancestor" ? o.getAncestorsIndices() : M === "descendant" ? o.getDescendantIndices() : null;
  I && (pe(r).focus = I), UH(a, o, c, r, h, f, g, n), r.__edge && (r.onHoverStateChange = function(N) {
    if (N !== "blur") {
      var R = o.parentNode && t.getItemGraphicEl(o.parentNode.dataIndex);
      R && R.hoverState === Vu || sp(r.__edge, N);
    }
  });
}
function UH(t, e, r, n, a, i, o, s) {
  var l = e.getModel(), u = t.get("edgeShape"), c = t.get("layout"), d = t.getOrient(), p = t.get(["lineStyle", "curveness"]), f = t.get("edgeForkPosition"), h = l.getModel("lineStyle").getLineStyle(), g = n.__edge;
  if (u === "curve")
    e.parentNode && e.parentNode !== r && (g || (g = n.__edge = new Hu({
      shape: Ym(c, d, p, a, a)
    })), Fe(g, {
      shape: Ym(c, d, p, i, o)
    }, t));
  else if (u === "polyline" && c === "orthogonal" && e !== r && e.children && e.children.length !== 0 && e.isExpand === !0) {
    for (var v = e.children, m = [], _ = 0; _ < v.length; _++) {
      var y = v[_].getLayout();
      m.push([y.x, y.y]);
    }
    g || (g = n.__edge = new FH({
      shape: {
        parentPoint: [o.x, o.y],
        childPoints: [[o.x, o.y]],
        orient: d,
        forkPosition: f
      }
    })), Fe(g, {
      shape: {
        parentPoint: [o.x, o.y],
        childPoints: m
      }
    }, t);
  }
  g && !(u === "polyline" && !e.isExpand) && (g.useStyle(ie({
    strokeNoScale: !0,
    fill: null
  }, h)), zt(g, l, "lineStyle"), lo(g), s.add(g));
}
function Ux(t, e, r, n, a) {
  var i = e.tree.root, o = eR(i, t), s = o.source, l = o.sourceLayout, u = e.getItemGraphicEl(t.dataIndex);
  if (u) {
    var c = e.getItemGraphicEl(s.dataIndex), d = c.__edge, p = u.__edge || (s.isExpand === !1 || s.children.length === 1 ? d : void 0), f = n.get("edgeShape"), h = n.get("layout"), g = n.get("orient"), v = n.get(["lineStyle", "curveness"]);
    p && (f === "curve" ? Za(p, {
      shape: Ym(h, g, v, l, l),
      style: {
        opacity: 0
      }
    }, n, {
      cb: function() {
        r.remove(p);
      },
      removeOpt: a
    }) : f === "polyline" && n.get("layout") === "orthogonal" && Za(p, {
      shape: {
        parentPoint: [l.x, l.y],
        childPoints: [[l.x, l.y]]
      },
      style: {
        opacity: 0
      }
    }, n, {
      cb: function() {
        r.remove(p);
      },
      removeOpt: a
    }));
  }
}
function eR(t, e) {
  for (var r = e.parentNode === t ? e : e.parentNode || e, n; n = r.getLayout(), n == null; )
    r = r.parentNode === t ? r : r.parentNode || r;
  return {
    source: r,
    sourceLayout: n
  };
}
function zx(t, e, r, n, a) {
  var i = t.tree.getNodeByDataIndex(e), o = t.tree.root, s = eR(o, i).sourceLayout, l = {
    duration: a.get("animationDurationUpdate"),
    easing: a.get("animationEasingUpdate")
  };
  Za(r, {
    x: s.x + 1,
    y: s.y + 1
  }, a, {
    cb: function() {
      n.remove(r), t.setItemGraphicEl(e, null);
    },
    removeOpt: l
  }), r.fadeOut(null, t.hostModel, {
    fadeLabel: !0,
    animation: l
  }), i.children.forEach(function(u) {
    Ux(u, t, n, a, l);
  }), Ux(i, t, n, a, l);
}
function Ym(t, e, r, n, a) {
  var i, o, s, l, u, c, d, p;
  if (t === "radial") {
    u = n.rawX, d = n.rawY, c = a.rawX, p = a.rawY;
    var f = Il(u, d), h = Il(u, d + (p - d) * r), g = Il(c, p + (d - p) * r), v = Il(c, p);
    return {
      x1: f.x || 0,
      y1: f.y || 0,
      x2: v.x || 0,
      y2: v.y || 0,
      cpx1: h.x || 0,
      cpy1: h.y || 0,
      cpx2: g.x || 0,
      cpy2: g.y || 0
    };
  } else
    u = n.x, d = n.y, c = a.x, p = a.y, (e === "LR" || e === "RL") && (i = u + (c - u) * r, o = d, s = c + (u - c) * r, l = p), (e === "TB" || e === "BT") && (i = u, o = d + (p - d) * r, s = c, l = p + (d - p) * r);
  return {
    x1: u,
    y1: d,
    x2: c,
    y2: p,
    cpx1: i,
    cpy1: o,
    cpx2: s,
    cpy2: l
  };
}
var Br = Oe();
function tR(t) {
  var e = t.mainData, r = t.datas;
  r || (r = {
    main: e
  }, t.datasAttr = {
    main: "data"
  }), t.datas = t.mainData = null, rR(e, r, t), w(r, function(n) {
    w(e.TRANSFERABLE_METHODS, function(a) {
      n.wrapMethod(a, _e(zH, t));
    });
  }), e.wrapMethod("cloneShallow", _e($H, t)), w(e.CHANGABLE_METHODS, function(n) {
    e.wrapMethod(n, _e(VH, t));
  }), ar(r[e.dataType] === e);
}
function zH(t, e) {
  if (qH(this)) {
    var r = G({}, Br(this).datas);
    r[this.dataType] = e, rR(e, r, t);
  } else
    eb(e, this.dataType, Br(this).mainData, t);
  return e;
}
function VH(t, e) {
  return t.struct && t.struct.update(), e;
}
function $H(t, e) {
  return w(Br(e).datas, function(r, n) {
    r !== e && eb(r.cloneShallow(), n, e, t);
  }), e;
}
function HH(t) {
  var e = Br(this).mainData;
  return t == null || e == null ? e : Br(e).datas[t];
}
function WH() {
  var t = Br(this).mainData;
  return t == null ? [{
    data: t
  }] : $(Me(Br(t).datas), function(e) {
    return {
      type: e,
      data: Br(t).datas[e]
    };
  });
}
function qH(t) {
  return Br(t).mainData === t;
}
function rR(t, e, r) {
  Br(t).datas = {}, w(e, function(n, a) {
    eb(n, a, t, r);
  });
}
function eb(t, e, r, n) {
  Br(r).datas[e] = t, Br(t).mainData = r, t.dataType = e, n.struct && (t[n.structAttr] = n.struct, n.struct[n.datasAttr[e]] = t), t.getLinkedData = HH, t.getLinkedDataAll = WH;
}
var YH = (
  /** @class */
  function() {
    function t(e, r) {
      this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = !1, this.name = e || "", this.hostTree = r;
    }
    return t.prototype.isRemoved = function() {
      return this.dataIndex < 0;
    }, t.prototype.eachNode = function(e, r, n) {
      ae(e) && (n = r, r = e, e = null), e = e || {}, Y(e) && (e = {
        order: e
      });
      var a = e.order || "preorder", i = this[e.attr || "children"], o;
      a === "preorder" && (o = r.call(n, this));
      for (var s = 0; !o && s < i.length; s++)
        i[s].eachNode(e, r, n);
      a === "postorder" && r.call(n, this);
    }, t.prototype.updateDepthAndHeight = function(e) {
      var r = 0;
      this.depth = e;
      for (var n = 0; n < this.children.length; n++) {
        var a = this.children[n];
        a.updateDepthAndHeight(e + 1), a.height > r && (r = a.height);
      }
      this.height = r + 1;
    }, t.prototype.getNodeById = function(e) {
      if (this.getId() === e)
        return this;
      for (var r = 0, n = this.children, a = n.length; r < a; r++) {
        var i = n[r].getNodeById(e);
        if (i)
          return i;
      }
    }, t.prototype.contains = function(e) {
      if (e === this)
        return !0;
      for (var r = 0, n = this.children, a = n.length; r < a; r++) {
        var i = n[r].contains(e);
        if (i)
          return i;
      }
    }, t.prototype.getAncestors = function(e) {
      for (var r = [], n = e ? this : this.parentNode; n; )
        r.push(n), n = n.parentNode;
      return r.reverse(), r;
    }, t.prototype.getAncestorsIndices = function() {
      for (var e = [], r = this; r; )
        e.push(r.dataIndex), r = r.parentNode;
      return e.reverse(), e;
    }, t.prototype.getDescendantIndices = function() {
      var e = [];
      return this.eachNode(function(r) {
        e.push(r.dataIndex);
      }), e;
    }, t.prototype.getValue = function(e) {
      var r = this.hostTree.data;
      return r.getStore().get(r.getDimensionIndex(e || "value"), this.dataIndex);
    }, t.prototype.setLayout = function(e, r) {
      this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, e, r);
    }, t.prototype.getLayout = function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    }, t.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var r = this.hostTree, n = r.data.getItemModel(this.dataIndex);
        return n.getModel(e);
      }
    }, t.prototype.getLevelModel = function() {
      return (this.hostTree.levelModels || [])[this.depth];
    }, t.prototype.setVisual = function(e, r) {
      this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, e, r);
    }, t.prototype.getVisual = function(e) {
      return this.hostTree.data.getItemVisual(this.dataIndex, e);
    }, t.prototype.getRawIndex = function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    }, t.prototype.getId = function() {
      return this.hostTree.data.getId(this.dataIndex);
    }, t.prototype.getChildIndex = function() {
      if (this.parentNode) {
        for (var e = this.parentNode.children, r = 0; r < e.length; ++r)
          if (e[r] === this)
            return r;
        return -1;
      }
      return -1;
    }, t.prototype.isAncestorOf = function(e) {
      for (var r = e.parentNode; r; ) {
        if (r === this)
          return !0;
        r = r.parentNode;
      }
      return !1;
    }, t.prototype.isDescendantOf = function(e) {
      return e !== this && e.isAncestorOf(this);
    }, t;
  }()
), tb = (
  /** @class */
  function() {
    function t(e) {
      this.type = "tree", this._nodes = [], this.hostModel = e;
    }
    return t.prototype.eachNode = function(e, r, n) {
      this.root.eachNode(e, r, n);
    }, t.prototype.getNodeByDataIndex = function(e) {
      var r = this.data.getRawIndex(e);
      return this._nodes[r];
    }, t.prototype.getNodeById = function(e) {
      return this.root.getNodeById(e);
    }, t.prototype.update = function() {
      for (var e = this.data, r = this._nodes, n = 0, a = r.length; n < a; n++)
        r[n].dataIndex = -1;
      for (var n = 0, a = e.count(); n < a; n++)
        r[e.getRawIndex(n)].dataIndex = n;
    }, t.prototype.clearLayouts = function() {
      this.data.clearItemLayouts();
    }, t.createTree = function(e, r, n) {
      var a = new t(r), i = [], o = 1;
      s(e);
      function s(c, d) {
        var p = c.value;
        o = Math.max(o, V(p) ? p.length : 1), i.push(c);
        var f = new YH(St(c.name, ""), a);
        d ? KH(f, d) : a.root = f, a._nodes.push(f);
        var h = c.children;
        if (h)
          for (var g = 0; g < h.length; g++)
            s(h[g], f);
      }
      a.root.updateDepthAndHeight(0);
      var l = Xu(i, {
        coordDimensions: ["value"],
        dimensionsCount: o
      }).dimensions, u = new rr(l, r);
      return u.initData(i), n && n(u), tR({
        mainData: u,
        struct: a,
        structAttr: "tree"
      }), a.update(), a;
    }, t;
  }()
);
function KH(t, e) {
  var r = e.children;
  t.parentNode !== e && (r.push(t), t.parentNode = e);
}
function wu(t, e, r) {
  if (t && xe(e, t.type) >= 0) {
    var n = r.getData().tree.root, a = t.targetNode;
    if (Y(a) && (a = n.getNodeById(a)), a && n.contains(a))
      return {
        node: a
      };
    var i = t.targetNodeId;
    if (i != null && (a = n.getNodeById(i)))
      return {
        node: a
      };
  }
}
function nR(t) {
  for (var e = []; t; )
    t = t.parentNode, t && e.push(t);
  return e.reverse();
}
function rb(t, e) {
  var r = nR(t);
  return xe(r, e) >= 0;
}
function Pf(t, e) {
  for (var r = []; t; ) {
    var n = t.dataIndex;
    r.push({
      name: t.name,
      dataIndex: n,
      value: e.getRawValue(n)
    }), t = t.parentNode;
  }
  return r.reverse(), r;
}
var ZH = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.hasSymbolVisual = !0, r.ignoreStyleOnData = !0, r;
    }
    return e.prototype.getInitialData = function(r) {
      var n = {
        name: r.name,
        children: r.data
      }, a = r.leaves || {}, i = new He(a, this, this.ecModel), o = tb.createTree(n, this, s);
      function s(d) {
        d.wrapMethod("getItemModel", function(p, f) {
          var h = o.getNodeByDataIndex(f);
          return h && h.children.length && h.isExpand || (p.parentModel = i), p;
        });
      }
      var l = 0;
      o.eachNode("preorder", function(d) {
        d.depth > l && (l = d.depth);
      });
      var u = r.expandAndCollapse, c = u && r.initialTreeDepth >= 0 ? r.initialTreeDepth : l;
      return o.root.eachNode("preorder", function(d) {
        var p = d.hostTree.data.getRawDataItem(d.dataIndex);
        d.isExpand = p && p.collapsed != null ? !p.collapsed : d.depth <= c;
      }), o.data;
    }, e.prototype.getOrient = function() {
      var r = this.get("orient");
      return r === "horizontal" ? r = "LR" : r === "vertical" && (r = "TB"), r;
    }, e.prototype.setZoom = function(r) {
      this.option.zoom = r;
    }, e.prototype.setCenter = function(r) {
      this.option.center = r;
    }, e.prototype.formatTooltip = function(r, n, a) {
      for (var i = this.getData().tree, o = i.root.children[0], s = i.getNodeByDataIndex(r), l = s.getValue(), u = s.name; s && s !== o; )
        u = s.parentNode.name + "." + u, s = s.parentNode;
      return Mt("nameValue", {
        name: u,
        value: l,
        noValue: isNaN(l) || l == null
      });
    }, e.prototype.getDataParams = function(r) {
      var n = t.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(r);
      return n.treeAncestors = Pf(a, this), n.collapsed = !a.isExpand, n;
    }, e.type = "series.tree", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // the position of the whole view
      left: "12%",
      top: "12%",
      right: "12%",
      bottom: "12%",
      // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'
      layout: "orthogonal",
      // value can be 'polyline'
      edgeShape: "curve",
      edgeForkPosition: "50%",
      // true | false | 'move' | 'scale', see module:component/helper/RoamController.
      roam: !1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.4,
      // Default on center of graph
      center: null,
      zoom: 1,
      orient: "LR",
      symbol: "emptyCircle",
      symbolSize: 7,
      expandAndCollapse: !0,
      initialTreeDepth: 2,
      lineStyle: {
        color: "#ccc",
        width: 1.5,
        curveness: 0.5
      },
      itemStyle: {
        color: "lightsteelblue",
        // borderColor: '#c23531',
        borderWidth: 1.5
      },
      label: {
        show: !0
      },
      animationEasing: "linear",
      animationDuration: 700,
      animationDurationUpdate: 500
    }, e;
  }(et)
);
function XH(t, e, r) {
  for (var n = [t], a = [], i; i = n.pop(); )
    if (a.push(i), i.isExpand) {
      var o = i.children;
      if (o.length)
        for (var s = 0; s < o.length; s++)
          n.push(o[s]);
    }
  for (; i = a.pop(); )
    e(i, r);
}
function pl(t, e) {
  for (var r = [t], n; n = r.pop(); )
    if (e(n), n.isExpand) {
      var a = n.children;
      if (a.length)
        for (var i = a.length - 1; i >= 0; i--)
          r.push(a[i]);
    }
}
function QH(t, e) {
  t.eachSeriesByType("tree", function(r) {
    jH(r, e);
  });
}
function jH(t, e) {
  var r = NH(t, e);
  t.layoutInfo = r;
  var n = t.get("layout"), a = 0, i = 0, o = null;
  n === "radial" ? (a = 2 * Math.PI, i = Math.min(r.height, r.width) / 2, o = Bx(function(y, b) {
    return (y.parentNode === b.parentNode ? 1 : 2) / y.depth;
  })) : (a = r.width, i = r.height, o = Bx());
  var s = t.getData().tree.root, l = s.children[0];
  if (l) {
    DH(s), XH(l, MH, o), s.hierNode.modifier = -l.hierNode.prelim, pl(l, IH);
    var u = l, c = l, d = l;
    pl(l, function(y) {
      var b = y.getLayout().x;
      b < u.getLayout().x && (u = y), b > c.getLayout().x && (c = y), y.depth > d.depth && (d = y);
    });
    var p = u === c ? 1 : o(u, c) / 2, f = p - u.getLayout().x, h = 0, g = 0, v = 0, m = 0;
    if (n === "radial")
      h = a / (c.getLayout().x + p + f), g = i / (d.depth - 1 || 1), pl(l, function(y) {
        v = (y.getLayout().x + f) * h, m = (y.depth - 1) * g;
        var b = Il(v, m);
        y.setLayout({
          x: b.x,
          y: b.y,
          rawX: v,
          rawY: m
        }, !0);
      });
    else {
      var _ = t.getOrient();
      _ === "RL" || _ === "LR" ? (g = i / (c.getLayout().x + p + f), h = a / (d.depth - 1 || 1), pl(l, function(y) {
        m = (y.getLayout().x + f) * g, v = _ === "LR" ? (y.depth - 1) * h : a - (y.depth - 1) * h, y.setLayout({
          x: v,
          y: m
        }, !0);
      })) : (_ === "TB" || _ === "BT") && (h = a / (c.getLayout().x + p + f), g = i / (d.depth - 1 || 1), pl(l, function(y) {
        v = (y.getLayout().x + f) * h, m = _ === "TB" ? (y.depth - 1) * g : i - (y.depth - 1) * g, y.setLayout({
          x: v,
          y: m
        }, !0);
      }));
    }
  }
}
function JH(t) {
  t.eachSeriesByType("tree", function(e) {
    var r = e.getData(), n = r.tree;
    n.eachNode(function(a) {
      var i = a.getModel(), o = i.getModel("itemStyle").getItemStyle(), s = r.ensureUniqueItemVisual(a.dataIndex, "style");
      G(s, o);
    });
  });
}
function e8(t) {
  t.registerAction({
    type: "treeExpandAndCollapse",
    event: "treeExpandAndCollapse",
    update: "update"
  }, function(e, r) {
    r.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(n) {
      var a = e.dataIndex, i = n.getData().tree, o = i.getNodeByDataIndex(a);
      o.isExpand = !o.isExpand;
    });
  }), t.registerAction({
    type: "treeRoam",
    event: "treeRoam",
    // Here we set 'none' instead of 'update', because roam action
    // just need to update the transform matrix without having to recalculate
    // the layout. So don't need to go through the whole update process, such
    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.
    update: "none"
  }, function(e, r, n) {
    r.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(a) {
      var i = a.coordinateSystem, o = Jy(i, e, void 0, n);
      a.setCenter && a.setCenter(o.center), a.setZoom && a.setZoom(o.zoom);
    });
  });
}
function Sre(t) {
  t.registerChartView(GH), t.registerSeriesModel(ZH), t.registerLayout(QH), t.registerVisual(JH), e8(t);
}
var Vx = ["treemapZoomToNode", "treemapRender", "treemapMove"];
function t8(t) {
  for (var e = 0; e < Vx.length; e++)
    t.registerAction({
      type: Vx[e],
      update: "updateView"
    }, dt);
  t.registerAction({
    type: "treemapRootToNode",
    update: "updateView"
  }, function(r, n) {
    n.eachComponent({
      mainType: "series",
      subType: "treemap",
      query: r
    }, a);
    function a(i, o) {
      var s = ["treemapZoomToNode", "treemapRootToNode"], l = wu(r, s, i);
      if (l) {
        var u = i.getViewRoot();
        u && (r.direction = rb(u, l.node) ? "rollUp" : "drillDown"), i.resetViewRoot(l.node);
      }
    }
  });
}
function aR(t) {
  var e = t.getData(), r = e.tree, n = {};
  r.eachNode(function(a) {
    for (var i = a; i && i.depth > 1; )
      i = i.parentNode;
    var o = Sm(t.ecModel, i.name || i.dataIndex + "", n);
    a.setVisual("decal", o);
  });
}
var r8 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.preventUsingHoverLayer = !0, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      var a = {
        name: r.name,
        children: r.data
      };
      iR(a);
      var i = r.levels || [], o = this.designatedVisualItemStyle = {}, s = new He({
        itemStyle: o
      }, this, n);
      i = r.levels = n8(i, n);
      var l = $(i || [], function(d) {
        return new He(d, s, n);
      }, this), u = tb.createTree(a, this, c);
      function c(d) {
        d.wrapMethod("getItemModel", function(p, f) {
          var h = u.getNodeByDataIndex(f), g = h ? l[h.depth] : null;
          return p.parentModel = g || s, p;
        });
      }
      return u.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.formatTooltip = function(r, n, a) {
      var i = this.getData(), o = this.getRawValue(r), s = i.getName(r);
      return Mt("nameValue", {
        name: s,
        value: o
      });
    }, e.prototype.getDataParams = function(r) {
      var n = t.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(r);
      return n.treeAncestors = Pf(a, this), n.treePathInfo = n.treeAncestors, n;
    }, e.prototype.setLayoutInfo = function(r) {
      this.layoutInfo = this.layoutInfo || {}, G(this.layoutInfo, r);
    }, e.prototype.mapIdToIndex = function(r) {
      var n = this._idIndexMap;
      n || (n = this._idIndexMap = J(), this._idIndexMapCount = 0);
      var a = n.get(r);
      return a == null && n.set(r, a = this._idIndexMapCount++), a;
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(r) {
      r ? this._viewRoot = r : r = this._viewRoot;
      var n = this.getRawData().tree.root;
      (!r || r !== n && !n.contains(r)) && (this._viewRoot = n);
    }, e.prototype.enableAriaDecal = function() {
      aR(this);
    }, e.type = "series.treemap", e.layoutMode = "box", e.defaultOption = {
      // Disable progressive rendering
      progressive: 0,
      // size: ['80%', '80%'],            // deprecated, compatible with ec2.
      left: "center",
      top: "middle",
      width: "80%",
      height: "80%",
      sort: !0,
      clipWindow: "origin",
      squareRatio: 0.5 * (1 + Math.sqrt(5)),
      leafDepth: null,
      drillDownIcon: "▶",
      // to align specialized icon. ▷▶❒❐▼✚
      zoomToNodeRatio: 0.32 * 0.32,
      scaleLimit: null,
      roam: !0,
      nodeClick: "zoomToNode",
      animation: !0,
      animationDurationUpdate: 900,
      animationEasing: "quinticInOut",
      breadcrumb: {
        show: !0,
        height: 22,
        left: "center",
        top: "bottom",
        // right
        // bottom
        emptyItemWidth: 25,
        itemStyle: {
          color: "rgba(0,0,0,0.7)",
          textStyle: {
            color: "#fff"
          }
        },
        emphasis: {
          itemStyle: {
            color: "rgba(0,0,0,0.9)"
            // '#5793f3',
          }
        }
      },
      label: {
        show: !0,
        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.
        distance: 0,
        padding: 5,
        position: "inside",
        // formatter: null,
        color: "#fff",
        overflow: "truncate"
        // align
        // verticalAlign
      },
      upperLabel: {
        show: !1,
        position: [0, "50%"],
        height: 20,
        // formatter: null,
        // color: '#fff',
        overflow: "truncate",
        // align: null,
        verticalAlign: "middle"
      },
      itemStyle: {
        color: null,
        colorAlpha: null,
        colorSaturation: null,
        borderWidth: 0,
        gapWidth: 0,
        borderColor: "#fff",
        borderColorSaturation: null
        // If specified, borderColor will be ineffective, and the
        // border color is evaluated by color of current node and
        // borderColorSaturation.
      },
      emphasis: {
        upperLabel: {
          show: !0,
          position: [0, "50%"],
          overflow: "truncate",
          verticalAlign: "middle"
        }
      },
      visualDimension: 0,
      visualMin: null,
      visualMax: null,
      color: [],
      // level[n].color (if necessary).
      // + Specify color list of each level. level[0].color would be global
      // color list if not specified. (see method `setDefault`).
      // + But set as a empty array to forbid fetch color from global palette
      // when using nodeModel.get('color'), otherwise nodes on deep level
      // will always has color palette set and are not able to inherit color
      // from parent node.
      // + TreemapSeries.color can not be set as 'none', otherwise effect
      // legend color fetching (see seriesColor.js).
      colorAlpha: null,
      colorSaturation: null,
      colorMappingBy: "index",
      visibleMin: 10,
      // be rendered. Only works when sort is 'asc' or 'desc'.
      childrenVisibleMin: null,
      // grandchildren will not show.
      // Why grandchildren? If not grandchildren but children,
      // some siblings show children and some not,
      // the appearance may be mess and not consistent,
      levels: []
      // Each item: {
      //     visibleMin, itemStyle, visualDimension, label
      // }
    }, e;
  }(et)
);
function iR(t) {
  var e = 0;
  w(t.children, function(n) {
    iR(n);
    var a = n.value;
    V(a) && (a = a[0]), e += a;
  });
  var r = t.value;
  V(r) && (r = r[0]), (r == null || isNaN(r)) && (r = e), r < 0 && (r = 0), V(t.value) ? t.value[0] = r : t.value = r;
}
function n8(t, e) {
  var r = Ye(e.get("color")), n = Ye(e.get(["aria", "decal", "decals"]));
  if (r) {
    t = t || [];
    var a, i;
    w(t, function(s) {
      var l = new He(s), u = l.get("color"), c = l.get("decal");
      (l.get(["itemStyle", "color"]) || u && u !== "none") && (a = !0), (l.get(["itemStyle", "decal"]) || c && c !== "none") && (i = !0);
    });
    var o = t[0] || (t[0] = {});
    return a || (o.color = r.slice()), !i && n && (o.decal = n.slice()), t;
  }
}
var a8 = 8, $x = 8, Lg = 5, i8 = (
  /** @class */
  function() {
    function t(e) {
      this.group = new de(), e.add(this.group);
    }
    return t.prototype.render = function(e, r, n, a) {
      var i = e.getModel("breadcrumb"), o = this.group;
      if (o.removeAll(), !(!i.get("show") || !n)) {
        var s = i.getModel("itemStyle"), l = i.getModel("emphasis"), u = s.getModel("textStyle"), c = l.getModel(["itemStyle", "textStyle"]), d = {
          pos: {
            left: i.get("left"),
            right: i.get("right"),
            top: i.get("top"),
            bottom: i.get("bottom")
          },
          box: {
            width: r.getWidth(),
            height: r.getHeight()
          },
          emptyItemWidth: i.get("emptyItemWidth"),
          totalWidth: 0,
          renderList: []
        };
        this._prepare(n, d, u), this._renderContent(e, d, s, l, u, c, a), Ef(o, d.pos, d.box);
      }
    }, t.prototype._prepare = function(e, r, n) {
      for (var a = e; a; a = a.parentNode) {
        var i = St(a.getModel().get("name"), ""), o = n.getTextRect(i), s = Math.max(o.width + a8 * 2, r.emptyItemWidth);
        r.totalWidth += s + $x, r.renderList.push({
          node: a,
          text: i,
          width: s
        });
      }
    }, t.prototype._renderContent = function(e, r, n, a, i, o, s) {
      for (var l = 0, u = r.emptyItemWidth, c = e.get(["breadcrumb", "height"]), d = TU(r.pos, r.box), p = r.totalWidth, f = r.renderList, h = a.getModel("itemStyle").getItemStyle(), g = f.length - 1; g >= 0; g--) {
        var v = f[g], m = v.node, _ = v.width, y = v.text;
        p > d.width && (p -= _ - u, _ = u, y = null);
        var b = new sr({
          shape: {
            points: o8(l, 0, _, c, g === f.length - 1, g === 0)
          },
          style: ie(n.getItemStyle(), {
            lineJoin: "bevel"
          }),
          textContent: new Pe({
            style: Je(i, {
              text: y
            })
          }),
          textConfig: {
            position: "inside"
          },
          z2: Ns * 1e4,
          onclick: _e(s, m)
        });
        b.disableLabelAnimation = !0, b.getTextContent().ensureState("emphasis").style = Je(o, {
          text: y
        }), b.ensureState("emphasis").style = h, lt(b, a.get("focus"), a.get("blurScope"), a.get("disabled")), this.group.add(b), s8(b, e, m), l += _ + $x;
      }
    }, t.prototype.remove = function() {
      this.group.removeAll();
    }, t;
  }()
);
function o8(t, e, r, n, a, i) {
  var o = [[a ? t : t - Lg, e], [t + r, e], [t + r, e + n], [a ? t : t - Lg, e + n]];
  return !i && o.splice(2, 0, [t + r + Lg, e + n / 2]), !a && o.push([t, e + n / 2]), o;
}
function s8(t, e, r) {
  pe(t).eventData = {
    componentType: "series",
    componentSubType: "treemap",
    componentIndex: e.componentIndex,
    seriesIndex: e.seriesIndex,
    seriesName: e.name,
    seriesType: "treemap",
    selfType: "breadcrumb",
    nodeData: {
      dataIndex: r && r.dataIndex,
      name: r && r.name
    },
    treePathInfo: r && Pf(r, e)
  };
}
var l8 = (
  /** @class */
  function() {
    function t() {
      this._storage = [], this._elExistsMap = {};
    }
    return t.prototype.add = function(e, r, n, a, i) {
      return this._elExistsMap[e.id] ? !1 : (this._elExistsMap[e.id] = !0, this._storage.push({
        el: e,
        target: r,
        duration: n,
        delay: a,
        easing: i
      }), !0);
    }, t.prototype.finished = function(e) {
      return this._finishedCallback = e, this;
    }, t.prototype.start = function() {
      for (var e = this, r = this._storage.length, n = function() {
        r--, r <= 0 && (e._storage.length = 0, e._elExistsMap = {}, e._finishedCallback && e._finishedCallback());
      }, a = 0, i = this._storage.length; a < i; a++) {
        var o = this._storage[a];
        o.el.animateTo(o.target, {
          duration: o.duration,
          delay: o.delay,
          easing: o.easing,
          setToFinal: !0,
          done: n,
          aborted: n
        });
      }
      return this;
    }, t;
  }()
);
function u8() {
  return new l8();
}
var Km = de, Hx = Re, Wx = 3, qx = "label", Yx = "upperLabel", c8 = Ns * 10, d8 = Ns * 2, p8 = Ns * 3, Ri = so([
  ["fill", "color"],
  // `borderColor` and `borderWidth` has been occupied,
  // so use `stroke` to indicate the stroke of the rect.
  ["stroke", "strokeColor"],
  ["lineWidth", "strokeWidth"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
]), Kx = function(t) {
  var e = Ri(t);
  return e.stroke = e.fill = e.lineWidth = null, e;
}, Mp = Oe(), f8 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._state = "ready", r._storage = fl(), r;
    }
    return e.prototype.render = function(r, n, a, i) {
      var o = n.findComponents({
        mainType: "series",
        subType: "treemap",
        query: i
      });
      if (!(xe(o, r) < 0)) {
        this.seriesModel = r, this.api = a, this.ecModel = n;
        var s = ["treemapZoomToNode", "treemapRootToNode"], l = wu(i, s, r), u = i && i.type, c = r.layoutInfo, d = !this._oldTree, p = this._storage, f = u === "treemapRootToNode" && l && p ? {
          rootNodeGroup: p.nodeGroup[l.node.getRawIndex()],
          direction: i.direction
        } : null, h = this._giveContainerGroup(c), g = r.get("animation"), v = this._doRender(h, r, f);
        g && !d && (!u || u === "treemapZoomToNode" || u === "treemapRootToNode") ? this._doAnimation(h, v, r, f) : v.renderFinally(), this._resetController(a), this._renderBreadcrumb(r, a, l);
      }
    }, e.prototype._giveContainerGroup = function(r) {
      var n = this._containerGroup;
      return n || (n = this._containerGroup = new Km(), this._initEvents(n), this.group.add(n)), n.x = r.x, n.y = r.y, n;
    }, e.prototype._doRender = function(r, n, a) {
      var i = n.getData().tree, o = this._oldTree, s = fl(), l = fl(), u = this._storage, c = [];
      function d(_, y, b, S) {
        return h8(n, l, u, a, s, c, _, y, b, S);
      }
      g(i.root ? [i.root] : [], o && o.root ? [o.root] : [], r, i === o || !o, 0);
      var p = v(u);
      if (this._oldTree = i, this._storage = l, this._controllerHost) {
        var f = this.seriesModel.layoutInfo, h = i.root.getLayout();
        h.width === f.width && h.height === f.height && (this._controllerHost.zoom = 1);
      }
      return {
        lastsForAnimation: s,
        willDeleteEls: p,
        renderFinally: m
      };
      function g(_, y, b, S, E) {
        S ? (y = _, w(_, function(C, A) {
          !C.isRemoved() && x(A, A);
        })) : new ia(y, _, T, T).add(x).update(x).remove(_e(x, null)).execute();
        function T(C) {
          return C.getId();
        }
        function x(C, A) {
          var D = C != null ? _[C] : null, M = A != null ? y[A] : null, I = d(D, M, b, E);
          I && g(D && D.viewChildren || [], M && M.viewChildren || [], I, S, E + 1);
        }
      }
      function v(_) {
        var y = fl();
        return _ && w(_, function(b, S) {
          var E = y[S];
          w(b, function(T) {
            T && (E.push(T), Mp(T).willDelete = !0);
          });
        }), y;
      }
      function m() {
        w(p, function(_) {
          w(_, function(y) {
            y.parent && y.parent.remove(y);
          });
        }), w(c, function(_) {
          _.invisible = !0, _.dirty();
        });
      }
    }, e.prototype._doAnimation = function(r, n, a, i) {
      var o = a.get("animationDurationUpdate"), s = a.get("animationEasing"), l = (ae(o) ? 0 : o) || 0, u = (ae(s) ? null : s) || "cubicOut", c = u8();
      w(n.willDeleteEls, function(d, p) {
        w(d, function(f, h) {
          if (!f.invisible) {
            var g = f.parent, v, m = Mp(g);
            if (i && i.direction === "drillDown")
              v = g === i.rootNodeGroup ? {
                shape: {
                  x: 0,
                  y: 0,
                  width: m.nodeWidth,
                  height: m.nodeHeight
                },
                style: {
                  opacity: 0
                }
              } : {
                style: {
                  opacity: 0
                }
              };
            else {
              var _ = 0, y = 0;
              m.willDelete || (_ = m.nodeWidth / 2, y = m.nodeHeight / 2), v = p === "nodeGroup" ? {
                x: _,
                y,
                style: {
                  opacity: 0
                }
              } : {
                shape: {
                  x: _,
                  y,
                  width: 0,
                  height: 0
                },
                style: {
                  opacity: 0
                }
              };
            }
            v && c.add(f, v, l, 0, u);
          }
        });
      }), w(this._storage, function(d, p) {
        w(d, function(f, h) {
          var g = n.lastsForAnimation[p][h], v = {};
          g && (f instanceof de ? g.oldX != null && (v.x = f.x, v.y = f.y, f.x = g.oldX, f.y = g.oldY) : (g.oldShape && (v.shape = G({}, f.shape), f.setShape(g.oldShape)), g.fadein ? (f.setStyle("opacity", 0), v.style = {
            opacity: 1
          }) : f.style.opacity !== 1 && (v.style = {
            opacity: 1
          })), c.add(f, v, l, 0, u));
        });
      }, this), this._state = "animating", c.finished(K(function() {
        this._state = "ready", n.renderFinally();
      }, this)).start();
    }, e.prototype._resetController = function(r) {
      var n = this._controller, a = this._controllerHost;
      a || (this._controllerHost = {
        target: this.group
      }, a = this._controllerHost), n || (n = this._controller = new ac(r.getZr()), n.enable(this.seriesModel.get("roam")), a.zoomLimit = this.seriesModel.get("scaleLimit"), a.zoom = this.seriesModel.get("zoom"), n.on("pan", K(this._onPan, this)), n.on("zoom", K(this._onZoom, this)));
      var i = new Te(0, 0, r.getWidth(), r.getHeight());
      n.setPointerChecker(function(o, s, l) {
        return i.contain(s, l);
      });
    }, e.prototype._clearController = function() {
      var r = this._controller;
      this._controllerHost = null, r && (r.dispose(), r = null);
    }, e.prototype._onPan = function(r) {
      if (this._state !== "animating" && (Math.abs(r.dx) > Wx || Math.abs(r.dy) > Wx)) {
        var n = this.seriesModel.getData().tree.root;
        if (!n)
          return;
        var a = n.getLayout();
        if (!a)
          return;
        this.api.dispatchAction({
          type: "treemapMove",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: a.x + r.dx,
            y: a.y + r.dy,
            width: a.width,
            height: a.height
          }
        });
      }
    }, e.prototype._onZoom = function(r) {
      var n = r.originX, a = r.originY, i = r.scale;
      if (this._state !== "animating") {
        var o = this.seriesModel.getData().tree.root;
        if (!o)
          return;
        var s = o.getLayout();
        if (!s)
          return;
        var l = new Te(s.x, s.y, s.width, s.height), u = null, c = this._controllerHost;
        u = c.zoomLimit;
        var d = c.zoom = c.zoom || 1;
        if (d *= i, u) {
          var p = u.min || 0, f = u.max || 1 / 0;
          d = Math.max(Math.min(f, d), p);
        }
        var h = d / c.zoom;
        c.zoom = d;
        var g = this.seriesModel.layoutInfo;
        n -= g.x, a -= g.y;
        var v = yr();
        Rn(v, v, [-n, -a]), q_(v, v, [h, h]), Rn(v, v, [n, a]), l.applyTransform(v), this.api.dispatchAction({
          type: "treemapRender",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: l.x,
            y: l.y,
            width: l.width,
            height: l.height
          }
        });
      }
    }, e.prototype._initEvents = function(r) {
      var n = this;
      r.on("click", function(a) {
        if (n._state === "ready") {
          var i = n.seriesModel.get("nodeClick", !0);
          if (i) {
            var o = n.findTarget(a.offsetX, a.offsetY);
            if (o) {
              var s = o.node;
              if (s.getLayout().isLeafRoot)
                n._rootToNode(o);
              else if (i === "zoomToNode")
                n._zoomToNode(o);
              else if (i === "link") {
                var l = s.hostTree.data.getItemModel(s.dataIndex), u = l.get("link", !0), c = l.get("target", !0) || "blank";
                u && fp(u, c);
              }
            }
          }
        }
      }, this);
    }, e.prototype._renderBreadcrumb = function(r, n, a) {
      var i = this;
      a || (a = r.get("leafDepth", !0) != null ? {
        node: r.getViewRoot()
      } : this.findTarget(n.getWidth() / 2, n.getHeight() / 2), a || (a = {
        node: r.getData().tree.root
      })), (this._breadcrumb || (this._breadcrumb = new i8(this.group))).render(r, n, a.node, function(o) {
        i._state !== "animating" && (rb(r.getViewRoot(), o) ? i._rootToNode({
          node: o
        }) : i._zoomToNode({
          node: o
        }));
      });
    }, e.prototype.remove = function() {
      this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = fl(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
    }, e.prototype.dispose = function() {
      this._clearController();
    }, e.prototype._zoomToNode = function(r) {
      this.api.dispatchAction({
        type: "treemapZoomToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: r.node
      });
    }, e.prototype._rootToNode = function(r) {
      this.api.dispatchAction({
        type: "treemapRootToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: r.node
      });
    }, e.prototype.findTarget = function(r, n) {
      var a, i = this.seriesModel.getViewRoot();
      return i.eachNode({
        attr: "viewChildren",
        order: "preorder"
      }, function(o) {
        var s = this._storage.background[o.getRawIndex()];
        if (s) {
          var l = s.transformCoordToLocal(r, n), u = s.shape;
          if (u.x <= l[0] && l[0] <= u.x + u.width && u.y <= l[1] && l[1] <= u.y + u.height)
            a = {
              node: o,
              offsetX: l[0],
              offsetY: l[1]
            };
          else
            return !1;
        }
      }, this), a;
    }, e.type = "treemap", e;
  }(Ke)
);
function fl() {
  return {
    nodeGroup: [],
    background: [],
    content: []
  };
}
function h8(t, e, r, n, a, i, o, s, l, u) {
  if (!o)
    return;
  var c = o.getLayout(), d = t.getData(), p = o.getModel();
  if (d.setItemGraphicEl(o.dataIndex, null), !c || !c.isInView)
    return;
  var f = c.width, h = c.height, g = c.borderWidth, v = c.invisible, m = o.getRawIndex(), _ = s && s.getRawIndex(), y = o.viewChildren, b = c.upperHeight, S = y && y.length, E = p.getModel("itemStyle"), T = p.getModel(["emphasis", "itemStyle"]), x = p.getModel(["blur", "itemStyle"]), C = p.getModel(["select", "itemStyle"]), A = E.get("borderRadius") || 0, D = oe("nodeGroup", Km);
  if (!D)
    return;
  if (l.add(D), D.x = c.x || 0, D.y = c.y || 0, D.markRedraw(), Mp(D).nodeWidth = f, Mp(D).nodeHeight = h, c.isAboveViewRoot)
    return D;
  var M = oe("background", Hx, u, d8);
  M && U(D, M, S && c.upperLabelHeight);
  var I = p.getModel("emphasis"), N = I.get("focus"), R = I.get("blurScope"), O = I.get("disabled"), B = N === "ancestor" ? o.getAncestorsIndices() : N === "descendant" ? o.getDescendantIndices() : N;
  if (S)
    hu(D) && $i(D, !1), M && ($i(M, !O), d.setItemGraphicEl(o.dataIndex, M), fm(M, B, R));
  else {
    var L = oe("content", Hx, u, p8);
    L && z(D, L), M.disableMorphing = !0, M && hu(M) && $i(M, !1), $i(D, !O), d.setItemGraphicEl(o.dataIndex, D);
    var F = p.getShallow("cursor");
    F && L.attr("cursor", F), fm(D, B, R);
  }
  return D;
  function U(fe, re, ve) {
    var j = pe(re);
    if (j.dataIndex = o.dataIndex, j.seriesIndex = t.seriesIndex, re.setShape({
      x: 0,
      y: 0,
      width: f,
      height: h,
      r: A
    }), v)
      H(re);
    else {
      re.invisible = !1;
      var ce = o.getVisual("style"), qe = ce.stroke, Ge = Kx(E);
      Ge.fill = qe;
      var We = Ri(T);
      We.fill = T.get("borderColor");
      var ye = Ri(x);
      ye.fill = x.get("borderColor");
      var nt = Ri(C);
      if (nt.fill = C.get("borderColor"), ve) {
        var pt = f - 2 * g;
        Z(
          // PENDING: convert ZRColor to ColorString for text.
          re,
          qe,
          ce.opacity,
          {
            x: g,
            y: 0,
            width: pt,
            height: b
          }
        );
      } else
        re.removeTextContent();
      re.setStyle(Ge), re.ensureState("emphasis").style = We, re.ensureState("blur").style = ye, re.ensureState("select").style = nt, lo(re);
    }
    fe.add(re);
  }
  function z(fe, re) {
    var ve = pe(re);
    ve.dataIndex = o.dataIndex, ve.seriesIndex = t.seriesIndex;
    var j = Math.max(f - 2 * g, 0), ce = Math.max(h - 2 * g, 0);
    if (re.culling = !0, re.setShape({
      x: g,
      y: g,
      width: j,
      height: ce,
      r: A
    }), v)
      H(re);
    else {
      re.invisible = !1;
      var qe = o.getVisual("style"), Ge = qe.fill, We = Kx(E);
      We.fill = Ge, We.decal = qe.decal;
      var ye = Ri(T), nt = Ri(x), pt = Ri(C);
      Z(re, Ge, qe.opacity, null), re.setStyle(We), re.ensureState("emphasis").style = ye, re.ensureState("blur").style = nt, re.ensureState("select").style = pt, lo(re);
    }
    fe.add(re);
  }
  function H(fe) {
    !fe.invisible && i.push(fe);
  }
  function Z(fe, re, ve, j) {
    var ce = p.getModel(j ? Yx : qx), qe = St(p.get("name"), null), Ge = ce.getShallow("show");
    Vt(fe, Dt(p, j ? Yx : qx), {
      defaultText: Ge ? qe : null,
      inheritColor: re,
      defaultOpacity: ve,
      labelFetcher: t,
      labelDataIndex: o.dataIndex
    });
    var We = fe.getTextContent();
    if (We) {
      var ye = We.style, nt = $_(ye.padding || 0);
      j && (fe.setTextConfig({
        layoutRect: j
      }), We.disableLabelLayout = !0), We.beforeUpdate = function() {
        var It = Math.max((j ? j.width : fe.shape.width) - nt[1] - nt[3], 0), sn = Math.max((j ? j.height : fe.shape.height) - nt[0] - nt[2], 0);
        (ye.width !== It || ye.height !== sn) && We.setStyle({
          width: It,
          height: sn
        });
      }, ye.truncateMinChar = 2, ye.lineOverflow = "truncate", ee(ye, j, c);
      var pt = We.getState("emphasis");
      ee(pt ? pt.style : null, j, c);
    }
  }
  function ee(fe, re, ve) {
    var j = fe ? fe.text : null;
    if (!re && ve.isLeafRoot && j != null) {
      var ce = t.get("drillDownIcon", !0);
      fe.text = ce ? ce + " " + j : j;
    }
  }
  function oe(fe, re, ve, j) {
    var ce = _ != null && r[fe][_], qe = a[fe];
    return ce ? (r[fe][_] = null, Le(qe, ce)) : v || (ce = new re(), ce instanceof Fr && (ce.z2 = g8(ve, j)), Xe(qe, ce)), e[fe][m] = ce;
  }
  function Le(fe, re) {
    var ve = fe[m] = {};
    re instanceof Km ? (ve.oldX = re.x, ve.oldY = re.y) : ve.oldShape = G({}, re.shape);
  }
  function Xe(fe, re) {
    var ve = fe[m] = {}, j = o.parentNode, ce = re instanceof de;
    if (j && (!n || n.direction === "drillDown")) {
      var qe = 0, Ge = 0, We = a.background[j.getRawIndex()];
      !n && We && We.oldShape && (qe = We.oldShape.width, Ge = We.oldShape.height), ce ? (ve.oldX = 0, ve.oldY = Ge) : ve.oldShape = {
        x: qe,
        y: Ge,
        width: 0,
        height: 0
      };
    }
    ve.fadein = !ce;
  }
}
function g8(t, e) {
  return t * c8 + e;
}
var Du = w, v8 = se, Ip = -1, wt = (
  /** @class */
  function() {
    function t(e) {
      var r = e.mappingMethod, n = e.type, a = this.option = le(e);
      this.type = n, this.mappingMethod = r, this._normalizeData = y8[r];
      var i = t.visualHandlers[n];
      this.applyVisual = i.applyVisual, this.getColorMapper = i.getColorMapper, this._normalizedToVisual = i._normalizedToVisual[r], r === "piecewise" ? (Pg(a), m8(a)) : r === "category" ? a.categories ? _8(a) : Pg(a, !0) : (ar(r !== "linear" || a.dataExtent), Pg(a));
    }
    return t.prototype.mapValueToVisual = function(e) {
      var r = this._normalizeData(e);
      return this._normalizedToVisual(r, e);
    }, t.prototype.getNormalizer = function() {
      return K(this._normalizeData, this);
    }, t.listVisualTypes = function() {
      return Me(t.visualHandlers);
    }, t.isValidType = function(e) {
      return t.visualHandlers.hasOwnProperty(e);
    }, t.eachVisual = function(e, r, n) {
      se(e) ? w(e, r, n) : r.call(n, e);
    }, t.mapVisual = function(e, r, n) {
      var a, i = V(e) ? [] : se(e) ? {} : (a = !0, null);
      return t.eachVisual(e, function(o, s) {
        var l = r.call(n, o, s);
        a ? i = l : i[s] = l;
      }), i;
    }, t.retrieveVisuals = function(e) {
      var r = {}, n;
      return e && Du(t.visualHandlers, function(a, i) {
        e.hasOwnProperty(i) && (r[i] = e[i], n = !0);
      }), n ? r : null;
    }, t.prepareVisualTypes = function(e) {
      if (V(e))
        e = e.slice();
      else if (v8(e)) {
        var r = [];
        Du(e, function(n, a) {
          r.push(a);
        }), e = r;
      } else
        return [];
      return e.sort(function(n, a) {
        return a === "color" && n !== "color" && n.indexOf("color") === 0 ? 1 : -1;
      }), e;
    }, t.dependsOn = function(e, r) {
      return r === "color" ? !!(e && e.indexOf(r) === 0) : e === r;
    }, t.findPieceIndex = function(e, r, n) {
      for (var a, i = 1 / 0, o = 0, s = r.length; o < s; o++) {
        var l = r[o].value;
        if (l != null) {
          if (l === e || Y(l) && l === e + "")
            return o;
          n && p(l, o);
        }
      }
      for (var o = 0, s = r.length; o < s; o++) {
        var u = r[o], c = u.interval, d = u.close;
        if (c) {
          if (c[0] === -1 / 0) {
            if (nd(d[1], e, c[1]))
              return o;
          } else if (c[1] === 1 / 0) {
            if (nd(d[0], c[0], e))
              return o;
          } else if (nd(d[0], c[0], e) && nd(d[1], e, c[1]))
            return o;
          n && p(c[0], o), n && p(c[1], o);
        }
      }
      if (n)
        return e === 1 / 0 ? r.length - 1 : e === -1 / 0 ? 0 : a;
      function p(f, h) {
        var g = Math.abs(f - e);
        g < i && (i = g, a = h);
      }
    }, t.visualHandlers = {
      color: {
        applyVisual: hl("color"),
        getColorMapper: function() {
          var e = this.option;
          return K(e.mappingMethod === "category" ? function(r, n) {
            return !n && (r = this._normalizeData(r)), Nl.call(this, r);
          } : function(r, n, a) {
            var i = !!a;
            return !n && (r = this._normalizeData(r)), a = gh(r, e.parsedVisual, a), i ? a : Qn(a, "rgba");
          }, this);
        },
        _normalizedToVisual: {
          linear: function(e) {
            return Qn(gh(e, this.option.parsedVisual), "rgba");
          },
          category: Nl,
          piecewise: function(e, r) {
            var n = Xm.call(this, r);
            return n == null && (n = Qn(gh(e, this.option.parsedVisual), "rgba")), n;
          },
          fixed: Oi
        }
      },
      colorHue: rd(function(e, r) {
        return Gl(e, r);
      }),
      colorSaturation: rd(function(e, r) {
        return Gl(e, null, r);
      }),
      colorLightness: rd(function(e, r) {
        return Gl(e, null, null, r);
      }),
      colorAlpha: rd(function(e, r) {
        return tp(e, r);
      }),
      decal: {
        applyVisual: hl("decal"),
        _normalizedToVisual: {
          linear: null,
          category: Nl,
          piecewise: null,
          fixed: null
        }
      },
      opacity: {
        applyVisual: hl("opacity"),
        _normalizedToVisual: Zm([0, 1])
      },
      liftZ: {
        applyVisual: hl("liftZ"),
        _normalizedToVisual: {
          linear: Oi,
          category: Oi,
          piecewise: Oi,
          fixed: Oi
        }
      },
      symbol: {
        applyVisual: function(e, r, n) {
          var a = this.mapValueToVisual(e);
          n("symbol", a);
        },
        _normalizedToVisual: {
          linear: Zx,
          category: Nl,
          piecewise: function(e, r) {
            var n = Xm.call(this, r);
            return n == null && (n = Zx.call(this, e)), n;
          },
          fixed: Oi
        }
      },
      symbolSize: {
        applyVisual: hl("symbolSize"),
        _normalizedToVisual: Zm([0, 1])
      }
    }, t;
  }()
);
function m8(t) {
  var e = t.pieceList;
  t.hasSpecialVisual = !1, w(e, function(r, n) {
    r.originIndex = n, r.visual != null && (t.hasSpecialVisual = !0);
  });
}
function _8(t) {
  var e = t.categories, r = t.categoryMap = {}, n = t.visual;
  if (Du(e, function(o, s) {
    r[o] = s;
  }), !V(n)) {
    var a = [];
    se(n) ? Du(n, function(o, s) {
      var l = r[s];
      a[l ?? Ip] = o;
    }) : a[Ip] = n, n = oR(t, a);
  }
  for (var i = e.length - 1; i >= 0; i--)
    n[i] == null && (delete r[e[i]], e.pop());
}
function Pg(t, e) {
  var r = t.visual, n = [];
  se(r) ? Du(r, function(i) {
    n.push(i);
  }) : r != null && n.push(r);
  var a = {
    color: 1,
    symbol: 1
  };
  !e && n.length === 1 && !a.hasOwnProperty(t.type) && (n[1] = n[0]), oR(t, n);
}
function rd(t) {
  return {
    applyVisual: function(e, r, n) {
      var a = this.mapValueToVisual(e);
      n("color", t(r("color"), a));
    },
    _normalizedToVisual: Zm([0, 1])
  };
}
function Zx(t) {
  var e = this.option.visual;
  return e[Math.round($e(t, [0, 1], [0, e.length - 1], !0))] || {};
}
function hl(t) {
  return function(e, r, n) {
    n(t, this.mapValueToVisual(e));
  };
}
function Nl(t) {
  var e = this.option.visual;
  return e[this.option.loop && t !== Ip ? t % e.length : t];
}
function Oi() {
  return this.option.visual[0];
}
function Zm(t) {
  return {
    linear: function(e) {
      return $e(e, t, this.option.visual, !0);
    },
    category: Nl,
    piecewise: function(e, r) {
      var n = Xm.call(this, r);
      return n == null && (n = $e(e, t, this.option.visual, !0)), n;
    },
    fixed: Oi
  };
}
function Xm(t) {
  var e = this.option, r = e.pieceList;
  if (e.hasSpecialVisual) {
    var n = wt.findPieceIndex(t, r), a = r[n];
    if (a && a.visual)
      return a.visual[this.type];
  }
}
function oR(t, e) {
  return t.visual = e, t.type === "color" && (t.parsedVisual = $(e, function(r) {
    var n = br(r);
    return n || [0, 0, 0, 1];
  })), e;
}
var y8 = {
  linear: function(t) {
    return $e(t, this.option.dataExtent, [0, 1], !0);
  },
  piecewise: function(t) {
    var e = this.option.pieceList, r = wt.findPieceIndex(t, e, !0);
    if (r != null)
      return $e(r, [0, e.length - 1], [0, 1], !0);
  },
  category: function(t) {
    var e = this.option.categories ? this.option.categoryMap[t] : t;
    return e ?? Ip;
  },
  fixed: dt
};
function nd(t, e, r) {
  return t ? e <= r : e < r;
}
var b8 = "itemStyle", sR = Oe();
const S8 = {
  seriesType: "treemap",
  reset: function(t) {
    var e = t.getData().tree, r = e.root;
    r.isRemoved() || lR(
      r,
      // Visual should calculate from tree root but not view root.
      {},
      t.getViewRoot().getAncestors(),
      t
    );
  }
};
function lR(t, e, r, n) {
  var a = t.getModel(), i = t.getLayout(), o = t.hostTree.data;
  if (!(!i || i.invisible || !i.isInView)) {
    var s = a.getModel(b8), l = E8(s, e, n), u = o.ensureUniqueItemVisual(t.dataIndex, "style"), c = s.get("borderColor"), d = s.get("borderColorSaturation"), p;
    d != null && (p = Xx(l), c = T8(d, p)), u.stroke = c;
    var f = t.viewChildren;
    if (!f || !f.length)
      p = Xx(l), u.fill = p;
    else {
      var h = x8(t, a, i, s, l, f);
      w(f, function(g, v) {
        if (g.depth >= r.length || g === r[g.depth]) {
          var m = C8(a, l, g, v, h, n);
          lR(g, m, r, n);
        }
      });
    }
  }
}
function E8(t, e, r) {
  var n = G({}, e), a = r.designatedVisualItemStyle;
  return w(["color", "colorAlpha", "colorSaturation"], function(i) {
    a[i] = e[i];
    var o = t.get(i);
    a[i] = null, o != null && (n[i] = o);
  }), n;
}
function Xx(t) {
  var e = kg(t, "color");
  if (e) {
    var r = kg(t, "colorAlpha"), n = kg(t, "colorSaturation");
    return n && (e = Gl(e, null, null, n)), r && (e = tp(e, r)), e;
  }
}
function T8(t, e) {
  return e != null ? Gl(e, null, null, t) : null;
}
function kg(t, e) {
  var r = t[e];
  if (r != null && r !== "none")
    return r;
}
function x8(t, e, r, n, a, i) {
  if (!(!i || !i.length)) {
    var o = Bg(e, "color") || a.color != null && a.color !== "none" && (Bg(e, "colorAlpha") || Bg(e, "colorSaturation"));
    if (o) {
      var s = e.get("visualMin"), l = e.get("visualMax"), u = r.dataExtent.slice();
      s != null && s < u[0] && (u[0] = s), l != null && l > u[1] && (u[1] = l);
      var c = e.get("colorMappingBy"), d = {
        type: o.name,
        dataExtent: u,
        visual: o.range
      };
      d.type === "color" && (c === "index" || c === "id") ? (d.mappingMethod = "category", d.loop = !0) : d.mappingMethod = "linear";
      var p = new wt(d);
      return sR(p).drColorMappingBy = c, p;
    }
  }
}
function Bg(t, e) {
  var r = t.get(e);
  return V(r) && r.length ? {
    name: e,
    range: r
  } : null;
}
function C8(t, e, r, n, a, i) {
  var o = G({}, e);
  if (a) {
    var s = a.type, l = s === "color" && sR(a).drColorMappingBy, u = l === "index" ? n : l === "id" ? i.mapIdToIndex(r.getId()) : r.getValue(t.get("visualDimension"));
    o[s] = a.mapValueToVisual(u);
  }
  return o;
}
var Mu = Math.max, Np = Math.min, Qx = Pt, nb = w, uR = ["itemStyle", "borderWidth"], A8 = ["itemStyle", "gapWidth"], w8 = ["upperLabel", "show"], D8 = ["upperLabel", "height"];
const M8 = {
  seriesType: "treemap",
  reset: function(t, e, r, n) {
    var a = r.getWidth(), i = r.getHeight(), o = t.option, s = Et(t.getBoxLayoutParams(), {
      width: r.getWidth(),
      height: r.getHeight()
    }), l = o.size || [], u = q(Qx(s.width, l[0]), a), c = q(Qx(s.height, l[1]), i), d = n && n.type, p = ["treemapZoomToNode", "treemapRootToNode"], f = wu(n, p, t), h = d === "treemapRender" || d === "treemapMove" ? n.rootRect : null, g = t.getViewRoot(), v = nR(g);
    if (d !== "treemapMove") {
      var m = d === "treemapZoomToNode" ? P8(t, f, g, u, c) : h ? [h.width, h.height] : [u, c], _ = o.sort;
      _ && _ !== "asc" && _ !== "desc" && (_ = "desc");
      var y = {
        squareRatio: o.squareRatio,
        sort: _,
        leafDepth: o.leafDepth
      };
      g.hostTree.clearLayouts();
      var b = {
        x: 0,
        y: 0,
        width: m[0],
        height: m[1],
        area: m[0] * m[1]
      };
      g.setLayout(b), cR(g, y, !1, 0), b = g.getLayout(), nb(v, function(E, T) {
        var x = (v[T + 1] || g).getValue();
        E.setLayout(G({
          dataExtent: [x, x],
          borderWidth: 0,
          upperHeight: 0
        }, b));
      });
    }
    var S = t.getData().tree.root;
    S.setLayout(k8(s, h, f), !0), t.setLayoutInfo(s), dR(
      S,
      // Transform to base element coordinate system.
      new Te(-s.x, -s.y, a, i),
      v,
      g,
      0
    );
  }
};
function cR(t, e, r, n) {
  var a, i;
  if (!t.isRemoved()) {
    var o = t.getLayout();
    a = o.width, i = o.height;
    var s = t.getModel(), l = s.get(uR), u = s.get(A8) / 2, c = pR(s), d = Math.max(l, c), p = l - u, f = d - u;
    t.setLayout({
      borderWidth: l,
      upperHeight: d,
      upperLabelHeight: c
    }, !0), a = Mu(a - 2 * p, 0), i = Mu(i - p - f, 0);
    var h = a * i, g = I8(t, s, h, e, r, n);
    if (g.length) {
      var v = {
        x: p,
        y: f,
        width: a,
        height: i
      }, m = Np(a, i), _ = 1 / 0, y = [];
      y.area = 0;
      for (var b = 0, S = g.length; b < S; ) {
        var E = g[b];
        y.push(E), y.area += E.getLayout().area;
        var T = L8(y, m, e.squareRatio);
        T <= _ ? (b++, _ = T) : (y.area -= y.pop().getLayout().area, jx(y, m, v, u, !1), m = Np(v.width, v.height), y.length = y.area = 0, _ = 1 / 0);
      }
      if (y.length && jx(y, m, v, u, !0), !r) {
        var x = s.get("childrenVisibleMin");
        x != null && h < x && (r = !0);
      }
      for (var b = 0, S = g.length; b < S; b++)
        cR(g[b], e, r, n + 1);
    }
  }
}
function I8(t, e, r, n, a, i) {
  var o = t.children || [], s = n.sort;
  s !== "asc" && s !== "desc" && (s = null);
  var l = n.leafDepth != null && n.leafDepth <= i;
  if (a && !l)
    return t.viewChildren = [];
  o = ze(o, function(f) {
    return !f.isRemoved();
  }), R8(o, s);
  var u = O8(e, o, s);
  if (u.sum === 0)
    return t.viewChildren = [];
  if (u.sum = N8(e, r, u.sum, s, o), u.sum === 0)
    return t.viewChildren = [];
  for (var c = 0, d = o.length; c < d; c++) {
    var p = o[c].getValue() / u.sum * r;
    o[c].setLayout({
      area: p
    });
  }
  return l && (o.length && t.setLayout({
    isLeafRoot: !0
  }, !0), o.length = 0), t.viewChildren = o, t.setLayout({
    dataExtent: u.dataExtent
  }, !0), o;
}
function N8(t, e, r, n, a) {
  if (!n)
    return r;
  for (var i = t.get("visibleMin"), o = a.length, s = o, l = o - 1; l >= 0; l--) {
    var u = a[n === "asc" ? o - l - 1 : l].getValue();
    u / r * e < i && (s = l, r -= u);
  }
  return n === "asc" ? a.splice(0, o - s) : a.splice(s, o - s), r;
}
function R8(t, e) {
  return e && t.sort(function(r, n) {
    var a = e === "asc" ? r.getValue() - n.getValue() : n.getValue() - r.getValue();
    return a === 0 ? e === "asc" ? r.dataIndex - n.dataIndex : n.dataIndex - r.dataIndex : a;
  }), t;
}
function O8(t, e, r) {
  for (var n = 0, a = 0, i = e.length; a < i; a++)
    n += e[a].getValue();
  var o = t.get("visualDimension"), s;
  return !e || !e.length ? s = [NaN, NaN] : o === "value" && r ? (s = [e[e.length - 1].getValue(), e[0].getValue()], r === "asc" && s.reverse()) : (s = [1 / 0, -1 / 0], nb(e, function(l) {
    var u = l.getValue(o);
    u < s[0] && (s[0] = u), u > s[1] && (s[1] = u);
  })), {
    sum: n,
    dataExtent: s
  };
}
function L8(t, e, r) {
  for (var n = 0, a = 1 / 0, i = 0, o = void 0, s = t.length; i < s; i++)
    o = t[i].getLayout().area, o && (o < a && (a = o), o > n && (n = o));
  var l = t.area * t.area, u = e * e * r;
  return l ? Mu(u * n / l, l / (u * a)) : 1 / 0;
}
function jx(t, e, r, n, a) {
  var i = e === r.width ? 0 : 1, o = 1 - i, s = ["x", "y"], l = ["width", "height"], u = r[s[i]], c = e ? t.area / e : 0;
  (a || c > r[l[o]]) && (c = r[l[o]]);
  for (var d = 0, p = t.length; d < p; d++) {
    var f = t[d], h = {}, g = c ? f.getLayout().area / c : 0, v = h[l[o]] = Mu(c - 2 * n, 0), m = r[s[i]] + r[l[i]] - u, _ = d === p - 1 || m < g ? m : g, y = h[l[i]] = Mu(_ - 2 * n, 0);
    h[s[o]] = r[s[o]] + Np(n, v / 2), h[s[i]] = u + Np(n, y / 2), u += _, f.setLayout(h, !0);
  }
  r[s[o]] += c, r[l[o]] -= c;
}
function P8(t, e, r, n, a) {
  var i = (e || {}).node, o = [n, a];
  if (!i || i === r)
    return o;
  for (var s, l = n * a, u = l * t.option.zoomToNodeRatio; s = i.parentNode; ) {
    for (var c = 0, d = s.children, p = 0, f = d.length; p < f; p++)
      c += d[p].getValue();
    var h = i.getValue();
    if (h === 0)
      return o;
    u *= c / h;
    var g = s.getModel(), v = g.get(uR), m = Math.max(v, pR(g));
    u += 4 * v * v + (3 * v + m) * Math.pow(u, 0.5), u > cS && (u = cS), i = s;
  }
  u < l && (u = l);
  var _ = Math.pow(u / l, 0.5);
  return [n * _, a * _];
}
function k8(t, e, r) {
  if (e)
    return {
      x: e.x,
      y: e.y
    };
  var n = {
    x: 0,
    y: 0
  };
  if (!r)
    return n;
  var a = r.node, i = a.getLayout();
  if (!i)
    return n;
  for (var o = [i.width / 2, i.height / 2], s = a; s; ) {
    var l = s.getLayout();
    o[0] += l.x, o[1] += l.y, s = s.parentNode;
  }
  return {
    x: t.width / 2 - o[0],
    y: t.height / 2 - o[1]
  };
}
function dR(t, e, r, n, a) {
  var i = t.getLayout(), o = r[a], s = o && o === t;
  if (!(o && !s || a === r.length && t !== n)) {
    t.setLayout({
      // isInView means: viewRoot sub tree + viewAbovePath
      isInView: !0,
      // invisible only means: outside view clip so that the node can not
      // see but still layout for animation preparation but not render.
      invisible: !s && !e.intersect(i),
      isAboveViewRoot: s
    }, !0);
    var l = new Te(e.x - i.x, e.y - i.y, e.width, e.height);
    nb(t.viewChildren || [], function(u) {
      dR(u, l, r, n, a + 1);
    });
  }
}
function pR(t) {
  return t.get(w8) ? t.get(D8) : 0;
}
function Ere(t) {
  t.registerSeriesModel(r8), t.registerChartView(f8), t.registerVisual(S8), t.registerLayout(M8), t8(t);
}
function B8(t) {
  var e = t.findComponents({
    mainType: "legend"
  });
  !e || !e.length || t.eachSeriesByType("graph", function(r) {
    var n = r.getCategoriesData(), a = r.getGraph(), i = a.data, o = n.mapArray(n.getName);
    i.filterSelf(function(s) {
      var l = i.getItemModel(s), u = l.getShallow("category");
      if (u != null) {
        ke(u) && (u = o[u]);
        for (var c = 0; c < e.length; c++)
          if (!e[c].isSelected(u))
            return !1;
      }
      return !0;
    });
  });
}
function F8(t) {
  var e = {};
  t.eachSeriesByType("graph", function(r) {
    var n = r.getCategoriesData(), a = r.getData(), i = {};
    n.each(function(o) {
      var s = n.getName(o);
      i["ec-" + s] = o;
      var l = n.getItemModel(o), u = l.getModel("itemStyle").getItemStyle();
      u.fill || (u.fill = r.getColorFromPalette(s, e)), n.setItemVisual(o, "style", u);
      for (var c = ["symbol", "symbolSize", "symbolKeepAspect"], d = 0; d < c.length; d++) {
        var p = l.getShallow(c[d], !0);
        p != null && n.setItemVisual(o, c[d], p);
      }
    }), n.count() && a.each(function(o) {
      var s = a.getItemModel(o), l = s.getShallow("category");
      if (l != null) {
        Y(l) && (l = i["ec-" + l]);
        var u = n.getItemVisual(l, "style"), c = a.ensureUniqueItemVisual(o, "style");
        G(c, u);
        for (var d = ["symbol", "symbolSize", "symbolKeepAspect"], p = 0; p < d.length; p++)
          a.setItemVisual(o, d[p], n.getItemVisual(l, d[p]));
      }
    });
  });
}
function ad(t) {
  return t instanceof Array || (t = [t, t]), t;
}
function G8(t) {
  t.eachSeriesByType("graph", function(e) {
    var r = e.getGraph(), n = e.getEdgeData(), a = ad(e.get("edgeSymbol")), i = ad(e.get("edgeSymbolSize"));
    n.setVisual("fromSymbol", a && a[0]), n.setVisual("toSymbol", a && a[1]), n.setVisual("fromSymbolSize", i && i[0]), n.setVisual("toSymbolSize", i && i[1]), n.setVisual("style", e.getModel("lineStyle").getLineStyle()), n.each(function(o) {
      var s = n.getItemModel(o), l = r.getEdgeByIndex(o), u = ad(s.getShallow("symbol", !0)), c = ad(s.getShallow("symbolSize", !0)), d = s.getModel("lineStyle").getLineStyle(), p = n.ensureUniqueItemVisual(o, "style");
      switch (G(p, d), p.stroke) {
        case "source": {
          var f = l.node1.getVisual("style");
          p.stroke = f && f.fill;
          break;
        }
        case "target": {
          var f = l.node2.getVisual("style");
          p.stroke = f && f.fill;
          break;
        }
      }
      u[0] && l.setVisual("fromSymbol", u[0]), u[1] && l.setVisual("toSymbol", u[1]), c[0] && l.setVisual("fromSymbolSize", c[0]), c[1] && l.setVisual("toSymbolSize", c[1]);
    });
  });
}
var Qm = "-->", kf = function(t) {
  return t.get("autoCurveness") || null;
}, fR = function(t, e) {
  var r = kf(t), n = 20, a = [];
  if (ke(r))
    n = r;
  else if (V(r)) {
    t.__curvenessList = r;
    return;
  }
  e > n && (n = e);
  var i = n % 2 ? n + 2 : n + 3;
  a = [];
  for (var o = 0; o < i; o++)
    a.push((o % 2 ? o + 1 : o) / 10 * (o % 2 ? -1 : 1));
  t.__curvenessList = a;
}, Iu = function(t, e, r) {
  var n = [t.id, t.dataIndex].join("."), a = [e.id, e.dataIndex].join(".");
  return [r.uid, n, a].join(Qm);
}, hR = function(t) {
  var e = t.split(Qm);
  return [e[0], e[2], e[1]].join(Qm);
}, U8 = function(t, e) {
  var r = Iu(t.node1, t.node2, e);
  return e.__edgeMap[r];
}, z8 = function(t, e) {
  var r = jm(Iu(t.node1, t.node2, e), e), n = jm(Iu(t.node2, t.node1, e), e);
  return r + n;
}, jm = function(t, e) {
  var r = e.__edgeMap;
  return r[t] ? r[t].length : 0;
};
function V8(t) {
  kf(t) && (t.__curvenessList = [], t.__edgeMap = {}, fR(t));
}
function $8(t, e, r, n) {
  if (kf(r)) {
    var a = Iu(t, e, r), i = r.__edgeMap, o = i[hR(a)];
    i[a] && !o ? i[a].isForward = !0 : o && i[a] && (o.isForward = !0, i[a].isForward = !1), i[a] = i[a] || [], i[a].push(n);
  }
}
function ab(t, e, r, n) {
  var a = kf(e), i = V(a);
  if (!a)
    return null;
  var o = U8(t, e);
  if (!o)
    return null;
  for (var s = -1, l = 0; l < o.length; l++)
    if (o[l] === r) {
      s = l;
      break;
    }
  var u = z8(t, e);
  fR(e, u), t.lineStyle = t.lineStyle || {};
  var c = Iu(t.node1, t.node2, e), d = e.__curvenessList, p = i || u % 2 ? 0 : 1;
  if (o.isForward)
    return d[p + s];
  var f = hR(c), h = jm(f, e), g = d[s + h + p];
  return n ? i ? a && a[0] === 0 ? (h + p) % 2 ? g : -g : ((h % 2 ? 0 : 1) + p) % 2 ? g : -g : (h + p) % 2 ? g : -g : d[s + h + p];
}
function gR(t) {
  var e = t.coordinateSystem;
  if (!(e && e.type !== "view")) {
    var r = t.getGraph();
    r.eachNode(function(n) {
      var a = n.getModel();
      n.setLayout([+a.get("x"), +a.get("y")]);
    }), ib(r, t);
  }
}
function ib(t, e) {
  t.eachEdge(function(r, n) {
    var a = Dn(r.getModel().get(["lineStyle", "curveness"]), -ab(r, e, n, !0), 0), i = Zn(r.node1.getLayout()), o = Zn(r.node2.getLayout()), s = [i, o];
    +a && s.push([(i[0] + o[0]) / 2 - (i[1] - o[1]) * a, (i[1] + o[1]) / 2 - (o[0] - i[0]) * a]), r.setLayout(s);
  });
}
function H8(t, e) {
  t.eachSeriesByType("graph", function(r) {
    var n = r.get("layout"), a = r.coordinateSystem;
    if (a && a.type !== "view") {
      var i = r.getData(), o = [];
      w(a.dimensions, function(p) {
        o = o.concat(i.mapDimensionsAll(p));
      });
      for (var s = 0; s < i.count(); s++) {
        for (var l = [], u = !1, c = 0; c < o.length; c++) {
          var d = i.get(o[c], s);
          isNaN(d) || (u = !0), l.push(d);
        }
        u ? i.setItemLayout(s, a.dataToPoint(l)) : i.setItemLayout(s, [NaN, NaN]);
      }
      ib(i.graph, r);
    } else (!n || n === "none") && gR(r);
  });
}
function Rl(t) {
  var e = t.coordinateSystem;
  if (e.type !== "view")
    return 1;
  var r = t.option.nodeScaleRatio, n = e.scaleX, a = e.getZoom(), i = (a - 1) * r + 1;
  return i / n;
}
function Ol(t) {
  var e = t.getVisual("symbolSize");
  return e instanceof Array && (e = (e[0] + e[1]) / 2), +e;
}
var Jx = Math.PI, Fg = [];
function ob(t, e, r, n) {
  var a = t.coordinateSystem;
  if (!(a && a.type !== "view")) {
    var i = a.getBoundingRect(), o = t.getData(), s = o.graph, l = i.width / 2 + i.x, u = i.height / 2 + i.y, c = Math.min(i.width, i.height) / 2, d = o.count();
    if (o.setLayout({
      cx: l,
      cy: u
    }), !!d) {
      if (r) {
        var p = a.pointToData(n), f = p[0], h = p[1], g = [f - l, h - u];
        Ds(g, g), Cd(g, g, c), r.setLayout([l + g[0], u + g[1]], !0);
        var v = t.get(["circular", "rotateLabel"]);
        vR(r, v, l, u);
      }
      W8[e](t, s, o, c, l, u, d), s.eachEdge(function(m, _) {
        var y = Dn(m.getModel().get(["lineStyle", "curveness"]), ab(m, t, _), 0), b = Zn(m.node1.getLayout()), S = Zn(m.node2.getLayout()), E, T = (b[0] + S[0]) / 2, x = (b[1] + S[1]) / 2;
        +y && (y *= 3, E = [l * y + T * (1 - y), u * y + x * (1 - y)]), m.setLayout([b, S, E]);
      });
    }
  }
}
var W8 = {
  value: function(t, e, r, n, a, i, o) {
    var s = 0, l = r.getSum("value"), u = Math.PI * 2 / (l || o);
    e.eachNode(function(c) {
      var d = c.getValue("value"), p = u * (l ? d : 1) / 2;
      s += p, c.setLayout([n * Math.cos(s) + a, n * Math.sin(s) + i]), s += p;
    });
  },
  symbolSize: function(t, e, r, n, a, i, o) {
    var s = 0;
    Fg.length = o;
    var l = Rl(t);
    e.eachNode(function(d) {
      var p = Ol(d);
      isNaN(p) && (p = 2), p < 0 && (p = 0), p *= l;
      var f = Math.asin(p / 2 / n);
      isNaN(f) && (f = Jx / 2), Fg[d.dataIndex] = f, s += f * 2;
    });
    var u = (2 * Jx - s) / o / 2, c = 0;
    e.eachNode(function(d) {
      var p = u + Fg[d.dataIndex];
      c += p, (!d.getLayout() || !d.getLayout().fixed) && d.setLayout([n * Math.cos(c) + a, n * Math.sin(c) + i]), c += p;
    });
  }
};
function vR(t, e, r, n) {
  var a = t.getGraphicEl();
  if (a) {
    var i = t.getModel(), o = i.get(["label", "rotate"]) || 0, s = a.getSymbolPath();
    if (e) {
      var l = t.getLayout(), u = Math.atan2(l[1] - n, l[0] - r);
      u < 0 && (u = Math.PI * 2 + u);
      var c = l[0] < r;
      c && (u = u - Math.PI);
      var d = c ? "left" : "right";
      s.setTextConfig({
        rotation: -u,
        position: d,
        origin: "center"
      });
      var p = s.ensureState("emphasis");
      G(p.textConfig || (p.textConfig = {}), {
        position: d
      });
    } else
      s.setTextConfig({
        rotation: o *= Math.PI / 180
      });
  }
}
function q8(t) {
  t.eachSeriesByType("graph", function(e) {
    e.get("layout") === "circular" && ob(e, "symbolSize");
  });
}
var Uo = Fv;
function Y8(t, e, r) {
  for (var n = t, a = e, i = r.rect, o = i.width, s = i.height, l = [i.x + o / 2, i.y + s / 2], u = r.gravity == null ? 0.1 : r.gravity, c = 0; c < n.length; c++) {
    var d = n[c];
    d.p || (d.p = fo(o * (Math.random() - 0.5) + l[0], s * (Math.random() - 0.5) + l[1])), d.pp = Zn(d.p), d.edges = null;
  }
  var p = r.friction == null ? 0.6 : r.friction, f = p, h, g;
  return {
    warmUp: function() {
      f = p * 0.8;
    },
    setFixed: function(v) {
      n[v].fixed = !0;
    },
    setUnfixed: function(v) {
      n[v].fixed = !1;
    },
    /**
     * Before step hook
     */
    beforeStep: function(v) {
      h = v;
    },
    /**
     * After step hook
     */
    afterStep: function(v) {
      g = v;
    },
    /**
     * Some formulas were originally copied from "d3.js"
     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js
     * with some modifications made for this project.
     * See the license statement at the head of this file.
     */
    step: function(v) {
      h && h(n, a);
      for (var m = [], _ = n.length, y = 0; y < a.length; y++) {
        var b = a[y];
        if (!b.ignoreForceLayout) {
          var S = b.n1, E = b.n2;
          zi(m, E.p, S.p);
          var T = Gv(m) - b.d, x = E.w / (S.w + E.w);
          isNaN(x) && (x = 0), Ds(m, m), !S.fixed && Uo(S.p, S.p, m, x * T * f), !E.fixed && Uo(E.p, E.p, m, -(1 - x) * T * f);
        }
      }
      for (var y = 0; y < _; y++) {
        var C = n[y];
        C.fixed || (zi(m, l, C.p), Uo(C.p, C.p, m, u * f));
      }
      for (var y = 0; y < _; y++)
        for (var S = n[y], A = y + 1; A < _; A++) {
          var E = n[A];
          zi(m, E.p, S.p);
          var T = Gv(m);
          T === 0 && (MB(m, Math.random() - 0.5, Math.random() - 0.5), T = 1);
          var D = (S.rep + E.rep) / T / T;
          !S.fixed && Uo(S.pp, S.pp, m, D), !E.fixed && Uo(E.pp, E.pp, m, -D);
        }
      for (var M = [], y = 0; y < _; y++) {
        var C = n[y];
        C.fixed || (zi(M, C.p, C.pp), Uo(C.p, C.p, M, f), Qt(C.pp, C.p));
      }
      f = f * 0.992;
      var I = f < 0.01;
      g && g(n, a, I), v && v(I);
    }
  };
}
function K8(t) {
  t.eachSeriesByType("graph", function(e) {
    var r = e.coordinateSystem;
    if (!(r && r.type !== "view"))
      if (e.get("layout") === "force") {
        var n = e.preservedPoints || {}, a = e.getGraph(), i = a.data, o = a.edgeData, s = e.getModel("force"), l = s.get("initLayout");
        e.preservedPoints ? i.each(function(y) {
          var b = i.getId(y);
          i.setItemLayout(y, n[b] || [NaN, NaN]);
        }) : !l || l === "none" ? gR(e) : l === "circular" && ob(e, "value");
        var u = i.getDataExtent("value"), c = o.getDataExtent("value"), d = s.get("repulsion"), p = s.get("edgeLength"), f = V(d) ? d : [d, d], h = V(p) ? p : [p, p];
        h = [h[1], h[0]];
        var g = i.mapArray("value", function(y, b) {
          var S = i.getItemLayout(b), E = $e(y, u, f);
          return isNaN(E) && (E = (f[0] + f[1]) / 2), {
            w: E,
            rep: E,
            fixed: i.getItemModel(b).get("fixed"),
            p: !S || isNaN(S[0]) || isNaN(S[1]) ? null : S
          };
        }), v = o.mapArray("value", function(y, b) {
          var S = a.getEdgeByIndex(b), E = $e(y, c, h);
          isNaN(E) && (E = (h[0] + h[1]) / 2);
          var T = S.getModel(), x = Dn(S.getModel().get(["lineStyle", "curveness"]), -ab(S, e, b, !0), 0);
          return {
            n1: g[S.node1.dataIndex],
            n2: g[S.node2.dataIndex],
            d: E,
            curveness: x,
            ignoreForceLayout: T.get("ignoreForceLayout")
          };
        }), m = r.getBoundingRect(), _ = Y8(g, v, {
          rect: m,
          gravity: s.get("gravity"),
          friction: s.get("friction")
        });
        _.beforeStep(function(y, b) {
          for (var S = 0, E = y.length; S < E; S++)
            y[S].fixed && Qt(y[S].p, a.getNodeByIndex(S).getLayout());
        }), _.afterStep(function(y, b, S) {
          for (var E = 0, T = y.length; E < T; E++)
            y[E].fixed || a.getNodeByIndex(E).setLayout(y[E].p), n[i.getId(E)] = y[E].p;
          for (var E = 0, T = b.length; E < T; E++) {
            var x = b[E], C = a.getEdgeByIndex(E), A = x.n1.p, D = x.n2.p, M = C.getLayout();
            M = M ? M.slice() : [], M[0] = M[0] || [], M[1] = M[1] || [], Qt(M[0], A), Qt(M[1], D), +x.curveness && (M[2] = [(A[0] + D[0]) / 2 - (A[1] - D[1]) * x.curveness, (A[1] + D[1]) / 2 - (D[0] - A[0]) * x.curveness]), C.setLayout(M);
          }
        }), e.forceLayout = _, e.preservedPoints = n, _.step();
      } else
        e.forceLayout = null;
  });
}
function Z8(t, e, r) {
  var n = G(t.getBoxLayoutParams(), {
    aspect: r
  });
  return Et(n, {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function X8(t, e) {
  var r = [];
  return t.eachSeriesByType("graph", function(n) {
    var a = n.get("coordinateSystem");
    if (!a || a === "view") {
      var i = n.getData(), o = i.mapArray(function(v) {
        var m = i.getItemModel(v);
        return [+m.get("x"), +m.get("y")];
      }), s = [], l = [];
      uf(o, s, l), l[0] - s[0] === 0 && (l[0] += 1, s[0] -= 1), l[1] - s[1] === 0 && (l[1] += 1, s[1] -= 1);
      var u = (l[0] - s[0]) / (l[1] - s[1]), c = Z8(n, e, u);
      isNaN(u) && (s = [c.x, c.y], l = [c.x + c.width, c.y + c.height]);
      var d = l[0] - s[0], p = l[1] - s[1], f = c.width, h = c.height, g = n.coordinateSystem = new ic();
      g.zoomLimit = n.get("scaleLimit"), g.setBoundingRect(s[0], s[1], d, p), g.setViewRect(c.x, c.y, f, h), g.setCenter(n.get("center"), e), g.setZoom(n.get("zoom")), r.push(g);
    }
  }), r;
}
var e1 = Ct.prototype, Gg = Hu.prototype, mR = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    }
    return t;
  }()
);
(function(t) {
  k(e, t);
  function e() {
    return t !== null && t.apply(this, arguments) || this;
  }
  return e;
})(mR);
function Ug(t) {
  return isNaN(+t.cpx1) || isNaN(+t.cpy1);
}
var Q8 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "ec-line", n;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new mR();
    }, e.prototype.buildPath = function(r, n) {
      Ug(n) ? e1.buildPath.call(this, r, n) : Gg.buildPath.call(this, r, n);
    }, e.prototype.pointAt = function(r) {
      return Ug(this.shape) ? e1.pointAt.call(this, r) : Gg.pointAt.call(this, r);
    }, e.prototype.tangentAt = function(r) {
      var n = this.shape, a = Ug(n) ? [n.x2 - n.x1, n.y2 - n.y1] : Gg.tangentAt.call(this, r);
      return Ds(a, a);
    }, e;
  }(Ce)
), zg = ["fromSymbol", "toSymbol"];
function t1(t) {
  return "_" + t + "Type";
}
function r1(t, e, r) {
  var n = e.getItemVisual(r, t);
  if (!n || n === "none")
    return n;
  var a = e.getItemVisual(r, t + "Size"), i = e.getItemVisual(r, t + "Rotate"), o = e.getItemVisual(r, t + "Offset"), s = e.getItemVisual(r, t + "KeepAspect"), l = Us(a), u = mo(o || 0, l);
  return n + l + u + (i || "") + (s || "");
}
function n1(t, e, r) {
  var n = e.getItemVisual(r, t);
  if (!(!n || n === "none")) {
    var a = e.getItemVisual(r, t + "Size"), i = e.getItemVisual(r, t + "Rotate"), o = e.getItemVisual(r, t + "Offset"), s = e.getItemVisual(r, t + "KeepAspect"), l = Us(a), u = mo(o || 0, l), c = mt(n, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, s);
    return c.__specifiedRotation = i == null || isNaN(i) ? void 0 : +i * Math.PI / 180 || 0, c.name = t, c;
  }
}
function j8(t) {
  var e = new Q8({
    name: "line",
    subPixelOptimize: !0
  });
  return Jm(e.shape, t), e;
}
function Jm(t, e) {
  t.x1 = e[0][0], t.y1 = e[0][1], t.x2 = e[1][0], t.y2 = e[1][1], t.percent = 1;
  var r = e[2];
  r ? (t.cpx1 = r[0], t.cpy1 = r[1]) : (t.cpx1 = NaN, t.cpy1 = NaN);
}
var sb = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this) || this;
      return i._createLine(r, n, a), i;
    }
    return e.prototype._createLine = function(r, n, a) {
      var i = r.hostModel, o = r.getItemLayout(n), s = j8(o);
      s.shape.percent = 0, rt(s, {
        shape: {
          percent: 1
        }
      }, i, n), this.add(s), w(zg, function(l) {
        var u = n1(l, r, n);
        this.add(u), this[t1(l)] = r1(l, r, n);
      }, this), this._updateCommonStl(r, n, a);
    }, e.prototype.updateData = function(r, n, a) {
      var i = r.hostModel, o = this.childOfName("line"), s = r.getItemLayout(n), l = {
        shape: {}
      };
      Jm(l.shape, s), Fe(o, l, i, n), w(zg, function(u) {
        var c = r1(u, r, n), d = t1(u);
        if (this[d] !== c) {
          this.remove(this.childOfName(u));
          var p = n1(u, r, n);
          this.add(p);
        }
        this[d] = c;
      }, this), this._updateCommonStl(r, n, a);
    }, e.prototype.getLinePath = function() {
      return this.childAt(0);
    }, e.prototype._updateCommonStl = function(r, n, a) {
      var i = r.hostModel, o = this.childOfName("line"), s = a && a.emphasisLineStyle, l = a && a.blurLineStyle, u = a && a.selectLineStyle, c = a && a.labelStatesModels, d = a && a.emphasisDisabled, p = a && a.focus, f = a && a.blurScope;
      if (!a || r.hasItemOption) {
        var h = r.getItemModel(n), g = h.getModel("emphasis");
        s = g.getModel("lineStyle").getLineStyle(), l = h.getModel(["blur", "lineStyle"]).getLineStyle(), u = h.getModel(["select", "lineStyle"]).getLineStyle(), d = g.get("disabled"), p = g.get("focus"), f = g.get("blurScope"), c = Dt(h);
      }
      var v = r.getItemVisual(n, "style"), m = v.stroke;
      o.useStyle(v), o.style.fill = null, o.style.strokeNoScale = !0, o.ensureState("emphasis").style = s, o.ensureState("blur").style = l, o.ensureState("select").style = u, w(zg, function(E) {
        var T = this.childOfName(E);
        if (T) {
          T.setColor(m), T.style.opacity = v.opacity;
          for (var x = 0; x < ir.length; x++) {
            var C = ir[x], A = o.getState(C);
            if (A) {
              var D = A.style || {}, M = T.ensureState(C), I = M.style || (M.style = {});
              D.stroke != null && (I[T.__isEmptyBrush ? "stroke" : "fill"] = D.stroke), D.opacity != null && (I.opacity = D.opacity);
            }
          }
          T.markRedraw();
        }
      }, this);
      var _ = i.getRawValue(n);
      Vt(this, c, {
        labelDataIndex: n,
        labelFetcher: {
          getFormattedLabel: function(E, T) {
            return i.getFormattedLabel(E, T, r.dataType);
          }
        },
        inheritColor: m || "#000",
        defaultOpacity: v.opacity,
        defaultText: (_ == null ? r.getName(n) : isFinite(_) ? ut(_) : _) + ""
      });
      var y = this.getTextContent();
      if (y) {
        var b = c.normal;
        y.__align = y.style.align, y.__verticalAlign = y.style.verticalAlign, y.__position = b.get("position") || "middle";
        var S = b.get("distance");
        V(S) || (S = [S, S]), y.__labelDistance = S;
      }
      this.setTextConfig({
        position: null,
        local: !0,
        inside: !1
        // Can't be inside for stroke element.
      }), lt(this, p, f, d);
    }, e.prototype.highlight = function() {
      na(this);
    }, e.prototype.downplay = function() {
      aa(this);
    }, e.prototype.updateLayout = function(r, n) {
      this.setLinePoints(r.getItemLayout(n));
    }, e.prototype.setLinePoints = function(r) {
      var n = this.childOfName("line");
      Jm(n.shape, r), n.dirty();
    }, e.prototype.beforeUpdate = function() {
      var r = this, n = r.childOfName("fromSymbol"), a = r.childOfName("toSymbol"), i = r.getTextContent();
      if (!n && !a && (!i || i.ignore))
        return;
      for (var o = 1, s = this.parent; s; )
        s.scaleX && (o /= s.scaleX), s = s.parent;
      var l = r.childOfName("line");
      if (!this.__dirty && !l.__dirty)
        return;
      var u = l.shape.percent, c = l.pointAt(0), d = l.pointAt(u), p = zi([], d, c);
      Ds(p, p);
      function f(A, D) {
        var M = A.__specifiedRotation;
        if (M == null) {
          var I = l.tangentAt(D);
          A.attr("rotation", (D === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(I[1], I[0]));
        } else
          A.attr("rotation", M);
      }
      if (n && (n.setPosition(c), f(n, 0), n.scaleX = n.scaleY = o * u, n.markRedraw()), a && (a.setPosition(d), f(a, 1), a.scaleX = a.scaleY = o * u, a.markRedraw()), i && !i.ignore) {
        i.x = i.y = 0, i.originX = i.originY = 0;
        var h = void 0, g = void 0, v = i.__labelDistance, m = v[0] * o, _ = v[1] * o, y = u / 2, b = l.tangentAt(y), S = [b[1], -b[0]], E = l.pointAt(y);
        S[1] > 0 && (S[0] = -S[0], S[1] = -S[1]);
        var T = b[0] < 0 ? -1 : 1;
        if (i.__position !== "start" && i.__position !== "end") {
          var x = -Math.atan2(b[1], b[0]);
          d[0] < c[0] && (x = Math.PI + x), i.rotation = x;
        }
        var C = void 0;
        switch (i.__position) {
          case "insideStartTop":
          case "insideMiddleTop":
          case "insideEndTop":
          case "middle":
            C = -_, g = "bottom";
            break;
          case "insideStartBottom":
          case "insideMiddleBottom":
          case "insideEndBottom":
            C = _, g = "top";
            break;
          default:
            C = 0, g = "middle";
        }
        switch (i.__position) {
          case "end":
            i.x = p[0] * m + d[0], i.y = p[1] * _ + d[1], h = p[0] > 0.8 ? "left" : p[0] < -0.8 ? "right" : "center", g = p[1] > 0.8 ? "top" : p[1] < -0.8 ? "bottom" : "middle";
            break;
          case "start":
            i.x = -p[0] * m + c[0], i.y = -p[1] * _ + c[1], h = p[0] > 0.8 ? "right" : p[0] < -0.8 ? "left" : "center", g = p[1] > 0.8 ? "bottom" : p[1] < -0.8 ? "top" : "middle";
            break;
          case "insideStartTop":
          case "insideStart":
          case "insideStartBottom":
            i.x = m * T + c[0], i.y = c[1] + C, h = b[0] < 0 ? "right" : "left", i.originX = -m * T, i.originY = -C;
            break;
          case "insideMiddleTop":
          case "insideMiddle":
          case "insideMiddleBottom":
          case "middle":
            i.x = E[0], i.y = E[1] + C, h = "center", i.originY = -C;
            break;
          case "insideEndTop":
          case "insideEnd":
          case "insideEndBottom":
            i.x = -m * T + d[0], i.y = d[1] + C, h = b[0] >= 0 ? "right" : "left", i.originX = m * T, i.originY = -C;
            break;
        }
        i.scaleX = i.scaleY = o, i.setStyle({
          // Use the user specified text align and baseline first
          verticalAlign: i.__verticalAlign || g,
          align: i.__align || h
        });
      }
    }, e;
  }(de)
), lb = (
  /** @class */
  function() {
    function t(e) {
      this.group = new de(), this._LineCtor = e || sb;
    }
    return t.prototype.updateData = function(e) {
      var r = this;
      this._progressiveEls = null;
      var n = this, a = n.group, i = n._lineData;
      n._lineData = e, i || a.removeAll();
      var o = a1(e);
      e.diff(i).add(function(s) {
        r._doAdd(e, s, o);
      }).update(function(s, l) {
        r._doUpdate(i, e, l, s, o);
      }).remove(function(s) {
        a.remove(i.getItemGraphicEl(s));
      }).execute();
    }, t.prototype.updateLayout = function() {
      var e = this._lineData;
      e && e.eachItemGraphicEl(function(r, n) {
        r.updateLayout(e, n);
      }, this);
    }, t.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = a1(e), this._lineData = null, this.group.removeAll();
    }, t.prototype.incrementalUpdate = function(e, r) {
      this._progressiveEls = [];
      function n(s) {
        !s.isGroup && !J8(s) && (s.incremental = !0, s.ensureState("emphasis").hoverLayer = !0);
      }
      for (var a = e.start; a < e.end; a++) {
        var i = r.getItemLayout(a);
        if (Vg(i)) {
          var o = new this._LineCtor(r, a, this._seriesScope);
          o.traverse(n), this.group.add(o), r.setItemGraphicEl(a, o), this._progressiveEls.push(o);
        }
      }
    }, t.prototype.remove = function() {
      this.group.removeAll();
    }, t.prototype.eachRendered = function(e) {
      ei(this._progressiveEls || this.group, e);
    }, t.prototype._doAdd = function(e, r, n) {
      var a = e.getItemLayout(r);
      if (Vg(a)) {
        var i = new this._LineCtor(e, r, n);
        e.setItemGraphicEl(r, i), this.group.add(i);
      }
    }, t.prototype._doUpdate = function(e, r, n, a, i) {
      var o = e.getItemGraphicEl(n);
      if (!Vg(r.getItemLayout(a))) {
        this.group.remove(o);
        return;
      }
      o ? o.updateData(r, a, i) : o = new this._LineCtor(r, a, i), r.setItemGraphicEl(a, o), this.group.add(o);
    }, t;
  }()
);
function J8(t) {
  return t.animators && t.animators.length > 0;
}
function a1(t) {
  var e = t.hostModel, r = e.getModel("emphasis");
  return {
    lineStyle: e.getModel("lineStyle").getLineStyle(),
    emphasisLineStyle: r.getModel(["lineStyle"]).getLineStyle(),
    blurLineStyle: e.getModel(["blur", "lineStyle"]).getLineStyle(),
    selectLineStyle: e.getModel(["select", "lineStyle"]).getLineStyle(),
    emphasisDisabled: r.get("disabled"),
    blurScope: r.get("blurScope"),
    focus: r.get("focus"),
    labelStatesModels: Dt(e)
  };
}
function i1(t) {
  return isNaN(t[0]) || isNaN(t[1]);
}
function Vg(t) {
  return t && !i1(t[0]) && !i1(t[1]);
}
var $g = [], Hg = [], Wg = [], zo = Ot, qg = Zi, o1 = Math.abs;
function s1(t, e, r) {
  for (var n = t[0], a = t[1], i = t[2], o = 1 / 0, s, l = r * r, u = 0.1, c = 0.1; c <= 0.9; c += 0.1) {
    $g[0] = zo(n[0], a[0], i[0], c), $g[1] = zo(n[1], a[1], i[1], c);
    var d = o1(qg($g, e) - l);
    d < o && (o = d, s = c);
  }
  for (var p = 0; p < 32; p++) {
    var f = s + u;
    Hg[0] = zo(n[0], a[0], i[0], s), Hg[1] = zo(n[1], a[1], i[1], s), Wg[0] = zo(n[0], a[0], i[0], f), Wg[1] = zo(n[1], a[1], i[1], f);
    var d = qg(Hg, e) - l;
    if (o1(d) < 0.01)
      break;
    var h = qg(Wg, e) - l;
    u /= 2, d < 0 ? h >= 0 ? s = s + u : s = s - u : h >= 0 ? s = s - u : s = s + u;
  }
  return s;
}
function Yg(t, e) {
  var r = [], n = lu, a = [[], [], []], i = [[], []], o = [];
  e /= 2, t.eachEdge(function(s, l) {
    var u = s.getLayout(), c = s.getVisual("fromSymbol"), d = s.getVisual("toSymbol");
    u.__original || (u.__original = [Zn(u[0]), Zn(u[1])], u[2] && u.__original.push(Zn(u[2])));
    var p = u.__original;
    if (u[2] != null) {
      if (Qt(a[0], p[0]), Qt(a[1], p[2]), Qt(a[2], p[1]), c && c !== "none") {
        var f = Ol(s.node1), h = s1(a, p[0], f * e);
        n(a[0][0], a[1][0], a[2][0], h, r), a[0][0] = r[3], a[1][0] = r[4], n(a[0][1], a[1][1], a[2][1], h, r), a[0][1] = r[3], a[1][1] = r[4];
      }
      if (d && d !== "none") {
        var f = Ol(s.node2), h = s1(a, p[1], f * e);
        n(a[0][0], a[1][0], a[2][0], h, r), a[1][0] = r[1], a[2][0] = r[2], n(a[0][1], a[1][1], a[2][1], h, r), a[1][1] = r[1], a[2][1] = r[2];
      }
      Qt(u[0], a[0]), Qt(u[1], a[2]), Qt(u[2], a[1]);
    } else {
      if (Qt(i[0], p[0]), Qt(i[1], p[1]), zi(o, i[1], i[0]), Ds(o, o), c && c !== "none") {
        var f = Ol(s.node1);
        Fv(i[0], i[0], o, f * e);
      }
      if (d && d !== "none") {
        var f = Ol(s.node2);
        Fv(i[1], i[1], o, -f * e);
      }
      Qt(u[0], i[0]), Qt(u[1], i[1]);
    }
  });
}
function l1(t) {
  return t.type === "view";
}
var e9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n) {
      var a = new Ju(), i = new lb(), o = this.group;
      this._controller = new ac(n.getZr()), this._controllerHost = {
        target: o
      }, o.add(a.group), o.add(i.group), this._symbolDraw = a, this._lineDraw = i, this._firstRender = !0;
    }, e.prototype.render = function(r, n, a) {
      var i = this, o = r.coordinateSystem;
      this._model = r;
      var s = this._symbolDraw, l = this._lineDraw, u = this.group;
      if (l1(o)) {
        var c = {
          x: o.x,
          y: o.y,
          scaleX: o.scaleX,
          scaleY: o.scaleY
        };
        this._firstRender ? u.attr(c) : Fe(u, c, r);
      }
      Yg(r.getGraph(), Rl(r));
      var d = r.getData();
      s.updateData(d);
      var p = r.getEdgeData();
      l.updateData(p), this._updateNodeAndLinkScale(), this._updateController(r, n, a), clearTimeout(this._layoutTimeout);
      var f = r.forceLayout, h = r.get(["force", "layoutAnimation"]);
      f && this._startForceLayoutIteration(f, h);
      var g = r.get("layout");
      d.graph.eachNode(function(y) {
        var b = y.dataIndex, S = y.getGraphicEl(), E = y.getModel();
        if (S) {
          S.off("drag").off("dragend");
          var T = E.get("draggable");
          T && S.on("drag", function(C) {
            switch (g) {
              case "force":
                f.warmUp(), !i._layouting && i._startForceLayoutIteration(f, h), f.setFixed(b), d.setItemLayout(b, [S.x, S.y]);
                break;
              case "circular":
                d.setItemLayout(b, [S.x, S.y]), y.setLayout({
                  fixed: !0
                }, !0), ob(r, "symbolSize", y, [C.offsetX, C.offsetY]), i.updateLayout(r);
                break;
              case "none":
              default:
                d.setItemLayout(b, [S.x, S.y]), ib(r.getGraph(), r), i.updateLayout(r);
                break;
            }
          }).on("dragend", function() {
            f && f.setUnfixed(b);
          }), S.setDraggable(T, !!E.get("cursor"));
          var x = E.get(["emphasis", "focus"]);
          x === "adjacency" && (pe(S).focus = y.getAdjacentDataIndices());
        }
      }), d.graph.eachEdge(function(y) {
        var b = y.getGraphicEl(), S = y.getModel().get(["emphasis", "focus"]);
        b && S === "adjacency" && (pe(b).focus = {
          edge: [y.dataIndex],
          node: [y.node1.dataIndex, y.node2.dataIndex]
        });
      });
      var v = r.get("layout") === "circular" && r.get(["circular", "rotateLabel"]), m = d.getLayout("cx"), _ = d.getLayout("cy");
      d.graph.eachNode(function(y) {
        vR(y, v, m, _);
      }), this._firstRender = !1;
    }, e.prototype.dispose = function() {
      this.remove(), this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype._startForceLayoutIteration = function(r, n) {
      var a = this;
      (function i() {
        r.step(function(o) {
          a.updateLayout(a._model), (a._layouting = !o) && (n ? a._layoutTimeout = setTimeout(i, 16) : i());
        });
      })();
    }, e.prototype._updateController = function(r, n, a) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      if (o.setPointerChecker(function(u, c, d) {
        var p = l.getBoundingRect();
        return p.applyTransform(l.transform), p.contain(c, d) && !Of(u, a, r);
      }), !l1(r.coordinateSystem)) {
        o.disable();
        return;
      }
      o.enable(r.get("roam")), s.zoomLimit = r.get("scaleLimit"), s.zoom = r.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        Xy(s, u.dx, u.dy), a.dispatchAction({
          seriesId: r.id,
          type: "graphRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        Qy(s, u.scale, u.originX, u.originY), a.dispatchAction({
          seriesId: r.id,
          type: "graphRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(), Yg(r.getGraph(), Rl(r)), i._lineDraw.updateLayout(), a.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function() {
      var r = this._model, n = r.getData(), a = Rl(r);
      n.eachItemGraphicEl(function(i, o) {
        i && i.setSymbolScale(a);
      });
    }, e.prototype.updateLayout = function(r) {
      Yg(r.getGraph(), Rl(r)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
    }, e.prototype.remove = function() {
      clearTimeout(this._layoutTimeout), this._layouting = !1, this._layoutTimeout = null, this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
    }, e.type = "graph", e;
  }(Ke)
);
function Vo(t) {
  return "_EC_" + t;
}
var t9 = (
  /** @class */
  function() {
    function t(e) {
      this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = e || !1;
    }
    return t.prototype.isDirected = function() {
      return this._directed;
    }, t.prototype.addNode = function(e, r) {
      e = e == null ? "" + r : "" + e;
      var n = this._nodesMap;
      if (!n[Vo(e)]) {
        var a = new Li(e, r);
        return a.hostGraph = this, this.nodes.push(a), n[Vo(e)] = a, a;
      }
    }, t.prototype.getNodeByIndex = function(e) {
      var r = this.data.getRawIndex(e);
      return this.nodes[r];
    }, t.prototype.getNodeById = function(e) {
      return this._nodesMap[Vo(e)];
    }, t.prototype.addEdge = function(e, r, n) {
      var a = this._nodesMap, i = this._edgesMap;
      if (ke(e) && (e = this.nodes[e]), ke(r) && (r = this.nodes[r]), e instanceof Li || (e = a[Vo(e)]), r instanceof Li || (r = a[Vo(r)]), !(!e || !r)) {
        var o = e.id + "-" + r.id, s = new _R(e, r, n);
        return s.hostGraph = this, this._directed && (e.outEdges.push(s), r.inEdges.push(s)), e.edges.push(s), e !== r && r.edges.push(s), this.edges.push(s), i[o] = s, s;
      }
    }, t.prototype.getEdgeByIndex = function(e) {
      var r = this.edgeData.getRawIndex(e);
      return this.edges[r];
    }, t.prototype.getEdge = function(e, r) {
      e instanceof Li && (e = e.id), r instanceof Li && (r = r.id);
      var n = this._edgesMap;
      return this._directed ? n[e + "-" + r] : n[e + "-" + r] || n[r + "-" + e];
    }, t.prototype.eachNode = function(e, r) {
      for (var n = this.nodes, a = n.length, i = 0; i < a; i++)
        n[i].dataIndex >= 0 && e.call(r, n[i], i);
    }, t.prototype.eachEdge = function(e, r) {
      for (var n = this.edges, a = n.length, i = 0; i < a; i++)
        n[i].dataIndex >= 0 && n[i].node1.dataIndex >= 0 && n[i].node2.dataIndex >= 0 && e.call(r, n[i], i);
    }, t.prototype.breadthFirstTraverse = function(e, r, n, a) {
      if (r instanceof Li || (r = this._nodesMap[Vo(r)]), !!r) {
        for (var i = n === "out" ? "outEdges" : n === "in" ? "inEdges" : "edges", o = 0; o < this.nodes.length; o++)
          this.nodes[o].__visited = !1;
        if (!e.call(a, r, null))
          for (var s = [r]; s.length; )
            for (var l = s.shift(), u = l[i], o = 0; o < u.length; o++) {
              var c = u[o], d = c.node1 === l ? c.node2 : c.node1;
              if (!d.__visited) {
                if (e.call(a, d, l))
                  return;
                s.push(d), d.__visited = !0;
              }
            }
      }
    }, t.prototype.update = function() {
      for (var e = this.data, r = this.edgeData, n = this.nodes, a = this.edges, i = 0, o = n.length; i < o; i++)
        n[i].dataIndex = -1;
      for (var i = 0, o = e.count(); i < o; i++)
        n[e.getRawIndex(i)].dataIndex = i;
      r.filterSelf(function(s) {
        var l = a[r.getRawIndex(s)];
        return l.node1.dataIndex >= 0 && l.node2.dataIndex >= 0;
      });
      for (var i = 0, o = a.length; i < o; i++)
        a[i].dataIndex = -1;
      for (var i = 0, o = r.count(); i < o; i++)
        a[r.getRawIndex(i)].dataIndex = i;
    }, t.prototype.clone = function() {
      for (var e = new t(this._directed), r = this.nodes, n = this.edges, a = 0; a < r.length; a++)
        e.addNode(r[a].id, r[a].dataIndex);
      for (var a = 0; a < n.length; a++) {
        var i = n[a];
        e.addEdge(i.node1.id, i.node2.id, i.dataIndex);
      }
      return e;
    }, t;
  }()
), Li = (
  /** @class */
  function() {
    function t(e, r) {
      this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = e ?? "", this.dataIndex = r ?? -1;
    }
    return t.prototype.degree = function() {
      return this.edges.length;
    }, t.prototype.inDegree = function() {
      return this.inEdges.length;
    }, t.prototype.outDegree = function() {
      return this.outEdges.length;
    }, t.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var r = this.hostGraph, n = r.data.getItemModel(this.dataIndex);
        return n.getModel(e);
      }
    }, t.prototype.getAdjacentDataIndices = function() {
      for (var e = {
        edge: [],
        node: []
      }, r = 0; r < this.edges.length; r++) {
        var n = this.edges[r];
        n.dataIndex < 0 || (e.edge.push(n.dataIndex), e.node.push(n.node1.dataIndex, n.node2.dataIndex));
      }
      return e;
    }, t.prototype.getTrajectoryDataIndices = function() {
      for (var e = J(), r = J(), n = 0; n < this.edges.length; n++) {
        var a = this.edges[n];
        if (!(a.dataIndex < 0)) {
          e.set(a.dataIndex, !0);
          for (var i = [a.node1], o = [a.node2], s = 0; s < i.length; ) {
            var l = i[s];
            s++, r.set(l.dataIndex, !0);
            for (var u = 0; u < l.inEdges.length; u++)
              e.set(l.inEdges[u].dataIndex, !0), i.push(l.inEdges[u].node1);
          }
          for (s = 0; s < o.length; ) {
            var c = o[s];
            s++, r.set(c.dataIndex, !0);
            for (var u = 0; u < c.outEdges.length; u++)
              e.set(c.outEdges[u].dataIndex, !0), o.push(c.outEdges[u].node2);
          }
        }
      }
      return {
        edge: e.keys(),
        node: r.keys()
      };
    }, t;
  }()
), _R = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.dataIndex = -1, this.node1 = e, this.node2 = r, this.dataIndex = n ?? -1;
    }
    return t.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var r = this.hostGraph, n = r.edgeData.getItemModel(this.dataIndex);
        return n.getModel(e);
      }
    }, t.prototype.getAdjacentDataIndices = function() {
      return {
        edge: [this.dataIndex],
        node: [this.node1.dataIndex, this.node2.dataIndex]
      };
    }, t.prototype.getTrajectoryDataIndices = function() {
      var e = J(), r = J();
      e.set(this.dataIndex, !0);
      for (var n = [this.node1], a = [this.node2], i = 0; i < n.length; ) {
        var o = n[i];
        i++, r.set(o.dataIndex, !0);
        for (var s = 0; s < o.inEdges.length; s++)
          e.set(o.inEdges[s].dataIndex, !0), n.push(o.inEdges[s].node1);
      }
      for (i = 0; i < a.length; ) {
        var l = a[i];
        i++, r.set(l.dataIndex, !0);
        for (var s = 0; s < l.outEdges.length; s++)
          e.set(l.outEdges[s].dataIndex, !0), a.push(l.outEdges[s].node2);
      }
      return {
        edge: e.keys(),
        node: r.keys()
      };
    }, t;
  }()
);
function yR(t, e) {
  return {
    /**
     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.
     */
    getValue: function(r) {
      var n = this[t][e];
      return n.getStore().get(n.getDimensionIndex(r || "value"), this.dataIndex);
    },
    // TODO: TYPE stricter type.
    setVisual: function(r, n) {
      this.dataIndex >= 0 && this[t][e].setItemVisual(this.dataIndex, r, n);
    },
    getVisual: function(r) {
      return this[t][e].getItemVisual(this.dataIndex, r);
    },
    setLayout: function(r, n) {
      this.dataIndex >= 0 && this[t][e].setItemLayout(this.dataIndex, r, n);
    },
    getLayout: function() {
      return this[t][e].getItemLayout(this.dataIndex);
    },
    getGraphicEl: function() {
      return this[t][e].getItemGraphicEl(this.dataIndex);
    },
    getRawIndex: function() {
      return this[t][e].getRawIndex(this.dataIndex);
    }
  };
}
_t(Li, yR("hostGraph", "data"));
_t(_R, yR("hostGraph", "edgeData"));
function bR(t, e, r, n, a) {
  for (var i = new t9(n), o = 0; o < t.length; o++)
    i.addNode(Pt(
      // Id, name, dataIndex
      t[o].id,
      t[o].name,
      o
    ), o);
  for (var s = [], l = [], u = 0, o = 0; o < e.length; o++) {
    var c = e[o], d = c.source, p = c.target;
    i.addEdge(d, p, u) && (l.push(c), s.push(Pt(St(c.id, null), d + " > " + p)), u++);
  }
  var f = r.get("coordinateSystem"), h;
  if (f === "cartesian2d" || f === "polar")
    h = da(t, r);
  else {
    var g = Ku.get(f), v = g ? g.dimensions || [] : [];
    xe(v, "value") < 0 && v.concat(["value"]);
    var m = Xu(t, {
      coordDimensions: v,
      encodeDefine: r.getEncode()
    }).dimensions;
    h = new rr(m, r), h.initData(t);
  }
  var _ = new rr(["value"], r);
  return _.initData(l, s), a && a(h, _), tR({
    mainData: h,
    struct: i,
    structAttr: "graph",
    datas: {
      node: h,
      edge: _
    },
    datasAttr: {
      node: "data",
      edge: "edgeData"
    }
  }), i.update(), i;
}
var r9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r;
    }
    return e.prototype.init = function(r) {
      t.prototype.init.apply(this, arguments);
      var n = this;
      function a() {
        return n._categoriesData;
      }
      this.legendVisualProvider = new nc(a, a), this.fillDataTextStyle(r.edges || r.links), this._updateCategoriesData();
    }, e.prototype.mergeOption = function(r) {
      t.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(r.edges || r.links), this._updateCategoriesData();
    }, e.prototype.mergeDefaultAndTheme = function(r) {
      t.prototype.mergeDefaultAndTheme.apply(this, arguments), io(r, "edgeLabel", ["show"]);
    }, e.prototype.getInitialData = function(r, n) {
      var a = r.edges || r.links || [], i = r.data || r.nodes || [], o = this;
      if (i && a) {
        V8(this);
        var s = bR(i, a, this, !0, l);
        return w(s.edges, function(u) {
          $8(u.node1, u.node2, this, u.dataIndex);
        }, this), s.data;
      }
      function l(u, c) {
        u.wrapMethod("getItemModel", function(h) {
          var g = o._categoriesModels, v = h.getShallow("category"), m = g[v];
          return m && (m.parentModel = h.parentModel, h.parentModel = m), h;
        });
        var d = He.prototype.getModel;
        function p(h, g) {
          var v = d.call(this, h, g);
          return v.resolveParentPath = f, v;
        }
        c.wrapMethod("getItemModel", function(h) {
          return h.resolveParentPath = f, h.getModel = p, h;
        });
        function f(h) {
          if (h && (h[0] === "label" || h[1] === "label")) {
            var g = h.slice();
            return h[0] === "label" ? g[0] = "edgeLabel" : h[1] === "label" && (g[1] = "edgeLabel"), g;
          }
          return h;
        }
      }
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.getCategoriesData = function() {
      return this._categoriesData;
    }, e.prototype.formatTooltip = function(r, n, a) {
      if (a === "edge") {
        var i = this.getData(), o = this.getDataParams(r, a), s = i.graph.getEdgeByIndex(r), l = i.getName(s.node1.dataIndex), u = i.getName(s.node2.dataIndex), c = [];
        return l != null && c.push(l), u != null && c.push(u), Mt("nameValue", {
          name: c.join(" > "),
          value: o.value,
          noValue: o.value == null
        });
      }
      var d = WM({
        series: this,
        dataIndex: r,
        multipleSeries: n
      });
      return d;
    }, e.prototype._updateCategoriesData = function() {
      var r = $(this.option.categories || [], function(a) {
        return a.value != null ? a : G({
          value: 0
        }, a);
      }), n = new rr(["value"], this);
      n.initData(r), this._categoriesData = n, this._categoriesModels = n.mapArray(function(a) {
        return n.getItemModel(a);
      });
    }, e.prototype.setZoom = function(r) {
      this.option.zoom = r;
    }, e.prototype.setCenter = function(r) {
      this.option.center = r;
    }, e.prototype.isAnimationEnabled = function() {
      return t.prototype.isAnimationEnabled.call(this) && !(this.get("layout") === "force" && this.get(["force", "layoutAnimation"]));
    }, e.type = "series.graph", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // Default option for all coordinate systems
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // polarIndex: 0,
      // geoIndex: 0,
      legendHoverLink: !0,
      layout: null,
      // Configuration of circular layout
      circular: {
        rotateLabel: !1
      },
      // Configuration of force directed layout
      force: {
        initLayout: null,
        // Node repulsion. Can be an array to represent range.
        repulsion: [0, 50],
        gravity: 0.1,
        // Initial friction
        friction: 0.6,
        // Edge length. Can be an array to represent range.
        edgeLength: 30,
        layoutAnimation: !0
      },
      left: "center",
      top: "center",
      // right: null,
      // bottom: null,
      // width: '80%',
      // height: '80%',
      symbol: "circle",
      symbolSize: 10,
      edgeSymbol: ["none", "none"],
      edgeSymbolSize: 10,
      edgeLabel: {
        position: "middle",
        distance: 5
      },
      draggable: !1,
      roam: !1,
      // Default on center of graph
      center: null,
      zoom: 1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.6,
      // cursor: null,
      // categories: [],
      // data: []
      // Or
      // nodes: []
      //
      // links: []
      // Or
      // edges: []
      label: {
        show: !1,
        formatter: "{b}"
      },
      itemStyle: {},
      lineStyle: {
        color: "#aaa",
        width: 1,
        opacity: 0.5
      },
      emphasis: {
        scale: !0,
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(et)
), n9 = {
  type: "graphRoam",
  event: "graphRoam",
  update: "none"
};
function Tre(t) {
  t.registerChartView(e9), t.registerSeriesModel(r9), t.registerProcessor(B8), t.registerVisual(F8), t.registerVisual(G8), t.registerLayout(H8), t.registerLayout(t.PRIORITY.VISUAL.POST_CHART_LAYOUT, q8), t.registerLayout(K8), t.registerCoordinateSystem("graphView", {
    dimensions: ic.dimensions,
    create: X8
  }), t.registerAction({
    type: "focusNodeAdjacency",
    event: "focusNodeAdjacency",
    update: "series:focusNodeAdjacency"
  }, dt), t.registerAction({
    type: "unfocusNodeAdjacency",
    event: "unfocusNodeAdjacency",
    update: "series:unfocusNodeAdjacency"
  }, dt), t.registerAction(n9, function(e, r, n) {
    r.eachComponent({
      mainType: "series",
      query: e
    }, function(a) {
      var i = a.coordinateSystem, o = Jy(i, e, void 0, n);
      a.setCenter && a.setCenter(o.center), a.setZoom && a.setZoom(o.zoom);
    });
  });
}
var a9 = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
    }
    return t;
  }()
), i9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "pointer", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new a9();
    }, e.prototype.buildPath = function(r, n) {
      var a = Math.cos, i = Math.sin, o = n.r, s = n.width, l = n.angle, u = n.x - a(l) * s * (s >= o / 3 ? 1 : 2), c = n.y - i(l) * s * (s >= o / 3 ? 1 : 2);
      l = n.angle - Math.PI / 2, r.moveTo(u, c), r.lineTo(n.x + a(l) * s, n.y + i(l) * s), r.lineTo(n.x + a(n.angle) * o, n.y + i(n.angle) * o), r.lineTo(n.x - a(l) * s, n.y - i(l) * s), r.lineTo(u, c);
    }, e;
  }(Ce)
);
function o9(t, e) {
  var r = t.get("center"), n = e.getWidth(), a = e.getHeight(), i = Math.min(n, a), o = q(r[0], e.getWidth()), s = q(r[1], e.getHeight()), l = q(t.get("radius"), i / 2);
  return {
    cx: o,
    cy: s,
    r: l
  };
}
function id(t, e) {
  var r = t == null ? "" : t + "";
  return e && (Y(e) ? r = e.replace("{value}", r) : ae(e) && (r = e(t))), r;
}
var s9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      this.group.removeAll();
      var i = r.get(["axisLine", "lineStyle", "color"]), o = o9(r, a);
      this._renderMain(r, n, a, i, o), this._data = r.getData();
    }, e.prototype.dispose = function() {
    }, e.prototype._renderMain = function(r, n, a, i, o) {
      var s = this.group, l = r.get("clockwise"), u = -r.get("startAngle") / 180 * Math.PI, c = -r.get("endAngle") / 180 * Math.PI, d = r.getModel("axisLine"), p = d.get("roundCap"), f = p ? Ap : or, h = d.get("show"), g = d.getModel("lineStyle"), v = g.get("width"), m = [u, c];
      ty(m, !l), u = m[0], c = m[1];
      for (var _ = c - u, y = u, b = [], S = 0; h && S < i.length; S++) {
        var E = Math.min(Math.max(i[S][0], 0), 1);
        c = u + _ * E;
        var T = new f({
          shape: {
            startAngle: y,
            endAngle: c,
            cx: o.cx,
            cy: o.cy,
            clockwise: l,
            r0: o.r - v,
            r: o.r
          },
          silent: !0
        });
        T.setStyle({
          fill: i[S][1]
        }), T.setStyle(g.getLineStyle(
          // Because we use sector to simulate arc
          // so the properties for stroking are useless
          ["color", "width"]
        )), b.push(T), y = c;
      }
      b.reverse(), w(b, function(C) {
        return s.add(C);
      });
      var x = function(C) {
        if (C <= 0)
          return i[0][1];
        var A;
        for (A = 0; A < i.length; A++)
          if (i[A][0] >= C && (A === 0 ? 0 : i[A - 1][0]) < C)
            return i[A][1];
        return i[A - 1][1];
      };
      this._renderTicks(r, n, a, x, o, u, c, l, v), this._renderTitleAndDetail(r, n, a, x, o), this._renderAnchor(r, o), this._renderPointer(r, n, a, x, o, u, c, l, v);
    }, e.prototype._renderTicks = function(r, n, a, i, o, s, l, u, c) {
      for (var d = this.group, p = o.cx, f = o.cy, h = o.r, g = +r.get("min"), v = +r.get("max"), m = r.getModel("splitLine"), _ = r.getModel("axisTick"), y = r.getModel("axisLabel"), b = r.get("splitNumber"), S = _.get("splitNumber"), E = q(m.get("length"), h), T = q(_.get("length"), h), x = s, C = (l - s) / b, A = C / S, D = m.getModel("lineStyle").getLineStyle(), M = _.getModel("lineStyle").getLineStyle(), I = m.get("distance"), N, R, O = 0; O <= b; O++) {
        if (N = Math.cos(x), R = Math.sin(x), m.get("show")) {
          var B = I ? I + c : c, L = new Ct({
            shape: {
              x1: N * (h - B) + p,
              y1: R * (h - B) + f,
              x2: N * (h - E - B) + p,
              y2: R * (h - E - B) + f
            },
            style: D,
            silent: !0
          });
          D.stroke === "auto" && L.setStyle({
            stroke: i(O / b)
          }), d.add(L);
        }
        if (y.get("show")) {
          var B = y.get("distance") + I, F = id(ut(O / b * (v - g) + g), y.get("formatter")), U = i(O / b), z = N * (h - E - B) + p, H = R * (h - E - B) + f, Z = y.get("rotate"), ee = 0;
          Z === "radial" ? (ee = -x + 2 * Math.PI, ee > Math.PI / 2 && (ee += Math.PI)) : Z === "tangential" ? ee = -x - Math.PI / 2 : ke(Z) && (ee = Z * Math.PI / 180), ee === 0 ? d.add(new Pe({
            style: Je(y, {
              text: F,
              x: z,
              y: H,
              verticalAlign: R < -0.8 ? "top" : R > 0.8 ? "bottom" : "middle",
              align: N < -0.4 ? "left" : N > 0.4 ? "right" : "center"
            }, {
              inheritColor: U
            }),
            silent: !0
          })) : d.add(new Pe({
            style: Je(y, {
              text: F,
              x: z,
              y: H,
              verticalAlign: "middle",
              align: "center"
            }, {
              inheritColor: U
            }),
            silent: !0,
            originX: z,
            originY: H,
            rotation: ee
          }));
        }
        if (_.get("show") && O !== b) {
          var B = _.get("distance");
          B = B ? B + c : c;
          for (var oe = 0; oe <= S; oe++) {
            N = Math.cos(x), R = Math.sin(x);
            var Le = new Ct({
              shape: {
                x1: N * (h - B) + p,
                y1: R * (h - B) + f,
                x2: N * (h - T - B) + p,
                y2: R * (h - T - B) + f
              },
              silent: !0,
              style: M
            });
            M.stroke === "auto" && Le.setStyle({
              stroke: i((O + oe / S) / b)
            }), d.add(Le), x += A;
          }
          x -= A;
        } else
          x += C;
      }
    }, e.prototype._renderPointer = function(r, n, a, i, o, s, l, u, c) {
      var d = this.group, p = this._data, f = this._progressEls, h = [], g = r.get(["pointer", "show"]), v = r.getModel("progress"), m = v.get("show"), _ = r.getData(), y = _.mapDimension("value"), b = +r.get("min"), S = +r.get("max"), E = [b, S], T = [s, l];
      function x(A, D) {
        var M = _.getItemModel(A), I = M.getModel("pointer"), N = q(I.get("width"), o.r), R = q(I.get("length"), o.r), O = r.get(["pointer", "icon"]), B = I.get("offsetCenter"), L = q(B[0], o.r), F = q(B[1], o.r), U = I.get("keepAspect"), z;
        return O ? z = mt(O, L - N / 2, F - R, N, R, null, U) : z = new i9({
          shape: {
            angle: -Math.PI / 2,
            width: N,
            r: R,
            x: L,
            y: F
          }
        }), z.rotation = -(D + Math.PI / 2), z.x = o.cx, z.y = o.cy, z;
      }
      function C(A, D) {
        var M = v.get("roundCap"), I = M ? Ap : or, N = v.get("overlap"), R = N ? v.get("width") : c / _.count(), O = N ? o.r - R : o.r - (A + 1) * R, B = N ? o.r : o.r - A * R, L = new I({
          shape: {
            startAngle: s,
            endAngle: D,
            cx: o.cx,
            cy: o.cy,
            clockwise: u,
            r0: O,
            r: B
          }
        });
        return N && (L.z2 = $e(_.get(y, A), [b, S], [100, 0], !0)), L;
      }
      (m || g) && (_.diff(p).add(function(A) {
        var D = _.get(y, A);
        if (g) {
          var M = x(A, s);
          rt(M, {
            rotation: -((isNaN(+D) ? T[0] : $e(D, E, T, !0)) + Math.PI / 2)
          }, r), d.add(M), _.setItemGraphicEl(A, M);
        }
        if (m) {
          var I = C(A, s), N = v.get("clip");
          rt(I, {
            shape: {
              endAngle: $e(D, E, T, N)
            }
          }, r), d.add(I), cm(r.seriesIndex, _.dataType, A, I), h[A] = I;
        }
      }).update(function(A, D) {
        var M = _.get(y, A);
        if (g) {
          var I = p.getItemGraphicEl(D), N = I ? I.rotation : s, R = x(A, N);
          R.rotation = N, Fe(R, {
            rotation: -((isNaN(+M) ? T[0] : $e(M, E, T, !0)) + Math.PI / 2)
          }, r), d.add(R), _.setItemGraphicEl(A, R);
        }
        if (m) {
          var O = f[D], B = O ? O.shape.endAngle : s, L = C(A, B), F = v.get("clip");
          Fe(L, {
            shape: {
              endAngle: $e(M, E, T, F)
            }
          }, r), d.add(L), cm(r.seriesIndex, _.dataType, A, L), h[A] = L;
        }
      }).execute(), _.each(function(A) {
        var D = _.getItemModel(A), M = D.getModel("emphasis"), I = M.get("focus"), N = M.get("blurScope"), R = M.get("disabled");
        if (g) {
          var O = _.getItemGraphicEl(A), B = _.getItemVisual(A, "style"), L = B.fill;
          if (O instanceof Bt) {
            var F = O.style;
            O.useStyle(G({
              image: F.image,
              x: F.x,
              y: F.y,
              width: F.width,
              height: F.height
            }, B));
          } else
            O.useStyle(B), O.type !== "pointer" && O.setColor(L);
          O.setStyle(D.getModel(["pointer", "itemStyle"]).getItemStyle()), O.style.fill === "auto" && O.setStyle("fill", i($e(_.get(y, A), E, [0, 1], !0))), O.z2EmphasisLift = 0, zt(O, D), lt(O, I, N, R);
        }
        if (m) {
          var U = h[A];
          U.useStyle(_.getItemVisual(A, "style")), U.setStyle(D.getModel(["progress", "itemStyle"]).getItemStyle()), U.z2EmphasisLift = 0, zt(U, D), lt(U, I, N, R);
        }
      }), this._progressEls = h);
    }, e.prototype._renderAnchor = function(r, n) {
      var a = r.getModel("anchor"), i = a.get("show");
      if (i) {
        var o = a.get("size"), s = a.get("icon"), l = a.get("offsetCenter"), u = a.get("keepAspect"), c = mt(s, n.cx - o / 2 + q(l[0], n.r), n.cy - o / 2 + q(l[1], n.r), o, o, null, u);
        c.z2 = a.get("showAbove") ? 1 : 0, c.setStyle(a.getModel("itemStyle").getItemStyle()), this.group.add(c);
      }
    }, e.prototype._renderTitleAndDetail = function(r, n, a, i, o) {
      var s = this, l = r.getData(), u = l.mapDimension("value"), c = +r.get("min"), d = +r.get("max"), p = new de(), f = [], h = [], g = r.isAnimationEnabled(), v = r.get(["pointer", "showAbove"]);
      l.diff(this._data).add(function(m) {
        f[m] = new Pe({
          silent: !0
        }), h[m] = new Pe({
          silent: !0
        });
      }).update(function(m, _) {
        f[m] = s._titleEls[_], h[m] = s._detailEls[_];
      }).execute(), l.each(function(m) {
        var _ = l.getItemModel(m), y = l.get(u, m), b = new de(), S = i($e(y, [c, d], [0, 1], !0)), E = _.getModel("title");
        if (E.get("show")) {
          var T = E.get("offsetCenter"), x = o.cx + q(T[0], o.r), C = o.cy + q(T[1], o.r), A = f[m];
          A.attr({
            z2: v ? 0 : 2,
            style: Je(E, {
              x,
              y: C,
              text: l.getName(m),
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: S
            })
          }), b.add(A);
        }
        var D = _.getModel("detail");
        if (D.get("show")) {
          var M = D.get("offsetCenter"), I = o.cx + q(M[0], o.r), N = o.cy + q(M[1], o.r), R = q(D.get("width"), o.r), O = q(D.get("height"), o.r), B = r.get(["progress", "show"]) ? l.getItemVisual(m, "style").fill : S, A = h[m], L = D.get("formatter");
          A.attr({
            z2: v ? 0 : 2,
            style: Je(D, {
              x: I,
              y: N,
              text: id(y, L),
              width: isNaN(R) ? null : R,
              height: isNaN(O) ? null : O,
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: B
            })
          }), ZD(A, {
            normal: D
          }, y, function(U) {
            return id(U, L);
          }), g && XD(A, m, l, r, {
            getFormattedLabel: function(U, z, H, Z, ee, oe) {
              return id(oe ? oe.interpolatedValue : y, L);
            }
          }), b.add(A);
        }
        p.add(b);
      }), this.group.add(p), this._titleEls = f, this._detailEls = h;
    }, e.type = "gauge", e;
  }(Ke)
), l9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.visualStyleAccessPath = "itemStyle", r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return Vs(this, ["value"]);
    }, e.type = "series.gauge", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      legendHoverLink: !0,
      radius: "75%",
      startAngle: 225,
      endAngle: -45,
      clockwise: !0,
      // 最小值
      min: 0,
      // 最大值
      max: 100,
      // 分割段数，默认为10
      splitNumber: 10,
      // 坐标轴线
      axisLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        roundCap: !1,
        lineStyle: {
          color: [[1, "#E6EBF8"]],
          width: 10
        }
      },
      // 坐标轴线
      progress: {
        // 默认显示，属性show控制显示与否
        show: !1,
        overlap: !0,
        width: 10,
        roundCap: !1,
        clip: !0
      },
      // 分隔线
      splitLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        // 属性length控制线长
        length: 10,
        distance: 10,
        // 属性lineStyle（详见lineStyle）控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 3,
          type: "solid"
        }
      },
      // 坐标轴小标记
      axisTick: {
        // 属性show控制显示与否，默认不显示
        show: !0,
        // 每份split细分多少段
        splitNumber: 5,
        // 属性length控制线长
        length: 6,
        distance: 10,
        // 属性lineStyle控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 1,
          type: "solid"
        }
      },
      axisLabel: {
        show: !0,
        distance: 15,
        // formatter: null,
        color: "#464646",
        fontSize: 12,
        rotate: 0
      },
      pointer: {
        icon: null,
        offsetCenter: [0, 0],
        show: !0,
        showAbove: !0,
        length: "60%",
        width: 6,
        keepAspect: !1
      },
      anchor: {
        show: !1,
        showAbove: !1,
        size: 6,
        icon: "circle",
        offsetCenter: [0, 0],
        keepAspect: !1,
        itemStyle: {
          color: "#fff",
          borderWidth: 0,
          borderColor: "#5470c6"
        }
      },
      title: {
        show: !0,
        // x, y，单位px
        offsetCenter: [0, "20%"],
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 16,
        valueAnimation: !1
      },
      detail: {
        show: !0,
        backgroundColor: "rgba(0,0,0,0)",
        borderWidth: 0,
        borderColor: "#ccc",
        width: 100,
        height: null,
        padding: [5, 10],
        // x, y，单位px
        offsetCenter: [0, "40%"],
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 30,
        fontWeight: "bold",
        lineHeight: 30,
        valueAnimation: !1
      }
    }, e;
  }(et)
);
function xre(t) {
  t.registerChartView(s9), t.registerSeriesModel(l9);
}
var u9 = ["itemStyle", "opacity"], c9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n) {
      var a = t.call(this) || this, i = a, o = new lr(), s = new Pe();
      return i.setTextContent(s), a.setTextGuideLine(o), a.updateData(r, n, !0), a;
    }
    return e.prototype.updateData = function(r, n, a) {
      var i = this, o = r.hostModel, s = r.getItemModel(n), l = r.getItemLayout(n), u = s.getModel("emphasis"), c = s.get(u9);
      c = c ?? 1, a || rn(i), i.useStyle(r.getItemVisual(n, "style")), i.style.lineJoin = "round", a ? (i.setShape({
        points: l.points
      }), i.style.opacity = 0, rt(i, {
        style: {
          opacity: c
        }
      }, o, n)) : Fe(i, {
        style: {
          opacity: c
        },
        shape: {
          points: l.points
        }
      }, o, n), zt(i, s), this._updateLabel(r, n), lt(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(r, n) {
      var a = this, i = this.getTextGuideLine(), o = a.getTextContent(), s = r.hostModel, l = r.getItemModel(n), u = r.getItemLayout(n), c = u.label, d = r.getItemVisual(n, "style"), p = d.fill;
      Vt(
        // position will not be used in setLabelStyle
        o,
        Dt(l),
        {
          labelFetcher: r.hostModel,
          labelDataIndex: n,
          defaultOpacity: d.opacity,
          defaultText: r.getName(n)
        },
        {
          normal: {
            align: c.textAlign,
            verticalAlign: c.verticalAlign
          }
        }
      ), a.setTextConfig({
        local: !0,
        inside: !!c.inside,
        insideStroke: p,
        // insideFill: 'auto',
        outsideFill: p
      });
      var f = c.linePoints;
      i.setShape({
        points: f
      }), a.textGuideLineConfig = {
        anchor: f ? new Ee(f[0][0], f[0][1]) : null
      }, Fe(o, {
        style: {
          x: c.x,
          y: c.y
        }
      }, s, n), o.attr({
        rotation: c.rotation,
        originX: c.x,
        originY: c.y,
        z2: 10
      }), Gy(a, Uy(l), {
        // Default use item visual color
        stroke: p
      });
    }, e;
  }(sr)
), d9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.ignoreLabelLineUpdate = !0, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this._data, s = this.group;
      i.diff(o).add(function(l) {
        var u = new c9(i, l);
        i.setItemGraphicEl(l, u), s.add(u);
      }).update(function(l, u) {
        var c = o.getItemGraphicEl(u);
        c.updateData(i, l), s.add(c), i.setItemGraphicEl(l, c);
      }).remove(function(l) {
        var u = o.getItemGraphicEl(l);
        gu(u, r, l);
      }).execute(), this._data = i;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.prototype.dispose = function() {
    }, e.type = "funnel", e;
  }(Ke)
), p9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r) {
      t.prototype.init.apply(this, arguments), this.legendVisualProvider = new nc(K(this.getData, this), K(this.getRawData, this)), this._defaultLabelLine(r);
    }, e.prototype.getInitialData = function(r, n) {
      return Vs(this, {
        coordDimensions: ["value"],
        encodeDefaulter: _e(_y, this)
      });
    }, e.prototype._defaultLabelLine = function(r) {
      io(r, "labelLine", ["show"]);
      var n = r.labelLine, a = r.emphasis.labelLine;
      n.show = n.show && r.label.show, a.show = a.show && r.emphasis.label.show;
    }, e.prototype.getDataParams = function(r) {
      var n = this.getData(), a = t.prototype.getDataParams.call(this, r), i = n.mapDimension("value"), o = n.getSum(i);
      return a.percent = o ? +(n.get(i, r) / o * 100).toFixed(2) : 0, a.$vars.push("percent"), a;
    }, e.type = "series.funnel", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      // 默认取数据最小最大值
      // min: 0,
      // max: 100,
      minSize: "0%",
      maxSize: "100%",
      sort: "descending",
      orient: "vertical",
      gap: 0,
      funnelAlign: "center",
      label: {
        show: !0,
        position: "outer"
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      labelLine: {
        show: !0,
        length: 20,
        lineStyle: {
          // color: 各异,
          width: 1
        }
      },
      itemStyle: {
        // color: 各异,
        borderColor: "#fff",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(et)
);
function f9(t, e) {
  return Et(t.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function h9(t, e) {
  for (var r = t.mapDimension("value"), n = t.mapArray(r, function(l) {
    return l;
  }), a = [], i = e === "ascending", o = 0, s = t.count(); o < s; o++)
    a[o] = o;
  return ae(e) ? a.sort(e) : e !== "none" && a.sort(function(l, u) {
    return i ? n[l] - n[u] : n[u] - n[l];
  }), a;
}
function g9(t) {
  var e = t.hostModel, r = e.get("orient");
  t.each(function(n) {
    var a = t.getItemModel(n), i = a.getModel("label"), o = i.get("position"), s = a.getModel("labelLine"), l = t.getItemLayout(n), u = l.points, c = o === "inner" || o === "inside" || o === "center" || o === "insideLeft" || o === "insideRight", d, p, f, h;
    if (c)
      o === "insideLeft" ? (p = (u[0][0] + u[3][0]) / 2 + 5, f = (u[0][1] + u[3][1]) / 2, d = "left") : o === "insideRight" ? (p = (u[1][0] + u[2][0]) / 2 - 5, f = (u[1][1] + u[2][1]) / 2, d = "right") : (p = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4, f = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4, d = "center"), h = [[p, f], [p, f]];
    else {
      var g = void 0, v = void 0, m = void 0, _ = void 0, y = s.get("length");
      o === "left" ? (g = (u[3][0] + u[0][0]) / 2, v = (u[3][1] + u[0][1]) / 2, m = g - y, p = m - 5, d = "right") : o === "right" ? (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, m = g + y, p = m + 5, d = "left") : o === "top" ? (g = (u[3][0] + u[0][0]) / 2, v = (u[3][1] + u[0][1]) / 2, _ = v - y, f = _ - 5, d = "center") : o === "bottom" ? (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, _ = v + y, f = _ + 5, d = "center") : o === "rightTop" ? (g = r === "horizontal" ? u[3][0] : u[1][0], v = r === "horizontal" ? u[3][1] : u[1][1], r === "horizontal" ? (_ = v - y, f = _ - 5, d = "center") : (m = g + y, p = m + 5, d = "top")) : o === "rightBottom" ? (g = u[2][0], v = u[2][1], r === "horizontal" ? (_ = v + y, f = _ + 5, d = "center") : (m = g + y, p = m + 5, d = "bottom")) : o === "leftTop" ? (g = u[0][0], v = r === "horizontal" ? u[0][1] : u[1][1], r === "horizontal" ? (_ = v - y, f = _ - 5, d = "center") : (m = g - y, p = m - 5, d = "right")) : o === "leftBottom" ? (g = r === "horizontal" ? u[1][0] : u[3][0], v = r === "horizontal" ? u[1][1] : u[2][1], r === "horizontal" ? (_ = v + y, f = _ + 5, d = "center") : (m = g - y, p = m - 5, d = "right")) : (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, r === "horizontal" ? (_ = v + y, f = _ + 5, d = "center") : (m = g + y, p = m + 5, d = "left")), r === "horizontal" ? (m = g, p = m) : (_ = v, f = _), h = [[g, v], [m, _]];
    }
    l.label = {
      linePoints: h,
      x: p,
      y: f,
      verticalAlign: "middle",
      textAlign: d,
      inside: c
    };
  });
}
function v9(t, e) {
  t.eachSeriesByType("funnel", function(r) {
    var n = r.getData(), a = n.mapDimension("value"), i = r.get("sort"), o = f9(r, e), s = r.get("orient"), l = o.width, u = o.height, c = h9(n, i), d = o.x, p = o.y, f = s === "horizontal" ? [q(r.get("minSize"), u), q(r.get("maxSize"), u)] : [q(r.get("minSize"), l), q(r.get("maxSize"), l)], h = n.getDataExtent(a), g = r.get("min"), v = r.get("max");
    g == null && (g = Math.min(h[0], 0)), v == null && (v = h[1]);
    var m = r.get("funnelAlign"), _ = r.get("gap"), y = s === "horizontal" ? l : u, b = (y - _ * (n.count() - 1)) / n.count(), S = function(N, R) {
      if (s === "horizontal") {
        var O = n.get(a, N) || 0, B = $e(O, [g, v], f, !0), L = void 0;
        switch (m) {
          case "top":
            L = p;
            break;
          case "center":
            L = p + (u - B) / 2;
            break;
          case "bottom":
            L = p + (u - B);
            break;
        }
        return [[R, L], [R, L + B]];
      }
      var F = n.get(a, N) || 0, U = $e(F, [g, v], f, !0), z;
      switch (m) {
        case "left":
          z = d;
          break;
        case "center":
          z = d + (l - U) / 2;
          break;
        case "right":
          z = d + l - U;
          break;
      }
      return [[z, R], [z + U, R]];
    };
    i === "ascending" && (b = -b, _ = -_, s === "horizontal" ? d += l : p += u, c = c.reverse());
    for (var E = 0; E < c.length; E++) {
      var T = c[E], x = c[E + 1], C = n.getItemModel(T);
      if (s === "horizontal") {
        var A = C.get(["itemStyle", "width"]);
        A == null ? A = b : (A = q(A, l), i === "ascending" && (A = -A));
        var D = S(T, d), M = S(x, d + A);
        d += A + _, n.setItemLayout(T, {
          points: D.concat(M.slice().reverse())
        });
      } else {
        var I = C.get(["itemStyle", "height"]);
        I == null ? I = b : (I = q(I, u), i === "ascending" && (I = -I));
        var D = S(T, p), M = S(x, p + I);
        p += I + _, n.setItemLayout(T, {
          points: D.concat(M.slice().reverse())
        });
      }
    }
    g9(n);
  });
}
function Cre(t) {
  t.registerChartView(d9), t.registerSeriesModel(p9), t.registerLayout(v9), t.registerProcessor(rc("funnel"));
}
var m9 = 0.3, _9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._dataGroup = new de(), r._initialized = !1, r;
    }
    return e.prototype.init = function() {
      this.group.add(this._dataGroup);
    }, e.prototype.render = function(r, n, a, i) {
      this._progressiveEls = null;
      var o = this._dataGroup, s = r.getData(), l = this._data, u = r.coordinateSystem, c = u.dimensions, d = c1(r);
      s.diff(l).add(p).update(f).remove(h).execute();
      function p(v) {
        var m = u1(s, o, v, c, u);
        Kg(m, s, v, d);
      }
      function f(v, m) {
        var _ = l.getItemGraphicEl(m), y = SR(s, v, c, u);
        s.setItemGraphicEl(v, _), Fe(_, {
          shape: {
            points: y
          }
        }, r, v), rn(_), Kg(_, s, v, d);
      }
      function h(v) {
        var m = l.getItemGraphicEl(v);
        o.remove(m);
      }
      if (!this._initialized) {
        this._initialized = !0;
        var g = y9(u, r, function() {
          setTimeout(function() {
            o.removeClipPath();
          });
        });
        o.setClipPath(g);
      }
      this._data = s;
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      this._initialized = !0, this._data = null, this._dataGroup.removeAll();
    }, e.prototype.incrementalRender = function(r, n, a) {
      for (var i = n.getData(), o = n.coordinateSystem, s = o.dimensions, l = c1(n), u = this._progressiveEls = [], c = r.start; c < r.end; c++) {
        var d = u1(i, this._dataGroup, c, s, o);
        d.incremental = !0, Kg(d, i, c, l), u.push(d);
      }
    }, e.prototype.remove = function() {
      this._dataGroup && this._dataGroup.removeAll(), this._data = null;
    }, e.type = "parallel", e;
  }(Ke)
);
function y9(t, e, r) {
  var n = t.model, a = t.getRect(), i = new Re({
    shape: {
      x: a.x,
      y: a.y,
      width: a.width,
      height: a.height
    }
  }), o = n.get("layout") === "horizontal" ? "width" : "height";
  return i.setShape(o, 0), rt(i, {
    shape: {
      width: a.width,
      height: a.height
    }
  }, e, r), i;
}
function SR(t, e, r, n) {
  for (var a = [], i = 0; i < r.length; i++) {
    var o = r[i], s = t.get(t.mapDimension(o), e);
    b9(s, n.getAxis(o).type) || a.push(n.dataToPoint(s, o));
  }
  return a;
}
function u1(t, e, r, n, a) {
  var i = SR(t, r, n, a), o = new lr({
    shape: {
      points: i
    },
    // silent: true,
    z2: 10
  });
  return e.add(o), t.setItemGraphicEl(r, o), o;
}
function c1(t) {
  var e = t.get("smooth", !0);
  return e === !0 && (e = m9), e = ra(e), ou(e) && (e = 0), {
    smooth: e
  };
}
function Kg(t, e, r, n) {
  t.useStyle(e.getItemVisual(r, "style")), t.style.fill = null, t.setShape("smooth", n.smooth);
  var a = e.getItemModel(r), i = a.getModel("emphasis");
  zt(t, a, "lineStyle"), lt(t, i.get("focus"), i.get("blurScope"), i.get("disabled"));
}
function b9(t, e) {
  return e === "category" ? t == null : t == null || isNaN(t);
}
var S9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.visualStyleAccessPath = "lineStyle", r.visualDrawType = "stroke", r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return da(null, this, {
        useEncodeDefaulter: K(E9, null, this)
      });
    }, e.prototype.getRawIndicesByActiveState = function(r) {
      var n = this.coordinateSystem, a = this.getData(), i = [];
      return n.eachActiveState(a, function(o, s) {
        r === o && i.push(a.getRawIndex(s));
      }), i;
    }, e.type = "series.parallel", e.dependencies = ["parallel"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "parallel",
      parallelIndex: 0,
      label: {
        show: !1
      },
      inactiveOpacity: 0.05,
      activeOpacity: 1,
      lineStyle: {
        width: 1,
        opacity: 0.45,
        type: "solid"
      },
      emphasis: {
        label: {
          show: !1
        }
      },
      progressive: 500,
      smooth: !1,
      animationEasing: "linear"
    }, e;
  }(et)
);
function E9(t) {
  var e = t.ecModel.getComponent("parallel", t.get("parallelIndex"));
  if (e) {
    var r = {};
    return w(e.dimensions, function(n) {
      var a = T9(n);
      r[n] = a;
    }), r;
  }
}
function T9(t) {
  return +t.replace("dim", "");
}
var x9 = ["lineStyle", "opacity"], C9 = {
  seriesType: "parallel",
  reset: function(t, e) {
    var r = t.coordinateSystem, n = {
      normal: t.get(["lineStyle", "opacity"]),
      active: t.get("activeOpacity"),
      inactive: t.get("inactiveOpacity")
    };
    return {
      progress: function(a, i) {
        r.eachActiveState(i, function(o, s) {
          var l = n[o];
          if (o === "normal" && i.hasItemOption) {
            var u = i.getItemModel(s).get(x9, !0);
            u != null && (l = u);
          }
          var c = i.ensureUniqueItemVisual(s, "style");
          c.opacity = l;
        }, a.start, a.end);
      }
    };
  }
};
function A9(t) {
  w9(t), D9(t);
}
function w9(t) {
  if (!t.parallel) {
    var e = !1;
    w(t.series, function(r) {
      r && r.type === "parallel" && (e = !0);
    }), e && (t.parallel = [{}]);
  }
}
function D9(t) {
  var e = Ye(t.parallelAxis);
  w(e, function(r) {
    if (se(r)) {
      var n = r.parallelIndex || 0, a = Ye(t.parallel)[n];
      a && a.parallelAxisDefault && be(r, a.parallelAxisDefault, !1);
    }
  });
}
var M9 = 5, I9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      this._model = r, this._api = a, this._handlers || (this._handlers = {}, w(N9, function(i, o) {
        a.getZr().on(o, this._handlers[o] = K(i, this));
      }, this)), Gs(this, "_throttledDispatchExpand", r.get("axisExpandRate"), "fixRate");
    }, e.prototype.dispose = function(r, n) {
      yu(this, "_throttledDispatchExpand"), w(this._handlers, function(a, i) {
        n.getZr().off(i, a);
      }), this._handlers = null;
    }, e.prototype._throttledDispatchExpand = function(r) {
      this._dispatchExpand(r);
    }, e.prototype._dispatchExpand = function(r) {
      r && this._api.dispatchAction(G({
        type: "parallelAxisExpand"
      }, r));
    }, e.type = "parallel", e;
  }(st)
), N9 = {
  mousedown: function(t) {
    Zg(this, "click") && (this._mouseDownPoint = [t.offsetX, t.offsetY]);
  },
  mouseup: function(t) {
    var e = this._mouseDownPoint;
    if (Zg(this, "click") && e) {
      var r = [t.offsetX, t.offsetY], n = Math.pow(e[0] - r[0], 2) + Math.pow(e[1] - r[1], 2);
      if (n > M9)
        return;
      var a = this._model.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX, t.offsetY]);
      a.behavior !== "none" && this._dispatchExpand({
        axisExpandWindow: a.axisExpandWindow
      });
    }
    this._mouseDownPoint = null;
  },
  mousemove: function(t) {
    if (!(this._mouseDownPoint || !Zg(this, "mousemove"))) {
      var e = this._model, r = e.coordinateSystem.getSlidedAxisExpandWindow([t.offsetX, t.offsetY]), n = r.behavior;
      n === "jump" && this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")), this._throttledDispatchExpand(n === "none" ? null : {
        axisExpandWindow: r.axisExpandWindow,
        // Jumping uses animation, and sliding suppresses animation.
        animation: n === "jump" ? null : {
          duration: 0
          // Disable animation.
        }
      });
    }
  }
};
function Zg(t, e) {
  var r = t._model;
  return r.get("axisExpandable") && r.get("axisExpandTriggerOn") === e;
}
var R9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function() {
      t.prototype.init.apply(this, arguments), this.mergeOption({});
    }, e.prototype.mergeOption = function(r) {
      var n = this.option;
      r && be(n, r, !0), this._initDimensions();
    }, e.prototype.contains = function(r, n) {
      var a = r.get("parallelIndex");
      return a != null && n.getComponent("parallel", a) === this;
    }, e.prototype.setAxisExpand = function(r) {
      w(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(n) {
        r.hasOwnProperty(n) && (this.option[n] = r[n]);
      }, this);
    }, e.prototype._initDimensions = function() {
      var r = this.dimensions = [], n = this.parallelAxisIndex = [], a = ze(this.ecModel.queryComponents({
        mainType: "parallelAxis"
      }), function(i) {
        return (i.get("parallelIndex") || 0) === this.componentIndex;
      }, this);
      w(a, function(i) {
        r.push("dim" + i.get("dim")), n.push(i.componentIndex);
      });
    }, e.type = "parallel", e.dependencies = ["parallelAxis"], e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      layout: "horizontal",
      // FIXME
      // naming?
      axisExpandable: !1,
      axisExpandCenter: null,
      axisExpandCount: 0,
      axisExpandWidth: 50,
      axisExpandRate: 17,
      axisExpandDebounce: 50,
      // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.
      // Do not doc to user until necessary.
      axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
      axisExpandTriggerOn: "click",
      parallelAxisDefault: null
    }, e;
  }(De)
), O9 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i, o) {
      var s = t.call(this, r, n, a) || this;
      return s.type = i || "value", s.axisIndex = o, s;
    }
    return e.prototype.isHorizontal = function() {
      return this.coordinateSystem.getModel().get("layout") !== "horizontal";
    }, e;
  }(on)
);
function So(t, e, r, n, a, i) {
  t = t || 0;
  var o = r[1] - r[0];
  if (a != null && (a = $o(a, [0, o])), i != null && (i = Math.max(i, a ?? 0)), n === "all") {
    var s = Math.abs(e[1] - e[0]);
    s = $o(s, [0, o]), a = i = $o(s, [a, i]), n = 0;
  }
  e[0] = $o(e[0], r), e[1] = $o(e[1], r);
  var l = Xg(e, n);
  e[n] += t;
  var u = a || 0, c = r.slice();
  l.sign < 0 ? c[0] += u : c[1] -= u, e[n] = $o(e[n], c);
  var d;
  return d = Xg(e, n), a != null && (d.sign !== l.sign || d.span < a) && (e[1 - n] = e[n] + l.sign * a), d = Xg(e, n), i != null && d.span > i && (e[1 - n] = e[n] + d.sign * i), e;
}
function Xg(t, e) {
  var r = t[e] - t[1 - e];
  return {
    span: Math.abs(r),
    sign: r > 0 ? -1 : r < 0 ? 1 : e ? -1 : 1
  };
}
function $o(t, e) {
  return Math.min(e[1] != null ? e[1] : 1 / 0, Math.max(e[0] != null ? e[0] : -1 / 0, t));
}
var Qg = w, ER = Math.min, TR = Math.max, d1 = Math.floor, L9 = Math.ceil, p1 = ut, P9 = Math.PI, k9 = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.type = "parallel", this._axesMap = J(), this._axesLayout = {}, this.dimensions = e.dimensions, this._model = e, this._init(e, r, n);
    }
    return t.prototype._init = function(e, r, n) {
      var a = e.dimensions, i = e.parallelAxisIndex;
      Qg(a, function(o, s) {
        var l = i[s], u = r.getComponent("parallelAxis", l), c = this._axesMap.set(o, new O9(o, Nf(u), [0, 0], u.get("type"), l)), d = c.type === "category";
        c.onBand = d && u.get("boundaryGap"), c.inverse = u.get("inverse"), u.axis = c, c.model = u, c.coordinateSystem = u.coordinateSystem = this;
      }, this);
    }, t.prototype.update = function(e, r) {
      this._updateAxesFromSeries(this._model, e);
    }, t.prototype.containPoint = function(e) {
      var r = this._makeLayoutInfo(), n = r.axisBase, a = r.layoutBase, i = r.pixelDimIndex, o = e[1 - i], s = e[i];
      return o >= n && o <= n + r.axisLength && s >= a && s <= a + r.layoutLength;
    }, t.prototype.getModel = function() {
      return this._model;
    }, t.prototype._updateAxesFromSeries = function(e, r) {
      r.eachSeries(function(n) {
        if (e.contains(n, r)) {
          var a = n.getData();
          Qg(this.dimensions, function(i) {
            var o = this._axesMap.get(i);
            o.scale.unionExtentFromData(a, a.mapDimension(i)), bs(o.scale, o.model);
          }, this);
        }
      }, this);
    }, t.prototype.resize = function(e, r) {
      this._rect = Et(e.getBoxLayoutParams(), {
        width: r.getWidth(),
        height: r.getHeight()
      }), this._layoutAxes();
    }, t.prototype.getRect = function() {
      return this._rect;
    }, t.prototype._makeLayoutInfo = function() {
      var e = this._model, r = this._rect, n = ["x", "y"], a = ["width", "height"], i = e.get("layout"), o = i === "horizontal" ? 0 : 1, s = r[a[o]], l = [0, s], u = this.dimensions.length, c = od(e.get("axisExpandWidth"), l), d = od(e.get("axisExpandCount") || 0, [0, u]), p = e.get("axisExpandable") && u > 3 && u > d && d > 1 && c > 0 && s > 0, f = e.get("axisExpandWindow"), h;
      if (f)
        h = od(f[1] - f[0], l), f[1] = f[0] + h;
      else {
        h = od(c * (d - 1), l);
        var g = e.get("axisExpandCenter") || d1(u / 2);
        f = [c * g - h / 2], f[1] = f[0] + h;
      }
      var v = (s - h) / (u - d);
      v < 3 && (v = 0);
      var m = [d1(p1(f[0] / c, 1)) + 1, L9(p1(f[1] / c, 1)) - 1], _ = v / c * f[0];
      return {
        layout: i,
        pixelDimIndex: o,
        layoutBase: r[n[o]],
        layoutLength: s,
        axisBase: r[n[1 - o]],
        axisLength: r[a[1 - o]],
        axisExpandable: p,
        axisExpandWidth: c,
        axisCollapseWidth: v,
        axisExpandWindow: f,
        axisCount: u,
        winInnerIndices: m,
        axisExpandWindow0Pos: _
      };
    }, t.prototype._layoutAxes = function() {
      var e = this._rect, r = this._axesMap, n = this.dimensions, a = this._makeLayoutInfo(), i = a.layout;
      r.each(function(o) {
        var s = [0, a.axisLength], l = o.inverse ? 1 : 0;
        o.setExtent(s[l], s[1 - l]);
      }), Qg(n, function(o, s) {
        var l = (a.axisExpandable ? F9 : B9)(s, a), u = {
          horizontal: {
            x: l.position,
            y: a.axisLength
          },
          vertical: {
            x: 0,
            y: l.position
          }
        }, c = {
          horizontal: P9 / 2,
          vertical: 0
        }, d = [u[i].x + e.x, u[i].y + e.y], p = c[i], f = yr();
        ho(f, f, p), Rn(f, f, d), this._axesLayout[o] = {
          position: d,
          rotation: p,
          transform: f,
          axisNameAvailableWidth: l.axisNameAvailableWidth,
          axisLabelShow: l.axisLabelShow,
          nameTruncateMaxWidth: l.nameTruncateMaxWidth,
          tickDirection: 1,
          labelDirection: 1
        };
      }, this);
    }, t.prototype.getAxis = function(e) {
      return this._axesMap.get(e);
    }, t.prototype.dataToPoint = function(e, r) {
      return this.axisCoordToPoint(this._axesMap.get(r).dataToCoord(e), r);
    }, t.prototype.eachActiveState = function(e, r, n, a) {
      n == null && (n = 0), a == null && (a = e.count());
      var i = this._axesMap, o = this.dimensions, s = [], l = [];
      w(o, function(v) {
        s.push(e.mapDimension(v)), l.push(i.get(v).model);
      });
      for (var u = this.hasAxisBrushed(), c = n; c < a; c++) {
        var d = void 0;
        if (!u)
          d = "normal";
        else {
          d = "active";
          for (var p = e.getValues(s, c), f = 0, h = o.length; f < h; f++) {
            var g = l[f].getActiveState(p[f]);
            if (g === "inactive") {
              d = "inactive";
              break;
            }
          }
        }
        r(d, c);
      }
    }, t.prototype.hasAxisBrushed = function() {
      for (var e = this.dimensions, r = this._axesMap, n = !1, a = 0, i = e.length; a < i; a++)
        r.get(e[a]).model.getActiveState() !== "normal" && (n = !0);
      return n;
    }, t.prototype.axisCoordToPoint = function(e, r) {
      var n = this._axesLayout[r];
      return Jr([e, 0], n.transform);
    }, t.prototype.getAxisLayout = function(e) {
      return le(this._axesLayout[e]);
    }, t.prototype.getSlidedAxisExpandWindow = function(e) {
      var r = this._makeLayoutInfo(), n = r.pixelDimIndex, a = r.axisExpandWindow.slice(), i = a[1] - a[0], o = [0, r.axisExpandWidth * (r.axisCount - 1)];
      if (!this.containPoint(e))
        return {
          behavior: "none",
          axisExpandWindow: a
        };
      var s = e[n] - r.layoutBase - r.axisExpandWindow0Pos, l, u = "slide", c = r.axisCollapseWidth, d = this._model.get("axisExpandSlideTriggerArea"), p = d[0] != null;
      if (c)
        p && c && s < i * d[0] ? (u = "jump", l = s - i * d[2]) : p && c && s > i * (1 - d[0]) ? (u = "jump", l = s - i * (1 - d[2])) : (l = s - i * d[1]) >= 0 && (l = s - i * (1 - d[1])) <= 0 && (l = 0), l *= r.axisExpandWidth / c, l ? So(l, a, o, "all") : u = "none";
      else {
        var f = a[1] - a[0], h = o[1] * s / f;
        a = [TR(0, h - f / 2)], a[1] = ER(o[1], a[0] + f), a[0] = a[1] - f;
      }
      return {
        axisExpandWindow: a,
        behavior: u
      };
    }, t;
  }()
);
function od(t, e) {
  return ER(TR(t, e[0]), e[1]);
}
function B9(t, e) {
  var r = e.layoutLength / (e.axisCount - 1);
  return {
    position: r * t,
    axisNameAvailableWidth: r,
    axisLabelShow: !0
  };
}
function F9(t, e) {
  var r = e.layoutLength, n = e.axisExpandWidth, a = e.axisCount, i = e.axisCollapseWidth, o = e.winInnerIndices, s, l = i, u = !1, c;
  return t < o[0] ? (s = t * i, c = i) : t <= o[1] ? (s = e.axisExpandWindow0Pos + t * n - e.axisExpandWindow[0], l = n, u = !0) : (s = r - (a - 1 - t) * i, c = i), {
    position: s,
    axisNameAvailableWidth: l,
    axisLabelShow: u,
    nameTruncateMaxWidth: c
  };
}
function G9(t, e) {
  var r = [];
  return t.eachComponent("parallel", function(n, a) {
    var i = new k9(n, t, e);
    i.name = "parallel_" + a, i.resize(n, e), n.coordinateSystem = i, i.model = n, r.push(i);
  }), t.eachSeries(function(n) {
    if (n.get("coordinateSystem") === "parallel") {
      var a = n.getReferringComponents("parallel", vt).models[0];
      n.coordinateSystem = a.coordinateSystem;
    }
  }), r;
}
var U9 = {
  create: G9
}, e_ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.activeIntervals = [], r;
    }
    return e.prototype.getAreaSelectStyle = function() {
      return so([
        ["fill", "color"],
        ["lineWidth", "borderWidth"],
        ["stroke", "borderColor"],
        ["width", "width"],
        ["opacity", "opacity"]
        // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
        // So do not transfer decal directly.
      ])(this.getModel("areaSelectStyle"));
    }, e.prototype.setActiveIntervals = function(r) {
      var n = this.activeIntervals = le(r);
      if (n)
        for (var a = n.length - 1; a >= 0; a--)
          kr(n[a]);
    }, e.prototype.getActiveState = function(r) {
      var n = this.activeIntervals;
      if (!n.length)
        return "normal";
      if (r == null || isNaN(+r))
        return "inactive";
      if (n.length === 1) {
        var a = n[0];
        if (a[0] <= r && r <= a[1])
          return "active";
      } else
        for (var i = 0, o = n.length; i < o; i++)
          if (n[i][0] <= r && r <= n[i][1])
            return "active";
      return "inactive";
    }, e;
  }(De)
);
_t(e_, Qu);
var co = !0, Nu = Math.min, Ts = Math.max, z9 = Math.pow, V9 = 1e4, $9 = 6, H9 = 6, f1 = "globalPan", W9 = {
  w: [0, 0],
  e: [0, 1],
  n: [1, 0],
  s: [1, 1]
}, q9 = {
  w: "ew",
  e: "ew",
  n: "ns",
  s: "ns",
  ne: "nesw",
  sw: "nesw",
  nw: "nwse",
  se: "nwse"
}, h1 = {
  brushStyle: {
    lineWidth: 2,
    stroke: "rgba(210,219,238,0.3)",
    fill: "#D2DBEE"
  },
  transformable: !0,
  brushMode: "single",
  removeOnClick: !1
}, Y9 = 0, ub = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this) || this;
      return n._track = [], n._covers = [], n._handlers = {}, n._zr = r, n.group = new de(), n._uid = "brushController_" + Y9++, w(eW, function(a, i) {
        this._handlers[i] = K(a, this);
      }, n), n;
    }
    return e.prototype.enableBrush = function(r) {
      return this._brushType && this._doDisableBrush(), r.brushType && this._doEnableBrush(r), this;
    }, e.prototype._doEnableBrush = function(r) {
      var n = this._zr;
      this._enableGlobalPan || V$(n, f1, this._uid), w(this._handlers, function(a, i) {
        n.on(i, a);
      }), this._brushType = r.brushType, this._brushOption = be(le(h1), r, !0);
    }, e.prototype._doDisableBrush = function() {
      var r = this._zr;
      $$(r, f1, this._uid), w(this._handlers, function(n, a) {
        r.off(a, n);
      }), this._brushType = this._brushOption = null;
    }, e.prototype.setPanels = function(r) {
      if (r && r.length) {
        var n = this._panels = {};
        w(r, function(a) {
          n[a.panelId] = le(a);
        });
      } else
        this._panels = null;
      return this;
    }, e.prototype.mount = function(r) {
      r = r || {}, this._enableGlobalPan = r.enableGlobalPan;
      var n = this.group;
      return this._zr.add(n), n.attr({
        x: r.x || 0,
        y: r.y || 0,
        rotation: r.rotation || 0,
        scaleX: r.scaleX || 1,
        scaleY: r.scaleY || 1
      }), this._transform = n.getLocalTransform(), this;
    }, e.prototype.updateCovers = function(r) {
      r = $(r, function(p) {
        return be(le(h1), p, !0);
      });
      var n = "\0-brush-index-", a = this._covers, i = this._covers = [], o = this, s = this._creatingCover;
      return new ia(a, r, u, l).add(c).update(c).remove(d).execute(), this;
      function l(p, f) {
        return (p.id != null ? p.id : n + f) + "-" + p.brushType;
      }
      function u(p, f) {
        return l(p.__brushOption, f);
      }
      function c(p, f) {
        var h = r[p];
        if (f != null && a[f] === s)
          i[p] = a[f];
        else {
          var g = i[p] = f != null ? (a[f].__brushOption = h, a[f]) : CR(o, xR(o, h));
          cb(o, g);
        }
      }
      function d(p) {
        a[p] !== s && o.group.remove(a[p]);
      }
    }, e.prototype.unmount = function() {
      return this.enableBrush(!1), t_(this), this._zr.remove(this.group), this;
    }, e.prototype.dispose = function() {
      this.unmount(), this.off();
    }, e;
  }(Gr)
);
function xR(t, e) {
  var r = Bf[e.brushType].createCover(t, e);
  return r.__brushOption = e, wR(r, e), t.group.add(r), r;
}
function CR(t, e) {
  var r = db(e);
  return r.endCreating && (r.endCreating(t, e), wR(e, e.__brushOption)), e;
}
function AR(t, e) {
  var r = e.__brushOption;
  db(e).updateCoverShape(t, e, r.range, r);
}
function wR(t, e) {
  var r = e.z;
  r == null && (r = V9), t.traverse(function(n) {
    n.z = r, n.z2 = r;
  });
}
function cb(t, e) {
  db(e).updateCommon(t, e), AR(t, e);
}
function db(t) {
  return Bf[t.__brushOption.brushType];
}
function pb(t, e, r) {
  var n = t._panels;
  if (!n)
    return co;
  var a, i = t._transform;
  return w(n, function(o) {
    o.isTargetByCursor(e, r, i) && (a = o);
  }), a;
}
function DR(t, e) {
  var r = t._panels;
  if (!r)
    return co;
  var n = e.__brushOption.panelId;
  return n != null ? r[n] : co;
}
function t_(t) {
  var e = t._covers, r = e.length;
  return w(e, function(n) {
    t.group.remove(n);
  }, t), e.length = 0, !!r;
}
function po(t, e) {
  var r = $(t._covers, function(n) {
    var a = n.__brushOption, i = le(a.range);
    return {
      brushType: a.brushType,
      panelId: a.panelId,
      range: i
    };
  });
  t.trigger("brush", {
    areas: r,
    isEnd: !!e.isEnd,
    removeOnClick: !!e.removeOnClick
  });
}
function K9(t) {
  var e = t._track;
  if (!e.length)
    return !1;
  var r = e[e.length - 1], n = e[0], a = r[0] - n[0], i = r[1] - n[1], o = z9(a * a + i * i, 0.5);
  return o > $9;
}
function MR(t) {
  var e = t.length - 1;
  return e < 0 && (e = 0), [t[0], t[e]];
}
function IR(t, e, r, n) {
  var a = new de();
  return a.add(new Re({
    name: "main",
    style: fb(r),
    silent: !0,
    draggable: !0,
    cursor: "move",
    drift: _e(g1, t, e, a, ["n", "s", "w", "e"]),
    ondragend: _e(po, e, {
      isEnd: !0
    })
  })), w(n, function(i) {
    a.add(new Re({
      name: i.join(""),
      style: {
        opacity: 0
      },
      draggable: !0,
      silent: !0,
      invisible: !0,
      drift: _e(g1, t, e, a, i),
      ondragend: _e(po, e, {
        isEnd: !0
      })
    }));
  }), a;
}
function NR(t, e, r, n) {
  var a = n.brushStyle.lineWidth || 0, i = Ts(a, H9), o = r[0][0], s = r[1][0], l = o - a / 2, u = s - a / 2, c = r[0][1], d = r[1][1], p = c - i + a / 2, f = d - i + a / 2, h = c - o, g = d - s, v = h + a, m = g + a;
  Hn(t, e, "main", o, s, h, g), n.transformable && (Hn(t, e, "w", l, u, i, m), Hn(t, e, "e", p, u, i, m), Hn(t, e, "n", l, u, v, i), Hn(t, e, "s", l, f, v, i), Hn(t, e, "nw", l, u, i, i), Hn(t, e, "ne", p, u, i, i), Hn(t, e, "sw", l, f, i, i), Hn(t, e, "se", p, f, i, i));
}
function r_(t, e) {
  var r = e.__brushOption, n = r.transformable, a = e.childAt(0);
  a.useStyle(fb(r)), a.attr({
    silent: !n,
    cursor: n ? "move" : "default"
  }), w([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(i) {
    var o = e.childOfName(i.join("")), s = i.length === 1 ? n_(t, i[0]) : X9(t, i);
    o && o.attr({
      silent: !n,
      invisible: !n,
      cursor: n ? q9[s] + "-resize" : null
    });
  });
}
function Hn(t, e, r, n, a, i, o) {
  var s = e.childOfName(r);
  s && s.setShape(j9(hb(t, e, [[n, a], [n + i, a + o]])));
}
function fb(t) {
  return ie({
    strokeNoScale: !0
  }, t.brushStyle);
}
function RR(t, e, r, n) {
  var a = [Nu(t, r), Nu(e, n)], i = [Ts(t, r), Ts(e, n)];
  return [
    [a[0], i[0]],
    [a[1], i[1]]
    // y range
  ];
}
function Z9(t) {
  return eo(t.group);
}
function n_(t, e) {
  var r = {
    w: "left",
    e: "right",
    n: "top",
    s: "bottom"
  }, n = {
    left: "w",
    right: "e",
    top: "n",
    bottom: "s"
  }, a = gf(r[e], Z9(t));
  return n[a];
}
function X9(t, e) {
  var r = [n_(t, e[0]), n_(t, e[1])];
  return (r[0] === "e" || r[0] === "w") && r.reverse(), r.join("");
}
function g1(t, e, r, n, a, i) {
  var o = r.__brushOption, s = t.toRectRange(o.range), l = OR(e, a, i);
  w(n, function(u) {
    var c = W9[u];
    s[c[0]][c[1]] += l[c[0]];
  }), o.range = t.fromRectRange(RR(s[0][0], s[1][0], s[0][1], s[1][1])), cb(e, r), po(e, {
    isEnd: !1
  });
}
function Q9(t, e, r, n) {
  var a = e.__brushOption.range, i = OR(t, r, n);
  w(a, function(o) {
    o[0] += i[0], o[1] += i[1];
  }), cb(t, e), po(t, {
    isEnd: !1
  });
}
function OR(t, e, r) {
  var n = t.group, a = n.transformCoordToLocal(e, r), i = n.transformCoordToLocal(0, 0);
  return [a[0] - i[0], a[1] - i[1]];
}
function hb(t, e, r) {
  var n = DR(t, e);
  return n && n !== co ? n.clipPath(r, t._transform) : le(r);
}
function j9(t) {
  var e = Nu(t[0][0], t[1][0]), r = Nu(t[0][1], t[1][1]), n = Ts(t[0][0], t[1][0]), a = Ts(t[0][1], t[1][1]);
  return {
    x: e,
    y: r,
    width: n - e,
    height: a - r
  };
}
function J9(t, e, r) {
  if (
    // Check active
    !(!t._brushType || tW(t, e.offsetX, e.offsetY))
  ) {
    var n = t._zr, a = t._covers, i = pb(t, e, r);
    if (!t._dragging)
      for (var o = 0; o < a.length; o++) {
        var s = a[o].__brushOption;
        if (i && (i === co || s.panelId === i.panelId) && Bf[s.brushType].contain(a[o], r[0], r[1]))
          return;
      }
    i && n.setCursorStyle("crosshair");
  }
}
function a_(t) {
  var e = t.event;
  e.preventDefault && e.preventDefault();
}
function i_(t, e, r) {
  return t.childOfName("main").contain(e, r);
}
function LR(t, e, r, n) {
  var a = t._creatingCover, i = t._creatingPanel, o = t._brushOption, s;
  if (t._track.push(r.slice()), K9(t) || a) {
    if (i && !a) {
      o.brushMode === "single" && t_(t);
      var l = le(o);
      l.brushType = v1(l.brushType, i), l.panelId = i === co ? null : i.panelId, a = t._creatingCover = xR(t, l), t._covers.push(a);
    }
    if (a) {
      var u = Bf[v1(t._brushType, i)], c = a.__brushOption;
      c.range = u.getCreatingRange(hb(t, a, t._track)), n && (CR(t, a), u.updateCommon(t, a)), AR(t, a), s = {
        isEnd: n
      };
    }
  } else n && o.brushMode === "single" && o.removeOnClick && pb(t, e, r) && t_(t) && (s = {
    isEnd: n,
    removeOnClick: !0
  });
  return s;
}
function v1(t, e) {
  return t === "auto" ? e.defaultBrushType : t;
}
var eW = {
  mousedown: function(t) {
    if (this._dragging)
      m1(this, t);
    else if (!t.target || !t.target.draggable) {
      a_(t);
      var e = this.group.transformCoordToLocal(t.offsetX, t.offsetY);
      this._creatingCover = null;
      var r = this._creatingPanel = pb(this, t, e);
      r && (this._dragging = !0, this._track = [e.slice()]);
    }
  },
  mousemove: function(t) {
    var e = t.offsetX, r = t.offsetY, n = this.group.transformCoordToLocal(e, r);
    if (J9(this, t, n), this._dragging) {
      a_(t);
      var a = LR(this, t, n, !1);
      a && po(this, a);
    }
  },
  mouseup: function(t) {
    m1(this, t);
  }
};
function m1(t, e) {
  if (t._dragging) {
    a_(e);
    var r = e.offsetX, n = e.offsetY, a = t.group.transformCoordToLocal(r, n), i = LR(t, e, a, !0);
    t._dragging = !1, t._track = [], t._creatingCover = null, i && po(t, i);
  }
}
function tW(t, e, r) {
  var n = t._zr;
  return e < 0 || e > n.getWidth() || r < 0 || r > n.getHeight();
}
var Bf = {
  lineX: _1(0),
  lineY: _1(1),
  rect: {
    createCover: function(t, e) {
      function r(n) {
        return n;
      }
      return IR({
        toRectRange: r,
        fromRectRange: r
      }, t, e, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
    },
    getCreatingRange: function(t) {
      var e = MR(t);
      return RR(e[1][0], e[1][1], e[0][0], e[0][1]);
    },
    updateCoverShape: function(t, e, r, n) {
      NR(t, e, r, n);
    },
    updateCommon: r_,
    contain: i_
  },
  polygon: {
    createCover: function(t, e) {
      var r = new de();
      return r.add(new lr({
        name: "main",
        style: fb(e),
        silent: !0
      })), r;
    },
    getCreatingRange: function(t) {
      return t;
    },
    endCreating: function(t, e) {
      e.remove(e.childAt(0)), e.add(new sr({
        name: "main",
        draggable: !0,
        drift: _e(Q9, t, e),
        ondragend: _e(po, t, {
          isEnd: !0
        })
      }));
    },
    updateCoverShape: function(t, e, r, n) {
      e.childAt(0).setShape({
        points: hb(t, e, r)
      });
    },
    updateCommon: r_,
    contain: i_
  }
};
function _1(t) {
  return {
    createCover: function(e, r) {
      return IR({
        toRectRange: function(n) {
          var a = [n, [0, 100]];
          return t && a.reverse(), a;
        },
        fromRectRange: function(n) {
          return n[t];
        }
      }, e, r, [[["w"], ["e"]], [["n"], ["s"]]][t]);
    },
    getCreatingRange: function(e) {
      var r = MR(e), n = Nu(r[0][t], r[1][t]), a = Ts(r[0][t], r[1][t]);
      return [n, a];
    },
    updateCoverShape: function(e, r, n, a) {
      var i, o = DR(e, r);
      if (o !== co && o.getLinearBrushOtherExtent)
        i = o.getLinearBrushOtherExtent(t);
      else {
        var s = e._zr;
        i = [0, [s.getWidth(), s.getHeight()][1 - t]];
      }
      var l = [n, i];
      t && l.reverse(), NR(e, r, l, a);
    },
    updateCommon: r_,
    contain: i_
  };
}
function PR(t) {
  return t = gb(t), function(e) {
    return qD(e, t);
  };
}
function kR(t, e) {
  return t = gb(t), function(r) {
    var n = e ?? r, a = n ? t.width : t.height, i = n ? t.x : t.y;
    return [i, i + (a || 0)];
  };
}
function BR(t, e, r) {
  var n = gb(t);
  return function(a, i) {
    return n.contain(i[0], i[1]) && !Of(a, e, r);
  };
}
function gb(t) {
  return Te.create(t);
}
var rW = ["axisLine", "axisTickLabel", "axisName"], nW = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n) {
      t.prototype.init.apply(this, arguments), (this._brushController = new ub(n.getZr())).on("brush", K(this._onBrush, this));
    }, e.prototype.render = function(r, n, a, i) {
      if (!aW(r, n, i)) {
        this.axisModel = r, this.api = a, this.group.removeAll();
        var o = this._axisGroup;
        if (this._axisGroup = new de(), this.group.add(this._axisGroup), !!r.get("show")) {
          var s = oW(r, n), l = s.coordinateSystem, u = r.getAreaSelectStyle(), c = u.width, d = r.axis.dim, p = l.getAxisLayout(d), f = G({
            strokeContainThreshold: c
          }, p), h = new nr(r, f);
          w(rW, h.add, h), this._axisGroup.add(h.getGroup()), this._refreshBrushController(f, u, r, s, c, a), qu(o, this._axisGroup, r);
        }
      }
    }, e.prototype._refreshBrushController = function(r, n, a, i, o, s) {
      var l = a.axis.getExtent(), u = l[1] - l[0], c = Math.min(30, Math.abs(u) * 0.1), d = Te.create({
        x: l[0],
        y: -o / 2,
        width: u,
        height: o
      });
      d.x -= c, d.width += 2 * c, this._brushController.mount({
        enableGlobalPan: !0,
        rotation: r.rotation,
        x: r.position[0],
        y: r.position[1]
      }).setPanels([{
        panelId: "pl",
        clipPath: PR(d),
        isTargetByCursor: BR(d, s, i),
        getLinearBrushOtherExtent: kR(d, 0)
      }]).enableBrush({
        brushType: "lineX",
        brushStyle: n,
        removeOnClick: !0
      }).updateCovers(iW(a));
    }, e.prototype._onBrush = function(r) {
      var n = r.areas, a = this.axisModel, i = a.axis, o = $(n, function(s) {
        return [i.coordToData(s.range[0], !0), i.coordToData(s.range[1], !0)];
      });
      (!a.option.realtime === r.isEnd || r.removeOnClick) && this.api.dispatchAction({
        type: "axisAreaSelect",
        parallelAxisId: a.id,
        intervals: o
      });
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.type = "parallelAxis", e;
  }(st)
);
function aW(t, e, r) {
  return r && r.type === "axisAreaSelect" && e.findComponents({
    mainType: "parallelAxis",
    query: r
  })[0] === t;
}
function iW(t) {
  var e = t.axis;
  return $(t.activeIntervals, function(r) {
    return {
      brushType: "lineX",
      panelId: "pl",
      range: [e.dataToCoord(r[0], !0), e.dataToCoord(r[1], !0)]
    };
  });
}
function oW(t, e) {
  return e.getComponent("parallel", t.get("parallelIndex"));
}
var sW = {
  type: "axisAreaSelect",
  event: "axisAreaSelected"
  // update: 'updateVisual'
};
function lW(t) {
  t.registerAction(sW, function(e, r) {
    r.eachComponent({
      mainType: "parallelAxis",
      query: e
    }, function(n) {
      n.axis.model.setActiveIntervals(e.intervals);
    });
  }), t.registerAction("parallelAxisExpand", function(e, r) {
    r.eachComponent({
      mainType: "parallel",
      query: e
    }, function(n) {
      n.setAxisExpand(e);
    });
  });
}
var uW = {
  type: "value",
  areaSelectStyle: {
    width: 20,
    borderWidth: 1,
    borderColor: "rgba(160,197,232)",
    color: "rgba(160,197,232)",
    opacity: 0.3
  },
  realtime: !0,
  z: 10
};
function cW(t) {
  t.registerComponentView(I9), t.registerComponentModel(R9), t.registerCoordinateSystem("parallel", U9), t.registerPreprocessor(A9), t.registerComponentModel(e_), t.registerComponentView(nW), Es(t, "parallel", e_, uW), lW(t);
}
function Are(t) {
  kt(cW), t.registerChartView(_9), t.registerSeriesModel(S9), t.registerVisual(t.PRIORITY.VISUAL.BRUSH, C9);
}
var dW = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
    }
    return t;
  }()
), pW = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      return t.call(this, r) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new dW();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.extent;
      r.moveTo(n.x1, n.y1), r.bezierCurveTo(n.cpx1, n.cpy1, n.cpx2, n.cpy2, n.x2, n.y2), n.orient === "vertical" ? (r.lineTo(n.x2 + a, n.y2), r.bezierCurveTo(n.cpx2 + a, n.cpy2, n.cpx1 + a, n.cpy1, n.x1 + a, n.y1)) : (r.lineTo(n.x2, n.y2 + a), r.bezierCurveTo(n.cpx2, n.cpy2 + a, n.cpx1, n.cpy1 + a, n.x1, n.y1 + a)), r.closePath();
    }, e.prototype.highlight = function() {
      na(this);
    }, e.prototype.downplay = function() {
      aa(this);
    }, e;
  }(Ce)
), fW = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._focusAdjacencyDisabled = !1, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = this, o = r.getGraph(), s = this.group, l = r.layoutInfo, u = l.width, c = l.height, d = r.getData(), p = r.getData("edge"), f = r.get("orient");
      this._model = r, s.removeAll(), s.x = l.x, s.y = l.y, o.eachEdge(function(h) {
        var g = new pW(), v = pe(g);
        v.dataIndex = h.dataIndex, v.seriesIndex = r.seriesIndex, v.dataType = "edge";
        var m = h.getModel(), _ = m.getModel("lineStyle"), y = _.get("curveness"), b = h.node1.getLayout(), S = h.node1.getModel(), E = S.get("localX"), T = S.get("localY"), x = h.node2.getLayout(), C = h.node2.getModel(), A = C.get("localX"), D = C.get("localY"), M = h.getLayout(), I, N, R, O, B, L, F, U;
        g.shape.extent = Math.max(1, M.dy), g.shape.orient = f, f === "vertical" ? (I = (E != null ? E * u : b.x) + M.sy, N = (T != null ? T * c : b.y) + b.dy, R = (A != null ? A * u : x.x) + M.ty, O = D != null ? D * c : x.y, B = I, L = N * (1 - y) + O * y, F = R, U = N * y + O * (1 - y)) : (I = (E != null ? E * u : b.x) + b.dx, N = (T != null ? T * c : b.y) + M.sy, R = A != null ? A * u : x.x, O = (D != null ? D * c : x.y) + M.ty, B = I * (1 - y) + R * y, L = N, F = I * y + R * (1 - y), U = O), g.setShape({
          x1: I,
          y1: N,
          x2: R,
          y2: O,
          cpx1: B,
          cpy1: L,
          cpx2: F,
          cpy2: U
        }), g.useStyle(_.getItemStyle()), y1(g.style, f, h);
        var z = "" + m.get("value"), H = Dt(m, "edgeLabel");
        Vt(g, H, {
          labelFetcher: {
            getFormattedLabel: function(oe, Le, Xe, fe, re, ve) {
              return r.getFormattedLabel(
                oe,
                Le,
                "edge",
                fe,
                // ensure edgeLabel formatter is provided
                // to prevent the inheritance from `label.formatter` of the series
                Dn(re, H.normal && H.normal.get("formatter"), z),
                ve
              );
            }
          },
          labelDataIndex: h.dataIndex,
          defaultText: z
        }), g.setTextConfig({
          position: "inside"
        });
        var Z = m.getModel("emphasis");
        zt(g, m, "lineStyle", function(oe) {
          var Le = oe.getItemStyle();
          return y1(Le, f, h), Le;
        }), s.add(g), p.setItemGraphicEl(h.dataIndex, g);
        var ee = Z.get("focus");
        lt(g, ee === "adjacency" ? h.getAdjacentDataIndices() : ee === "trajectory" ? h.getTrajectoryDataIndices() : ee, Z.get("blurScope"), Z.get("disabled"));
      }), o.eachNode(function(h) {
        var g = h.getLayout(), v = h.getModel(), m = v.get("localX"), _ = v.get("localY"), y = v.getModel("emphasis"), b = v.get(["itemStyle", "borderRadius"]) || 0, S = new Re({
          shape: {
            x: m != null ? m * u : g.x,
            y: _ != null ? _ * c : g.y,
            width: g.dx,
            height: g.dy,
            r: b
          },
          style: v.getModel("itemStyle").getItemStyle(),
          z2: 10
        });
        Vt(S, Dt(v), {
          labelFetcher: {
            getFormattedLabel: function(T, x) {
              return r.getFormattedLabel(T, x, "node");
            }
          },
          labelDataIndex: h.dataIndex,
          defaultText: h.id
        }), S.disableLabelAnimation = !0, S.setStyle("fill", h.getVisual("color")), S.setStyle("decal", h.getVisual("style").decal), zt(S, v), s.add(S), d.setItemGraphicEl(h.dataIndex, S), pe(S).dataType = "node";
        var E = y.get("focus");
        lt(S, E === "adjacency" ? h.getAdjacentDataIndices() : E === "trajectory" ? h.getTrajectoryDataIndices() : E, y.get("blurScope"), y.get("disabled"));
      }), d.eachItemGraphicEl(function(h, g) {
        var v = d.getItemModel(g);
        v.get("draggable") && (h.drift = function(m, _) {
          i._focusAdjacencyDisabled = !0, this.shape.x += m, this.shape.y += _, this.dirty(), a.dispatchAction({
            type: "dragNode",
            seriesId: r.id,
            dataIndex: d.getRawIndex(g),
            localX: this.shape.x / u,
            localY: this.shape.y / c
          });
        }, h.ondragend = function() {
          i._focusAdjacencyDisabled = !1;
        }, h.draggable = !0, h.cursor = "move");
      }), !this._data && r.isAnimationEnabled() && s.setClipPath(hW(s.getBoundingRect(), r, function() {
        s.removeClipPath();
      })), this._data = r.getData();
    }, e.prototype.dispose = function() {
    }, e.type = "sankey", e;
  }(Ke)
);
function y1(t, e, r) {
  switch (t.fill) {
    case "source":
      t.fill = r.node1.getVisual("color"), t.decal = r.node1.getVisual("style").decal;
      break;
    case "target":
      t.fill = r.node2.getVisual("color"), t.decal = r.node2.getVisual("style").decal;
      break;
    case "gradient":
      var n = r.node1.getVisual("color"), a = r.node2.getVisual("color");
      Y(n) && Y(a) && (t.fill = new Wu(0, 0, +(e === "horizontal"), +(e === "vertical"), [{
        color: n,
        offset: 0
      }, {
        color: a,
        offset: 1
      }]));
  }
}
function hW(t, e, r) {
  var n = new Re({
    shape: {
      x: t.x - 10,
      y: t.y - 10,
      width: 0,
      height: t.height + 20
    }
  });
  return rt(n, {
    shape: {
      width: t.width + 20
    }
  }, e, r), n;
}
var gW = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      var a = r.edges || r.links || [], i = r.data || r.nodes || [], o = r.levels || [];
      this.levelModels = [];
      for (var s = this.levelModels, l = 0; l < o.length; l++)
        o[l].depth != null && o[l].depth >= 0 && (s[o[l].depth] = new He(o[l], this, n));
      var u = bR(i, a, this, !0, c);
      return u.data;
      function c(d, p) {
        d.wrapMethod("getItemModel", function(f, h) {
          var g = f.parentModel, v = g.getData().getItemLayout(h);
          if (v) {
            var m = v.depth, _ = g.levelModels[m];
            _ && (f.parentModel = _);
          }
          return f;
        }), p.wrapMethod("getItemModel", function(f, h) {
          var g = f.parentModel, v = g.getGraph().getEdgeByIndex(h), m = v.node1.getLayout();
          if (m) {
            var _ = m.depth, y = g.levelModels[_];
            y && (f.parentModel = y);
          }
          return f;
        });
      }
    }, e.prototype.setNodePosition = function(r, n) {
      var a = this.option.data || this.option.nodes, i = a[r];
      i.localX = n[0], i.localY = n[1];
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.formatTooltip = function(r, n, a) {
      function i(f) {
        return isNaN(f) || f == null;
      }
      if (a === "edge") {
        var o = this.getDataParams(r, a), s = o.data, l = o.value, u = s.source + " -- " + s.target;
        return Mt("nameValue", {
          name: u,
          value: l,
          noValue: i(l)
        });
      } else {
        var c = this.getGraph().getNodeByIndex(r), d = c.getLayout().value, p = this.getDataParams(r, a).data.name;
        return Mt("nameValue", {
          name: p != null ? p + "" : null,
          value: d,
          noValue: i(d)
        });
      }
    }, e.prototype.optionUpdated = function() {
    }, e.prototype.getDataParams = function(r, n) {
      var a = t.prototype.getDataParams.call(this, r, n);
      if (a.value == null && n === "node") {
        var i = this.getGraph().getNodeByIndex(r), o = i.getLayout().value;
        a.value = o;
      }
      return a;
    }, e.type = "series.sankey", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      left: "5%",
      top: "5%",
      right: "20%",
      bottom: "5%",
      orient: "horizontal",
      nodeWidth: 20,
      nodeGap: 8,
      draggable: !0,
      layoutIterations: 32,
      label: {
        show: !0,
        position: "right",
        fontSize: 12
      },
      edgeLabel: {
        show: !1,
        fontSize: 12
      },
      levels: [],
      nodeAlign: "justify",
      lineStyle: {
        color: "#314656",
        opacity: 0.2,
        curveness: 0.5
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          opacity: 0.5
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      animationEasing: "linear",
      animationDuration: 1e3
    }, e;
  }(et)
);
function vW(t, e) {
  t.eachSeriesByType("sankey", function(r) {
    var n = r.get("nodeWidth"), a = r.get("nodeGap"), i = mW(r, e);
    r.layoutInfo = i;
    var o = i.width, s = i.height, l = r.getGraph(), u = l.nodes, c = l.edges;
    yW(u);
    var d = ze(u, function(g) {
      return g.getLayout().value === 0;
    }), p = d.length !== 0 ? 0 : r.get("layoutIterations"), f = r.get("orient"), h = r.get("nodeAlign");
    _W(u, c, n, a, o, s, p, f, h);
  });
}
function mW(t, e) {
  return Et(t.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function _W(t, e, r, n, a, i, o, s, l) {
  bW(t, e, r, a, i, s, l), xW(t, e, i, a, n, o, s), OW(t, s);
}
function yW(t) {
  w(t, function(e) {
    var r = Ha(e.outEdges, Rp), n = Ha(e.inEdges, Rp), a = e.getValue() || 0, i = Math.max(r, n, a);
    e.setLayout({
      value: i
    }, !0);
  });
}
function bW(t, e, r, n, a, i, o) {
  for (var s = [], l = [], u = [], c = [], d = 0, p = 0; p < e.length; p++)
    s[p] = 1;
  for (var p = 0; p < t.length; p++)
    l[p] = t[p].inEdges.length, l[p] === 0 && u.push(t[p]);
  for (var f = -1; u.length; ) {
    for (var h = 0; h < u.length; h++) {
      var g = u[h], v = g.hostGraph.data.getRawDataItem(g.dataIndex), m = v.depth != null && v.depth >= 0;
      m && v.depth > f && (f = v.depth), g.setLayout({
        depth: m ? v.depth : d
      }, !0), i === "vertical" ? g.setLayout({
        dy: r
      }, !0) : g.setLayout({
        dx: r
      }, !0);
      for (var _ = 0; _ < g.outEdges.length; _++) {
        var y = g.outEdges[_], b = e.indexOf(y);
        s[b] = 0;
        var S = y.node2, E = t.indexOf(S);
        --l[E] === 0 && c.indexOf(S) < 0 && c.push(S);
      }
    }
    ++d, u = c, c = [];
  }
  for (var p = 0; p < s.length; p++)
    if (s[p] === 1)
      throw new Error("Sankey is a DAG, the original data has cycle!");
  var T = f > d - 1 ? f : d - 1;
  o && o !== "left" && SW(t, o, i, T);
  var x = i === "vertical" ? (a - r) / T : (n - r) / T;
  TW(t, x, i);
}
function FR(t) {
  var e = t.hostGraph.data.getRawDataItem(t.dataIndex);
  return e.depth != null && e.depth >= 0;
}
function SW(t, e, r, n) {
  if (e === "right") {
    for (var a = [], i = t, o = 0; i.length; ) {
      for (var s = 0; s < i.length; s++) {
        var l = i[s];
        l.setLayout({
          skNodeHeight: o
        }, !0);
        for (var u = 0; u < l.inEdges.length; u++) {
          var c = l.inEdges[u];
          a.indexOf(c.node1) < 0 && a.push(c.node1);
        }
      }
      i = a, a = [], ++o;
    }
    w(t, function(d) {
      FR(d) || d.setLayout({
        depth: Math.max(0, n - d.getLayout().skNodeHeight)
      }, !0);
    });
  } else e === "justify" && EW(t, n);
}
function EW(t, e) {
  w(t, function(r) {
    !FR(r) && !r.outEdges.length && r.setLayout({
      depth: e
    }, !0);
  });
}
function TW(t, e, r) {
  w(t, function(n) {
    var a = n.getLayout().depth * e;
    r === "vertical" ? n.setLayout({
      y: a
    }, !0) : n.setLayout({
      x: a
    }, !0);
  });
}
function xW(t, e, r, n, a, i, o) {
  var s = CW(t, o);
  AW(s, e, r, n, a, o), jg(s, a, r, n, o);
  for (var l = 1; i > 0; i--)
    l *= 0.99, wW(s, l, o), jg(s, a, r, n, o), RW(s, l, o), jg(s, a, r, n, o);
}
function CW(t, e) {
  var r = [], n = e === "vertical" ? "y" : "x", a = om(t, function(i) {
    return i.getLayout()[n];
  });
  return a.keys.sort(function(i, o) {
    return i - o;
  }), w(a.keys, function(i) {
    r.push(a.buckets.get(i));
  }), r;
}
function AW(t, e, r, n, a, i) {
  var o = 1 / 0;
  w(t, function(s) {
    var l = s.length, u = 0;
    w(s, function(d) {
      u += d.getLayout().value;
    });
    var c = i === "vertical" ? (n - (l - 1) * a) / u : (r - (l - 1) * a) / u;
    c < o && (o = c);
  }), w(t, function(s) {
    w(s, function(l, u) {
      var c = l.getLayout().value * o;
      i === "vertical" ? (l.setLayout({
        x: u
      }, !0), l.setLayout({
        dx: c
      }, !0)) : (l.setLayout({
        y: u
      }, !0), l.setLayout({
        dy: c
      }, !0));
    });
  }), w(e, function(s) {
    var l = +s.getValue() * o;
    s.setLayout({
      dy: l
    }, !0);
  });
}
function jg(t, e, r, n, a) {
  var i = a === "vertical" ? "x" : "y";
  w(t, function(o) {
    o.sort(function(g, v) {
      return g.getLayout()[i] - v.getLayout()[i];
    });
    for (var s, l, u, c = 0, d = o.length, p = a === "vertical" ? "dx" : "dy", f = 0; f < d; f++)
      l = o[f], u = c - l.getLayout()[i], u > 0 && (s = l.getLayout()[i] + u, a === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0)), c = l.getLayout()[i] + l.getLayout()[p] + e;
    var h = a === "vertical" ? n : r;
    if (u = c - e - h, u > 0) {
      s = l.getLayout()[i] - u, a === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0), c = s;
      for (var f = d - 2; f >= 0; --f)
        l = o[f], u = l.getLayout()[i] + l.getLayout()[p] + e - c, u > 0 && (s = l.getLayout()[i] - u, a === "vertical" ? l.setLayout({
          x: s
        }, !0) : l.setLayout({
          y: s
        }, !0)), c = l.getLayout()[i];
    }
  });
}
function wW(t, e, r) {
  w(t.slice().reverse(), function(n) {
    w(n, function(a) {
      if (a.outEdges.length) {
        var i = Ha(a.outEdges, DW, r) / Ha(a.outEdges, Rp);
        if (isNaN(i)) {
          var o = a.outEdges.length;
          i = o ? Ha(a.outEdges, MW, r) / o : 0;
        }
        if (r === "vertical") {
          var s = a.getLayout().x + (i - ja(a, r)) * e;
          a.setLayout({
            x: s
          }, !0);
        } else {
          var l = a.getLayout().y + (i - ja(a, r)) * e;
          a.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function DW(t, e) {
  return ja(t.node2, e) * t.getValue();
}
function MW(t, e) {
  return ja(t.node2, e);
}
function IW(t, e) {
  return ja(t.node1, e) * t.getValue();
}
function NW(t, e) {
  return ja(t.node1, e);
}
function ja(t, e) {
  return e === "vertical" ? t.getLayout().x + t.getLayout().dx / 2 : t.getLayout().y + t.getLayout().dy / 2;
}
function Rp(t) {
  return t.getValue();
}
function Ha(t, e, r) {
  for (var n = 0, a = t.length, i = -1; ++i < a; ) {
    var o = +e(t[i], r);
    isNaN(o) || (n += o);
  }
  return n;
}
function RW(t, e, r) {
  w(t, function(n) {
    w(n, function(a) {
      if (a.inEdges.length) {
        var i = Ha(a.inEdges, IW, r) / Ha(a.inEdges, Rp);
        if (isNaN(i)) {
          var o = a.inEdges.length;
          i = o ? Ha(a.inEdges, NW, r) / o : 0;
        }
        if (r === "vertical") {
          var s = a.getLayout().x + (i - ja(a, r)) * e;
          a.setLayout({
            x: s
          }, !0);
        } else {
          var l = a.getLayout().y + (i - ja(a, r)) * e;
          a.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function OW(t, e) {
  var r = e === "vertical" ? "x" : "y";
  w(t, function(n) {
    n.outEdges.sort(function(a, i) {
      return a.node2.getLayout()[r] - i.node2.getLayout()[r];
    }), n.inEdges.sort(function(a, i) {
      return a.node1.getLayout()[r] - i.node1.getLayout()[r];
    });
  }), w(t, function(n) {
    var a = 0, i = 0;
    w(n.outEdges, function(o) {
      o.setLayout({
        sy: a
      }, !0), a += o.getLayout().dy;
    }), w(n.inEdges, function(o) {
      o.setLayout({
        ty: i
      }, !0), i += o.getLayout().dy;
    });
  });
}
function LW(t) {
  t.eachSeriesByType("sankey", function(e) {
    var r = e.getGraph(), n = r.nodes, a = r.edges;
    if (n.length) {
      var i = 1 / 0, o = -1 / 0;
      w(n, function(s) {
        var l = s.getLayout().value;
        l < i && (i = l), l > o && (o = l);
      }), w(n, function(s) {
        var l = new wt({
          type: "color",
          mappingMethod: "linear",
          dataExtent: [i, o],
          visual: e.get("color")
        }), u = l.mapValueToVisual(s.getLayout().value), c = s.getModel().get(["itemStyle", "color"]);
        c != null ? (s.setVisual("color", c), s.setVisual("style", {
          fill: c
        })) : (s.setVisual("color", u), s.setVisual("style", {
          fill: u
        }));
      });
    }
    a.length && w(a, function(s) {
      var l = s.getModel().get("lineStyle");
      s.setVisual("style", l);
    });
  });
}
function wre(t) {
  t.registerChartView(fW), t.registerSeriesModel(gW), t.registerLayout(vW), t.registerVisual(LW), t.registerAction({
    type: "dragNode",
    event: "dragnode",
    // here can only use 'update' now, other value is not support in echarts.
    update: "update"
  }, function(e, r) {
    r.eachComponent({
      mainType: "series",
      subType: "sankey",
      query: e
    }, function(n) {
      n.setNodePosition(e.dataIndex, [e.localX, e.localY]);
    });
  });
}
var GR = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype._hasEncodeRule = function(e) {
      var r = this.getEncode();
      return r && r.get(e) != null;
    }, t.prototype.getInitialData = function(e, r) {
      var n, a = r.getComponent("xAxis", this.get("xAxisIndex")), i = r.getComponent("yAxis", this.get("yAxisIndex")), o = a.get("type"), s = i.get("type"), l;
      o === "category" ? (e.layout = "horizontal", n = a.getOrdinalMeta(), l = !this._hasEncodeRule("x")) : s === "category" ? (e.layout = "vertical", n = i.getOrdinalMeta(), l = !this._hasEncodeRule("y")) : e.layout = e.layout || "horizontal";
      var u = ["x", "y"], c = e.layout === "horizontal" ? 0 : 1, d = this._baseAxisDim = u[c], p = u[1 - c], f = [a, i], h = f[c].get("type"), g = f[1 - c].get("type"), v = e.data;
      if (v && l) {
        var m = [];
        w(v, function(b, S) {
          var E;
          V(b) ? (E = b.slice(), b.unshift(S)) : V(b.value) ? (E = G({}, b), E.value = E.value.slice(), b.value.unshift(S)) : E = b, m.push(E);
        }), e.data = m;
      }
      var _ = this.defaultValueDimensions, y = [{
        name: d,
        type: Sp(h),
        ordinalMeta: n,
        otherDims: {
          tooltip: !1,
          itemName: 0
        },
        dimsDef: ["base"]
      }, {
        name: p,
        type: Sp(g),
        dimsDef: _.slice()
      }];
      return Vs(this, {
        coordDimensions: y,
        dimensionsCount: _.length + 1,
        encodeDefaulter: _e(_M, y, this)
      });
    }, t.prototype.getBaseAxis = function() {
      var e = this._baseAxisDim;
      return this.ecModel.getComponent(e + "Axis", this.get(e + "AxisIndex")).axis;
    }, t;
  }()
), UR = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.defaultValueDimensions = [{
        name: "min",
        defaultTooltip: !0
      }, {
        name: "Q1",
        defaultTooltip: !0
      }, {
        name: "median",
        defaultTooltip: !0
      }, {
        name: "Q3",
        defaultTooltip: !0
      }, {
        name: "max",
        defaultTooltip: !0
      }], r.visualDrawType = "stroke", r;
    }
    return e.type = "series.boxplot", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      layout: null,
      boxWidth: [7, 50],
      itemStyle: {
        color: "#fff",
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2,
          shadowBlur: 5,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0,0,0,0.2)"
        }
      },
      animationDuration: 800
    }, e;
  }(et)
);
_t(UR, GR, !0);
var PW = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this.group, s = this._data;
      this._data || o.removeAll();
      var l = r.get("layout") === "horizontal" ? 1 : 0;
      i.diff(s).add(function(u) {
        if (i.hasValue(u)) {
          var c = i.getItemLayout(u), d = b1(c, i, u, l, !0);
          i.setItemGraphicEl(u, d), o.add(d);
        }
      }).update(function(u, c) {
        var d = s.getItemGraphicEl(c);
        if (!i.hasValue(u)) {
          o.remove(d);
          return;
        }
        var p = i.getItemLayout(u);
        d ? (rn(d), zR(p, d, i, u)) : d = b1(p, i, u, l), o.add(d), i.setItemGraphicEl(u, d);
      }).remove(function(u) {
        var c = s.getItemGraphicEl(u);
        c && o.remove(c);
      }).execute(), this._data = i;
    }, e.prototype.remove = function(r) {
      var n = this.group, a = this._data;
      this._data = null, a && a.eachItemGraphicEl(function(i) {
        i && n.remove(i);
      });
    }, e.type = "boxplot", e;
  }(Ke)
), kW = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), BW = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "boxplotBoxPath", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new kW();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.points, i = 0;
      for (r.moveTo(a[i][0], a[i][1]), i++; i < 4; i++)
        r.lineTo(a[i][0], a[i][1]);
      for (r.closePath(); i < a.length; i++)
        r.moveTo(a[i][0], a[i][1]), i++, r.lineTo(a[i][0], a[i][1]);
    }, e;
  }(Ce)
);
function b1(t, e, r, n, a) {
  var i = t.ends, o = new BW({
    shape: {
      points: a ? FW(i, n, t) : i
    }
  });
  return zR(t, o, e, r, a), o;
}
function zR(t, e, r, n, a) {
  var i = r.hostModel, o = vo[a ? "initProps" : "updateProps"];
  o(e, {
    shape: {
      points: t.ends
    }
  }, i, n), e.useStyle(r.getItemVisual(n, "style")), e.style.strokeNoScale = !0, e.z2 = 100;
  var s = r.getItemModel(n), l = s.getModel("emphasis");
  zt(e, s), lt(e, l.get("focus"), l.get("blurScope"), l.get("disabled"));
}
function FW(t, e, r) {
  return $(t, function(n) {
    return n = n.slice(), n[e] = r.initBaseline, n;
  });
}
var Ql = w;
function GW(t) {
  var e = UW(t);
  Ql(e, function(r) {
    var n = r.seriesModels;
    n.length && (zW(r), Ql(n, function(a, i) {
      VW(a, r.boxOffsetList[i], r.boxWidthList[i]);
    }));
  });
}
function UW(t) {
  var e = [], r = [];
  return t.eachSeriesByType("boxplot", function(n) {
    var a = n.getBaseAxis(), i = xe(r, a);
    i < 0 && (i = r.length, r[i] = a, e[i] = {
      axis: a,
      seriesModels: []
    }), e[i].seriesModels.push(n);
  }), e;
}
function zW(t) {
  var e = t.axis, r = t.seriesModels, n = r.length, a = t.boxWidthList = [], i = t.boxOffsetList = [], o = [], s;
  if (e.type === "category")
    s = e.getBandWidth();
  else {
    var l = 0;
    Ql(r, function(h) {
      l = Math.max(l, h.getData().count());
    });
    var u = e.getExtent();
    s = Math.abs(u[1] - u[0]) / l;
  }
  Ql(r, function(h) {
    var g = h.get("boxWidth");
    V(g) || (g = [g, g]), o.push([q(g[0], s) || 0, q(g[1], s) || 0]);
  });
  var c = s * 0.8 - 2, d = c / n * 0.3, p = (c - d * (n - 1)) / n, f = p / 2 - c / 2;
  Ql(r, function(h, g) {
    i.push(f), f += d + p, a.push(Math.min(Math.max(p, o[g][0]), o[g][1]));
  });
}
function VW(t, e, r) {
  var n = t.coordinateSystem, a = t.getData(), i = r / 2, o = t.get("layout") === "horizontal" ? 0 : 1, s = 1 - o, l = ["x", "y"], u = a.mapDimension(l[o]), c = a.mapDimensionsAll(l[s]);
  if (u == null || c.length < 5)
    return;
  for (var d = 0; d < a.count(); d++) {
    var p = a.get(u, d), f = y(p, c[2], d), h = y(p, c[0], d), g = y(p, c[1], d), v = y(p, c[3], d), m = y(p, c[4], d), _ = [];
    b(_, g, !1), b(_, v, !0), _.push(h, g, m, v), S(_, h), S(_, m), S(_, f), a.setItemLayout(d, {
      initBaseline: f[s],
      ends: _
    });
  }
  function y(E, T, x) {
    var C = a.get(T, x), A = [];
    A[o] = E, A[s] = C;
    var D;
    return isNaN(E) || isNaN(C) ? D = [NaN, NaN] : (D = n.dataToPoint(A), D[o] += e), D;
  }
  function b(E, T, x) {
    var C = T.slice(), A = T.slice();
    C[o] += i, A[o] -= i, x ? E.push(C, A) : E.push(A, C);
  }
  function S(E, T) {
    var x = T.slice(), C = T.slice();
    x[o] -= i, C[o] += i, E.push(x, C);
  }
}
function $W(t, e) {
  e = e || {};
  for (var r = [], n = [], a = e.boundIQR, i = a === "none" || a === 0, o = 0; o < t.length; o++) {
    var s = kr(t[o].slice()), l = wh(s, 0.25), u = wh(s, 0.5), c = wh(s, 0.75), d = s[0], p = s[s.length - 1], f = (a ?? 1.5) * (c - l), h = i ? d : Math.max(d, l - f), g = i ? p : Math.min(p, c + f), v = e.itemNameFormatter, m = ae(v) ? v({
      value: o
    }) : Y(v) ? v.replace("{value}", o + "") : o + "";
    r.push([m, h, l, u, c, g]);
    for (var _ = 0; _ < s.length; _++) {
      var y = s[_];
      if (y < h || y > g) {
        var b = [m, y];
        n.push(b);
      }
    }
  }
  return {
    boxData: r,
    outliers: n
  };
}
var HW = {
  type: "echarts:boxplot",
  transform: function(e) {
    var r = e.upstream;
    if (r.sourceFormat !== Zt) {
      var n = "";
      Ue(n);
    }
    var a = $W(r.getRawData(), e.config);
    return [{
      dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"],
      data: a.boxData
    }, {
      data: a.outliers
    }];
  }
};
function Dre(t) {
  t.registerSeriesModel(UR), t.registerChartView(PW), t.registerLayout(GW), t.registerTransform(HW);
}
var WW = ["itemStyle", "borderColor"], qW = ["itemStyle", "borderColor0"], YW = ["itemStyle", "borderColorDoji"], KW = ["itemStyle", "color"], ZW = ["itemStyle", "color0"];
function vb(t, e) {
  return e.get(t > 0 ? KW : ZW);
}
function mb(t, e) {
  return e.get(t === 0 ? YW : t > 0 ? WW : qW);
}
var XW = {
  seriesType: "candlestick",
  plan: Fs(),
  // For legend.
  performRawSeries: !0,
  reset: function(t, e) {
    if (!e.isSeriesFiltered(t)) {
      var r = t.pipelineContext.large;
      return !r && {
        progress: function(n, a) {
          for (var i; (i = n.next()) != null; ) {
            var o = a.getItemModel(i), s = a.getItemLayout(i).sign, l = o.getItemStyle();
            l.fill = vb(s, o), l.stroke = mb(s, o) || l.fill;
            var u = a.ensureUniqueItemVisual(i, "style");
            G(u, l);
          }
        }
      };
    }
  }
}, QW = ["color", "borderColor"], jW = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(r), this._isLargeDraw ? this._renderLarge(r) : this._renderNormal(r);
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      this._clear(), this._updateDrawMode(r);
    }, e.prototype.incrementalRender = function(r, n, a, i) {
      this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(r, n) : this._incrementalRenderNormal(r, n);
    }, e.prototype.eachRendered = function(r) {
      ei(this._progressiveEls || this.group, r);
    }, e.prototype._updateDrawMode = function(r) {
      var n = r.pipelineContext.large;
      (this._isLargeDraw == null || n !== this._isLargeDraw) && (this._isLargeDraw = n, this._clear());
    }, e.prototype._renderNormal = function(r) {
      var n = r.getData(), a = this._data, i = this.group, o = n.getLayout("isSimpleBox"), s = r.get("clip", !0), l = r.coordinateSystem, u = l.getArea && l.getArea();
      this._data || i.removeAll(), n.diff(a).add(function(c) {
        if (n.hasValue(c)) {
          var d = n.getItemLayout(c);
          if (s && S1(u, d))
            return;
          var p = Jg(d, c, !0);
          rt(p, {
            shape: {
              points: d.ends
            }
          }, r, c), ev(p, n, c, o), i.add(p), n.setItemGraphicEl(c, p);
        }
      }).update(function(c, d) {
        var p = a.getItemGraphicEl(d);
        if (!n.hasValue(c)) {
          i.remove(p);
          return;
        }
        var f = n.getItemLayout(c);
        if (s && S1(u, f)) {
          i.remove(p);
          return;
        }
        p ? (Fe(p, {
          shape: {
            points: f.ends
          }
        }, r, c), rn(p)) : p = Jg(f), ev(p, n, c, o), i.add(p), n.setItemGraphicEl(c, p);
      }).remove(function(c) {
        var d = a.getItemGraphicEl(c);
        d && i.remove(d);
      }).execute(), this._data = n;
    }, e.prototype._renderLarge = function(r) {
      this._clear(), E1(r, this.group);
      var n = r.get("clip", !0) ? ec(r.coordinateSystem, !1, r) : null;
      n ? this.group.setClipPath(n) : this.group.removeClipPath();
    }, e.prototype._incrementalRenderNormal = function(r, n) {
      for (var a = n.getData(), i = a.getLayout("isSimpleBox"), o; (o = r.next()) != null; ) {
        var s = a.getItemLayout(o), l = Jg(s);
        ev(l, a, o, i), l.incremental = !0, this.group.add(l), this._progressiveEls.push(l);
      }
    }, e.prototype._incrementalRenderLarge = function(r, n) {
      E1(n, this.group, this._progressiveEls, !0);
    }, e.prototype.remove = function(r) {
      this._clear();
    }, e.prototype._clear = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "candlestick", e;
  }(Ke)
), JW = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), eq = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "normalCandlestickBox", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new JW();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.points;
      this.__simpleBox ? (r.moveTo(a[4][0], a[4][1]), r.lineTo(a[6][0], a[6][1])) : (r.moveTo(a[0][0], a[0][1]), r.lineTo(a[1][0], a[1][1]), r.lineTo(a[2][0], a[2][1]), r.lineTo(a[3][0], a[3][1]), r.closePath(), r.moveTo(a[4][0], a[4][1]), r.lineTo(a[5][0], a[5][1]), r.moveTo(a[6][0], a[6][1]), r.lineTo(a[7][0], a[7][1]));
    }, e;
  }(Ce)
);
function Jg(t, e, r) {
  var n = t.ends;
  return new eq({
    shape: {
      points: r ? tq(n, t) : n
    },
    z2: 100
  });
}
function S1(t, e) {
  for (var r = !0, n = 0; n < e.ends.length; n++)
    if (t.contain(e.ends[n][0], e.ends[n][1])) {
      r = !1;
      break;
    }
  return r;
}
function ev(t, e, r, n) {
  var a = e.getItemModel(r);
  t.useStyle(e.getItemVisual(r, "style")), t.style.strokeNoScale = !0, t.__simpleBox = n, zt(t, a);
  var i = e.getItemLayout(r).sign;
  w(t.states, function(s, l) {
    var u = a.getModel(l), c = vb(i, u), d = mb(i, u) || c, p = s.style || (s.style = {});
    c && (p.fill = c), d && (p.stroke = d);
  });
  var o = a.getModel("emphasis");
  lt(t, o.get("focus"), o.get("blurScope"), o.get("disabled"));
}
function tq(t, e) {
  return $(t, function(r) {
    return r = r.slice(), r[1] = e.initBaseline, r;
  });
}
var rq = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), tv = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n.type = "largeCandlestickBox", n;
    }
    return e.prototype.getDefaultShape = function() {
      return new rq();
    }, e.prototype.buildPath = function(r, n) {
      for (var a = n.points, i = 0; i < a.length; )
        if (this.__sign === a[i++]) {
          var o = a[i++];
          r.moveTo(o, a[i++]), r.lineTo(o, a[i++]);
        } else
          i += 3;
    }, e;
  }(Ce)
);
function E1(t, e, r, n) {
  var a = t.getData(), i = a.getLayout("largePoints"), o = new tv({
    shape: {
      points: i
    },
    __sign: 1,
    ignoreCoarsePointer: !0
  });
  e.add(o);
  var s = new tv({
    shape: {
      points: i
    },
    __sign: -1,
    ignoreCoarsePointer: !0
  });
  e.add(s);
  var l = new tv({
    shape: {
      points: i
    },
    __sign: 0,
    ignoreCoarsePointer: !0
  });
  e.add(l), rv(1, o, t), rv(-1, s, t), rv(0, l, t), n && (o.incremental = !0, s.incremental = !0), r && r.push(o, s);
}
function rv(t, e, r, n) {
  var a = mb(t, r) || vb(t, r), i = r.getModel("itemStyle").getItemStyle(QW);
  e.useStyle(i), e.style.fill = null, e.style.stroke = a;
}
var VR = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.defaultValueDimensions = [{
        name: "open",
        defaultTooltip: !0
      }, {
        name: "close",
        defaultTooltip: !0
      }, {
        name: "lowest",
        defaultTooltip: !0
      }, {
        name: "highest",
        defaultTooltip: !0
      }], r;
    }
    return e.prototype.getShadowDim = function() {
      return "open";
    }, e.prototype.brushSelector = function(r, n, a) {
      var i = n.getItemLayout(r);
      return i && a.rect(i.brushRect);
    }, e.type = "series.candlestick", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      layout: null,
      clip: !0,
      itemStyle: {
        color: "#eb5454",
        color0: "#47b262",
        borderColor: "#eb5454",
        borderColor0: "#47b262",
        borderColorDoji: null,
        // borderColor: '#d24040',
        // borderColor0: '#398f4f',
        borderWidth: 1
      },
      emphasis: {
        itemStyle: {
          borderWidth: 2
        }
      },
      barMaxWidth: null,
      barMinWidth: null,
      barWidth: null,
      large: !0,
      largeThreshold: 600,
      progressive: 3e3,
      progressiveThreshold: 1e4,
      progressiveChunkMode: "mod",
      animationEasing: "linear",
      animationDuration: 300
    }, e;
  }(et)
);
_t(VR, GR, !0);
function nq(t) {
  !t || !V(t.series) || w(t.series, function(e) {
    se(e) && e.type === "k" && (e.type = "candlestick");
  });
}
var aq = {
  seriesType: "candlestick",
  plan: Fs(),
  reset: function(t) {
    var e = t.coordinateSystem, r = t.getData(), n = iq(t, r), a = 0, i = 1, o = ["x", "y"], s = r.getDimensionIndex(r.mapDimension(o[a])), l = $(r.mapDimensionsAll(o[i]), r.getDimensionIndex, r), u = l[0], c = l[1], d = l[2], p = l[3];
    if (r.setLayout({
      candleWidth: n,
      // The value is experimented visually.
      isSimpleBox: n <= 1.3
    }), s < 0 || l.length < 4)
      return;
    return {
      progress: t.pipelineContext.large ? h : f
    };
    function f(g, v) {
      for (var m, _ = v.getStore(); (m = g.next()) != null; ) {
        var y = _.get(s, m), b = _.get(u, m), S = _.get(c, m), E = _.get(d, m), T = _.get(p, m), x = Math.min(b, S), C = Math.max(b, S), A = B(x, y), D = B(C, y), M = B(E, y), I = B(T, y), N = [];
        L(N, D, 0), L(N, A, 1), N.push(U(I), U(D), U(M), U(A));
        var R = v.getItemModel(m), O = !!R.get(["itemStyle", "borderColorDoji"]);
        v.setItemLayout(m, {
          sign: T1(_, m, b, S, c, O),
          initBaseline: b > S ? D[i] : A[i],
          ends: N,
          brushRect: F(E, T, y)
        });
      }
      function B(z, H) {
        var Z = [];
        return Z[a] = H, Z[i] = z, isNaN(H) || isNaN(z) ? [NaN, NaN] : e.dataToPoint(Z);
      }
      function L(z, H, Z) {
        var ee = H.slice(), oe = H.slice();
        ee[a] = Pd(ee[a] + n / 2, 1, !1), oe[a] = Pd(oe[a] - n / 2, 1, !0), Z ? z.push(ee, oe) : z.push(oe, ee);
      }
      function F(z, H, Z) {
        var ee = B(z, Z), oe = B(H, Z);
        return ee[a] -= n / 2, oe[a] -= n / 2, {
          x: ee[0],
          y: ee[1],
          width: n,
          height: oe[1] - ee[1]
        };
      }
      function U(z) {
        return z[a] = Pd(z[a], 1), z;
      }
    }
    function h(g, v) {
      for (var m = An(g.count * 4), _ = 0, y, b = [], S = [], E, T = v.getStore(), x = !!t.get(["itemStyle", "borderColorDoji"]); (E = g.next()) != null; ) {
        var C = T.get(s, E), A = T.get(u, E), D = T.get(c, E), M = T.get(d, E), I = T.get(p, E);
        if (isNaN(C) || isNaN(M) || isNaN(I)) {
          m[_++] = NaN, _ += 3;
          continue;
        }
        m[_++] = T1(T, E, A, D, c, x), b[a] = C, b[i] = M, y = e.dataToPoint(b, null, S), m[_++] = y ? y[0] : NaN, m[_++] = y ? y[1] : NaN, b[i] = I, y = e.dataToPoint(b, null, S), m[_++] = y ? y[1] : NaN;
      }
      v.setLayout("largePoints", m);
    }
  }
};
function T1(t, e, r, n, a, i) {
  var o;
  return r > n ? o = -1 : r < n ? o = 1 : o = i ? 0 : e > 0 ? t.get(a, e - 1) <= n ? 1 : -1 : 1, o;
}
function iq(t, e) {
  var r = t.getBaseAxis(), n, a = r.type === "category" ? r.getBandWidth() : (n = r.getExtent(), Math.abs(n[1] - n[0]) / e.count()), i = q(ge(t.get("barMaxWidth"), a), a), o = q(ge(t.get("barMinWidth"), 1), a), s = t.get("barWidth");
  return s != null ? q(s, a) : Math.max(Math.min(a / 2, i), o);
}
function Mre(t) {
  t.registerChartView(jW), t.registerSeriesModel(VR), t.registerPreprocessor(nq), t.registerVisual(XW), t.registerLayout(aq);
}
function x1(t, e) {
  var r = e.rippleEffectColor || e.color;
  t.eachChild(function(n) {
    n.attr({
      z: e.z,
      zlevel: e.zlevel,
      style: {
        stroke: e.brushType === "stroke" ? r : null,
        fill: e.brushType === "fill" ? r : null
      }
    });
  });
}
var oq = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n) {
      var a = t.call(this) || this, i = new ju(r, n), o = new de();
      return a.add(i), a.add(o), a.updateData(r, n), a;
    }
    return e.prototype.stopEffectAnimation = function() {
      this.childAt(1).removeAll();
    }, e.prototype.startEffectAnimation = function(r) {
      for (var n = r.symbolType, a = r.color, i = r.rippleNumber, o = this.childAt(1), s = 0; s < i; s++) {
        var l = mt(n, -1, -1, 2, 2, a);
        l.attr({
          style: {
            strokeNoScale: !0
          },
          z2: 99,
          silent: !0,
          scaleX: 0.5,
          scaleY: 0.5
        });
        var u = -s / i * r.period + r.effectOffset;
        l.animate("", !0).when(r.period, {
          scaleX: r.rippleScale / 2,
          scaleY: r.rippleScale / 2
        }).delay(u).start(), l.animateStyle(!0).when(r.period, {
          opacity: 0
        }).delay(u).start(), o.add(l);
      }
      x1(o, r);
    }, e.prototype.updateEffectAnimation = function(r) {
      for (var n = this._effectCfg, a = this.childAt(1), i = ["symbolType", "period", "rippleScale", "rippleNumber"], o = 0; o < i.length; o++) {
        var s = i[o];
        if (n[s] !== r[s]) {
          this.stopEffectAnimation(), this.startEffectAnimation(r);
          return;
        }
      }
      x1(a, r);
    }, e.prototype.highlight = function() {
      na(this);
    }, e.prototype.downplay = function() {
      aa(this);
    }, e.prototype.getSymbolType = function() {
      var r = this.childAt(0);
      return r && r.getSymbolType();
    }, e.prototype.updateData = function(r, n) {
      var a = this, i = r.hostModel;
      this.childAt(0).updateData(r, n);
      var o = this.childAt(1), s = r.getItemModel(n), l = r.getItemVisual(n, "symbol"), u = Us(r.getItemVisual(n, "symbolSize")), c = r.getItemVisual(n, "style"), d = c && c.fill, p = s.getModel("emphasis");
      o.setScale(u), o.traverse(function(v) {
        v.setStyle("fill", d);
      });
      var f = mo(r.getItemVisual(n, "symbolOffset"), u);
      f && (o.x = f[0], o.y = f[1]);
      var h = r.getItemVisual(n, "symbolRotate");
      o.rotation = (h || 0) * Math.PI / 180 || 0;
      var g = {};
      g.showEffectOn = i.get("showEffectOn"), g.rippleScale = s.get(["rippleEffect", "scale"]), g.brushType = s.get(["rippleEffect", "brushType"]), g.period = s.get(["rippleEffect", "period"]) * 1e3, g.effectOffset = n / r.count(), g.z = i.getShallow("z") || 0, g.zlevel = i.getShallow("zlevel") || 0, g.symbolType = l, g.color = d, g.rippleEffectColor = s.get(["rippleEffect", "color"]), g.rippleNumber = s.get(["rippleEffect", "number"]), g.showEffectOn === "render" ? (this._effectCfg ? this.updateEffectAnimation(g) : this.startEffectAnimation(g), this._effectCfg = g) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(v) {
        v === "emphasis" ? g.showEffectOn !== "render" && a.startEffectAnimation(g) : v === "normal" && g.showEffectOn !== "render" && a.stopEffectAnimation();
      }), this._effectCfg = g, lt(this, p.get("focus"), p.get("blurScope"), p.get("disabled"));
    }, e.prototype.fadeOut = function(r) {
      r && r();
    }, e;
  }(de)
), sq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function() {
      this._symbolDraw = new Ju(oq);
    }, e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this._symbolDraw;
      o.updateData(i, {
        clipShape: this._getClipShape(r)
      }), this.group.add(o.group);
    }, e.prototype._getClipShape = function(r) {
      var n = r.coordinateSystem, a = n && n.getArea && n.getArea();
      return r.get("clip", !0) ? a : null;
    }, e.prototype.updateTransform = function(r, n, a) {
      var i = r.getData();
      this.group.dirty();
      var o = tc("").reset(r, n, a);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout();
    }, e.prototype._updateGroupTransform = function(r) {
      var n = r.coordinateSystem;
      n && n.getRoamTransform && (this.group.transform = WB(n.getRoamTransform()), this.group.decomposeTransform());
    }, e.prototype.remove = function(r, n) {
      this._symbolDraw && this._symbolDraw.remove(!0);
    }, e.type = "effectScatter", e;
  }(Ke)
), lq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return da(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.brushSelector = function(r, n, a) {
      return a.point(n.getItemLayout(r));
    }, e.type = "series.effectScatter", e.dependencies = ["grid", "polar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      effectType: "ripple",
      progressive: 0,
      // When to show the effect, option: 'render'|'emphasis'
      showEffectOn: "render",
      clip: !0,
      // Ripple effect config
      rippleEffect: {
        period: 4,
        // Scale of ripple
        scale: 2.5,
        // Brush type can be fill or stroke
        brushType: "fill",
        // Ripple number
        number: 3
      },
      universalTransition: {
        divideShape: "clone"
      },
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
      // symbol: null,        // 图形类型
      symbolSize: 10
      // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2
      // symbolRotate: null,  // 图形旋转控制
      // itemStyle: {
      //     opacity: 1
      // }
    }, e;
  }(et)
);
function Ire(t) {
  t.registerChartView(sq), t.registerSeriesModel(lq), t.registerLayout(tc("effectScatter"));
}
var $R = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this) || this;
      return i.add(i.createLine(r, n, a)), i._updateEffectSymbol(r, n), i;
    }
    return e.prototype.createLine = function(r, n, a) {
      return new sb(r, n, a);
    }, e.prototype._updateEffectSymbol = function(r, n) {
      var a = r.getItemModel(n), i = a.getModel("effect"), o = i.get("symbolSize"), s = i.get("symbol");
      V(o) || (o = [o, o]);
      var l = r.getItemVisual(n, "style"), u = i.get("color") || l && l.stroke, c = this.childAt(1);
      this._symbolType !== s && (this.remove(c), c = mt(s, -0.5, -0.5, 1, 1, u), c.z2 = 100, c.culling = !0, this.add(c)), c && (c.setStyle("shadowColor", u), c.setStyle(i.getItemStyle(["color"])), c.scaleX = o[0], c.scaleY = o[1], c.setColor(u), this._symbolType = s, this._symbolScale = o, this._updateEffectAnimation(r, i, n));
    }, e.prototype._updateEffectAnimation = function(r, n, a) {
      var i = this.childAt(1);
      if (i) {
        var o = r.getItemLayout(a), s = n.get("period") * 1e3, l = n.get("loop"), u = n.get("roundTrip"), c = n.get("constantSpeed"), d = Pt(n.get("delay"), function(f) {
          return f / r.count() * s / 3;
        });
        if (i.ignore = !0, this._updateAnimationPoints(i, o), c > 0 && (s = this._getLineLength(i) / c * 1e3), s !== this._period || l !== this._loop || u !== this._roundTrip) {
          i.stopAnimation();
          var p = void 0;
          ae(d) ? p = d(a) : p = d, i.__t > 0 && (p = -s * i.__t), this._animateSymbol(i, s, p, l, u);
        }
        this._period = s, this._loop = l, this._roundTrip = u;
      }
    }, e.prototype._animateSymbol = function(r, n, a, i, o) {
      if (n > 0) {
        r.__t = 0;
        var s = this, l = r.animate("", i).when(o ? n * 2 : n, {
          __t: o ? 2 : 1
        }).delay(a).during(function() {
          s._updateSymbolPosition(r);
        });
        i || l.done(function() {
          s.remove(r);
        }), l.start();
      }
    }, e.prototype._getLineLength = function(r) {
      return Na(r.__p1, r.__cp1) + Na(r.__cp1, r.__p2);
    }, e.prototype._updateAnimationPoints = function(r, n) {
      r.__p1 = n[0], r.__p2 = n[1], r.__cp1 = n[2] || [(n[0][0] + n[1][0]) / 2, (n[0][1] + n[1][1]) / 2];
    }, e.prototype.updateData = function(r, n, a) {
      this.childAt(0).updateData(r, n, a), this._updateEffectSymbol(r, n);
    }, e.prototype._updateSymbolPosition = function(r) {
      var n = r.__p1, a = r.__p2, i = r.__cp1, o = r.__t < 1 ? r.__t : 2 - r.__t, s = [r.x, r.y], l = s.slice(), u = Ot, c = Wv;
      s[0] = u(n[0], i[0], a[0], o), s[1] = u(n[1], i[1], a[1], o);
      var d = r.__t < 1 ? c(n[0], i[0], a[0], o) : c(a[0], i[0], n[0], 1 - o), p = r.__t < 1 ? c(n[1], i[1], a[1], o) : c(a[1], i[1], n[1], 1 - o);
      r.rotation = -Math.atan2(p, d) - Math.PI / 2, (this._symbolType === "line" || this._symbolType === "rect" || this._symbolType === "roundRect") && (r.__lastT !== void 0 && r.__lastT < r.__t ? (r.scaleY = Na(l, s) * 1.05, o === 1 && (s[0] = l[0] + (s[0] - l[0]) / 2, s[1] = l[1] + (s[1] - l[1]) / 2)) : r.__lastT === 1 ? r.scaleY = 2 * Na(n, s) : r.scaleY = this._symbolScale[1]), r.__lastT = r.__t, r.ignore = !1, r.x = s[0], r.y = s[1];
    }, e.prototype.updateLayout = function(r, n) {
      this.childAt(0).updateLayout(r, n);
      var a = r.getItemModel(n).getModel("effect");
      this._updateEffectAnimation(r, a, n);
    }, e;
  }(de)
), HR = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a) {
      var i = t.call(this) || this;
      return i._createPolyline(r, n, a), i;
    }
    return e.prototype._createPolyline = function(r, n, a) {
      var i = r.getItemLayout(n), o = new lr({
        shape: {
          points: i
        }
      });
      this.add(o), this._updateCommonStl(r, n, a);
    }, e.prototype.updateData = function(r, n, a) {
      var i = r.hostModel, o = this.childAt(0), s = {
        shape: {
          points: r.getItemLayout(n)
        }
      };
      Fe(o, s, i, n), this._updateCommonStl(r, n, a);
    }, e.prototype._updateCommonStl = function(r, n, a) {
      var i = this.childAt(0), o = r.getItemModel(n), s = a && a.emphasisLineStyle, l = a && a.focus, u = a && a.blurScope, c = a && a.emphasisDisabled;
      if (!a || r.hasItemOption) {
        var d = o.getModel("emphasis");
        s = d.getModel("lineStyle").getLineStyle(), c = d.get("disabled"), l = d.get("focus"), u = d.get("blurScope");
      }
      i.useStyle(r.getItemVisual(n, "style")), i.style.fill = null, i.style.strokeNoScale = !0;
      var p = i.ensureState("emphasis");
      p.style = s, lt(this, l, u, c);
    }, e.prototype.updateLayout = function(r, n) {
      var a = this.childAt(0);
      a.setShape("points", r.getItemLayout(n));
    }, e;
  }(de)
), uq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r._lastFrame = 0, r._lastFramePercent = 0, r;
    }
    return e.prototype.createLine = function(r, n, a) {
      return new HR(r, n, a);
    }, e.prototype._updateAnimationPoints = function(r, n) {
      this._points = n;
      for (var a = [0], i = 0, o = 1; o < n.length; o++) {
        var s = n[o - 1], l = n[o];
        i += Na(s, l), a.push(i);
      }
      if (i === 0) {
        this._length = 0;
        return;
      }
      for (var o = 0; o < a.length; o++)
        a[o] /= i;
      this._offsets = a, this._length = i;
    }, e.prototype._getLineLength = function() {
      return this._length;
    }, e.prototype._updateSymbolPosition = function(r) {
      var n = r.__t < 1 ? r.__t : 2 - r.__t, a = this._points, i = this._offsets, o = a.length;
      if (i) {
        var s = this._lastFrame, l;
        if (n < this._lastFramePercent) {
          var u = Math.min(s + 1, o - 1);
          for (l = u; l >= 0 && !(i[l] <= n); l--)
            ;
          l = Math.min(l, o - 2);
        } else {
          for (l = s; l < o && !(i[l] > n); l++)
            ;
          l = Math.min(l - 1, o - 2);
        }
        var c = (n - i[l]) / (i[l + 1] - i[l]), d = a[l], p = a[l + 1];
        r.x = d[0] * (1 - c) + c * p[0], r.y = d[1] * (1 - c) + c * p[1];
        var f = r.__t < 1 ? p[0] - d[0] : d[0] - p[0], h = r.__t < 1 ? p[1] - d[1] : d[1] - p[1];
        r.rotation = -Math.atan2(h, f) - Math.PI / 2, this._lastFrame = l, this._lastFramePercent = n, r.ignore = !1;
      }
    }, e;
  }($R)
), cq = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
      this.polyline = !1, this.curveness = 0, this.segs = [];
    }
    return t;
  }()
), dq = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r) {
      var n = t.call(this, r) || this;
      return n._off = 0, n.hoverDataIdx = -1, n;
    }
    return e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new cq();
    }, e.prototype.buildPath = function(r, n) {
      var a = n.segs, i = n.curveness, o;
      if (n.polyline)
        for (o = this._off; o < a.length; ) {
          var s = a[o++];
          if (s > 0) {
            r.moveTo(a[o++], a[o++]);
            for (var l = 1; l < s; l++)
              r.lineTo(a[o++], a[o++]);
          }
        }
      else
        for (o = this._off; o < a.length; ) {
          var u = a[o++], c = a[o++], d = a[o++], p = a[o++];
          if (r.moveTo(u, c), i > 0) {
            var f = (u + d) / 2 - (c - p) * i, h = (c + p) / 2 - (d - u) * i;
            r.quadraticCurveTo(f, h, d, p);
          } else
            r.lineTo(d, p);
        }
      this.incremental && (this._off = o, this.notClear = !0);
    }, e.prototype.findDataIndex = function(r, n) {
      var a = this.shape, i = a.segs, o = a.curveness, s = this.style.lineWidth;
      if (a.polyline)
        for (var l = 0, u = 0; u < i.length; ) {
          var c = i[u++];
          if (c > 0)
            for (var d = i[u++], p = i[u++], f = 1; f < c; f++) {
              var h = i[u++], g = i[u++];
              if (Aa(d, p, h, g, s, r, n))
                return l;
            }
          l++;
        }
      else
        for (var l = 0, u = 0; u < i.length; ) {
          var d = i[u++], p = i[u++], h = i[u++], g = i[u++];
          if (o > 0) {
            var v = (d + h) / 2 - (p - g) * o, m = (p + g) / 2 - (h - d) * o;
            if (_D(d, p, v, m, h, g, s, r, n))
              return l;
          } else if (Aa(d, p, h, g, s, r, n))
            return l;
          l++;
        }
      return -1;
    }, e.prototype.contain = function(r, n) {
      var a = this.transformCoordToLocal(r, n), i = this.getBoundingRect();
      if (r = a[0], n = a[1], i.contain(r, n)) {
        var o = this.hoverDataIdx = this.findDataIndex(r, n);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var r = this._rect;
      if (!r) {
        for (var n = this.shape, a = n.segs, i = 1 / 0, o = 1 / 0, s = -1 / 0, l = -1 / 0, u = 0; u < a.length; ) {
          var c = a[u++], d = a[u++];
          i = Math.min(c, i), s = Math.max(c, s), o = Math.min(d, o), l = Math.max(d, l);
        }
        r = this._rect = new Te(i, o, s, l);
      }
      return r;
    }, e;
  }(Ce)
), pq = (
  /** @class */
  function() {
    function t() {
      this.group = new de();
    }
    return t.prototype.updateData = function(e) {
      this._clear();
      var r = this._create();
      r.setShape({
        segs: e.getLayout("linesPoints")
      }), this._setCommon(r, e);
    }, t.prototype.incrementalPrepareUpdate = function(e) {
      this.group.removeAll(), this._clear();
    }, t.prototype.incrementalUpdate = function(e, r) {
      var n = this._newAdded[0], a = r.getLayout("linesPoints"), i = n && n.shape.segs;
      if (i && i.length < 2e4) {
        var o = i.length, s = new Float32Array(o + a.length);
        s.set(i), s.set(a, o), n.setShape({
          segs: s
        });
      } else {
        this._newAdded = [];
        var l = this._create();
        l.incremental = !0, l.setShape({
          segs: a
        }), this._setCommon(l, r), l.__startIndex = e.start;
      }
    }, t.prototype.remove = function() {
      this._clear();
    }, t.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, t.prototype._create = function() {
      var e = new dq({
        cursor: "default",
        ignoreCoarsePointer: !0
      });
      return this._newAdded.push(e), this.group.add(e), e;
    }, t.prototype._setCommon = function(e, r, n) {
      var a = r.hostModel;
      e.setShape({
        polyline: a.get("polyline"),
        curveness: a.get(["lineStyle", "curveness"])
      }), e.useStyle(a.getModel("lineStyle").getLineStyle()), e.style.strokeNoScale = !0;
      var i = r.getVisual("style");
      i && i.stroke && e.setStyle("stroke", i.stroke), e.setStyle("fill", null);
      var o = pe(e);
      o.seriesIndex = a.seriesIndex, e.on("mousemove", function(s) {
        o.dataIndex = null;
        var l = e.hoverDataIdx;
        l > 0 && (o.dataIndex = l + e.__startIndex);
      });
    }, t.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, t;
  }()
), WR = {
  seriesType: "lines",
  plan: Fs(),
  reset: function(t) {
    var e = t.coordinateSystem;
    if (e) {
      var r = t.get("polyline"), n = t.pipelineContext.large;
      return {
        progress: function(a, i) {
          var o = [];
          if (n) {
            var s = void 0, l = a.end - a.start;
            if (r) {
              for (var u = 0, c = a.start; c < a.end; c++)
                u += t.getLineCoordsCount(c);
              s = new Float32Array(l + u * 2);
            } else
              s = new Float32Array(l * 4);
            for (var d = 0, p = [], c = a.start; c < a.end; c++) {
              var f = t.getLineCoords(c, o);
              r && (s[d++] = f);
              for (var h = 0; h < f; h++)
                p = e.dataToPoint(o[h], !1, p), s[d++] = p[0], s[d++] = p[1];
            }
            i.setLayout("linesPoints", s);
          } else
            for (var c = a.start; c < a.end; c++) {
              var g = i.getItemModel(c), f = t.getLineCoords(c, o), v = [];
              if (r)
                for (var m = 0; m < f; m++)
                  v.push(e.dataToPoint(o[m]));
              else {
                v[0] = e.dataToPoint(o[0]), v[1] = e.dataToPoint(o[1]);
                var _ = g.get(["lineStyle", "curveness"]);
                +_ && (v[2] = [(v[0][0] + v[1][0]) / 2 - (v[0][1] - v[1][1]) * _, (v[0][1] + v[1][1]) / 2 - (v[1][0] - v[0][0]) * _]);
              }
              i.setItemLayout(c, v);
            }
        }
      };
    }
  }
}, fq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this._updateLineDraw(i, r), s = r.get("zlevel"), l = r.get(["effect", "trailLength"]), u = a.getZr(), c = u.painter.getType() === "svg";
      c || u.painter.getLayer(s).clear(!0), this._lastZlevel != null && !c && u.configLayer(this._lastZlevel, {
        motionBlur: !1
      }), this._showEffect(r) && l > 0 && (c || u.configLayer(s, {
        motionBlur: !0,
        lastFrameAlpha: Math.max(Math.min(l / 10 + 0.9, 1), 0)
      })), o.updateData(i);
      var d = r.get("clip", !0) && ec(r.coordinateSystem, !1, r);
      d ? this.group.setClipPath(d) : this.group.removeClipPath(), this._lastZlevel = s, this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      var i = r.getData(), o = this._updateLineDraw(i, r);
      o.incrementalPrepareUpdate(i), this._clearLayer(a), this._finished = !1;
    }, e.prototype.incrementalRender = function(r, n, a) {
      this._lineDraw.incrementalUpdate(r, n.getData()), this._finished = r.end === n.getData().count();
    }, e.prototype.eachRendered = function(r) {
      this._lineDraw && this._lineDraw.eachRendered(r);
    }, e.prototype.updateTransform = function(r, n, a) {
      var i = r.getData(), o = r.pipelineContext;
      if (!this._finished || o.large || o.progressiveRender)
        return {
          update: !0
        };
      var s = WR.reset(r, n, a);
      s.progress && s.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._lineDraw.updateLayout(), this._clearLayer(a);
    }, e.prototype._updateLineDraw = function(r, n) {
      var a = this._lineDraw, i = this._showEffect(n), o = !!n.get("polyline"), s = n.pipelineContext, l = s.large;
      return (!a || i !== this._hasEffet || o !== this._isPolyline || l !== this._isLargeDraw) && (a && a.remove(), a = this._lineDraw = l ? new pq() : new lb(o ? i ? uq : HR : i ? $R : sb), this._hasEffet = i, this._isPolyline = o, this._isLargeDraw = l), this.group.add(a.group), a;
    }, e.prototype._showEffect = function(r) {
      return !!r.get(["effect", "show"]);
    }, e.prototype._clearLayer = function(r) {
      var n = r.getZr(), a = n.painter.getType() === "svg";
      !a && this._lastZlevel != null && n.painter.getLayer(this._lastZlevel).clear(!0);
    }, e.prototype.remove = function(r, n) {
      this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(n);
    }, e.prototype.dispose = function(r, n) {
      this.remove(r, n);
    }, e.type = "lines", e;
  }(Ke)
), hq = typeof Uint32Array > "u" ? Array : Uint32Array, gq = typeof Float64Array > "u" ? Array : Float64Array;
function C1(t) {
  var e = t.data;
  e && e[0] && e[0][0] && e[0][0].coord && (t.data = $(e, function(r) {
    var n = [r[0].coord, r[1].coord], a = {
      coords: n
    };
    return r[0].name && (a.fromName = r[0].name), r[1].name && (a.toName = r[1].name), z_([a, r[0], r[1]]);
  }));
}
var vq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.visualStyleAccessPath = "lineStyle", r.visualDrawType = "stroke", r;
    }
    return e.prototype.init = function(r) {
      r.data = r.data || [], C1(r);
      var n = this._processFlatCoordsArray(r.data);
      this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (r.data = new Float32Array(n.count)), t.prototype.init.apply(this, arguments);
    }, e.prototype.mergeOption = function(r) {
      if (C1(r), r.data) {
        var n = this._processFlatCoordsArray(r.data);
        this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (r.data = new Float32Array(n.count));
      }
      t.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.appendData = function(r) {
      var n = this._processFlatCoordsArray(r.data);
      n.flatCoords && (this._flatCoords ? (this._flatCoords = su(this._flatCoords, n.flatCoords), this._flatCoordsOffset = su(this._flatCoordsOffset, n.flatCoordsOffset)) : (this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset), r.data = new Float32Array(n.count)), this.getRawData().appendData(r.data);
    }, e.prototype._getCoordsFromItemModel = function(r) {
      var n = this.getData().getItemModel(r), a = n.option instanceof Array ? n.option : n.getShallow("coords");
      return a;
    }, e.prototype.getLineCoordsCount = function(r) {
      return this._flatCoordsOffset ? this._flatCoordsOffset[r * 2 + 1] : this._getCoordsFromItemModel(r).length;
    }, e.prototype.getLineCoords = function(r, n) {
      if (this._flatCoordsOffset) {
        for (var a = this._flatCoordsOffset[r * 2], i = this._flatCoordsOffset[r * 2 + 1], o = 0; o < i; o++)
          n[o] = n[o] || [], n[o][0] = this._flatCoords[a + o * 2], n[o][1] = this._flatCoords[a + o * 2 + 1];
        return i;
      } else {
        for (var s = this._getCoordsFromItemModel(r), o = 0; o < s.length; o++)
          n[o] = n[o] || [], n[o][0] = s[o][0], n[o][1] = s[o][1];
        return s.length;
      }
    }, e.prototype._processFlatCoordsArray = function(r) {
      var n = 0;
      if (this._flatCoords && (n = this._flatCoords.length), ke(r[0])) {
        for (var a = r.length, i = new hq(a), o = new gq(a), s = 0, l = 0, u = 0, c = 0; c < a; ) {
          u++;
          var d = r[c++];
          i[l++] = s + n, i[l++] = d;
          for (var p = 0; p < d; p++) {
            var f = r[c++], h = r[c++];
            o[s++] = f, o[s++] = h;
          }
        }
        return {
          flatCoordsOffset: new Uint32Array(i.buffer, 0, l),
          flatCoords: o,
          count: u
        };
      }
      return {
        flatCoordsOffset: null,
        flatCoords: null,
        count: r.length
      };
    }, e.prototype.getInitialData = function(r, n) {
      var a = new rr(["value"], this);
      return a.hasItemOption = !1, a.initData(r.data, [], function(i, o, s, l) {
        if (i instanceof Array)
          return NaN;
        a.hasItemOption = !0;
        var u = i.value;
        if (u != null)
          return u instanceof Array ? u[l] : u;
      }), a;
    }, e.prototype.formatTooltip = function(r, n, a) {
      var i = this.getData(), o = i.getItemModel(r), s = o.get("name");
      if (s)
        return s;
      var l = o.get("fromName"), u = o.get("toName"), c = [];
      return l != null && c.push(l), u != null && c.push(u), Mt("nameValue", {
        name: c.join(" > ")
      });
    }, e.prototype.preventIncremental = function() {
      return !!this.get(["effect", "show"]);
    }, e.prototype.getProgressive = function() {
      var r = this.option.progressive;
      return r ?? (this.option.large ? 1e4 : this.get("progressive"));
    }, e.prototype.getProgressiveThreshold = function() {
      var r = this.option.progressiveThreshold;
      return r ?? (this.option.large ? 2e4 : this.get("progressiveThreshold"));
    }, e.prototype.getZLevelKey = function() {
      var r = this.getModel("effect"), n = r.get("trailLength");
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : r.get("show") && n > 0 ? n + "" : "";
    }, e.type = "series.lines", e.dependencies = ["grid", "polar", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "geo",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Cartesian coordinate system
      xAxisIndex: 0,
      yAxisIndex: 0,
      symbol: ["none", "none"],
      symbolSize: [10, 10],
      // Geo coordinate system
      geoIndex: 0,
      effect: {
        show: !1,
        period: 4,
        constantSpeed: 0,
        symbol: "circle",
        symbolSize: 3,
        loop: !0,
        trailLength: 0.2
      },
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      polyline: !1,
      clip: !0,
      label: {
        show: !1,
        position: "end"
        // distance: 5,
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      lineStyle: {
        opacity: 0.5
      }
    }, e;
  }(et)
);
function sd(t) {
  return t instanceof Array || (t = [t, t]), t;
}
var mq = {
  seriesType: "lines",
  reset: function(t) {
    var e = sd(t.get("symbol")), r = sd(t.get("symbolSize")), n = t.getData();
    n.setVisual("fromSymbol", e && e[0]), n.setVisual("toSymbol", e && e[1]), n.setVisual("fromSymbolSize", r && r[0]), n.setVisual("toSymbolSize", r && r[1]);
    function a(i, o) {
      var s = i.getItemModel(o), l = sd(s.getShallow("symbol", !0)), u = sd(s.getShallow("symbolSize", !0));
      l[0] && i.setItemVisual(o, "fromSymbol", l[0]), l[1] && i.setItemVisual(o, "toSymbol", l[1]), u[0] && i.setItemVisual(o, "fromSymbolSize", u[0]), u[1] && i.setItemVisual(o, "toSymbolSize", u[1]);
    }
    return {
      dataEach: n.hasItemOption ? a : null
    };
  }
};
function Nre(t) {
  t.registerChartView(fq), t.registerSeriesModel(vq), t.registerLayout(WR), t.registerVisual(mq);
}
var _q = 256, yq = (
  /** @class */
  function() {
    function t() {
      this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {
        inRange: null,
        outOfRange: null
      };
      var e = Ya.createCanvas();
      this.canvas = e;
    }
    return t.prototype.update = function(e, r, n, a, i, o) {
      var s = this._getBrush(), l = this._getGradient(i, "inRange"), u = this._getGradient(i, "outOfRange"), c = this.pointSize + this.blurSize, d = this.canvas, p = d.getContext("2d"), f = e.length;
      d.width = r, d.height = n;
      for (var h = 0; h < f; ++h) {
        var g = e[h], v = g[0], m = g[1], _ = g[2], y = a(_);
        p.globalAlpha = y, p.drawImage(s, v - c, m - c);
      }
      if (!d.width || !d.height)
        return d;
      for (var b = p.getImageData(0, 0, d.width, d.height), S = b.data, E = 0, T = S.length, x = this.minOpacity, C = this.maxOpacity, A = C - x; E < T; ) {
        var y = S[E + 3] / 256, D = Math.floor(y * (_q - 1)) * 4;
        if (y > 0) {
          var M = o(y) ? l : u;
          y > 0 && (y = y * A + x), S[E++] = M[D], S[E++] = M[D + 1], S[E++] = M[D + 2], S[E++] = M[D + 3] * y * 256;
        } else
          E += 4;
      }
      return p.putImageData(b, 0, 0), d;
    }, t.prototype._getBrush = function() {
      var e = this._brushCanvas || (this._brushCanvas = Ya.createCanvas()), r = this.pointSize + this.blurSize, n = r * 2;
      e.width = n, e.height = n;
      var a = e.getContext("2d");
      return a.clearRect(0, 0, n, n), a.shadowOffsetX = n, a.shadowBlur = this.blurSize, a.shadowColor = "#000", a.beginPath(), a.arc(-r, r, this.pointSize, 0, Math.PI * 2, !0), a.closePath(), a.fill(), e;
    }, t.prototype._getGradient = function(e, r) {
      for (var n = this._gradientPixels, a = n[r] || (n[r] = new Uint8ClampedArray(256 * 4)), i = [0, 0, 0, 0], o = 0, s = 0; s < 256; s++)
        e[r](s / 255, !0, i), a[o++] = i[0], a[o++] = i[1], a[o++] = i[2], a[o++] = i[3];
      return a;
    }, t;
  }()
);
function bq(t, e, r) {
  var n = t[1] - t[0];
  e = $(e, function(o) {
    return {
      interval: [(o.interval[0] - t[0]) / n, (o.interval[1] - t[0]) / n]
    };
  });
  var a = e.length, i = 0;
  return function(o) {
    var s;
    for (s = i; s < a; s++) {
      var l = e[s].interval;
      if (l[0] <= o && o <= l[1]) {
        i = s;
        break;
      }
    }
    if (s === a)
      for (s = i - 1; s >= 0; s--) {
        var l = e[s].interval;
        if (l[0] <= o && o <= l[1]) {
          i = s;
          break;
        }
      }
    return s >= 0 && s < a && r[s];
  };
}
function Sq(t, e) {
  var r = t[1] - t[0];
  return e = [(e[0] - t[0]) / r, (e[1] - t[0]) / r], function(n) {
    return n >= e[0] && n <= e[1];
  };
}
function A1(t) {
  var e = t.dimensions;
  return e[0] === "lng" && e[1] === "lat";
}
var Eq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i;
      n.eachComponent("visualMap", function(s) {
        s.eachTargetSeries(function(l) {
          l === r && (i = s);
        });
      }), this._progressiveEls = null, this.group.removeAll();
      var o = r.coordinateSystem;
      o.type === "cartesian2d" || o.type === "calendar" ? this._renderOnCartesianAndCalendar(r, a, 0, r.getData().count()) : A1(o) && this._renderOnGeo(o, r, i, a);
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      this.group.removeAll();
    }, e.prototype.incrementalRender = function(r, n, a, i) {
      var o = n.coordinateSystem;
      o && (A1(o) ? this.render(n, a, i) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(n, i, r.start, r.end, !0)));
    }, e.prototype.eachRendered = function(r) {
      ei(this._progressiveEls || this.group, r);
    }, e.prototype._renderOnCartesianAndCalendar = function(r, n, a, i, o) {
      var s = r.coordinateSystem, l = yo(s, "cartesian2d"), u, c, d, p;
      if (l) {
        var f = s.getAxis("x"), h = s.getAxis("y");
        u = f.getBandWidth() + 0.5, c = h.getBandWidth() + 0.5, d = f.scale.getExtent(), p = h.scale.getExtent();
      }
      for (var g = this.group, v = r.getData(), m = r.getModel(["emphasis", "itemStyle"]).getItemStyle(), _ = r.getModel(["blur", "itemStyle"]).getItemStyle(), y = r.getModel(["select", "itemStyle"]).getItemStyle(), b = r.get(["itemStyle", "borderRadius"]), S = Dt(r), E = r.getModel("emphasis"), T = E.get("focus"), x = E.get("blurScope"), C = E.get("disabled"), A = l ? [v.mapDimension("x"), v.mapDimension("y"), v.mapDimension("value")] : [v.mapDimension("time"), v.mapDimension("value")], D = a; D < i; D++) {
        var M = void 0, I = v.getItemVisual(D, "style");
        if (l) {
          var N = v.get(A[0], D), R = v.get(A[1], D);
          if (isNaN(v.get(A[2], D)) || isNaN(N) || isNaN(R) || N < d[0] || N > d[1] || R < p[0] || R > p[1])
            continue;
          var O = s.dataToPoint([N, R]);
          M = new Re({
            shape: {
              x: O[0] - u / 2,
              y: O[1] - c / 2,
              width: u,
              height: c
            },
            style: I
          });
        } else {
          if (isNaN(v.get(A[1], D)))
            continue;
          M = new Re({
            z2: 1,
            shape: s.dataToRect([v.get(A[0], D)]).contentShape,
            style: I
          });
        }
        if (v.hasItemOption) {
          var B = v.getItemModel(D), L = B.getModel("emphasis");
          m = L.getModel("itemStyle").getItemStyle(), _ = B.getModel(["blur", "itemStyle"]).getItemStyle(), y = B.getModel(["select", "itemStyle"]).getItemStyle(), b = B.get(["itemStyle", "borderRadius"]), T = L.get("focus"), x = L.get("blurScope"), C = L.get("disabled"), S = Dt(B);
        }
        M.shape.r = b;
        var F = r.getRawValue(D), U = "-";
        F && F[2] != null && (U = F[2] + ""), Vt(M, S, {
          labelFetcher: r,
          labelDataIndex: D,
          defaultOpacity: I.opacity,
          defaultText: U
        }), M.ensureState("emphasis").style = m, M.ensureState("blur").style = _, M.ensureState("select").style = y, lt(M, T, x, C), M.incremental = o, o && (M.states.emphasis.hoverLayer = !0), g.add(M), v.setItemGraphicEl(D, M), this._progressiveEls && this._progressiveEls.push(M);
      }
    }, e.prototype._renderOnGeo = function(r, n, a, i) {
      var o = a.targetVisuals.inRange, s = a.targetVisuals.outOfRange, l = n.getData(), u = this._hmLayer || this._hmLayer || new yq();
      u.blurSize = n.get("blurSize"), u.pointSize = n.get("pointSize"), u.minOpacity = n.get("minOpacity"), u.maxOpacity = n.get("maxOpacity");
      var c = r.getViewRect().clone(), d = r.getRoamTransform();
      c.applyTransform(d);
      var p = Math.max(c.x, 0), f = Math.max(c.y, 0), h = Math.min(c.width + c.x, i.getWidth()), g = Math.min(c.height + c.y, i.getHeight()), v = h - p, m = g - f, _ = [l.mapDimension("lng"), l.mapDimension("lat"), l.mapDimension("value")], y = l.mapArray(_, function(T, x, C) {
        var A = r.dataToPoint([T, x]);
        return A[0] -= p, A[1] -= f, A.push(C), A;
      }), b = a.getExtent(), S = a.type === "visualMap.continuous" ? Sq(b, a.option.range) : bq(b, a.getPieceList(), a.option.selected);
      u.update(y, v, m, o.color.getNormalizer(), {
        inRange: o.color.getColorMapper(),
        outOfRange: s.color.getColorMapper()
      }, S);
      var E = new Bt({
        style: {
          width: v,
          height: m,
          x: p,
          y: f,
          image: u.canvas
        },
        silent: !0
      });
      this.group.add(E);
    }, e.type = "heatmap", e;
  }(Ke)
), Tq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      return da(null, this, {
        generateCoord: "value"
      });
    }, e.prototype.preventIncremental = function() {
      var r = Ku.get(this.get("coordinateSystem"));
      if (r && r.dimensions)
        return r.dimensions[0] === "lng" && r.dimensions[1] === "lat";
    }, e.type = "series.heatmap", e.dependencies = ["grid", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Geo coordinate system
      geoIndex: 0,
      blurSize: 30,
      pointSize: 20,
      maxOpacity: 1,
      minOpacity: 0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(et)
);
function Rre(t) {
  t.registerChartView(Eq), t.registerSeriesModel(Tq);
}
var xq = ["itemStyle", "borderWidth"], w1 = [{
  xy: "x",
  wh: "width",
  index: 0,
  posDesc: ["left", "right"]
}, {
  xy: "y",
  wh: "height",
  index: 1,
  posDesc: ["top", "bottom"]
}], nv = new ca(), Cq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = this.group, o = r.getData(), s = this._data, l = r.coordinateSystem, u = l.getBaseAxis(), c = u.isHorizontal(), d = l.master.getRect(), p = {
        ecSize: {
          width: a.getWidth(),
          height: a.getHeight()
        },
        seriesModel: r,
        coordSys: l,
        coordSysExtent: [[d.x, d.x + d.width], [d.y, d.y + d.height]],
        isHorizontal: c,
        valueDim: w1[+c],
        categoryDim: w1[1 - +c]
      };
      o.diff(s).add(function(h) {
        if (o.hasValue(h)) {
          var g = M1(o, h), v = D1(o, h, g, p), m = I1(o, p, v);
          o.setItemGraphicEl(h, m), i.add(m), R1(m, p, v);
        }
      }).update(function(h, g) {
        var v = s.getItemGraphicEl(g);
        if (!o.hasValue(h)) {
          i.remove(v);
          return;
        }
        var m = M1(o, h), _ = D1(o, h, m, p), y = QR(o, _);
        v && y !== v.__pictorialShapeStr && (i.remove(v), o.setItemGraphicEl(h, null), v = null), v ? Rq(v, p, _) : v = I1(o, p, _, !0), o.setItemGraphicEl(h, v), v.__pictorialSymbolMeta = _, i.add(v), R1(v, p, _);
      }).remove(function(h) {
        var g = s.getItemGraphicEl(h);
        g && N1(s, h, g.__pictorialSymbolMeta.animationModel, g);
      }).execute();
      var f = r.get("clip", !0) ? ec(r.coordinateSystem, !1, r) : null;
      return f ? i.setClipPath(f) : i.removeClipPath(), this._data = o, this.group;
    }, e.prototype.remove = function(r, n) {
      var a = this.group, i = this._data;
      r.get("animation") ? i && i.eachItemGraphicEl(function(o) {
        N1(i, pe(o).dataIndex, r, o);
      }) : a.removeAll();
    }, e.type = "pictorialBar", e;
  }(Ke)
);
function D1(t, e, r, n) {
  var a = t.getItemLayout(e), i = r.get("symbolRepeat"), o = r.get("symbolClip"), s = r.get("symbolPosition") || "start", l = r.get("symbolRotate"), u = (l || 0) * Math.PI / 180 || 0, c = r.get("symbolPatternSize") || 2, d = r.isAnimationEnabled(), p = {
    dataIndex: e,
    layout: a,
    itemModel: r,
    symbolType: t.getItemVisual(e, "symbol") || "circle",
    style: t.getItemVisual(e, "style"),
    symbolClip: o,
    symbolRepeat: i,
    symbolRepeatDirection: r.get("symbolRepeatDirection"),
    symbolPatternSize: c,
    rotation: u,
    animationModel: d ? r : null,
    hoverScale: d && r.get(["emphasis", "scale"]),
    z2: r.getShallow("z", !0) || 0
  };
  Aq(r, i, a, n, p), wq(t, e, a, i, o, p.boundingLength, p.pxSign, c, n, p), Dq(r, p.symbolScale, u, n, p);
  var f = p.symbolSize, h = mo(r.get("symbolOffset"), f);
  return Mq(r, f, a, i, o, h, s, p.valueLineWidth, p.boundingLength, p.repeatCutLength, n, p), p;
}
function Aq(t, e, r, n, a) {
  var i = n.valueDim, o = t.get("symbolBoundingData"), s = n.coordSys.getOtherAxis(n.coordSys.getBaseAxis()), l = s.toGlobalCoord(s.dataToCoord(0)), u = 1 - +(r[i.wh] <= 0), c;
  if (V(o)) {
    var d = [av(s, o[0]) - l, av(s, o[1]) - l];
    d[1] < d[0] && d.reverse(), c = d[u];
  } else o != null ? c = av(s, o) - l : e ? c = n.coordSysExtent[i.index][u] - l : c = r[i.wh];
  a.boundingLength = c, e && (a.repeatCutLength = r[i.wh]);
  var p = i.xy === "x", f = s.inverse;
  a.pxSign = p && !f || !p && f ? c >= 0 ? 1 : -1 : c > 0 ? 1 : -1;
}
function av(t, e) {
  return t.toGlobalCoord(t.dataToCoord(t.scale.parse(e)));
}
function wq(t, e, r, n, a, i, o, s, l, u) {
  var c = l.valueDim, d = l.categoryDim, p = Math.abs(r[d.wh]), f = t.getItemVisual(e, "symbolSize"), h;
  V(f) ? h = f.slice() : f == null ? h = ["100%", "100%"] : h = [f, f], h[d.index] = q(h[d.index], p), h[c.index] = q(h[c.index], n ? p : Math.abs(i)), u.symbolSize = h;
  var g = u.symbolScale = [h[0] / s, h[1] / s];
  g[c.index] *= (l.isHorizontal ? -1 : 1) * o;
}
function Dq(t, e, r, n, a) {
  var i = t.get(xq) || 0;
  i && (nv.attr({
    scaleX: e[0],
    scaleY: e[1],
    rotation: r
  }), nv.updateTransform(), i /= nv.getLineScale(), i *= e[n.valueDim.index]), a.valueLineWidth = i || 0;
}
function Mq(t, e, r, n, a, i, o, s, l, u, c, d) {
  var p = c.categoryDim, f = c.valueDim, h = d.pxSign, g = Math.max(e[f.index] + s, 0), v = g;
  if (n) {
    var m = Math.abs(l), _ = Pt(t.get("symbolMargin"), "15%") + "", y = !1;
    _.lastIndexOf("!") === _.length - 1 && (y = !0, _ = _.slice(0, _.length - 1));
    var b = q(_, e[f.index]), S = Math.max(g + b * 2, 0), E = y ? 0 : b * 2, T = aD(n), x = T ? n : O1((m + E) / S), C = m - x * g;
    b = C / 2 / (y ? x : Math.max(x - 1, 1)), S = g + b * 2, E = y ? 0 : b * 2, !T && n !== "fixed" && (x = u ? O1((Math.abs(u) + E) / S) : 0), v = x * S - E, d.repeatTimes = x, d.symbolMargin = b;
  }
  var A = h * (v / 2), D = d.pathPosition = [];
  D[p.index] = r[p.wh] / 2, D[f.index] = o === "start" ? A : o === "end" ? l - A : l / 2, i && (D[0] += i[0], D[1] += i[1]);
  var M = d.bundlePosition = [];
  M[p.index] = r[p.xy], M[f.index] = r[f.xy];
  var I = d.barRectShape = G({}, r);
  I[f.wh] = h * Math.max(Math.abs(r[f.wh]), Math.abs(D[f.index] + A)), I[p.wh] = r[p.wh];
  var N = d.clipShape = {};
  N[p.xy] = -r[p.xy], N[p.wh] = c.ecSize[p.wh], N[f.xy] = 0, N[f.wh] = r[f.wh];
}
function qR(t) {
  var e = t.symbolPatternSize, r = mt(
    // Consider texture img, make a big size.
    t.symbolType,
    -e / 2,
    -e / 2,
    e,
    e
  );
  return r.attr({
    culling: !0
  }), r.type !== "image" && r.setStyle({
    strokeNoScale: !0
  }), r;
}
function YR(t, e, r, n) {
  var a = t.__pictorialBundle, i = r.symbolSize, o = r.valueLineWidth, s = r.pathPosition, l = e.valueDim, u = r.repeatTimes || 0, c = 0, d = i[e.valueDim.index] + o + r.symbolMargin * 2;
  for (_b(t, function(g) {
    g.__pictorialAnimationIndex = c, g.__pictorialRepeatTimes = u, c < u ? ds(g, null, h(c), r, n) : ds(g, null, {
      scaleX: 0,
      scaleY: 0
    }, r, n, function() {
      a.remove(g);
    }), c++;
  }); c < u; c++) {
    var p = qR(r);
    p.__pictorialAnimationIndex = c, p.__pictorialRepeatTimes = u, a.add(p);
    var f = h(c);
    ds(p, {
      x: f.x,
      y: f.y,
      scaleX: 0,
      scaleY: 0
    }, {
      scaleX: f.scaleX,
      scaleY: f.scaleY,
      rotation: f.rotation
    }, r, n);
  }
  function h(g) {
    var v = s.slice(), m = r.pxSign, _ = g;
    return (r.symbolRepeatDirection === "start" ? m > 0 : m < 0) && (_ = u - 1 - g), v[l.index] = d * (_ - u / 2 + 0.5) + s[l.index], {
      x: v[0],
      y: v[1],
      scaleX: r.symbolScale[0],
      scaleY: r.symbolScale[1],
      rotation: r.rotation
    };
  }
}
function KR(t, e, r, n) {
  var a = t.__pictorialBundle, i = t.__pictorialMainPath;
  i ? ds(i, null, {
    x: r.pathPosition[0],
    y: r.pathPosition[1],
    scaleX: r.symbolScale[0],
    scaleY: r.symbolScale[1],
    rotation: r.rotation
  }, r, n) : (i = t.__pictorialMainPath = qR(r), a.add(i), ds(i, {
    x: r.pathPosition[0],
    y: r.pathPosition[1],
    scaleX: 0,
    scaleY: 0,
    rotation: r.rotation
  }, {
    scaleX: r.symbolScale[0],
    scaleY: r.symbolScale[1]
  }, r, n));
}
function ZR(t, e, r) {
  var n = G({}, e.barRectShape), a = t.__pictorialBarRect;
  a ? ds(a, null, {
    shape: n
  }, e, r) : (a = t.__pictorialBarRect = new Re({
    z2: 2,
    shape: n,
    silent: !0,
    style: {
      stroke: "transparent",
      fill: "transparent",
      lineWidth: 0
    }
  }), a.disableMorphing = !0, t.add(a));
}
function XR(t, e, r, n) {
  if (r.symbolClip) {
    var a = t.__pictorialClipPath, i = G({}, r.clipShape), o = e.valueDim, s = r.animationModel, l = r.dataIndex;
    if (a)
      Fe(a, {
        shape: i
      }, s, l);
    else {
      i[o.wh] = 0, a = new Re({
        shape: i
      }), t.__pictorialBundle.setClipPath(a), t.__pictorialClipPath = a;
      var u = {};
      u[o.wh] = r.clipShape[o.wh], vo[n ? "updateProps" : "initProps"](a, {
        shape: u
      }, s, l);
    }
  }
}
function M1(t, e) {
  var r = t.getItemModel(e);
  return r.getAnimationDelayParams = Iq, r.isAnimationEnabled = Nq, r;
}
function Iq(t) {
  return {
    index: t.__pictorialAnimationIndex,
    count: t.__pictorialRepeatTimes
  };
}
function Nq() {
  return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
}
function I1(t, e, r, n) {
  var a = new de(), i = new de();
  return a.add(i), a.__pictorialBundle = i, i.x = r.bundlePosition[0], i.y = r.bundlePosition[1], r.symbolRepeat ? YR(a, e, r) : KR(a, e, r), ZR(a, r, n), XR(a, e, r, n), a.__pictorialShapeStr = QR(t, r), a.__pictorialSymbolMeta = r, a;
}
function Rq(t, e, r) {
  var n = r.animationModel, a = r.dataIndex, i = t.__pictorialBundle;
  Fe(i, {
    x: r.bundlePosition[0],
    y: r.bundlePosition[1]
  }, n, a), r.symbolRepeat ? YR(t, e, r, !0) : KR(t, e, r, !0), ZR(t, r, !0), XR(t, e, r, !0);
}
function N1(t, e, r, n) {
  var a = n.__pictorialBarRect;
  a && a.removeTextContent();
  var i = [];
  _b(n, function(o) {
    i.push(o);
  }), n.__pictorialMainPath && i.push(n.__pictorialMainPath), n.__pictorialClipPath && (r = null), w(i, function(o) {
    Za(o, {
      scaleX: 0,
      scaleY: 0
    }, r, e, function() {
      n.parent && n.parent.remove(n);
    });
  }), t.setItemGraphicEl(e, null);
}
function QR(t, e) {
  return [t.getItemVisual(e.dataIndex, "symbol") || "none", !!e.symbolRepeat, !!e.symbolClip].join(":");
}
function _b(t, e, r) {
  w(t.__pictorialBundle.children(), function(n) {
    n !== t.__pictorialBarRect && e.call(r, n);
  });
}
function ds(t, e, r, n, a, i) {
  e && t.attr(e), n.symbolClip && !a ? r && t.attr(r) : r && vo[a ? "updateProps" : "initProps"](t, r, n.animationModel, n.dataIndex, i);
}
function R1(t, e, r) {
  var n = r.dataIndex, a = r.itemModel, i = a.getModel("emphasis"), o = i.getModel("itemStyle").getItemStyle(), s = a.getModel(["blur", "itemStyle"]).getItemStyle(), l = a.getModel(["select", "itemStyle"]).getItemStyle(), u = a.getShallow("cursor"), c = i.get("focus"), d = i.get("blurScope"), p = i.get("scale");
  _b(t, function(g) {
    if (g instanceof Bt) {
      var v = g.style;
      g.useStyle(G({
        // TODO other properties like dx, dy ?
        image: v.image,
        x: v.x,
        y: v.y,
        width: v.width,
        height: v.height
      }, r.style));
    } else
      g.useStyle(r.style);
    var m = g.ensureState("emphasis");
    m.style = o, p && (m.scaleX = g.scaleX * 1.1, m.scaleY = g.scaleY * 1.1), g.ensureState("blur").style = s, g.ensureState("select").style = l, u && (g.cursor = u), g.z2 = r.z2;
  });
  var f = e.valueDim.posDesc[+(r.boundingLength > 0)], h = t.__pictorialBarRect;
  h.ignoreClip = !0, Vt(h, Dt(a), {
    labelFetcher: e.seriesModel,
    labelDataIndex: n,
    defaultText: Ss(e.seriesModel.getData(), n),
    inheritColor: r.style.fill,
    defaultOpacity: r.style.opacity,
    defaultOutsidePosition: f
  }), lt(t, c, d, i.get("disabled"));
}
function O1(t) {
  var e = Math.round(t);
  return Math.abs(t - e) < 1e-4 ? e : Math.ceil(t);
}
var Oq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.hasSymbolVisual = !0, r.defaultSymbol = "roundRect", r;
    }
    return e.prototype.getInitialData = function(r) {
      return r.stack = null, t.prototype.getInitialData.apply(this, arguments);
    }, e.type = "series.pictorialBar", e.dependencies = ["grid"], e.defaultOption = ti(Cu.defaultOption, {
      symbol: "circle",
      symbolSize: null,
      symbolRotate: null,
      symbolPosition: null,
      symbolOffset: null,
      symbolMargin: null,
      symbolRepeat: !1,
      symbolRepeatDirection: "end",
      symbolClip: !1,
      symbolBoundingData: null,
      symbolPatternSize: 400,
      barGap: "-100%",
      // Pictorial bar do not clip by default because in many cases
      // xAxis and yAxis are not displayed and it's expected not to clip
      clip: !1,
      // z can be set in data item, which is z2 actually.
      // Disable progressive
      progressive: 0,
      emphasis: {
        // By default pictorialBar do not hover scale. Hover scale is not suitable
        // for the case that both has foreground and background.
        scale: !1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }), e;
  }(Cu)
);
function Ore(t) {
  t.registerChartView(Cq), t.registerSeriesModel(Oq), t.registerLayout(t.PRIORITY.VISUAL.LAYOUT, _e(kI, "pictorialBar")), t.registerLayout(t.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, BI("pictorialBar"));
}
var Lq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._layers = [], r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = r.getData(), o = this, s = this.group, l = r.getLayerSeries(), u = i.getLayout("layoutInfo"), c = u.rect, d = u.boundaryGap;
      s.x = 0, s.y = c.y + d[0];
      function p(v) {
        return v.name;
      }
      var f = new ia(this._layersSeries || [], l, p, p), h = [];
      f.add(K(g, this, "add")).update(K(g, this, "update")).remove(K(g, this, "remove")).execute();
      function g(v, m, _) {
        var y = o._layers;
        if (v === "remove") {
          s.remove(y[m]);
          return;
        }
        for (var b = [], S = [], E, T = l[m].indices, x = 0; x < T.length; x++) {
          var C = i.getItemLayout(T[x]), A = C.x, D = C.y0, M = C.y;
          b.push(A, D), S.push(A, D + M), E = i.getItemVisual(T[x], "style");
        }
        var I, N = i.getItemLayout(T[0]), R = r.getModel("label"), O = R.get("margin"), B = r.getModel("emphasis");
        if (v === "add") {
          var L = h[m] = new de();
          I = new CN({
            shape: {
              points: b,
              stackedOnPoints: S,
              smooth: 0.4,
              stackedOnSmooth: 0.4,
              smoothConstraint: !1
            },
            z2: 0
          }), L.add(I), s.add(L), r.isAnimationEnabled() && I.setClipPath(Pq(I.getBoundingRect(), r, function() {
            I.removeClipPath();
          }));
        } else {
          var L = y[_];
          I = L.childAt(0), s.add(L), h[m] = L, Fe(I, {
            shape: {
              points: b,
              stackedOnPoints: S
            }
          }, r), rn(I);
        }
        Vt(I, Dt(r), {
          labelDataIndex: T[x - 1],
          defaultText: i.getName(T[x - 1]),
          inheritColor: E.fill
        }, {
          normal: {
            verticalAlign: "middle"
            // align: 'right'
          }
        }), I.setTextConfig({
          position: null,
          local: !0
        });
        var F = I.getTextContent();
        F && (F.x = N.x - O, F.y = N.y0 + N.y / 2), I.useStyle(E), i.setItemGraphicEl(m, I), zt(I, r), lt(I, B.get("focus"), B.get("blurScope"), B.get("disabled"));
      }
      this._layersSeries = l, this._layers = h;
    }, e.type = "themeRiver", e;
  }(Ke)
);
function Pq(t, e, r) {
  var n = new Re({
    shape: {
      x: t.x - 10,
      y: t.y - 10,
      width: 0,
      height: t.height + 20
    }
  });
  return rt(n, {
    shape: {
      x: t.x - 50,
      width: t.width + 100,
      height: t.height + 20
    }
  }, e, r), n;
}
var iv = 2, kq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r) {
      t.prototype.init.apply(this, arguments), this.legendVisualProvider = new nc(K(this.getData, this), K(this.getRawData, this));
    }, e.prototype.fixData = function(r) {
      var n = r.length, a = {}, i = om(r, function(p) {
        return a.hasOwnProperty(p[0] + "") || (a[p[0] + ""] = -1), p[2];
      }), o = [];
      i.buckets.each(function(p, f) {
        o.push({
          name: f,
          dataList: p
        });
      });
      for (var s = o.length, l = 0; l < s; ++l) {
        for (var u = o[l].name, c = 0; c < o[l].dataList.length; ++c) {
          var d = o[l].dataList[c][0] + "";
          a[d] = l;
        }
        for (var d in a)
          a.hasOwnProperty(d) && a[d] !== l && (a[d] = l, r[n] = [d, 0, u], n++);
      }
      return r;
    }, e.prototype.getInitialData = function(r, n) {
      for (var a = this.getReferringComponents("singleAxis", vt).models[0], i = a.get("type"), o = ze(r.data, function(h) {
        return h[2] !== void 0;
      }), s = this.fixData(o || []), l = [], u = this.nameMap = J(), c = 0, d = 0; d < s.length; ++d)
        l.push(s[d][iv]), u.get(s[d][iv]) || (u.set(s[d][iv], c), c++);
      var p = Xu(s, {
        coordDimensions: ["single"],
        dimensionsDefine: [{
          name: "time",
          type: Sp(i)
        }, {
          name: "value",
          type: "float"
        }, {
          name: "name",
          type: "ordinal"
        }],
        encodeDefine: {
          single: 0,
          value: 1,
          itemName: 2
        }
      }).dimensions, f = new rr(p, this);
      return f.initData(s), f;
    }, e.prototype.getLayerSeries = function() {
      for (var r = this.getData(), n = r.count(), a = [], i = 0; i < n; ++i)
        a[i] = i;
      var o = r.mapDimension("single"), s = om(a, function(u) {
        return r.get("name", u);
      }), l = [];
      return s.buckets.each(function(u, c) {
        u.sort(function(d, p) {
          return r.get(o, d) - r.get(o, p);
        }), l.push({
          name: c,
          indices: u
        });
      }), l;
    }, e.prototype.getAxisTooltipData = function(r, n, a) {
      V(r) || (r = r ? [r] : []);
      for (var i = this.getData(), o = this.getLayerSeries(), s = [], l = o.length, u, c = 0; c < l; ++c) {
        for (var d = Number.MAX_VALUE, p = -1, f = o[c].indices.length, h = 0; h < f; ++h) {
          var g = i.get(r[0], o[c].indices[h]), v = Math.abs(g - n);
          v <= d && (u = g, d = v, p = o[c].indices[h]);
        }
        s.push(p);
      }
      return {
        dataIndices: s,
        nestestValue: u
      };
    }, e.prototype.formatTooltip = function(r, n, a) {
      var i = this.getData(), o = i.getName(r), s = i.get(i.mapDimension("value"), r);
      return Mt("nameValue", {
        name: o,
        value: s
      });
    }, e.type = "series.themeRiver", e.dependencies = ["singleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "singleAxis",
      // gap in axis's orthogonal orientation
      boundaryGap: ["10%", "10%"],
      // legendHoverLink: true,
      singleAxisIndex: 0,
      animationEasing: "linear",
      label: {
        margin: 4,
        show: !0,
        position: "left",
        fontSize: 11
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(et)
);
function Bq(t, e) {
  t.eachSeriesByType("themeRiver", function(r) {
    var n = r.getData(), a = r.coordinateSystem, i = {}, o = a.getRect();
    i.rect = o;
    var s = r.get("boundaryGap"), l = a.getAxis();
    if (i.boundaryGap = s, l.orient === "horizontal") {
      s[0] = q(s[0], o.height), s[1] = q(s[1], o.height);
      var u = o.height - s[0] - s[1];
      L1(n, r, u);
    } else {
      s[0] = q(s[0], o.width), s[1] = q(s[1], o.width);
      var c = o.width - s[0] - s[1];
      L1(n, r, c);
    }
    n.setLayout("layoutInfo", i);
  });
}
function L1(t, e, r) {
  if (t.count())
    for (var n = e.coordinateSystem, a = e.getLayerSeries(), i = t.mapDimension("single"), o = t.mapDimension("value"), s = $(a, function(v) {
      return $(v.indices, function(m) {
        var _ = n.dataToPoint(t.get(i, m));
        return _[1] = t.get(o, m), _;
      });
    }), l = Fq(s), u = l.y0, c = r / l.max, d = a.length, p = a[0].indices.length, f, h = 0; h < p; ++h) {
      f = u[h] * c, t.setItemLayout(a[0].indices[h], {
        layerIndex: 0,
        x: s[0][h][0],
        y0: f,
        y: s[0][h][1] * c
      });
      for (var g = 1; g < d; ++g)
        f += s[g - 1][h][1] * c, t.setItemLayout(a[g].indices[h], {
          layerIndex: g,
          x: s[g][h][0],
          y0: f,
          y: s[g][h][1] * c
        });
    }
}
function Fq(t) {
  for (var e = t.length, r = t[0].length, n = [], a = [], i = 0, o = 0; o < r; ++o) {
    for (var s = 0, l = 0; l < e; ++l)
      s += t[l][o][1];
    s > i && (i = s), n.push(s);
  }
  for (var u = 0; u < r; ++u)
    a[u] = (i - n[u]) / 2;
  i = 0;
  for (var c = 0; c < r; ++c) {
    var d = n[c] + a[c];
    d > i && (i = d);
  }
  return {
    y0: a,
    max: i
  };
}
function Lre(t) {
  t.registerChartView(Lq), t.registerSeriesModel(kq), t.registerLayout(Bq), t.registerProcessor(rc("themeRiver"));
}
var Gq = 2, Uq = 4, P1 = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i) {
      var o = t.call(this) || this;
      o.z2 = Gq, o.textConfig = {
        inside: !0
      }, pe(o).seriesIndex = n.seriesIndex;
      var s = new Pe({
        z2: Uq,
        silent: r.getModel().get(["label", "silent"])
      });
      return o.setTextContent(s), o.updateData(!0, r, n, a, i), o;
    }
    return e.prototype.updateData = function(r, n, a, i, o) {
      this.node = n, n.piece = this, a = a || this._seriesModel, i = i || this._ecModel;
      var s = this;
      pe(s).dataIndex = n.dataIndex;
      var l = n.getModel(), u = l.getModel("emphasis"), c = n.getLayout(), d = G({}, c);
      d.label = null;
      var p = n.getVisual("style");
      p.lineJoin = "bevel";
      var f = n.getVisual("decal");
      f && (p.decal = ys(f, o));
      var h = Ki(l.getModel("itemStyle"), d, !0);
      G(d, h), w(ir, function(_) {
        var y = s.ensureState(_), b = l.getModel([_, "itemStyle"]);
        y.style = b.getItemStyle();
        var S = Ki(b, d);
        S && (y.shape = S);
      }), r ? (s.setShape(d), s.shape.r = c.r0, rt(s, {
        shape: {
          r: c.r
        }
      }, a, n.dataIndex)) : (Fe(s, {
        shape: d
      }, a), rn(s)), s.useStyle(p), this._updateLabel(a);
      var g = l.getShallow("cursor");
      g && s.attr("cursor", g), this._seriesModel = a || this._seriesModel, this._ecModel = i || this._ecModel;
      var v = u.get("focus"), m = v === "relative" ? su(n.getAncestorsIndices(), n.getDescendantIndices()) : v === "ancestor" ? n.getAncestorsIndices() : v === "descendant" ? n.getDescendantIndices() : v;
      lt(this, m, u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(r) {
      var n = this, a = this.node.getModel(), i = a.getModel("label"), o = this.node.getLayout(), s = o.endAngle - o.startAngle, l = (o.startAngle + o.endAngle) / 2, u = Math.cos(l), c = Math.sin(l), d = this, p = d.getTextContent(), f = this.node.dataIndex, h = i.get("minAngle") / 180 * Math.PI, g = i.get("show") && !(h != null && Math.abs(s) < h);
      p.ignore = !g, w(fu, function(m) {
        var _ = m === "normal" ? a.getModel("label") : a.getModel([m, "label"]), y = m === "normal", b = y ? p : p.ensureState(m), S = r.getFormattedLabel(f, m);
        y && (S = S || n.node.name), b.style = Je(_, {}, null, m !== "normal", !0), S && (b.style.text = S);
        var E = _.get("show");
        E != null && !y && (b.ignore = !E);
        var T = v(_, "position"), x = y ? d : d.states[m], C = x.style.fill;
        x.textConfig = {
          outsideFill: _.get("color") === "inherit" ? C : null,
          inside: T !== "outside"
        };
        var A, D = v(_, "distance") || 0, M = v(_, "align"), I = v(_, "rotate"), N = Math.PI * 0.5, R = Math.PI * 1.5, O = _r(I === "tangential" ? Math.PI / 2 - l : l), B = O > N && !du(O - N) && O < R;
        T === "outside" ? (A = o.r + D, M = B ? "right" : "left") : !M || M === "center" ? (s === 2 * Math.PI && o.r0 === 0 ? A = 0 : A = (o.r + o.r0) / 2, M = "center") : M === "left" ? (A = o.r0 + D, M = B ? "right" : "left") : M === "right" && (A = o.r - D, M = B ? "left" : "right"), b.style.align = M, b.style.verticalAlign = v(_, "verticalAlign") || "middle", b.x = A * u + o.cx, b.y = A * c + o.cy;
        var L = 0;
        I === "radial" ? L = _r(-l) + (B ? Math.PI : 0) : I === "tangential" ? L = _r(Math.PI / 2 - l) + (B ? Math.PI : 0) : ke(I) && (L = I * Math.PI / 180), b.rotation = _r(L);
      });
      function v(m, _) {
        var y = m.get(_);
        return y ?? i.get(_);
      }
      p.dirtyStyle();
    }, e;
  }(or)
), o_ = "sunburstRootToNode", k1 = "sunburstHighlight", zq = "sunburstUnhighlight";
function Vq(t) {
  t.registerAction({
    type: o_,
    update: "updateView"
  }, function(e, r) {
    r.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, n);
    function n(a, i) {
      var o = wu(e, [o_], a);
      if (o) {
        var s = a.getViewRoot();
        s && (e.direction = rb(s, o.node) ? "rollUp" : "drillDown"), a.resetViewRoot(o.node);
      }
    }
  }), t.registerAction({
    type: k1,
    update: "none"
  }, function(e, r, n) {
    e = G({}, e), r.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, a);
    function a(i) {
      var o = wu(e, [k1], i);
      o && (e.dataIndex = o.node.dataIndex);
    }
    n.dispatchAction(G(e, {
      type: "highlight"
    }));
  }), t.registerAction({
    type: zq,
    update: "updateView"
  }, function(e, r, n) {
    e = G({}, e), n.dispatchAction(G(e, {
      type: "downplay"
    }));
  });
}
var $q = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      var o = this;
      this.seriesModel = r, this.api = a, this.ecModel = n;
      var s = r.getData(), l = s.tree.root, u = r.getViewRoot(), c = this.group, d = r.get("renderLabelForZeroData"), p = [];
      u.eachNode(function(_) {
        p.push(_);
      });
      var f = this._oldChildren || [];
      h(p, f), m(l, u), this._initEvents(), this._oldChildren = p;
      function h(_, y) {
        if (_.length === 0 && y.length === 0)
          return;
        new ia(y, _, b, b).add(S).update(S).remove(_e(S, null)).execute();
        function b(E) {
          return E.getId();
        }
        function S(E, T) {
          var x = E == null ? null : _[E], C = T == null ? null : y[T];
          g(x, C);
        }
      }
      function g(_, y) {
        if (!d && _ && !_.getValue() && (_ = null), _ !== l && y !== l) {
          if (y && y.piece)
            _ ? (y.piece.updateData(!1, _, r, n, a), s.setItemGraphicEl(_.dataIndex, y.piece)) : v(y);
          else if (_) {
            var b = new P1(_, r, n, a);
            c.add(b), s.setItemGraphicEl(_.dataIndex, b);
          }
        }
      }
      function v(_) {
        _ && _.piece && (c.remove(_.piece), _.piece = null);
      }
      function m(_, y) {
        y.depth > 0 ? (o.virtualPiece ? o.virtualPiece.updateData(!1, _, r, n, a) : (o.virtualPiece = new P1(_, r, n, a), c.add(o.virtualPiece)), y.piece.off("click"), o.virtualPiece.on("click", function(b) {
          o._rootToNode(y.parentNode);
        })) : o.virtualPiece && (c.remove(o.virtualPiece), o.virtualPiece = null);
      }
    }, e.prototype._initEvents = function() {
      var r = this;
      this.group.off("click"), this.group.on("click", function(n) {
        var a = !1, i = r.seriesModel.getViewRoot();
        i.eachNode(function(o) {
          if (!a && o.piece && o.piece === n.target) {
            var s = o.getModel().get("nodeClick");
            if (s === "rootToNode")
              r._rootToNode(o);
            else if (s === "link") {
              var l = o.getModel(), u = l.get("link");
              if (u) {
                var c = l.get("target", !0) || "_blank";
                fp(u, c);
              }
            }
            a = !0;
          }
        });
      });
    }, e.prototype._rootToNode = function(r) {
      r !== this.seriesModel.getViewRoot() && this.api.dispatchAction({
        type: o_,
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: r
      });
    }, e.prototype.containPoint = function(r, n) {
      var a = n.getData(), i = a.getItemLayout(0);
      if (i) {
        var o = r[0] - i.cx, s = r[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, e.type = "sunburst", e;
  }(Ke)
), Hq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.ignoreStyleOnData = !0, r;
    }
    return e.prototype.getInitialData = function(r, n) {
      var a = {
        name: r.name,
        children: r.data
      };
      jR(a);
      var i = this._levelModels = $(r.levels || [], function(l) {
        return new He(l, this, n);
      }, this), o = tb.createTree(a, this, s);
      function s(l) {
        l.wrapMethod("getItemModel", function(u, c) {
          var d = o.getNodeByDataIndex(c), p = i[d.depth];
          return p && (u.parentModel = p), u;
        });
      }
      return o.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.getDataParams = function(r) {
      var n = t.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(r);
      return n.treePathInfo = Pf(a, this), n;
    }, e.prototype.getLevelModel = function(r) {
      return this._levelModels && this._levelModels[r.depth];
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(r) {
      r ? this._viewRoot = r : r = this._viewRoot;
      var n = this.getRawData().tree.root;
      (!r || r !== n && !n.contains(r)) && (this._viewRoot = n);
    }, e.prototype.enableAriaDecal = function() {
      aR(this);
    }, e.type = "series.sunburst", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      // 最小角度改为0
      minAngle: 0,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // 'rootToNode', 'link', or false
      nodeClick: "rootToNode",
      renderLabelForZeroData: !1,
      label: {
        // could be: 'radial', 'tangential', or 'none'
        rotate: "radial",
        show: !0,
        opacity: 1,
        // 'left' is for inner side of inside, and 'right' is for outer
        // side for inside
        align: "center",
        position: "inside",
        distance: 5,
        silent: !0
      },
      itemStyle: {
        borderWidth: 1,
        borderColor: "white",
        borderType: "solid",
        shadowBlur: 0,
        shadowColor: "rgba(0, 0, 0, 0.2)",
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      emphasis: {
        focus: "descendant"
      },
      blur: {
        itemStyle: {
          opacity: 0.2
        },
        label: {
          opacity: 0.1
        }
      },
      // Animation type can be expansion, scale.
      animationType: "expansion",
      animationDuration: 1e3,
      animationDurationUpdate: 500,
      data: [],
      /**
       * Sort order.
       *
       * Valid values: 'desc', 'asc', null, or callback function.
       * 'desc' and 'asc' for descend and ascendant order;
       * null for not sorting;
       * example of callback function:
       * function(nodeA, nodeB) {
       *     return nodeA.getValue() - nodeB.getValue();
       * }
       */
      sort: "desc"
    }, e;
  }(et)
);
function jR(t) {
  var e = 0;
  w(t.children, function(n) {
    jR(n);
    var a = n.value;
    V(a) && (a = a[0]), e += a;
  });
  var r = t.value;
  V(r) && (r = r[0]), (r == null || isNaN(r)) && (r = e), r < 0 && (r = 0), V(t.value) ? t.value[0] = r : t.value = r;
}
var B1 = Math.PI / 180;
function Wq(t, e, r) {
  e.eachSeriesByType(t, function(n) {
    var a = n.get("center"), i = n.get("radius");
    V(i) || (i = [0, i]), V(a) || (a = [a, a]);
    var o = r.getWidth(), s = r.getHeight(), l = Math.min(o, s), u = q(a[0], o), c = q(a[1], s), d = q(i[0], l / 2), p = q(i[1], l / 2), f = -n.get("startAngle") * B1, h = n.get("minAngle") * B1, g = n.getData().tree.root, v = n.getViewRoot(), m = v.depth, _ = n.get("sort");
    _ != null && JR(v, _);
    var y = 0;
    w(v.children, function(O) {
      !isNaN(O.getValue()) && y++;
    });
    var b = v.getValue(), S = Math.PI / (b || y) * 2, E = v.depth > 0, T = v.height - (E ? -1 : 1), x = (p - d) / (T || 1), C = n.get("clockwise"), A = n.get("stillShowZeroSum"), D = C ? 1 : -1, M = function(O, B) {
      if (O) {
        var L = B;
        if (O !== g) {
          var F = O.getValue(), U = b === 0 && A ? S : F * S;
          U < h && (U = h), L = B + D * U;
          var z = O.depth - m - (E ? -1 : 1), H = d + x * z, Z = d + x * (z + 1), ee = n.getLevelModel(O);
          if (ee) {
            var oe = ee.get("r0", !0), Le = ee.get("r", !0), Xe = ee.get("radius", !0);
            Xe != null && (oe = Xe[0], Le = Xe[1]), oe != null && (H = q(oe, l / 2)), Le != null && (Z = q(Le, l / 2));
          }
          O.setLayout({
            angle: U,
            startAngle: B,
            endAngle: L,
            clockwise: C,
            cx: u,
            cy: c,
            r0: H,
            r: Z
          });
        }
        if (O.children && O.children.length) {
          var fe = 0;
          w(O.children, function(re) {
            fe += M(re, B + fe);
          });
        }
        return L - B;
      }
    };
    if (E) {
      var I = d, N = d + x, R = Math.PI * 2;
      g.setLayout({
        angle: R,
        startAngle: f,
        endAngle: f + R,
        clockwise: C,
        cx: u,
        cy: c,
        r0: I,
        r: N
      });
    }
    M(v, f);
  });
}
function JR(t, e) {
  var r = t.children || [];
  t.children = qq(r, e), r.length && w(t.children, function(n) {
    JR(n, e);
  });
}
function qq(t, e) {
  if (ae(e)) {
    var r = $(t, function(a, i) {
      var o = a.getValue();
      return {
        params: {
          depth: a.depth,
          height: a.height,
          dataIndex: a.dataIndex,
          getValue: function() {
            return o;
          }
        },
        index: i
      };
    });
    return r.sort(function(a, i) {
      return e(a.params, i.params);
    }), $(r, function(a) {
      return t[a.index];
    });
  } else {
    var n = e === "asc";
    return t.sort(function(a, i) {
      var o = (a.getValue() - i.getValue()) * (n ? 1 : -1);
      return o === 0 ? (a.dataIndex - i.dataIndex) * (n ? -1 : 1) : o;
    });
  }
}
function Yq(t) {
  var e = {};
  function r(n, a, i) {
    for (var o = n; o && o.depth > 1; )
      o = o.parentNode;
    var s = a.getColorFromPalette(o.name || o.dataIndex + "", e);
    return n.depth > 1 && Y(s) && (s = Kv(s, (n.depth - 1) / (i - 1) * 0.5)), s;
  }
  t.eachSeriesByType("sunburst", function(n) {
    var a = n.getData(), i = a.tree;
    i.eachNode(function(o) {
      var s = o.getModel(), l = s.getModel("itemStyle").getItemStyle();
      l.fill || (l.fill = r(o, n, i.root.height));
      var u = a.ensureUniqueItemVisual(o.dataIndex, "style");
      G(u, l);
    });
  });
}
function Pre(t) {
  t.registerChartView($q), t.registerSeriesModel(Hq), t.registerLayout(_e(Wq, "sunburst")), t.registerProcessor(_e(rc, "sunburst")), t.registerVisual(Yq), Vq(t);
}
var F1 = {
  color: "fill",
  borderColor: "stroke"
}, Kq = {
  symbol: 1,
  symbolSize: 1,
  symbolKeepAspect: 1,
  legendIcon: 1,
  visualMeta: 1,
  liftZ: 1,
  decal: 1
}, jn = Oe(), Zq = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.optionUpdated = function() {
      this.currentZLevel = this.get("zlevel", !0), this.currentZ = this.get("z", !0);
    }, e.prototype.getInitialData = function(r, n) {
      return da(null, this);
    }, e.prototype.getDataParams = function(r, n, a) {
      var i = t.prototype.getDataParams.call(this, r, n);
      return a && (i.info = jn(a).info), i;
    }, e.type = "series.custom", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Custom series will not clip by default.
      // Some case will use custom series to draw label
      // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight
      clip: !1
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
    }, e;
  }(et)
);
function Xq(t, e) {
  return e = e || [0, 0], $(["x", "y"], function(r, n) {
    var a = this.getAxis(r), i = e[n], o = t[n] / 2;
    return a.type === "category" ? a.getBandWidth() : Math.abs(a.dataToCoord(i - o) - a.dataToCoord(i + o));
  }, this);
}
function Qq(t) {
  var e = t.master.getRect();
  return {
    coordSys: {
      // The name exposed to user is always 'cartesian2d' but not 'grid'.
      type: "cartesian2d",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(r) {
        return t.dataToPoint(r);
      },
      size: K(Xq, t)
    }
  };
}
function jq(t, e) {
  return e = e || [0, 0], $([0, 1], function(r) {
    var n = e[r], a = t[r] / 2, i = [], o = [];
    return i[r] = n - a, o[r] = n + a, i[1 - r] = o[1 - r] = e[1 - r], Math.abs(this.dataToPoint(i)[r] - this.dataToPoint(o)[r]);
  }, this);
}
function Jq(t) {
  var e = t.getBoundingRect();
  return {
    coordSys: {
      type: "geo",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      zoom: t.getZoom()
    },
    api: {
      coord: function(r) {
        return t.dataToPoint(r);
      },
      size: K(jq, t)
    }
  };
}
function e7(t, e) {
  var r = this.getAxis(), n = e instanceof Array ? e[0] : e, a = (t instanceof Array ? t[0] : t) / 2;
  return r.type === "category" ? r.getBandWidth() : Math.abs(r.dataToCoord(n - a) - r.dataToCoord(n + a));
}
function t7(t) {
  var e = t.getRect();
  return {
    coordSys: {
      type: "singleAxis",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(r) {
        return t.dataToPoint(r);
      },
      size: K(e7, t)
    }
  };
}
function r7(t, e) {
  return e = e || [0, 0], $(["Radius", "Angle"], function(r, n) {
    var a = "get" + r + "Axis", i = this[a](), o = e[n], s = t[n] / 2, l = i.type === "category" ? i.getBandWidth() : Math.abs(i.dataToCoord(o - s) - i.dataToCoord(o + s));
    return r === "Angle" && (l = l * Math.PI / 180), l;
  }, this);
}
function n7(t) {
  var e = t.getRadiusAxis(), r = t.getAngleAxis(), n = e.getExtent();
  return n[0] > n[1] && n.reverse(), {
    coordSys: {
      type: "polar",
      cx: t.cx,
      cy: t.cy,
      r: n[1],
      r0: n[0]
    },
    api: {
      coord: function(a) {
        var i = e.dataToRadius(a[0]), o = r.dataToAngle(a[1]), s = t.coordToPoint([i, o]);
        return s.push(i, o * Math.PI / 180), s;
      },
      size: K(r7, t)
    }
  };
}
function a7(t) {
  var e = t.getRect(), r = t.getRangeInfo();
  return {
    coordSys: {
      type: "calendar",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      cellWidth: t.getCellWidth(),
      cellHeight: t.getCellHeight(),
      rangeInfo: {
        start: r.start,
        end: r.end,
        weeks: r.weeks,
        dayCount: r.allDay
      }
    },
    api: {
      coord: function(n, a) {
        return t.dataToPoint(n, a);
      }
    }
  };
}
function eO(t, e, r, n) {
  return t && (t.legacy || t.legacy !== !1 && !r && !n && e !== "tspan" && (e === "text" || Q(t, "text")));
}
function tO(t, e, r) {
  var n = t, a, i, o;
  if (e === "text")
    o = n;
  else {
    o = {}, Q(n, "text") && (o.text = n.text), Q(n, "rich") && (o.rich = n.rich), Q(n, "textFill") && (o.fill = n.textFill), Q(n, "textStroke") && (o.stroke = n.textStroke), Q(n, "fontFamily") && (o.fontFamily = n.fontFamily), Q(n, "fontSize") && (o.fontSize = n.fontSize), Q(n, "fontStyle") && (o.fontStyle = n.fontStyle), Q(n, "fontWeight") && (o.fontWeight = n.fontWeight), i = {
      type: "text",
      style: o,
      // ec4 does not support rectText trigger.
      // And when text position is different in normal and emphasis
      // => hover text trigger emphasis;
      // => text position changed, leave mouse pointer immediately;
      // That might cause incorrect state.
      silent: !0
    }, a = {};
    var s = Q(n, "textPosition");
    r ? a.position = s ? n.textPosition : "inside" : s && (a.position = n.textPosition), Q(n, "textPosition") && (a.position = n.textPosition), Q(n, "textOffset") && (a.offset = n.textOffset), Q(n, "textRotation") && (a.rotation = n.textRotation), Q(n, "textDistance") && (a.distance = n.textDistance);
  }
  return G1(o, t), w(o.rich, function(l) {
    G1(l, l);
  }), {
    textConfig: a,
    textContent: i
  };
}
function G1(t, e) {
  e && (e.font = e.textFont || e.font, Q(e, "textStrokeWidth") && (t.lineWidth = e.textStrokeWidth), Q(e, "textAlign") && (t.align = e.textAlign), Q(e, "textVerticalAlign") && (t.verticalAlign = e.textVerticalAlign), Q(e, "textLineHeight") && (t.lineHeight = e.textLineHeight), Q(e, "textWidth") && (t.width = e.textWidth), Q(e, "textHeight") && (t.height = e.textHeight), Q(e, "textBackgroundColor") && (t.backgroundColor = e.textBackgroundColor), Q(e, "textPadding") && (t.padding = e.textPadding), Q(e, "textBorderColor") && (t.borderColor = e.textBorderColor), Q(e, "textBorderWidth") && (t.borderWidth = e.textBorderWidth), Q(e, "textBorderRadius") && (t.borderRadius = e.textBorderRadius), Q(e, "textBoxShadowColor") && (t.shadowColor = e.textBoxShadowColor), Q(e, "textBoxShadowBlur") && (t.shadowBlur = e.textBoxShadowBlur), Q(e, "textBoxShadowOffsetX") && (t.shadowOffsetX = e.textBoxShadowOffsetX), Q(e, "textBoxShadowOffsetY") && (t.shadowOffsetY = e.textBoxShadowOffsetY));
}
function U1(t, e, r) {
  var n = t;
  n.textPosition = n.textPosition || r.position || "inside", r.offset != null && (n.textOffset = r.offset), r.rotation != null && (n.textRotation = r.rotation), r.distance != null && (n.textDistance = r.distance);
  var a = n.textPosition.indexOf("inside") >= 0, i = t.fill || "#000";
  z1(n, e);
  var o = n.textFill == null;
  return a ? o && (n.textFill = r.insideFill || "#fff", !n.textStroke && r.insideStroke && (n.textStroke = r.insideStroke), !n.textStroke && (n.textStroke = i), n.textStrokeWidth == null && (n.textStrokeWidth = 2)) : (o && (n.textFill = t.fill || r.outsideFill || "#000"), !n.textStroke && r.outsideStroke && (n.textStroke = r.outsideStroke)), n.text = e.text, n.rich = e.rich, w(e.rich, function(s) {
    z1(s, s);
  }), n;
}
function z1(t, e) {
  e && (Q(e, "fill") && (t.textFill = e.fill), Q(e, "stroke") && (t.textStroke = e.fill), Q(e, "lineWidth") && (t.textStrokeWidth = e.lineWidth), Q(e, "font") && (t.font = e.font), Q(e, "fontStyle") && (t.fontStyle = e.fontStyle), Q(e, "fontWeight") && (t.fontWeight = e.fontWeight), Q(e, "fontSize") && (t.fontSize = e.fontSize), Q(e, "fontFamily") && (t.fontFamily = e.fontFamily), Q(e, "align") && (t.textAlign = e.align), Q(e, "verticalAlign") && (t.textVerticalAlign = e.verticalAlign), Q(e, "lineHeight") && (t.textLineHeight = e.lineHeight), Q(e, "width") && (t.textWidth = e.width), Q(e, "height") && (t.textHeight = e.height), Q(e, "backgroundColor") && (t.textBackgroundColor = e.backgroundColor), Q(e, "padding") && (t.textPadding = e.padding), Q(e, "borderColor") && (t.textBorderColor = e.borderColor), Q(e, "borderWidth") && (t.textBorderWidth = e.borderWidth), Q(e, "borderRadius") && (t.textBorderRadius = e.borderRadius), Q(e, "shadowColor") && (t.textBoxShadowColor = e.shadowColor), Q(e, "shadowBlur") && (t.textBoxShadowBlur = e.shadowBlur), Q(e, "shadowOffsetX") && (t.textBoxShadowOffsetX = e.shadowOffsetX), Q(e, "shadowOffsetY") && (t.textBoxShadowOffsetY = e.shadowOffsetY), Q(e, "textShadowColor") && (t.textShadowColor = e.textShadowColor), Q(e, "textShadowBlur") && (t.textShadowBlur = e.textShadowBlur), Q(e, "textShadowOffsetX") && (t.textShadowOffsetX = e.textShadowOffsetX), Q(e, "textShadowOffsetY") && (t.textShadowOffsetY = e.textShadowOffsetY));
}
var rO = {
  position: ["x", "y"],
  scale: ["scaleX", "scaleY"],
  origin: ["originX", "originY"]
}, V1 = Me(rO);
Nn(On, function(t, e) {
  return t[e] = 1, t;
}, {});
On.join(", ");
var Op = ["", "style", "shape", "extra"], xs = Oe();
function yb(t, e, r, n, a) {
  var i = t + "Animation", o = Rs(t, n, a) || {}, s = xs(e).userDuring;
  return o.duration > 0 && (o.during = s ? K(u7, {
    el: e,
    userDuring: s
  }) : null, o.setToFinal = !0, o.scope = t), G(o, r[i]), o;
}
function zd(t, e, r, n) {
  n = n || {};
  var a = n.dataIndex, i = n.isInit, o = n.clearStyle, s = r.isAnimationEnabled(), l = xs(t), u = e.style;
  l.userDuring = e.during;
  var c = {}, d = {};
  if (d7(t, e, d), H1("shape", e, d), H1("extra", e, d), !i && s && (c7(t, e, c), $1("shape", t, e, c), $1("extra", t, e, c), p7(t, e, u, c)), d.style = u, i7(t, d, o), s7(t, e), s)
    if (i) {
      var p = {};
      w(Op, function(h) {
        var g = h ? e[h] : e;
        g && g.enterFrom && (h && (p[h] = p[h] || {}), G(h ? p[h] : p, g.enterFrom));
      });
      var f = yb("enter", t, e, r, a);
      f.duration > 0 && t.animateFrom(p, f);
    } else
      o7(t, e, a || 0, r, c);
  nO(t, e), u ? t.dirty() : t.markRedraw();
}
function nO(t, e) {
  for (var r = xs(t).leaveToProps, n = 0; n < Op.length; n++) {
    var a = Op[n], i = a ? e[a] : e;
    i && i.leaveTo && (r || (r = xs(t).leaveToProps = {}), a && (r[a] = r[a] || {}), G(a ? r[a] : r, i.leaveTo));
  }
}
function Ff(t, e, r, n) {
  if (t) {
    var a = t.parent, i = xs(t).leaveToProps;
    if (i) {
      var o = yb("update", t, e, r, 0);
      o.done = function() {
        a.remove(t);
      }, t.animateTo(i, o);
    } else
      a.remove(t);
  }
}
function no(t) {
  return t === "all";
}
function i7(t, e, r) {
  var n = e.style;
  if (!t.isGroup && n) {
    if (r) {
      t.useStyle({});
      for (var a = t.animators, i = 0; i < a.length; i++) {
        var o = a[i];
        o.targetName === "style" && o.changeTarget(t.style);
      }
    }
    t.setStyle(n);
  }
  e && (e.style = null, e && t.attr(e), e.style = n);
}
function o7(t, e, r, n, a) {
  if (a) {
    var i = yb("update", t, e, n, r);
    i.duration > 0 && t.animateFrom(a, i);
  }
}
function s7(t, e) {
  Q(e, "silent") && (t.silent = e.silent), Q(e, "ignore") && (t.ignore = e.ignore), t instanceof Fr && Q(e, "invisible") && (t.invisible = e.invisible), t instanceof Ce && Q(e, "autoBatch") && (t.autoBatch = e.autoBatch);
}
var vn = {}, l7 = {
  // Usually other props do not need to be changed in animation during.
  setTransform: function(t, e) {
    return vn.el[t] = e, this;
  },
  getTransform: function(t) {
    return vn.el[t];
  },
  setShape: function(t, e) {
    var r = vn.el, n = r.shape || (r.shape = {});
    return n[t] = e, r.dirtyShape && r.dirtyShape(), this;
  },
  getShape: function(t) {
    var e = vn.el.shape;
    if (e)
      return e[t];
  },
  setStyle: function(t, e) {
    var r = vn.el, n = r.style;
    return n && (n[t] = e, r.dirtyStyle && r.dirtyStyle()), this;
  },
  getStyle: function(t) {
    var e = vn.el.style;
    if (e)
      return e[t];
  },
  setExtra: function(t, e) {
    var r = vn.el.extra || (vn.el.extra = {});
    return r[t] = e, this;
  },
  getExtra: function(t) {
    var e = vn.el.extra;
    if (e)
      return e[t];
  }
};
function u7() {
  var t = this, e = t.el;
  if (e) {
    var r = xs(e).userDuring, n = t.userDuring;
    if (r !== n) {
      t.el = t.userDuring = null;
      return;
    }
    vn.el = e, n(l7);
  }
}
function $1(t, e, r, n) {
  var a = r[t];
  if (a) {
    var i = e[t], o;
    if (i) {
      var s = r.transition, l = a.transition;
      if (l)
        if (!o && (o = n[t] = {}), no(l))
          G(o, i);
        else
          for (var u = Ye(l), c = 0; c < u.length; c++) {
            var d = u[c], p = i[d];
            o[d] = p;
          }
      else if (no(s) || xe(s, t) >= 0) {
        !o && (o = n[t] = {});
        for (var f = Me(i), c = 0; c < f.length; c++) {
          var d = f[c], p = i[d];
          f7(a[d], p) && (o[d] = p);
        }
      }
    }
  }
}
function H1(t, e, r) {
  var n = e[t];
  if (n)
    for (var a = r[t] = {}, i = Me(n), o = 0; o < i.length; o++) {
      var s = i[o];
      a[s] = Ul(n[s]);
    }
}
function c7(t, e, r) {
  for (var n = e.transition, a = no(n) ? On : Ye(n || []), i = 0; i < a.length; i++) {
    var o = a[i];
    if (!(o === "style" || o === "shape" || o === "extra")) {
      var s = t[o];
      r[o] = s;
    }
  }
}
function d7(t, e, r) {
  for (var n = 0; n < V1.length; n++) {
    var a = V1[n], i = rO[a], o = e[a];
    o && (r[i[0]] = o[0], r[i[1]] = o[1]);
  }
  for (var n = 0; n < On.length; n++) {
    var s = On[n];
    e[s] != null && (r[s] = e[s]);
  }
}
function p7(t, e, r, n) {
  if (r) {
    var a = t.style, i;
    if (a) {
      var o = r.transition, s = e.transition;
      if (o && !no(o)) {
        var l = Ye(o);
        !i && (i = n.style = {});
        for (var u = 0; u < l.length; u++) {
          var c = l[u], d = a[c];
          i[c] = d;
        }
      } else if (t.getAnimationStyleProps && (no(s) || no(o) || xe(s, "style") >= 0)) {
        var p = t.getAnimationStyleProps(), f = p ? p.style : null;
        if (f) {
          !i && (i = n.style = {});
          for (var h = Me(r), u = 0; u < h.length; u++) {
            var c = h[u];
            if (f[c]) {
              var d = a[c];
              i[c] = d;
            }
          }
        }
      }
    }
  }
}
function f7(t, e) {
  return Kt(t) ? t !== e : t != null && isFinite(t);
}
var aO = Oe(), h7 = ["percent", "easing", "shape", "style", "extra"];
function iO(t) {
  t.stopAnimation("keyframe"), t.attr(aO(t));
}
function Lp(t, e, r) {
  if (!(!r.isAnimationEnabled() || !e)) {
    if (V(e)) {
      w(e, function(s) {
        Lp(t, s, r);
      });
      return;
    }
    var n = e.keyframes, a = e.duration;
    if (r && a == null) {
      var i = Rs("enter", r, 0);
      a = i && i.duration;
    }
    if (!(!n || !a)) {
      var o = aO(t);
      w(Op, function(s) {
        if (!(s && !t[s])) {
          var l;
          n.sort(function(u, c) {
            return u.percent - c.percent;
          }), w(n, function(u) {
            var c = t.animators, d = s ? u[s] : u;
            if (d) {
              var p = Me(d);
              if (s || (p = ze(p, function(g) {
                return xe(h7, g) < 0;
              })), !!p.length) {
                l || (l = t.animate(s, e.loop, !0), l.scope = "keyframe");
                for (var f = 0; f < c.length; f++)
                  c[f] !== l && c[f].targetName === l.targetName && c[f].stopTracks(p);
                s && (o[s] = o[s] || {});
                var h = s ? o[s] : o;
                w(p, function(g) {
                  h[g] = ((s ? t[s] : t) || {})[g];
                }), l.whenWithKeys(a * u.percent, d, p, u.easing);
              }
            }
          }), l && l.delay(e.delay || 0).duration(a).start(e.easing);
        }
      });
    }
  }
}
var Jn = "emphasis", Fa = "normal", bb = "blur", Sb = "select", Ja = [Fa, Jn, bb, Sb], ov = {
  normal: ["itemStyle"],
  emphasis: [Jn, "itemStyle"],
  blur: [bb, "itemStyle"],
  select: [Sb, "itemStyle"]
}, sv = {
  normal: ["label"],
  emphasis: [Jn, "label"],
  blur: [bb, "label"],
  select: [Sb, "label"]
}, g7 = ["x", "y"], v7 = "e\0\0", Ar = {
  normal: {},
  emphasis: {},
  blur: {},
  select: {}
}, m7 = {
  cartesian2d: Qq,
  geo: Jq,
  single: t7,
  polar: n7,
  calendar: a7
};
function s_(t) {
  return t instanceof Ce;
}
function l_(t) {
  return t instanceof Fr;
}
function _7(t, e) {
  e.copyTransform(t), l_(e) && l_(t) && (e.setStyle(t.style), e.z = t.z, e.z2 = t.z2, e.zlevel = t.zlevel, e.invisible = t.invisible, e.ignore = t.ignore, s_(e) && s_(t) && e.setShape(t.shape));
}
var y7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      this._progressiveEls = null;
      var o = this._data, s = r.getData(), l = this.group, u = W1(r, s, n, a);
      o || l.removeAll(), s.diff(o).add(function(d) {
        lv(a, null, d, u(d, i), r, l, s);
      }).remove(function(d) {
        var p = o.getItemGraphicEl(d);
        p && Ff(p, jn(p).option, r);
      }).update(function(d, p) {
        var f = o.getItemGraphicEl(p);
        lv(a, f, d, u(d, i), r, l, s);
      }).execute();
      var c = r.get("clip", !0) ? ec(r.coordinateSystem, !1, r) : null;
      c ? l.setClipPath(c) : l.removeClipPath(), this._data = s;
    }, e.prototype.incrementalPrepareRender = function(r, n, a) {
      this.group.removeAll(), this._data = null;
    }, e.prototype.incrementalRender = function(r, n, a, i, o) {
      var s = n.getData(), l = W1(n, s, a, i), u = this._progressiveEls = [];
      function c(f) {
        f.isGroup || (f.incremental = !0, f.ensureState("emphasis").hoverLayer = !0);
      }
      for (var d = r.start; d < r.end; d++) {
        var p = lv(null, null, d, l(d, o), n, this.group, s);
        p && (p.traverse(c), u.push(p));
      }
    }, e.prototype.eachRendered = function(r) {
      ei(this._progressiveEls || this.group, r);
    }, e.prototype.filterForExposedEvent = function(r, n, a, i) {
      var o = n.element;
      if (o == null || a.name === o)
        return !0;
      for (; (a = a.__hostTarget || a.parent) && a !== this.group; )
        if (a.name === o)
          return !0;
      return !1;
    }, e.type = "custom", e;
  }(Ke)
);
function Eb(t) {
  var e = t.type, r;
  if (e === "path") {
    var n = t.shape, a = n.width != null && n.height != null ? {
      x: n.x || 0,
      y: n.y || 0,
      width: n.width,
      height: n.height
    } : null, i = lO(n);
    r = hf(i, null, a, n.layout || "center"), jn(r).customPathData = i;
  } else if (e === "image")
    r = new Bt({}), jn(r).customImagePath = t.style.image;
  else if (e === "text")
    r = new Pe({});
  else if (e === "group")
    r = new de();
  else {
    if (e === "compoundPath")
      throw new Error('"compoundPath" is not supported yet.');
    var o = cy(e);
    if (!o) {
      var s = "";
      Ue(s);
    }
    r = new o();
  }
  return jn(r).customGraphicType = e, r.name = t.name, r.z2EmphasisLift = 1, r.z2SelectLift = 1, r;
}
function Tb(t, e, r, n, a, i, o) {
  iO(e);
  var s = a && a.normal.cfg;
  s && e.setTextConfig(s), n && n.transition == null && (n.transition = g7);
  var l = n && n.style;
  if (l) {
    if (e.type === "text") {
      var u = l;
      Q(u, "textFill") && (u.fill = u.textFill), Q(u, "textStroke") && (u.stroke = u.textStroke);
    }
    var c = void 0, d = s_(e) ? l.decal : null;
    t && d && (d.dirty = !0, c = ys(d, t)), l.__decalPattern = c;
  }
  if (l_(e) && l) {
    var c = l.__decalPattern;
    c && (l.decal = c);
  }
  zd(e, n, i, {
    dataIndex: r,
    isInit: o,
    clearStyle: !0
  }), Lp(e, n.keyframeAnimation, i);
}
function oO(t, e, r, n, a) {
  var i = e.isGroup ? null : e, o = a && a[t].cfg;
  if (i) {
    var s = i.ensureState(t);
    if (n === !1) {
      var l = i.getState(t);
      l && (l.style = null);
    } else
      s.style = n || null;
    o && (s.textConfig = o), lo(i);
  }
}
function b7(t, e, r) {
  if (!t.isGroup) {
    var n = t, a = r.currentZ, i = r.currentZLevel;
    n.z = a, n.zlevel = i;
    var o = e.z2;
    o != null && (n.z2 = o || 0);
    for (var s = 0; s < Ja.length; s++)
      S7(n, e, Ja[s]);
  }
}
function S7(t, e, r) {
  var n = r === Fa, a = n ? e : Pp(e, r), i = a ? a.z2 : null, o;
  i != null && (o = n ? t : t.ensureState(r), o.z2 = i || 0);
}
function W1(t, e, r, n) {
  var a = t.get("renderItem"), i = t.coordinateSystem, o = {};
  i && (o = i.prepareCustoms ? i.prepareCustoms(i) : m7[i.type](i));
  for (var s = ie({
    getWidth: n.getWidth,
    getHeight: n.getHeight,
    getZr: n.getZr,
    getDevicePixelRatio: n.getDevicePixelRatio,
    value: b,
    style: E,
    ordinalRawValue: S,
    styleEmphasis: T,
    visual: A,
    barLayout: D,
    currentSeriesIndices: M,
    font: I
  }, o.api || {}), l = {
    // The life cycle of context: current round of rendering.
    // The global life cycle is probably not necessary, because
    // user can store global status by themselves.
    context: {},
    seriesId: t.id,
    seriesName: t.name,
    seriesIndex: t.seriesIndex,
    coordSys: o.coordSys,
    dataInsideLength: e.count(),
    encode: E7(t.getData())
  }, u, c, d = {}, p = {}, f = {}, h = {}, g = 0; g < Ja.length; g++) {
    var v = Ja[g];
    f[v] = t.getModel(ov[v]), h[v] = t.getModel(sv[v]);
  }
  function m(N) {
    return N === u ? c || (c = e.getItemModel(N)) : e.getItemModel(N);
  }
  function _(N, R) {
    return e.hasItemOption ? N === u ? d[R] || (d[R] = m(N).getModel(ov[R])) : m(N).getModel(ov[R]) : f[R];
  }
  function y(N, R) {
    return e.hasItemOption ? N === u ? p[R] || (p[R] = m(N).getModel(sv[R])) : m(N).getModel(sv[R]) : h[R];
  }
  return function(N, R) {
    return u = N, c = null, d = {}, p = {}, a && a(ie({
      dataIndexInside: N,
      dataIndex: e.getRawIndex(N),
      // Can be used for optimization when zoom or roam.
      actionType: R ? R.type : null
    }, l), s);
  };
  function b(N, R) {
    return R == null && (R = u), e.getStore().get(e.getDimensionIndex(N || 0), R);
  }
  function S(N, R) {
    R == null && (R = u), N = N || 0;
    var O = e.getDimensionInfo(N);
    if (!O) {
      var B = e.getDimensionIndex(N);
      return B >= 0 ? e.getStore().get(B, R) : void 0;
    }
    var L = e.get(O.name, R), F = O && O.ordinalMeta;
    return F ? F.categories[L] : L;
  }
  function E(N, R) {
    R == null && (R = u);
    var O = e.getItemVisual(R, "style"), B = O && O.fill, L = O && O.opacity, F = _(R, Fa).getItemStyle();
    B != null && (F.fill = B), L != null && (F.opacity = L);
    var U = {
      inheritColor: Y(B) ? B : "#000"
    }, z = y(R, Fa), H = Je(z, null, U, !1, !0);
    H.text = z.getShallow("show") ? ge(t.getFormattedLabel(R, Fa), Ss(e, R)) : null;
    var Z = dp(z, U, !1);
    return C(N, F), F = U1(F, H, Z), N && x(F, N), F.legacy = !0, F;
  }
  function T(N, R) {
    R == null && (R = u);
    var O = _(R, Jn).getItemStyle(), B = y(R, Jn), L = Je(B, null, null, !0, !0);
    L.text = B.getShallow("show") ? Dn(t.getFormattedLabel(R, Jn), t.getFormattedLabel(R, Fa), Ss(e, R)) : null;
    var F = dp(B, null, !0);
    return C(N, O), O = U1(O, L, F), N && x(O, N), O.legacy = !0, O;
  }
  function x(N, R) {
    for (var O in R)
      Q(R, O) && (N[O] = R[O]);
  }
  function C(N, R) {
    N && (N.textFill && (R.textFill = N.textFill), N.textPosition && (R.textPosition = N.textPosition));
  }
  function A(N, R) {
    if (R == null && (R = u), Q(F1, N)) {
      var O = e.getItemVisual(R, "style");
      return O ? O[F1[N]] : null;
    }
    if (Q(Kq, N))
      return e.getItemVisual(R, N);
  }
  function D(N) {
    if (i.type === "cartesian2d") {
      var R = i.getBaseAxis();
      return O5(ie({
        axis: R
      }, N));
    }
  }
  function M() {
    return r.getCurrentSeriesIndices();
  }
  function I(N) {
    return dy(N, r);
  }
}
function E7(t) {
  var e = {};
  return w(t.dimensions, function(r) {
    var n = t.getDimensionInfo(r);
    if (!n.isExtraCoord) {
      var a = n.coordDim, i = e[a] = e[a] || [];
      i[n.coordDimIndex] = t.getDimensionIndex(r);
    }
  }), e;
}
function lv(t, e, r, n, a, i, o) {
  if (!n) {
    i.remove(e);
    return;
  }
  var s = xb(t, e, r, n, a, i);
  return s && o.setItemGraphicEl(r, s), s && lt(s, n.focus, n.blurScope, n.emphasisDisabled), s;
}
function xb(t, e, r, n, a, i) {
  var o = -1, s = e;
  e && sO(e, n, a) && (o = xe(i.childrenRef(), e), e = null);
  var l = !e, u = e;
  u ? u.clearStates() : (u = Eb(n), s && _7(s, u)), n.morph === !1 ? u.disableMorphing = !0 : u.disableMorphing && (u.disableMorphing = !1), Ar.normal.cfg = Ar.normal.conOpt = Ar.emphasis.cfg = Ar.emphasis.conOpt = Ar.blur.cfg = Ar.blur.conOpt = Ar.select.cfg = Ar.select.conOpt = null, Ar.isLegacy = !1, x7(u, r, n, a, l, Ar), T7(u, r, n, a, l), Tb(t, u, r, n, Ar, a, l), Q(n, "info") && (jn(u).info = n.info);
  for (var c = 0; c < Ja.length; c++) {
    var d = Ja[c];
    if (d !== Fa) {
      var p = Pp(n, d), f = Cb(n, p, d);
      oO(d, u, p, f, Ar);
    }
  }
  return b7(u, n, a), n.type === "group" && C7(t, u, r, n, a), o >= 0 ? i.replaceAt(u, o) : i.add(u), u;
}
function sO(t, e, r) {
  var n = jn(t), a = e.type, i = e.shape, o = e.style;
  return (
    // Always create new if universal transition is enabled.
    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.
    r.isUniversalTransitionEnabled() || a != null && a !== n.customGraphicType || a === "path" && M7(i) && lO(i) !== n.customPathData || a === "image" && Q(o, "image") && o.image !== n.customImagePath
  );
}
function T7(t, e, r, n, a) {
  var i = r.clipPath;
  if (i === !1)
    t && t.getClipPath() && t.removeClipPath();
  else if (i) {
    var o = t.getClipPath();
    o && sO(o, i, n) && (o = null), o || (o = Eb(i), t.setClipPath(o)), Tb(null, o, e, i, null, n, a);
  }
}
function x7(t, e, r, n, a, i) {
  if (!t.isGroup) {
    q1(r, null, i), q1(r, Jn, i);
    var o = i.normal.conOpt, s = i.emphasis.conOpt, l = i.blur.conOpt, u = i.select.conOpt;
    if (o != null || s != null || u != null || l != null) {
      var c = t.getTextContent();
      if (o === !1)
        c && t.removeTextContent();
      else {
        o = i.normal.conOpt = o || {
          type: "text"
        }, c ? c.clearStates() : (c = Eb(o), t.setTextContent(c)), Tb(null, c, e, o, null, n, a);
        for (var d = o && o.style, p = 0; p < Ja.length; p++) {
          var f = Ja[p];
          if (f !== Fa) {
            var h = i[f].conOpt;
            oO(f, c, h, Cb(o, h, f), null);
          }
        }
        d ? c.dirty() : c.markRedraw();
      }
    }
  }
}
function q1(t, e, r) {
  var n = e ? Pp(t, e) : t, a = e ? Cb(t, n, Jn) : t.style, i = t.type, o = n ? n.textConfig : null, s = t.textContent, l = s ? e ? Pp(s, e) : s : null;
  if (a && // Because emphasis style has little info to detect legacy,
  // if normal is legacy, emphasis is trade as legacy.
  (r.isLegacy || eO(a, i, !!o, !!l))) {
    r.isLegacy = !0;
    var u = tO(a, i, !e);
    !o && u.textConfig && (o = u.textConfig), !l && u.textContent && (l = u.textContent);
  }
  if (!e && l) {
    var c = l;
    !c.type && (c.type = "text");
  }
  var d = e ? r[e] : r.normal;
  d.cfg = o, d.conOpt = l;
}
function Pp(t, e) {
  return e ? t ? t[e] : null : t;
}
function Cb(t, e, r) {
  var n = e && e.style;
  return n == null && r === Jn && t && (n = t.styleEmphasis), n;
}
function C7(t, e, r, n, a) {
  var i = n.children, o = i ? i.length : 0, s = n.$mergeChildren, l = s === "byName" || n.diffChildrenByName, u = s === !1;
  if (!(!o && !l && !u)) {
    if (l) {
      w7({
        api: t,
        oldChildren: e.children() || [],
        newChildren: i || [],
        dataIndex: r,
        seriesModel: a,
        group: e
      });
      return;
    }
    u && e.removeAll();
    for (var c = 0; c < o; c++) {
      var d = i[c], p = e.childAt(c);
      d ? (d.ignore == null && (d.ignore = !1), xb(t, p, r, d, a, e)) : p.ignore = !0;
    }
    for (var f = e.childCount() - 1; f >= c; f--) {
      var h = e.childAt(f);
      A7(e, h, a);
    }
  }
}
function A7(t, e, r) {
  e && Ff(e, jn(t).option, r);
}
function w7(t) {
  new ia(t.oldChildren, t.newChildren, Y1, Y1, t).add(K1).update(K1).remove(D7).execute();
}
function Y1(t, e) {
  var r = t && t.name;
  return r ?? v7 + e;
}
function K1(t, e) {
  var r = this.context, n = t != null ? r.newChildren[t] : null, a = e != null ? r.oldChildren[e] : null;
  xb(r.api, a, r.dataIndex, n, r.seriesModel, r.group);
}
function D7(t) {
  var e = this.context, r = e.oldChildren[t];
  r && Ff(r, jn(r).option, e.seriesModel);
}
function lO(t) {
  return t && (t.pathData || t.d);
}
function M7(t) {
  return t && (Q(t, "pathData") || Q(t, "d"));
}
function kre(t) {
  t.registerChartView(y7), t.registerSeriesModel(Zq);
}
var Fi = Oe(), Z1 = le, uv = K, Ab = (
  /** @class */
  function() {
    function t() {
      this._dragging = !1, this.animationThreshold = 15;
    }
    return t.prototype.render = function(e, r, n, a) {
      var i = r.get("value"), o = r.get("status");
      if (this._axisModel = e, this._axisPointerModel = r, this._api = n, !(!a && this._lastValue === i && this._lastStatus === o)) {
        this._lastValue = i, this._lastStatus = o;
        var s = this._group, l = this._handle;
        if (!o || o === "hide") {
          s && s.hide(), l && l.hide();
          return;
        }
        s && s.show(), l && l.show();
        var u = {};
        this.makeElOption(u, i, e, r, n);
        var c = u.graphicKey;
        c !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = c;
        var d = this._moveAnimation = this.determineAnimation(e, r);
        if (!s)
          s = this._group = new de(), this.createPointerEl(s, u, e, r), this.createLabelEl(s, u, e, r), n.getZr().add(s);
        else {
          var p = _e(X1, r, d);
          this.updatePointerEl(s, u, p), this.updateLabelEl(s, u, p, r);
        }
        j1(s, r, !0), this._renderHandle(i);
      }
    }, t.prototype.remove = function(e) {
      this.clear(e);
    }, t.prototype.dispose = function(e) {
      this.clear(e);
    }, t.prototype.determineAnimation = function(e, r) {
      var n = r.get("animation"), a = e.axis, i = a.type === "category", o = r.get("snap");
      if (!o && !i)
        return !1;
      if (n === "auto" || n == null) {
        var s = this.animationThreshold;
        if (i && a.getBandWidth() > s)
          return !0;
        if (o) {
          var l = Ky(e).seriesDataCount, u = a.getExtent();
          return Math.abs(u[0] - u[1]) / l > s;
        }
        return !1;
      }
      return n === !0;
    }, t.prototype.makeElOption = function(e, r, n, a, i) {
    }, t.prototype.createPointerEl = function(e, r, n, a) {
      var i = r.pointer;
      if (i) {
        var o = Fi(e).pointerEl = new vo[i.type](Z1(r.pointer));
        e.add(o);
      }
    }, t.prototype.createLabelEl = function(e, r, n, a) {
      if (r.label) {
        var i = Fi(e).labelEl = new Pe(Z1(r.label));
        e.add(i), Q1(i, a);
      }
    }, t.prototype.updatePointerEl = function(e, r, n) {
      var a = Fi(e).pointerEl;
      a && r.pointer && (a.setStyle(r.pointer.style), n(a, {
        shape: r.pointer.shape
      }));
    }, t.prototype.updateLabelEl = function(e, r, n, a) {
      var i = Fi(e).labelEl;
      i && (i.setStyle(r.label.style), n(i, {
        // Consider text length change in vertical axis, animation should
        // be used on shape, otherwise the effect will be weird.
        // TODOTODO
        // shape: elOption.label.shape,
        x: r.label.x,
        y: r.label.y
      }), Q1(i, a));
    }, t.prototype._renderHandle = function(e) {
      if (!(this._dragging || !this.updateHandleTransform)) {
        var r = this._axisPointerModel, n = this._api.getZr(), a = this._handle, i = r.getModel("handle"), o = r.get("status");
        if (!i.get("show") || !o || o === "hide") {
          a && n.remove(a), this._handle = null;
          return;
        }
        var s;
        this._handle || (s = !0, a = this._handle = Yu(i.get("icon"), {
          cursor: "move",
          draggable: !0,
          onmousemove: function(u) {
            ta(u.event);
          },
          onmousedown: uv(this._onHandleDragMove, this, 0, 0),
          drift: uv(this._onHandleDragMove, this),
          ondragend: uv(this._onHandleDragEnd, this)
        }), n.add(a)), j1(a, r, !1), a.setStyle(i.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
        var l = i.get("size");
        V(l) || (l = [l, l]), a.scaleX = l[0] / 2, a.scaleY = l[1] / 2, Gs(this, "_doDispatchAxisPointer", i.get("throttle") || 0, "fixRate"), this._moveHandleToValue(e, s);
      }
    }, t.prototype._moveHandleToValue = function(e, r) {
      X1(this._axisPointerModel, !r && this._moveAnimation, this._handle, cv(this.getHandleTransform(e, this._axisModel, this._axisPointerModel)));
    }, t.prototype._onHandleDragMove = function(e, r) {
      var n = this._handle;
      if (n) {
        this._dragging = !0;
        var a = this.updateHandleTransform(cv(n), [e, r], this._axisModel, this._axisPointerModel);
        this._payloadInfo = a, n.stopAnimation(), n.attr(cv(a)), Fi(n).lastProp = null, this._doDispatchAxisPointer();
      }
    }, t.prototype._doDispatchAxisPointer = function() {
      var e = this._handle;
      if (e) {
        var r = this._payloadInfo, n = this._axisModel;
        this._api.dispatchAction({
          type: "updateAxisPointer",
          x: r.cursorPoint[0],
          y: r.cursorPoint[1],
          tooltipOption: r.tooltipOption,
          axesInfo: [{
            axisDim: n.axis.dim,
            axisIndex: n.componentIndex
          }]
        });
      }
    }, t.prototype._onHandleDragEnd = function() {
      this._dragging = !1;
      var e = this._handle;
      if (e) {
        var r = this._axisPointerModel.get("value");
        this._moveHandleToValue(r), this._api.dispatchAction({
          type: "hideTip"
        });
      }
    }, t.prototype.clear = function(e) {
      this._lastValue = null, this._lastStatus = null;
      var r = e.getZr(), n = this._group, a = this._handle;
      r && n && (this._lastGraphicKey = null, n && r.remove(n), a && r.remove(a), this._group = null, this._handle = null, this._payloadInfo = null), yu(this, "_doDispatchAxisPointer");
    }, t.prototype.doClear = function() {
    }, t.prototype.buildLabel = function(e, r, n) {
      return n = n || 0, {
        x: e[n],
        y: e[1 - n],
        width: r[n],
        height: r[1 - n]
      };
    }, t;
  }()
);
function X1(t, e, r, n) {
  uO(Fi(r).lastProp, n) || (Fi(r).lastProp = n, e ? Fe(r, n, t) : (r.stopAnimation(), r.attr(n)));
}
function uO(t, e) {
  if (se(t) && se(e)) {
    var r = !0;
    return w(e, function(n, a) {
      r = r && uO(t[a], n);
    }), !!r;
  } else
    return t === e;
}
function Q1(t, e) {
  t[e.get(["label", "show"]) ? "show" : "hide"]();
}
function cv(t) {
  return {
    x: t.x || 0,
    y: t.y || 0,
    rotation: t.rotation || 0
  };
}
function j1(t, e, r) {
  var n = e.get("z"), a = e.get("zlevel");
  t && t.traverse(function(i) {
    i.type !== "group" && (n != null && (i.z = n), a != null && (i.zlevel = a), i.silent = r);
  });
}
function wb(t) {
  var e = t.get("type"), r = t.getModel(e + "Style"), n;
  return e === "line" ? (n = r.getLineStyle(), n.fill = null) : e === "shadow" && (n = r.getAreaStyle(), n.stroke = null), n;
}
function cO(t, e, r, n, a) {
  var i = r.get("value"), o = dO(i, e.axis, e.ecModel, r.get("seriesDataIndices"), {
    precision: r.get(["label", "precision"]),
    formatter: r.get(["label", "formatter"])
  }), s = r.getModel("label"), l = Ps(s.get("padding") || 0), u = s.getFont(), c = Uu(o, u), d = a.position, p = c.width + l[1] + l[3], f = c.height + l[0] + l[2], h = a.align;
  h === "right" && (d[0] -= p), h === "center" && (d[0] -= p / 2);
  var g = a.verticalAlign;
  g === "bottom" && (d[1] -= f), g === "middle" && (d[1] -= f / 2), I7(d, p, f, n);
  var v = s.get("backgroundColor");
  (!v || v === "auto") && (v = e.get(["axisLine", "lineStyle", "color"])), t.label = {
    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},
    x: d[0],
    y: d[1],
    style: Je(s, {
      text: o,
      font: u,
      fill: s.getTextColor(),
      padding: l,
      backgroundColor: v
    }),
    // Label should be over axisPointer.
    z2: 10
  };
}
function I7(t, e, r, n) {
  var a = n.getWidth(), i = n.getHeight();
  t[0] = Math.min(t[0] + e, a) - e, t[1] = Math.min(t[1] + r, i) - r, t[0] = Math.max(t[0], 0), t[1] = Math.max(t[1], 0);
}
function dO(t, e, r, n, a) {
  t = e.scale.parse(t);
  var i = e.scale.getLabel({
    value: t
  }, {
    // If `precision` is set, width can be fixed (like '12.00500'), which
    // helps to debounce when when moving label.
    precision: a.precision
  }), o = a.formatter;
  if (o) {
    var s = {
      value: By(e, {
        value: t
      }),
      axisDimension: e.dim,
      axisIndex: e.index,
      seriesData: []
    };
    w(n, function(l) {
      var u = r.getSeriesByIndex(l.seriesIndex), c = l.dataIndexInside, d = u && u.getDataParams(c);
      d && s.seriesData.push(d);
    }), Y(o) ? i = o.replace("{value}", i) : ae(o) && (i = o(s));
  }
  return i;
}
function Db(t, e, r) {
  var n = yr();
  return ho(n, n, r.rotation), Rn(n, n, r.position), Jr([t.dataToCoord(e), (r.labelOffset || 0) + (r.labelDirection || 1) * (r.labelMargin || 0)], n);
}
function pO(t, e, r, n, a, i) {
  var o = nr.innerTextLayout(r.rotation, 0, r.labelDirection);
  r.labelMargin = a.get(["label", "margin"]), cO(e, n, a, i, {
    position: Db(n.axis, t, r),
    align: o.textAlign,
    verticalAlign: o.textVerticalAlign
  });
}
function Mb(t, e, r) {
  return r = r || 0, {
    x1: t[r],
    y1: t[1 - r],
    x2: e[r],
    y2: e[1 - r]
  };
}
function fO(t, e, r) {
  return r = r || 0, {
    x: t[r],
    y: t[1 - r],
    width: e[r],
    height: e[1 - r]
  };
}
function J1(t, e, r, n, a, i) {
  return {
    cx: t,
    cy: e,
    r0: r,
    r: n,
    startAngle: a,
    endAngle: i,
    clockwise: !0
  };
}
var N7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(r, n, a, i, o) {
      var s = a.axis, l = s.grid, u = i.get("type"), c = eC(l, s).getOtherAxis(s).getGlobalExtent(), d = s.toGlobalCoord(s.dataToCoord(n, !0));
      if (u && u !== "none") {
        var p = wb(i), f = R7[u](s, d, c);
        f.style = p, r.graphicKey = f.type, r.pointer = f;
      }
      var h = Vm(l.model, a);
      pO(
        // @ts-ignore
        n,
        r,
        h,
        a,
        i,
        o
      );
    }, e.prototype.getHandleTransform = function(r, n, a) {
      var i = Vm(n.axis.grid.model, n, {
        labelInside: !1
      });
      i.labelMargin = a.get(["handle", "margin"]);
      var o = Db(n.axis, r, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(r, n, a, i) {
      var o = a.axis, s = o.grid, l = o.getGlobalExtent(!0), u = eC(s, o).getOtherAxis(o).getGlobalExtent(), c = o.dim === "x" ? 0 : 1, d = [r.x, r.y];
      d[c] += n[c], d[c] = Math.min(l[1], d[c]), d[c] = Math.max(l[0], d[c]);
      var p = (u[1] + u[0]) / 2, f = [p, p];
      f[c] = d[c];
      var h = [{
        verticalAlign: "middle"
      }, {
        align: "center"
      }];
      return {
        x: d[0],
        y: d[1],
        rotation: r.rotation,
        cursorPoint: f,
        tooltipOption: h[c]
      };
    }, e;
  }(Ab)
);
function eC(t, e) {
  var r = {};
  return r[e.dim + "AxisIndex"] = e.index, t.getCartesian(r);
}
var R7 = {
  line: function(t, e, r) {
    var n = Mb([e, r[0]], [e, r[1]], tC(t));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: n
    };
  },
  shadow: function(t, e, r) {
    var n = Math.max(1, t.getBandWidth()), a = r[1] - r[0];
    return {
      type: "Rect",
      shape: fO([e - n / 2, r[0]], [n, a], tC(t))
    };
  }
};
function tC(t) {
  return t.dim === "x" ? 0 : 1;
}
var O7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "axisPointer", e.defaultOption = {
      // 'auto' means that show when triggered by tooltip or handle.
      show: "auto",
      // zlevel: 0,
      z: 50,
      type: "line",
      // axispointer triggered by tootip determine snap automatically,
      // see `modelHelper`.
      snap: !1,
      triggerTooltip: !0,
      triggerEmphasis: !0,
      value: null,
      status: null,
      link: [],
      // Do not set 'auto' here, otherwise global animation: false
      // will not effect at this axispointer.
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {
        color: "#B9BEC9",
        width: 1,
        type: "dashed"
      },
      shadowStyle: {
        color: "rgba(210,219,238,0.2)"
      },
      label: {
        show: !0,
        formatter: null,
        precision: "auto",
        margin: 3,
        color: "#fff",
        padding: [5, 7, 5, 7],
        backgroundColor: "auto",
        borderColor: null,
        borderWidth: 0,
        borderRadius: 3
      },
      handle: {
        show: !1,
        // eslint-disable-next-line
        icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
        size: 45,
        // handle margin is from symbol center to axis, which is stable when circular move.
        margin: 50,
        // color: '#1b8bbd'
        // color: '#2f4554'
        color: "#333",
        shadowBlur: 3,
        shadowColor: "#aaa",
        shadowOffsetX: 0,
        shadowOffsetY: 2,
        // For mobile performance
        throttle: 40
      }
    }, e;
  }(De)
), Kn = Oe(), L7 = w;
function hO(t, e, r) {
  if (!Ae.node) {
    var n = e.getZr();
    Kn(n).records || (Kn(n).records = {}), P7(n, e);
    var a = Kn(n).records[t] || (Kn(n).records[t] = {});
    a.handler = r;
  }
}
function P7(t, e) {
  if (Kn(t).initialized)
    return;
  Kn(t).initialized = !0, r("click", _e(rC, "click")), r("mousemove", _e(rC, "mousemove")), r("globalout", B7);
  function r(n, a) {
    t.on(n, function(i) {
      var o = F7(e);
      L7(Kn(t).records, function(s) {
        s && a(s, i, o.dispatchAction);
      }), k7(o.pendings, e);
    });
  }
}
function k7(t, e) {
  var r = t.showTip.length, n = t.hideTip.length, a;
  r ? a = t.showTip[r - 1] : n && (a = t.hideTip[n - 1]), a && (a.dispatchAction = null, e.dispatchAction(a));
}
function B7(t, e, r) {
  t.handler("leave", null, r);
}
function rC(t, e, r, n) {
  e.handler(t, r, n);
}
function F7(t) {
  var e = {
    showTip: [],
    hideTip: []
  }, r = function(n) {
    var a = e[n.type];
    a ? a.push(n) : (n.dispatchAction = r, t.dispatchAction(n));
  };
  return {
    dispatchAction: r,
    pendings: e
  };
}
function u_(t, e) {
  if (!Ae.node) {
    var r = e.getZr(), n = (Kn(r).records || {})[t];
    n && (Kn(r).records[t] = null);
  }
}
var G7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = n.getComponent("tooltip"), o = r.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
      hO("axisPointer", a, function(s, l, u) {
        o !== "none" && (s === "leave" || o.indexOf(s) >= 0) && u({
          type: "updateAxisPointer",
          currTrigger: s,
          x: l && l.offsetX,
          y: l && l.offsetY
        });
      });
    }, e.prototype.remove = function(r, n) {
      u_("axisPointer", n);
    }, e.prototype.dispose = function(r, n) {
      u_("axisPointer", n);
    }, e.type = "axisPointer", e;
  }(st)
);
function gO(t, e) {
  var r = [], n = t.seriesIndex, a;
  if (n == null || !(a = e.getSeriesByIndex(n)))
    return {
      point: []
    };
  var i = a.getData(), o = oo(i, t);
  if (o == null || o < 0 || V(o))
    return {
      point: []
    };
  var s = i.getItemGraphicEl(o), l = a.coordinateSystem;
  if (a.getTooltipPosition)
    r = a.getTooltipPosition(o) || [];
  else if (l && l.dataToPoint)
    if (t.isStacked) {
      var u = l.getBaseAxis(), c = l.getOtherAxis(u), d = c.dim, p = u.dim, f = d === "x" || d === "radius" ? 1 : 0, h = i.mapDimension(p), g = [];
      g[f] = i.get(h, o), g[1 - f] = i.get(i.getCalculationInfo("stackResultDimension"), o), r = l.dataToPoint(g) || [];
    } else
      r = l.dataToPoint(i.getValues($(l.dimensions, function(m) {
        return i.mapDimension(m);
      }), o)) || [];
  else if (s) {
    var v = s.getBoundingRect().clone();
    v.applyTransform(s.transform), r = [v.x + v.width / 2, v.y + v.height / 2];
  }
  return {
    point: r,
    el: s
  };
}
var nC = Oe();
function U7(t, e, r) {
  var n = t.currTrigger, a = [t.x, t.y], i = t, o = t.dispatchAction || K(r.dispatchAction, r), s = e.getComponent("axisPointer").coordSysAxesInfo;
  if (s) {
    Vd(a) && (a = gO({
      seriesIndex: i.seriesIndex,
      // Do not use dataIndexInside from other ec instance.
      // FIXME: auto detect it?
      dataIndex: i.dataIndex
    }, e).point);
    var l = Vd(a), u = i.axesInfo, c = s.axesInfo, d = n === "leave" || Vd(a), p = {}, f = {}, h = {
      list: [],
      map: {}
    }, g = {
      showPointer: _e(V7, f),
      showTooltip: _e($7, h)
    };
    w(s.coordSysMap, function(m, _) {
      var y = l || m.containPoint(a);
      w(s.coordSysAxesInfo[_], function(b, S) {
        var E = b.axis, T = Y7(u, b);
        if (!d && y && (!u || T)) {
          var x = T && T.value;
          x == null && !l && (x = E.pointToData(a)), x != null && aC(b, x, g, !1, p);
        }
      });
    });
    var v = {};
    return w(c, function(m, _) {
      var y = m.linkGroup;
      y && !f[_] && w(y.axesInfo, function(b, S) {
        var E = f[S];
        if (b !== m && E) {
          var T = E.value;
          y.mapper && (T = m.axis.scale.parse(y.mapper(T, iC(b), iC(m)))), v[m.key] = T;
        }
      });
    }), w(v, function(m, _) {
      aC(c[_], m, g, !0, p);
    }), H7(f, c, p), W7(h, a, t, o), q7(c, o, r), p;
  }
}
function aC(t, e, r, n, a) {
  var i = t.axis;
  if (!(i.scale.isBlank() || !i.containData(e))) {
    if (!t.involveSeries) {
      r.showPointer(t, e);
      return;
    }
    var o = z7(e, t), s = o.payloadBatch, l = o.snapToValue;
    s[0] && a.seriesIndex == null && G(a, s[0]), !n && t.snap && i.containData(l) && l != null && (e = l), r.showPointer(t, e, s), r.showTooltip(t, o, l);
  }
}
function z7(t, e) {
  var r = e.axis, n = r.dim, a = t, i = [], o = Number.MAX_VALUE, s = -1;
  return w(e.seriesModels, function(l, u) {
    var c = l.getData().mapDimensionsAll(n), d, p;
    if (l.getAxisTooltipData) {
      var f = l.getAxisTooltipData(c, t, r);
      p = f.dataIndices, d = f.nestestValue;
    } else {
      if (p = l.getData().indicesOfNearest(
        c[0],
        t,
        // Add a threshold to avoid find the wrong dataIndex
        // when data length is not same.
        // false,
        r.type === "category" ? 0.5 : null
      ), !p.length)
        return;
      d = l.getData().get(c[0], p[0]);
    }
    if (!(d == null || !isFinite(d))) {
      var h = t - d, g = Math.abs(h);
      g <= o && ((g < o || h >= 0 && s < 0) && (o = g, s = h, a = d, i.length = 0), w(p, function(v) {
        i.push({
          seriesIndex: l.seriesIndex,
          dataIndexInside: v,
          dataIndex: l.getData().getRawIndex(v)
        });
      }));
    }
  }), {
    payloadBatch: i,
    snapToValue: a
  };
}
function V7(t, e, r, n) {
  t[e.key] = {
    value: r,
    payloadBatch: n
  };
}
function $7(t, e, r, n) {
  var a = r.payloadBatch, i = e.axis, o = i.model, s = e.axisPointerModel;
  if (!(!e.triggerTooltip || !a.length)) {
    var l = e.coordSys.model, u = Au(l), c = t.map[u];
    c || (c = t.map[u] = {
      coordSysId: l.id,
      coordSysIndex: l.componentIndex,
      coordSysType: l.type,
      coordSysMainType: l.mainType,
      dataByAxis: []
    }, t.list.push(c)), c.dataByAxis.push({
      axisDim: i.dim,
      axisIndex: o.componentIndex,
      axisType: o.type,
      axisId: o.id,
      value: n,
      // Caustion: viewHelper.getValueLabel is actually on "view stage", which
      // depends that all models have been updated. So it should not be performed
      // here. Considering axisPointerModel used here is volatile, which is hard
      // to be retrieve in TooltipView, we prepare parameters here.
      valueLabelOpt: {
        precision: s.get(["label", "precision"]),
        formatter: s.get(["label", "formatter"])
      },
      seriesDataIndices: a.slice()
    });
  }
}
function H7(t, e, r) {
  var n = r.axesInfo = [];
  w(e, function(a, i) {
    var o = a.axisPointerModel.option, s = t[i];
    s ? (!a.useHandle && (o.status = "show"), o.value = s.value, o.seriesDataIndices = (s.payloadBatch || []).slice()) : !a.useHandle && (o.status = "hide"), o.status === "show" && n.push({
      axisDim: a.axis.dim,
      axisIndex: a.axis.model.componentIndex,
      value: o.value
    });
  });
}
function W7(t, e, r, n) {
  if (Vd(e) || !t.list.length) {
    n({
      type: "hideTip"
    });
    return;
  }
  var a = ((t.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
  n({
    type: "showTip",
    escapeConnect: !0,
    x: e[0],
    y: e[1],
    tooltipOption: r.tooltipOption,
    position: r.position,
    dataIndexInside: a.dataIndexInside,
    dataIndex: a.dataIndex,
    seriesIndex: a.seriesIndex,
    dataByCoordSys: t.list
  });
}
function q7(t, e, r) {
  var n = r.getZr(), a = "axisPointerLastHighlights", i = nC(n)[a] || {}, o = nC(n)[a] = {};
  w(t, function(u, c) {
    var d = u.axisPointerModel.option;
    d.status === "show" && u.triggerEmphasis && w(d.seriesDataIndices, function(p) {
      var f = p.seriesIndex + " | " + p.dataIndex;
      o[f] = p;
    });
  });
  var s = [], l = [];
  w(i, function(u, c) {
    !o[c] && l.push(u);
  }), w(o, function(u, c) {
    !i[c] && s.push(u);
  }), l.length && r.dispatchAction({
    type: "downplay",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: l
  }), s.length && r.dispatchAction({
    type: "highlight",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: s
  });
}
function Y7(t, e) {
  for (var r = 0; r < (t || []).length; r++) {
    var n = t[r];
    if (e.axis.dim === n.axisDim && e.axis.model.componentIndex === n.axisIndex)
      return n;
  }
}
function iC(t) {
  var e = t.axis.model, r = {}, n = r.axisDim = t.axis.dim;
  return r.axisIndex = r[n + "AxisIndex"] = e.componentIndex, r.axisName = r[n + "AxisName"] = e.name, r.axisId = r[n + "AxisId"] = e.id, r;
}
function Vd(t) {
  return !t || t[0] == null || isNaN(t[0]) || t[1] == null || isNaN(t[1]);
}
function Gf(t) {
  bo.registerAxisPointerClass("CartesianAxisPointer", N7), t.registerComponentModel(O7), t.registerComponentView(G7), t.registerPreprocessor(function(e) {
    if (e) {
      (!e.axisPointer || e.axisPointer.length === 0) && (e.axisPointer = {});
      var r = e.axisPointer.link;
      r && !V(r) && (e.axisPointer.link = [r]);
    }
  }), t.registerProcessor(t.PRIORITY.PROCESSOR.STATISTIC, function(e, r) {
    e.getComponent("axisPointer").coordSysAxesInfo = b$(e, r);
  }), t.registerAction({
    type: "updateAxisPointer",
    event: "updateAxisPointer",
    update: ":updateAxisPointer"
  }, U7);
}
function Bre(t) {
  kt(WN), kt(Gf);
}
var K7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(r, n, a, i, o) {
      var s = a.axis;
      s.dim === "angle" && (this.animationThreshold = Math.PI / 18);
      var l = s.polar, u = l.getOtherAxis(s), c = u.getExtent(), d = s.dataToCoord(n), p = i.get("type");
      if (p && p !== "none") {
        var f = wb(i), h = X7[p](s, l, d, c);
        h.style = f, r.graphicKey = h.type, r.pointer = h;
      }
      var g = i.get(["label", "margin"]), v = Z7(n, a, i, l, g);
      cO(r, a, i, o, v);
    }, e;
  }(Ab)
);
function Z7(t, e, r, n, a) {
  var i = e.axis, o = i.dataToCoord(t), s = n.getAngleAxis().getExtent()[0];
  s = s / 180 * Math.PI;
  var l = n.getRadiusAxis().getExtent(), u, c, d;
  if (i.dim === "radius") {
    var p = yr();
    ho(p, p, s), Rn(p, p, [n.cx, n.cy]), u = Jr([o, -a], p);
    var f = e.getModel("axisLabel").get("rotate") || 0, h = nr.innerTextLayout(s, f * Math.PI / 180, -1);
    c = h.textAlign, d = h.textVerticalAlign;
  } else {
    var g = l[1];
    u = n.coordToPoint([g + a, o]);
    var v = n.cx, m = n.cy;
    c = Math.abs(u[0] - v) / g < 0.3 ? "center" : u[0] > v ? "left" : "right", d = Math.abs(u[1] - m) / g < 0.3 ? "middle" : u[1] > m ? "top" : "bottom";
  }
  return {
    position: u,
    align: c,
    verticalAlign: d
  };
}
var X7 = {
  line: function(t, e, r, n) {
    return t.dim === "angle" ? {
      type: "Line",
      shape: Mb(e.coordToPoint([n[0], r]), e.coordToPoint([n[1], r]))
    } : {
      type: "Circle",
      shape: {
        cx: e.cx,
        cy: e.cy,
        r
      }
    };
  },
  shadow: function(t, e, r, n) {
    var a = Math.max(1, t.getBandWidth()), i = Math.PI / 180;
    return t.dim === "angle" ? {
      type: "Sector",
      shape: J1(
        e.cx,
        e.cy,
        n[0],
        n[1],
        // In ECharts y is negative if angle is positive
        (-r - a / 2) * i,
        (-r + a / 2) * i
      )
    } : {
      type: "Sector",
      shape: J1(e.cx, e.cy, r - a / 2, r + a / 2, 0, Math.PI * 2)
    };
  }
}, Q7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.findAxisModel = function(r) {
      var n, a = this.ecModel;
      return a.eachComponent(r, function(i) {
        i.getCoordSysModel() === this && (n = i);
      }, this), n;
    }, e.type = "polar", e.dependencies = ["radiusAxis", "angleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "80%"
    }, e;
  }(De)
), Ib = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("polar", vt).models[0];
    }, e.type = "polarAxis", e;
  }(De)
);
_t(Ib, Qu);
var j7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "angleAxis", e;
  }(Ib)
), J7 = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "radiusAxis", e;
  }(Ib)
), Nb = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n) {
      return t.call(this, "radius", r, n) || this;
    }
    return e.prototype.pointToData = function(r, n) {
      return this.polar.pointToData(r, n)[this.dim === "radius" ? 0 : 1];
    }, e;
  }(on)
);
Nb.prototype.dataToRadius = on.prototype.dataToCoord;
Nb.prototype.radiusToData = on.prototype.coordToData;
var eY = Oe(), Rb = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n) {
      return t.call(this, "angle", r, n || [0, 360]) || this;
    }
    return e.prototype.pointToData = function(r, n) {
      return this.polar.pointToData(r, n)[this.dim === "radius" ? 0 : 1];
    }, e.prototype.calculateCategoryInterval = function() {
      var r = this, n = r.getLabelModel(), a = r.scale, i = a.getExtent(), o = a.count();
      if (i[1] - i[0] < 1)
        return 0;
      var s = i[0], l = r.dataToCoord(s + 1) - r.dataToCoord(s), u = Math.abs(l), c = Uu(s == null ? "" : s + "", n.getFont(), "center", "top"), d = Math.max(c.height, 7), p = d / u;
      isNaN(p) && (p = 1 / 0);
      var f = Math.max(0, Math.floor(p)), h = eY(r.model), g = h.lastAutoInterval, v = h.lastTickCount;
      return g != null && v != null && Math.abs(g - f) <= 1 && Math.abs(v - o) <= 1 && g > f ? f = g : (h.lastTickCount = o, h.lastAutoInterval = f), f;
    }, e;
  }(on)
);
Rb.prototype.dataToAngle = on.prototype.dataToCoord;
Rb.prototype.angleToData = on.prototype.coordToData;
var vO = ["radius", "angle"], tY = (
  /** @class */
  function() {
    function t(e) {
      this.dimensions = vO, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new Nb(), this._angleAxis = new Rb(), this.axisPointerEnabled = !0, this.name = e || "", this._radiusAxis.polar = this._angleAxis.polar = this;
    }
    return t.prototype.containPoint = function(e) {
      var r = this.pointToCoord(e);
      return this._radiusAxis.contain(r[0]) && this._angleAxis.contain(r[1]);
    }, t.prototype.containData = function(e) {
      return this._radiusAxis.containData(e[0]) && this._angleAxis.containData(e[1]);
    }, t.prototype.getAxis = function(e) {
      var r = "_" + e + "Axis";
      return this[r];
    }, t.prototype.getAxes = function() {
      return [this._radiusAxis, this._angleAxis];
    }, t.prototype.getAxesByScale = function(e) {
      var r = [], n = this._angleAxis, a = this._radiusAxis;
      return n.scale.type === e && r.push(n), a.scale.type === e && r.push(a), r;
    }, t.prototype.getAngleAxis = function() {
      return this._angleAxis;
    }, t.prototype.getRadiusAxis = function() {
      return this._radiusAxis;
    }, t.prototype.getOtherAxis = function(e) {
      var r = this._angleAxis;
      return e === r ? this._radiusAxis : r;
    }, t.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, t.prototype.getTooltipAxes = function(e) {
      var r = e != null && e !== "auto" ? this.getAxis(e) : this.getBaseAxis();
      return {
        baseAxes: [r],
        otherAxes: [this.getOtherAxis(r)]
      };
    }, t.prototype.dataToPoint = function(e, r) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(e[0], r), this._angleAxis.dataToAngle(e[1], r)]);
    }, t.prototype.pointToData = function(e, r) {
      var n = this.pointToCoord(e);
      return [this._radiusAxis.radiusToData(n[0], r), this._angleAxis.angleToData(n[1], r)];
    }, t.prototype.pointToCoord = function(e) {
      var r = e[0] - this.cx, n = e[1] - this.cy, a = this.getAngleAxis(), i = a.getExtent(), o = Math.min(i[0], i[1]), s = Math.max(i[0], i[1]);
      a.inverse ? o = s - 360 : s = o + 360;
      var l = Math.sqrt(r * r + n * n);
      r /= l, n /= l;
      for (var u = Math.atan2(-n, r) / Math.PI * 180, c = u < o ? 1 : -1; u < o || u > s; )
        u += c * 360;
      return [l, u];
    }, t.prototype.coordToPoint = function(e) {
      var r = e[0], n = e[1] / 180 * Math.PI, a = Math.cos(n) * r + this.cx, i = -Math.sin(n) * r + this.cy;
      return [a, i];
    }, t.prototype.getArea = function() {
      var e = this.getAngleAxis(), r = this.getRadiusAxis(), n = r.getExtent().slice();
      n[0] > n[1] && n.reverse();
      var a = e.getExtent(), i = Math.PI / 180, o = 1e-4;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: n[0],
        r: n[1],
        startAngle: -a[0] * i,
        endAngle: -a[1] * i,
        clockwise: e.inverse,
        contain: function(s, l) {
          var u = s - this.cx, c = l - this.cy, d = u * u + c * c, p = this.r, f = this.r0;
          return p !== f && d - o <= p * p && d + o >= f * f;
        }
      };
    }, t.prototype.convertToPixel = function(e, r, n) {
      var a = oC(r);
      return a === this ? this.dataToPoint(n) : null;
    }, t.prototype.convertFromPixel = function(e, r, n) {
      var a = oC(r);
      return a === this ? this.pointToData(n) : null;
    }, t;
  }()
);
function oC(t) {
  var e = t.seriesModel, r = t.polarModel;
  return r && r.coordinateSystem || e && e.coordinateSystem;
}
function rY(t, e, r) {
  var n = e.get("center"), a = r.getWidth(), i = r.getHeight();
  t.cx = q(n[0], a), t.cy = q(n[1], i);
  var o = t.getRadiusAxis(), s = Math.min(a, i) / 2, l = e.get("radius");
  l == null ? l = [0, "100%"] : V(l) || (l = [0, l]);
  var u = [q(l[0], s), q(l[1], s)];
  o.inverse ? o.setExtent(u[1], u[0]) : o.setExtent(u[0], u[1]);
}
function nY(t, e) {
  var r = this, n = r.getAngleAxis(), a = r.getRadiusAxis();
  if (n.scale.setExtent(1 / 0, -1 / 0), a.scale.setExtent(1 / 0, -1 / 0), t.eachSeries(function(s) {
    if (s.coordinateSystem === r) {
      var l = s.getData();
      w(Ep(l, "radius"), function(u) {
        a.scale.unionExtentFromData(l, u);
      }), w(Ep(l, "angle"), function(u) {
        n.scale.unionExtentFromData(l, u);
      });
    }
  }), bs(n.scale, n.model), bs(a.scale, a.model), n.type === "category" && !n.onBand) {
    var i = n.getExtent(), o = 360 / n.scale.count();
    n.inverse ? i[1] += o : i[1] -= o, n.setExtent(i[0], i[1]);
  }
}
function aY(t) {
  return t.mainType === "angleAxis";
}
function sC(t, e) {
  var r;
  if (t.type = e.get("type"), t.scale = Nf(e), t.onBand = e.get("boundaryGap") && t.type === "category", t.inverse = e.get("inverse"), aY(e)) {
    t.inverse = t.inverse !== e.get("clockwise");
    var n = e.get("startAngle"), a = (r = e.get("endAngle")) !== null && r !== void 0 ? r : n + (t.inverse ? -360 : 360);
    t.setExtent(n, a);
  }
  e.axis = t, t.model = e;
}
var iY = {
  dimensions: vO,
  create: function(t, e) {
    var r = [];
    return t.eachComponent("polar", function(n, a) {
      var i = new tY(a + "");
      i.update = nY;
      var o = i.getRadiusAxis(), s = i.getAngleAxis(), l = n.findAxisModel("radiusAxis"), u = n.findAxisModel("angleAxis");
      sC(o, l), sC(s, u), rY(i, n, e), r.push(i), n.coordinateSystem = i, i.model = n;
    }), t.eachSeries(function(n) {
      if (n.get("coordinateSystem") === "polar") {
        var a = n.getReferringComponents("polar", vt).models[0];
        n.coordinateSystem = a.coordinateSystem;
      }
    }), r;
  }
}, oY = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
function ld(t, e, r) {
  e[1] > e[0] && (e = e.slice().reverse());
  var n = t.coordToPoint([e[0], r]), a = t.coordToPoint([e[1], r]);
  return {
    x1: n[0],
    y1: n[1],
    x2: a[0],
    y2: a[1]
  };
}
function ud(t) {
  var e = t.getRadiusAxis();
  return e.inverse ? 0 : 1;
}
function lC(t) {
  var e = t[0], r = t[t.length - 1];
  e && r && Math.abs(Math.abs(e.coord - r.coord) - 360) < 1e-4 && t.pop();
}
var sY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.axisPointerClass = "PolarAxisPointer", r;
    }
    return e.prototype.render = function(r, n) {
      if (this.group.removeAll(), !!r.get("show")) {
        var a = r.axis, i = a.polar, o = i.getRadiusAxis().getExtent(), s = a.getTicksCoords(), l = a.getMinorTicksCoords(), u = $(a.getViewLabels(), function(c) {
          c = le(c);
          var d = a.scale, p = d.type === "ordinal" ? d.getRawOrdinalNumber(c.tickValue) : c.tickValue;
          return c.coord = a.dataToCoord(p), c;
        });
        lC(u), lC(s), w(oY, function(c) {
          r.get([c, "show"]) && (!a.scale.isBlank() || c === "axisLine") && lY[c](this.group, r, i, s, l, o, u);
        }, this);
      }
    }, e.type = "angleAxis", e;
  }(bo)
), lY = {
  axisLine: function(t, e, r, n, a, i) {
    var o = e.getModel(["axisLine", "lineStyle"]), s = r.getAngleAxis(), l = Math.PI / 180, u = s.getExtent(), c = ud(r), d = c ? 0 : 1, p, f = Math.abs(u[1] - u[0]) === 360 ? "Circle" : "Arc";
    i[d] === 0 ? p = new vo[f]({
      shape: {
        cx: r.cx,
        cy: r.cy,
        r: i[c],
        startAngle: -u[0] * l,
        endAngle: -u[1] * l,
        clockwise: s.inverse
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }) : p = new $u({
      shape: {
        cx: r.cx,
        cy: r.cy,
        r: i[c],
        r0: i[d]
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }), p.style.fill = null, t.add(p);
  },
  axisTick: function(t, e, r, n, a, i) {
    var o = e.getModel("axisTick"), s = (o.get("inside") ? -1 : 1) * o.get("length"), l = i[ud(r)], u = $(n, function(c) {
      return new Ct({
        shape: ld(r, [l, l + s], c.coord)
      });
    });
    t.add(Lr(u, {
      style: ie(o.getModel("lineStyle").getLineStyle(), {
        stroke: e.get(["axisLine", "lineStyle", "color"])
      })
    }));
  },
  minorTick: function(t, e, r, n, a, i) {
    if (a.length) {
      for (var o = e.getModel("axisTick"), s = e.getModel("minorTick"), l = (o.get("inside") ? -1 : 1) * s.get("length"), u = i[ud(r)], c = [], d = 0; d < a.length; d++)
        for (var p = 0; p < a[d].length; p++)
          c.push(new Ct({
            shape: ld(r, [u, u + l], a[d][p].coord)
          }));
      t.add(Lr(c, {
        style: ie(s.getModel("lineStyle").getLineStyle(), ie(o.getLineStyle(), {
          stroke: e.get(["axisLine", "lineStyle", "color"])
        }))
      }));
    }
  },
  axisLabel: function(t, e, r, n, a, i, o) {
    var s = e.getCategories(!0), l = e.getModel("axisLabel"), u = l.get("margin"), c = e.get("triggerEvent");
    w(o, function(d, p) {
      var f = l, h = d.tickValue, g = i[ud(r)], v = r.coordToPoint([g + u, d.coord]), m = r.cx, _ = r.cy, y = Math.abs(v[0] - m) / g < 0.3 ? "center" : v[0] > m ? "left" : "right", b = Math.abs(v[1] - _) / g < 0.3 ? "middle" : v[1] > _ ? "top" : "bottom";
      if (s && s[h]) {
        var S = s[h];
        se(S) && S.textStyle && (f = new He(S.textStyle, l, l.ecModel));
      }
      var E = new Pe({
        silent: nr.isLabelSilent(e),
        style: Je(f, {
          x: v[0],
          y: v[1],
          fill: f.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          text: d.formattedLabel,
          align: y,
          verticalAlign: b
        })
      });
      if (t.add(E), c) {
        var T = nr.makeAxisEventDataBase(e);
        T.targetType = "axisLabel", T.value = d.rawLabel, pe(E).eventData = T;
      }
    }, this);
  },
  splitLine: function(t, e, r, n, a, i) {
    var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
    l = l instanceof Array ? l : [l];
    for (var c = [], d = 0; d < n.length; d++) {
      var p = u++ % l.length;
      c[p] = c[p] || [], c[p].push(new Ct({
        shape: ld(r, i, n[d].coord)
      }));
    }
    for (var d = 0; d < c.length; d++)
      t.add(Lr(c[d], {
        style: ie({
          stroke: l[d % l.length]
        }, s.getLineStyle()),
        silent: !0,
        z: e.get("z")
      }));
  },
  minorSplitLine: function(t, e, r, n, a, i) {
    if (a.length) {
      for (var o = e.getModel("minorSplitLine"), s = o.getModel("lineStyle"), l = [], u = 0; u < a.length; u++)
        for (var c = 0; c < a[u].length; c++)
          l.push(new Ct({
            shape: ld(r, i, a[u][c].coord)
          }));
      t.add(Lr(l, {
        style: s.getLineStyle(),
        silent: !0,
        z: e.get("z")
      }));
    }
  },
  splitArea: function(t, e, r, n, a, i) {
    if (n.length) {
      var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], d = Math.PI / 180, p = -n[0].coord * d, f = Math.min(i[0], i[1]), h = Math.max(i[0], i[1]), g = e.get("clockwise"), v = 1, m = n.length; v <= m; v++) {
        var _ = v === m ? n[0].coord : n[v].coord, y = u++ % l.length;
        c[y] = c[y] || [], c[y].push(new or({
          shape: {
            cx: r.cx,
            cy: r.cy,
            r0: f,
            r: h,
            startAngle: p,
            endAngle: -_ * d,
            clockwise: g
          },
          silent: !0
        })), p = -_ * d;
      }
      for (var v = 0; v < c.length; v++)
        t.add(Lr(c[v], {
          style: ie({
            fill: l[v % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
}, uY = ["axisLine", "axisTickLabel", "axisName"], cY = ["splitLine", "splitArea", "minorSplitLine"], dY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.axisPointerClass = "PolarAxisPointer", r;
    }
    return e.prototype.render = function(r, n) {
      if (this.group.removeAll(), !!r.get("show")) {
        var a = this._axisGroup, i = this._axisGroup = new de();
        this.group.add(i);
        var o = r.axis, s = o.polar, l = s.getAngleAxis(), u = o.getTicksCoords(), c = o.getMinorTicksCoords(), d = l.getExtent()[0], p = o.getExtent(), f = fY(s, r, d), h = new nr(r, f);
        w(uY, h.add, h), i.add(h.getGroup()), qu(a, i, r), w(cY, function(g) {
          r.get([g, "show"]) && !o.scale.isBlank() && pY[g](this.group, r, s, d, p, u, c);
        }, this);
      }
    }, e.type = "radiusAxis", e;
  }(bo)
), pY = {
  splitLine: function(t, e, r, n, a, i) {
    var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0, c = r.getAngleAxis(), d = Math.PI / 180, p = c.getExtent(), f = Math.abs(p[1] - p[0]) === 360 ? "Circle" : "Arc";
    l = l instanceof Array ? l : [l];
    for (var h = [], g = 0; g < i.length; g++) {
      var v = u++ % l.length;
      h[v] = h[v] || [], h[v].push(new vo[f]({
        shape: {
          cx: r.cx,
          cy: r.cy,
          // ensure circle radius >= 0
          r: Math.max(i[g].coord, 0),
          startAngle: -p[0] * d,
          endAngle: -p[1] * d,
          clockwise: c.inverse
        }
      }));
    }
    for (var g = 0; g < h.length; g++)
      t.add(Lr(h[g], {
        style: ie({
          stroke: l[g % l.length],
          fill: null
        }, s.getLineStyle()),
        silent: !0
      }));
  },
  minorSplitLine: function(t, e, r, n, a, i, o) {
    if (o.length) {
      for (var s = e.getModel("minorSplitLine"), l = s.getModel("lineStyle"), u = [], c = 0; c < o.length; c++)
        for (var d = 0; d < o[c].length; d++)
          u.push(new ca({
            shape: {
              cx: r.cx,
              cy: r.cy,
              r: o[c][d].coord
            }
          }));
      t.add(Lr(u, {
        style: ie({
          fill: null
        }, l.getLineStyle()),
        silent: !0
      }));
    }
  },
  splitArea: function(t, e, r, n, a, i) {
    if (i.length) {
      var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], d = i[0].coord, p = 1; p < i.length; p++) {
        var f = u++ % l.length;
        c[f] = c[f] || [], c[f].push(new or({
          shape: {
            cx: r.cx,
            cy: r.cy,
            r0: d,
            r: i[p].coord,
            startAngle: 0,
            endAngle: Math.PI * 2
          },
          silent: !0
        })), d = i[p].coord;
      }
      for (var p = 0; p < c.length; p++)
        t.add(Lr(c[p], {
          style: ie({
            fill: l[p % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
function fY(t, e, r) {
  return {
    position: [t.cx, t.cy],
    rotation: r / 180 * Math.PI,
    labelDirection: -1,
    tickDirection: -1,
    nameDirection: 1,
    labelRotate: e.getModel("axisLabel").get("rotate"),
    // Over splitLine and splitArea
    z2: 1
  };
}
function mO(t) {
  return t.get("stack") || "__ec_stack_" + t.seriesIndex;
}
function _O(t, e) {
  return e.dim + t.model.componentIndex;
}
function hY(t, e, r) {
  var n = {}, a = gY(ze(e.getSeriesByType(t), function(i) {
    return !e.isSeriesFiltered(i) && i.coordinateSystem && i.coordinateSystem.type === "polar";
  }));
  e.eachSeriesByType(t, function(i) {
    if (i.coordinateSystem.type === "polar") {
      var o = i.getData(), s = i.coordinateSystem, l = s.getBaseAxis(), u = _O(s, l), c = mO(i), d = a[u][c], p = d.offset, f = d.width, h = s.getOtherAxis(l), g = i.coordinateSystem.cx, v = i.coordinateSystem.cy, m = i.get("barMinHeight") || 0, _ = i.get("barMinAngle") || 0;
      n[c] = n[c] || [];
      for (var y = o.mapDimension(h.dim), b = o.mapDimension(l.dim), S = Qa(
        o,
        y
        /* , baseDim */
      ), E = l.dim !== "radius" || !i.get("roundCap", !0), T = h.model, x = T.get("startValue"), C = h.dataToCoord(x || 0), A = 0, D = o.count(); A < D; A++) {
        var M = o.get(y, A), I = o.get(b, A), N = M >= 0 ? "p" : "n", R = C;
        S && (n[c][I] || (n[c][I] = {
          p: C,
          n: C
          // Negative stack
        }), R = n[c][I][N]);
        var O = void 0, B = void 0, L = void 0, F = void 0;
        if (h.dim === "radius") {
          var U = h.dataToCoord(M) - C, z = l.dataToCoord(I);
          Math.abs(U) < m && (U = (U < 0 ? -1 : 1) * m), O = R, B = R + U, L = z - p, F = L - f, S && (n[c][I][N] = B);
        } else {
          var H = h.dataToCoord(M, E) - C, Z = l.dataToCoord(I);
          Math.abs(H) < _ && (H = (H < 0 ? -1 : 1) * _), O = Z + p, B = O + f, L = R, F = R + H, S && (n[c][I][N] = F);
        }
        o.setItemLayout(A, {
          cx: g,
          cy: v,
          r0: O,
          r: B,
          // Consider that positive angle is anti-clockwise,
          // while positive radian of sector is clockwise
          startAngle: -L * Math.PI / 180,
          endAngle: -F * Math.PI / 180,
          /**
           * Keep the same logic with bar in catesion: use end value to
           * control direction. Notice that if clockwise is true (by
           * default), the sector will always draw clockwisely, no matter
           * whether endAngle is greater or less than startAngle.
           */
          clockwise: L >= F
        });
      }
    }
  });
}
function gY(t) {
  var e = {};
  w(t, function(n, a) {
    var i = n.getData(), o = n.coordinateSystem, s = o.getBaseAxis(), l = _O(o, s), u = s.getExtent(), c = s.type === "category" ? s.getBandWidth() : Math.abs(u[1] - u[0]) / i.count(), d = e[l] || {
      bandWidth: c,
      remainedWidth: c,
      autoWidthCount: 0,
      categoryGap: "20%",
      gap: "30%",
      stacks: {}
    }, p = d.stacks;
    e[l] = d;
    var f = mO(n);
    p[f] || d.autoWidthCount++, p[f] = p[f] || {
      width: 0,
      maxWidth: 0
    };
    var h = q(n.get("barWidth"), c), g = q(n.get("barMaxWidth"), c), v = n.get("barGap"), m = n.get("barCategoryGap");
    h && !p[f].width && (h = Math.min(d.remainedWidth, h), p[f].width = h, d.remainedWidth -= h), g && (p[f].maxWidth = g), v != null && (d.gap = v), m != null && (d.categoryGap = m);
  });
  var r = {};
  return w(e, function(n, a) {
    r[a] = {};
    var i = n.stacks, o = n.bandWidth, s = q(n.categoryGap, o), l = q(n.gap, 1), u = n.remainedWidth, c = n.autoWidthCount, d = (u - s) / (c + (c - 1) * l);
    d = Math.max(d, 0), w(i, function(g, v) {
      var m = g.maxWidth;
      m && m < d && (m = Math.min(m, u), g.width && (m = Math.min(m, g.width)), u -= m, g.width = m, c--);
    }), d = (u - s) / (c + (c - 1) * l), d = Math.max(d, 0);
    var p = 0, f;
    w(i, function(g, v) {
      g.width || (g.width = d), f = g, p += g.width * (1 + l);
    }), f && (p -= f.width * l);
    var h = -p / 2;
    w(i, function(g, v) {
      r[a][v] = r[a][v] || {
        offset: h,
        width: g.width
      }, h += g.width * (1 + l);
    });
  }), r;
}
var vY = {
  startAngle: 90,
  clockwise: !0,
  splitNumber: 12,
  axisLabel: {
    rotate: 0
  }
}, mY = {
  splitNumber: 5
}, _Y = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "polar", e;
  }(st)
);
function Fre(t) {
  kt(Gf), bo.registerAxisPointerClass("PolarAxisPointer", K7), t.registerCoordinateSystem("polar", iY), t.registerComponentModel(Q7), t.registerComponentView(_Y), Es(t, "angle", j7, vY), Es(t, "radius", J7, mY), t.registerComponentView(sY), t.registerComponentView(dY), t.registerLayout(_e(hY, "bar"));
}
function c_(t, e) {
  e = e || {};
  var r = t.coordinateSystem, n = t.axis, a = {}, i = n.position, o = n.orient, s = r.getRect(), l = [s.x, s.x + s.width, s.y, s.y + s.height], u = {
    horizontal: {
      top: l[2],
      bottom: l[3]
    },
    vertical: {
      left: l[0],
      right: l[1]
    }
  };
  a.position = [o === "vertical" ? u.vertical[i] : l[0], o === "horizontal" ? u.horizontal[i] : l[3]];
  var c = {
    horizontal: 0,
    vertical: 1
  };
  a.rotation = Math.PI / 2 * c[o];
  var d = {
    top: -1,
    bottom: 1,
    right: 1,
    left: -1
  };
  a.labelDirection = a.tickDirection = a.nameDirection = d[i], t.get(["axisTick", "inside"]) && (a.tickDirection = -a.tickDirection), Pt(e.labelInside, t.get(["axisLabel", "inside"])) && (a.labelDirection = -a.labelDirection);
  var p = e.rotate;
  return p == null && (p = t.get(["axisLabel", "rotate"])), a.labelRotation = i === "top" ? -p : p, a.z2 = 1, a;
}
var yY = ["axisLine", "axisTickLabel", "axisName"], bY = ["splitArea", "splitLine"], SY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.axisPointerClass = "SingleAxisPointer", r;
    }
    return e.prototype.render = function(r, n, a, i) {
      var o = this.group;
      o.removeAll();
      var s = this._axisGroup;
      this._axisGroup = new de();
      var l = c_(r), u = new nr(r, l);
      w(yY, u.add, u), o.add(this._axisGroup), o.add(u.getGroup()), w(bY, function(c) {
        r.get([c, "show"]) && EY[c](this, this.group, this._axisGroup, r);
      }, this), qu(s, this._axisGroup, r), t.prototype.render.call(this, r, n, a, i);
    }, e.prototype.remove = function() {
      VN(this);
    }, e.type = "singleAxis", e;
  }(bo)
), EY = {
  splitLine: function(t, e, r, n) {
    var a = n.axis;
    if (!a.scale.isBlank()) {
      var i = n.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
      s = s instanceof Array ? s : [s];
      for (var l = o.get("width"), u = n.coordinateSystem.getRect(), c = a.isHorizontal(), d = [], p = 0, f = a.getTicksCoords({
        tickModel: i
      }), h = [], g = [], v = 0; v < f.length; ++v) {
        var m = a.toGlobalCoord(f[v].coord);
        c ? (h[0] = m, h[1] = u.y, g[0] = m, g[1] = u.y + u.height) : (h[0] = u.x, h[1] = m, g[0] = u.x + u.width, g[1] = m);
        var _ = new Ct({
          shape: {
            x1: h[0],
            y1: h[1],
            x2: g[0],
            y2: g[1]
          },
          silent: !0
        });
        ms(_.shape, l);
        var y = p++ % s.length;
        d[y] = d[y] || [], d[y].push(_);
      }
      for (var b = o.getLineStyle(["color"]), v = 0; v < d.length; ++v)
        e.add(Lr(d[v], {
          style: ie({
            stroke: s[v % s.length]
          }, b),
          silent: !0
        }));
    }
  },
  splitArea: function(t, e, r, n) {
    zN(t, r, n, n);
  }
}, $d = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.getCoordSysModel = function() {
      return this;
    }, e.type = "singleAxis", e.layoutMode = "box", e.defaultOption = {
      left: "5%",
      top: "5%",
      right: "5%",
      bottom: "5%",
      type: "value",
      position: "bottom",
      orient: "horizontal",
      axisLine: {
        show: !0,
        lineStyle: {
          width: 1,
          type: "solid"
        }
      },
      // Single coordinate system and single axis is the,
      // which is used as the parent tooltip model.
      // same model, so we set default tooltip show as true.
      tooltip: {
        show: !0
      },
      axisTick: {
        show: !0,
        length: 6,
        lineStyle: {
          width: 1
        }
      },
      axisLabel: {
        show: !0,
        interval: "auto"
      },
      splitLine: {
        show: !0,
        lineStyle: {
          type: "dashed",
          opacity: 0.2
        }
      }
    }, e;
  }(De)
);
_t($d, Qu.prototype);
var TY = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i, o) {
      var s = t.call(this, r, n, a) || this;
      return s.type = i || "value", s.position = o || "bottom", s;
    }
    return e.prototype.isHorizontal = function() {
      var r = this.position;
      return r === "top" || r === "bottom";
    }, e.prototype.pointToData = function(r, n) {
      return this.coordinateSystem.pointToData(r)[0];
    }, e;
  }(on)
), yO = ["single"], xY = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.type = "single", this.dimension = "single", this.dimensions = yO, this.axisPointerEnabled = !0, this.model = e, this._init(e, r, n);
    }
    return t.prototype._init = function(e, r, n) {
      var a = this.dimension, i = new TY(a, Nf(e), [0, 0], e.get("type"), e.get("position")), o = i.type === "category";
      i.onBand = o && e.get("boundaryGap"), i.inverse = e.get("inverse"), i.orient = e.get("orient"), e.axis = i, i.model = e, i.coordinateSystem = this, this._axis = i;
    }, t.prototype.update = function(e, r) {
      e.eachSeries(function(n) {
        if (n.coordinateSystem === this) {
          var a = n.getData();
          w(a.mapDimensionsAll(this.dimension), function(i) {
            this._axis.scale.unionExtentFromData(a, i);
          }, this), bs(this._axis.scale, this._axis.model);
        }
      }, this);
    }, t.prototype.resize = function(e, r) {
      this._rect = Et({
        left: e.get("left"),
        top: e.get("top"),
        right: e.get("right"),
        bottom: e.get("bottom"),
        width: e.get("width"),
        height: e.get("height")
      }, {
        width: r.getWidth(),
        height: r.getHeight()
      }), this._adjustAxis();
    }, t.prototype.getRect = function() {
      return this._rect;
    }, t.prototype._adjustAxis = function() {
      var e = this._rect, r = this._axis, n = r.isHorizontal(), a = n ? [0, e.width] : [0, e.height], i = r.inverse ? 1 : 0;
      r.setExtent(a[i], a[1 - i]), this._updateAxisTransform(r, n ? e.x : e.y);
    }, t.prototype._updateAxisTransform = function(e, r) {
      var n = e.getExtent(), a = n[0] + n[1], i = e.isHorizontal();
      e.toGlobalCoord = i ? function(o) {
        return o + r;
      } : function(o) {
        return a - o + r;
      }, e.toLocalCoord = i ? function(o) {
        return o - r;
      } : function(o) {
        return a - o + r;
      };
    }, t.prototype.getAxis = function() {
      return this._axis;
    }, t.prototype.getBaseAxis = function() {
      return this._axis;
    }, t.prototype.getAxes = function() {
      return [this._axis];
    }, t.prototype.getTooltipAxes = function() {
      return {
        baseAxes: [this.getAxis()],
        // Empty otherAxes
        otherAxes: []
      };
    }, t.prototype.containPoint = function(e) {
      var r = this.getRect(), n = this.getAxis(), a = n.orient;
      return a === "horizontal" ? n.contain(n.toLocalCoord(e[0])) && e[1] >= r.y && e[1] <= r.y + r.height : n.contain(n.toLocalCoord(e[1])) && e[0] >= r.y && e[0] <= r.y + r.height;
    }, t.prototype.pointToData = function(e) {
      var r = this.getAxis();
      return [r.coordToData(r.toLocalCoord(e[r.orient === "horizontal" ? 0 : 1]))];
    }, t.prototype.dataToPoint = function(e) {
      var r = this.getAxis(), n = this.getRect(), a = [], i = r.orient === "horizontal" ? 0 : 1;
      return e instanceof Array && (e = e[0]), a[i] = r.toGlobalCoord(r.dataToCoord(+e)), a[1 - i] = i === 0 ? n.y + n.height / 2 : n.x + n.width / 2, a;
    }, t.prototype.convertToPixel = function(e, r, n) {
      var a = uC(r);
      return a === this ? this.dataToPoint(n) : null;
    }, t.prototype.convertFromPixel = function(e, r, n) {
      var a = uC(r);
      return a === this ? this.pointToData(n) : null;
    }, t;
  }()
);
function uC(t) {
  var e = t.seriesModel, r = t.singleAxisModel;
  return r && r.coordinateSystem || e && e.coordinateSystem;
}
function CY(t, e) {
  var r = [];
  return t.eachComponent("singleAxis", function(n, a) {
    var i = new xY(n, t, e);
    i.name = "single_" + a, i.resize(n, e), n.coordinateSystem = i, r.push(i);
  }), t.eachSeries(function(n) {
    if (n.get("coordinateSystem") === "singleAxis") {
      var a = n.getReferringComponents("singleAxis", vt).models[0];
      n.coordinateSystem = a && a.coordinateSystem;
    }
  }), r;
}
var AY = {
  create: CY,
  dimensions: yO
}, cC = ["x", "y"], wY = ["width", "height"], DY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(r, n, a, i, o) {
      var s = a.axis, l = s.coordinateSystem, u = dv(l, 1 - kp(s)), c = l.dataToPoint(n)[0], d = i.get("type");
      if (d && d !== "none") {
        var p = wb(i), f = MY[d](s, c, u);
        f.style = p, r.graphicKey = f.type, r.pointer = f;
      }
      var h = c_(a);
      pO(
        // @ts-ignore
        n,
        r,
        h,
        a,
        i,
        o
      );
    }, e.prototype.getHandleTransform = function(r, n, a) {
      var i = c_(n, {
        labelInside: !1
      });
      i.labelMargin = a.get(["handle", "margin"]);
      var o = Db(n.axis, r, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(r, n, a, i) {
      var o = a.axis, s = o.coordinateSystem, l = kp(o), u = dv(s, l), c = [r.x, r.y];
      c[l] += n[l], c[l] = Math.min(u[1], c[l]), c[l] = Math.max(u[0], c[l]);
      var d = dv(s, 1 - l), p = (d[1] + d[0]) / 2, f = [p, p];
      return f[l] = c[l], {
        x: c[0],
        y: c[1],
        rotation: r.rotation,
        cursorPoint: f,
        tooltipOption: {
          verticalAlign: "middle"
        }
      };
    }, e;
  }(Ab)
), MY = {
  line: function(t, e, r) {
    var n = Mb([e, r[0]], [e, r[1]], kp(t));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: n
    };
  },
  shadow: function(t, e, r) {
    var n = t.getBandWidth(), a = r[1] - r[0];
    return {
      type: "Rect",
      shape: fO([e - n / 2, r[0]], [n, a], kp(t))
    };
  }
};
function kp(t) {
  return t.isHorizontal() ? 0 : 1;
}
function dv(t, e) {
  var r = t.getRect();
  return [r[cC[e]], r[cC[e]] + r[wY[e]]];
}
var IY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "single", e;
  }(st)
);
function Gre(t) {
  kt(Gf), bo.registerAxisPointerClass("SingleAxisPointer", DY), t.registerComponentView(IY), t.registerComponentView(SY), t.registerComponentModel($d), Es(t, "single", $d, $d.defaultOption), t.registerCoordinateSystem("single", AY);
}
var NY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n, a) {
      var i = ks(r);
      t.prototype.init.apply(this, arguments), dC(r, i);
    }, e.prototype.mergeOption = function(r) {
      t.prototype.mergeOption.apply(this, arguments), dC(this.option, r);
    }, e.prototype.getCellSize = function() {
      return this.option.cellSize;
    }, e.type = "calendar", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      left: 80,
      top: 60,
      cellSize: 20,
      // horizontal vertical
      orient: "horizontal",
      // month separate line style
      splitLine: {
        show: !0,
        lineStyle: {
          color: "#000",
          width: 1,
          type: "solid"
        }
      },
      // rect style  temporarily unused emphasis
      itemStyle: {
        color: "#fff",
        borderWidth: 1,
        borderColor: "#ccc"
      },
      // week text style
      dayLabel: {
        show: !0,
        firstDay: 0,
        // start end
        position: "start",
        margin: "50%",
        color: "#000"
      },
      // month text style
      monthLabel: {
        show: !0,
        // start end
        position: "start",
        margin: 5,
        // center or left
        align: "center",
        formatter: null,
        color: "#000"
      },
      // year text style
      yearLabel: {
        show: !0,
        // top bottom left right
        position: null,
        margin: 30,
        formatter: null,
        color: "#ccc",
        fontFamily: "sans-serif",
        fontWeight: "bolder",
        fontSize: 20
      }
    }, e;
  }(De)
);
function dC(t, e) {
  var r = t.cellSize, n;
  V(r) ? n = r : n = t.cellSize = [r, r], n.length === 1 && (n[1] = n[0]);
  var a = $([0, 1], function(i) {
    return xU(e, i) && (n[i] = "auto"), n[i] != null && n[i] !== "auto";
  });
  Xa(t, e, {
    type: "box",
    ignoreSize: a
  });
}
var RY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      var i = this.group;
      i.removeAll();
      var o = r.coordinateSystem, s = o.getRangeInfo(), l = o.getOrient(), u = n.getLocaleModel();
      this._renderDayRect(r, s, i), this._renderLines(r, s, l, i), this._renderYearText(r, s, l, i), this._renderMonthText(r, u, l, i), this._renderWeekText(r, u, s, l, i);
    }, e.prototype._renderDayRect = function(r, n, a) {
      for (var i = r.coordinateSystem, o = r.getModel("itemStyle").getItemStyle(), s = i.getCellWidth(), l = i.getCellHeight(), u = n.start.time; u <= n.end.time; u = i.getNextNDay(u, 1).time) {
        var c = i.dataToRect([u], !1).tl, d = new Re({
          shape: {
            x: c[0],
            y: c[1],
            width: s,
            height: l
          },
          cursor: "default",
          style: o
        });
        a.add(d);
      }
    }, e.prototype._renderLines = function(r, n, a, i) {
      var o = this, s = r.coordinateSystem, l = r.getModel(["splitLine", "lineStyle"]).getLineStyle(), u = r.get(["splitLine", "show"]), c = l.lineWidth;
      this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
      for (var d = n.start, p = 0; d.time <= n.end.time; p++) {
        h(d.formatedDate), p === 0 && (d = s.getDateInfo(n.start.y + "-" + n.start.m));
        var f = d.date;
        f.setMonth(f.getMonth() + 1), d = s.getDateInfo(f);
      }
      h(s.getNextNDay(n.end.time, 1).formatedDate);
      function h(g) {
        o._firstDayOfMonth.push(s.getDateInfo(g)), o._firstDayPoints.push(s.dataToRect([g], !1).tl);
        var v = o._getLinePointsOfOneWeek(r, g, a);
        o._tlpoints.push(v[0]), o._blpoints.push(v[v.length - 1]), u && o._drawSplitline(v, l, i);
      }
      u && this._drawSplitline(o._getEdgesPoints(o._tlpoints, c, a), l, i), u && this._drawSplitline(o._getEdgesPoints(o._blpoints, c, a), l, i);
    }, e.prototype._getEdgesPoints = function(r, n, a) {
      var i = [r[0].slice(), r[r.length - 1].slice()], o = a === "horizontal" ? 0 : 1;
      return i[0][o] = i[0][o] - n / 2, i[1][o] = i[1][o] + n / 2, i;
    }, e.prototype._drawSplitline = function(r, n, a) {
      var i = new lr({
        z2: 20,
        shape: {
          points: r
        },
        style: n
      });
      a.add(i);
    }, e.prototype._getLinePointsOfOneWeek = function(r, n, a) {
      for (var i = r.coordinateSystem, o = i.getDateInfo(n), s = [], l = 0; l < 7; l++) {
        var u = i.getNextNDay(o.time, l), c = i.dataToRect([u.time], !1);
        s[2 * u.day] = c.tl, s[2 * u.day + 1] = c[a === "horizontal" ? "bl" : "tr"];
      }
      return s;
    }, e.prototype._formatterLabel = function(r, n) {
      return Y(r) && r ? SU(r, n) : ae(r) ? r(n) : n.nameMap;
    }, e.prototype._yearTextPositionControl = function(r, n, a, i, o) {
      var s = n[0], l = n[1], u = ["center", "bottom"];
      i === "bottom" ? (l += o, u = ["center", "top"]) : i === "left" ? s -= o : i === "right" ? (s += o, u = ["center", "top"]) : l -= o;
      var c = 0;
      return (i === "left" || i === "right") && (c = Math.PI / 2), {
        rotation: c,
        x: s,
        y: l,
        style: {
          align: u[0],
          verticalAlign: u[1]
        }
      };
    }, e.prototype._renderYearText = function(r, n, a, i) {
      var o = r.getModel("yearLabel");
      if (o.get("show")) {
        var s = o.get("margin"), l = o.get("position");
        l || (l = a !== "horizontal" ? "top" : "left");
        var u = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], c = (u[0][0] + u[1][0]) / 2, d = (u[0][1] + u[1][1]) / 2, p = a === "horizontal" ? 0 : 1, f = {
          top: [c, u[p][1]],
          bottom: [c, u[1 - p][1]],
          left: [u[1 - p][0], d],
          right: [u[p][0], d]
        }, h = n.start.y;
        +n.end.y > +n.start.y && (h = h + "-" + n.end.y);
        var g = o.get("formatter"), v = {
          start: n.start.y,
          end: n.end.y,
          nameMap: h
        }, m = this._formatterLabel(g, v), _ = new Pe({
          z2: 30,
          style: Je(o, {
            text: m
          }),
          silent: o.get("silent")
        });
        _.attr(this._yearTextPositionControl(_, f[l], a, l, s)), i.add(_);
      }
    }, e.prototype._monthTextPositionControl = function(r, n, a, i, o) {
      var s = "left", l = "top", u = r[0], c = r[1];
      return a === "horizontal" ? (c = c + o, n && (s = "center"), i === "start" && (l = "bottom")) : (u = u + o, n && (l = "middle"), i === "start" && (s = "right")), {
        x: u,
        y: c,
        align: s,
        verticalAlign: l
      };
    }, e.prototype._renderMonthText = function(r, n, a, i) {
      var o = r.getModel("monthLabel");
      if (o.get("show")) {
        var s = o.get("nameMap"), l = o.get("margin"), u = o.get("position"), c = o.get("align"), d = [this._tlpoints, this._blpoints];
        (!s || Y(s)) && (s && (n = _m(s) || n), s = n.get(["time", "monthAbbr"]) || []);
        var p = u === "start" ? 0 : 1, f = a === "horizontal" ? 0 : 1;
        l = u === "start" ? -l : l;
        for (var h = c === "center", g = o.get("silent"), v = 0; v < d[p].length - 1; v++) {
          var m = d[p][v].slice(), _ = this._firstDayOfMonth[v];
          if (h) {
            var y = this._firstDayPoints[v];
            m[f] = (y[f] + d[0][v + 1][f]) / 2;
          }
          var b = o.get("formatter"), S = s[+_.m - 1], E = {
            yyyy: _.y,
            yy: (_.y + "").slice(2),
            MM: _.m,
            M: +_.m,
            nameMap: S
          }, T = this._formatterLabel(b, E), x = new Pe({
            z2: 30,
            style: G(Je(o, {
              text: T
            }), this._monthTextPositionControl(m, h, a, u, l)),
            silent: g
          });
          i.add(x);
        }
      }
    }, e.prototype._weekTextPositionControl = function(r, n, a, i, o) {
      var s = "center", l = "middle", u = r[0], c = r[1], d = a === "start";
      return n === "horizontal" ? (u = u + i + (d ? 1 : -1) * o[0] / 2, s = d ? "right" : "left") : (c = c + i + (d ? 1 : -1) * o[1] / 2, l = d ? "bottom" : "top"), {
        x: u,
        y: c,
        align: s,
        verticalAlign: l
      };
    }, e.prototype._renderWeekText = function(r, n, a, i, o) {
      var s = r.getModel("dayLabel");
      if (s.get("show")) {
        var l = r.coordinateSystem, u = s.get("position"), c = s.get("nameMap"), d = s.get("margin"), p = l.getFirstDayOfWeek();
        if (!c || Y(c)) {
          c && (n = _m(c) || n);
          var f = n.get(["time", "dayOfWeekShort"]);
          c = f || $(n.get(["time", "dayOfWeekAbbr"]), function(E) {
            return E[0];
          });
        }
        var h = l.getNextNDay(a.end.time, 7 - a.lweek).time, g = [l.getCellWidth(), l.getCellHeight()];
        d = q(d, Math.min(g[1], g[0])), u === "start" && (h = l.getNextNDay(a.start.time, -(7 + a.fweek)).time, d = -d);
        for (var v = s.get("silent"), m = 0; m < 7; m++) {
          var _ = l.getNextNDay(h, m), y = l.dataToRect([_.time], !1).center, b = m;
          b = Math.abs((m + p) % 7);
          var S = new Pe({
            z2: 30,
            style: G(Je(s, {
              text: c[b]
            }), this._weekTextPositionControl(y, i, u, d, g)),
            silent: v
          });
          o.add(S);
        }
      }
    }, e.type = "calendar", e;
  }(st)
), pv = 864e5, OY = (
  /** @class */
  function() {
    function t(e, r, n) {
      this.type = "calendar", this.dimensions = t.dimensions, this.getDimensionsInfo = t.getDimensionsInfo, this._model = e;
    }
    return t.getDimensionsInfo = function() {
      return [{
        name: "time",
        type: "time"
      }, "value"];
    }, t.prototype.getRangeInfo = function() {
      return this._rangeInfo;
    }, t.prototype.getModel = function() {
      return this._model;
    }, t.prototype.getRect = function() {
      return this._rect;
    }, t.prototype.getCellWidth = function() {
      return this._sw;
    }, t.prototype.getCellHeight = function() {
      return this._sh;
    }, t.prototype.getOrient = function() {
      return this._orient;
    }, t.prototype.getFirstDayOfWeek = function() {
      return this._firstDayOfWeek;
    }, t.prototype.getDateInfo = function(e) {
      e = Ln(e);
      var r = e.getFullYear(), n = e.getMonth() + 1, a = n < 10 ? "0" + n : "" + n, i = e.getDate(), o = i < 10 ? "0" + i : "" + i, s = e.getDay();
      return s = Math.abs((s + 7 - this.getFirstDayOfWeek()) % 7), {
        y: r + "",
        m: a,
        d: o,
        day: s,
        time: e.getTime(),
        formatedDate: r + "-" + a + "-" + o,
        date: e
      };
    }, t.prototype.getNextNDay = function(e, r) {
      return r = r || 0, r === 0 ? this.getDateInfo(e) : (e = new Date(this.getDateInfo(e).time), e.setDate(e.getDate() + r), this.getDateInfo(e));
    }, t.prototype.update = function(e, r) {
      this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
      var n = this._rangeInfo.weeks || 1, a = ["width", "height"], i = this._model.getCellSize().slice(), o = this._model.getBoxLayoutParams(), s = this._orient === "horizontal" ? [n, 7] : [7, n];
      w([0, 1], function(d) {
        c(i, d) && (o[a[d]] = i[d] * s[d]);
      });
      var l = {
        width: r.getWidth(),
        height: r.getHeight()
      }, u = this._rect = Et(o, l);
      w([0, 1], function(d) {
        c(i, d) || (i[d] = u[a[d]] / s[d]);
      });
      function c(d, p) {
        return d[p] != null && d[p] !== "auto";
      }
      this._sw = i[0], this._sh = i[1];
    }, t.prototype.dataToPoint = function(e, r) {
      V(e) && (e = e[0]), r == null && (r = !0);
      var n = this.getDateInfo(e), a = this._rangeInfo, i = n.formatedDate;
      if (r && !(n.time >= a.start.time && n.time < a.end.time + pv))
        return [NaN, NaN];
      var o = n.day, s = this._getRangeInfo([a.start.time, i]).nthWeek;
      return this._orient === "vertical" ? [this._rect.x + o * this._sw + this._sw / 2, this._rect.y + s * this._sh + this._sh / 2] : [this._rect.x + s * this._sw + this._sw / 2, this._rect.y + o * this._sh + this._sh / 2];
    }, t.prototype.pointToData = function(e) {
      var r = this.pointToDate(e);
      return r && r.time;
    }, t.prototype.dataToRect = function(e, r) {
      var n = this.dataToPoint(e, r);
      return {
        contentShape: {
          x: n[0] - (this._sw - this._lineWidth) / 2,
          y: n[1] - (this._sh - this._lineWidth) / 2,
          width: this._sw - this._lineWidth,
          height: this._sh - this._lineWidth
        },
        center: n,
        tl: [n[0] - this._sw / 2, n[1] - this._sh / 2],
        tr: [n[0] + this._sw / 2, n[1] - this._sh / 2],
        br: [n[0] + this._sw / 2, n[1] + this._sh / 2],
        bl: [n[0] - this._sw / 2, n[1] + this._sh / 2]
      };
    }, t.prototype.pointToDate = function(e) {
      var r = Math.floor((e[0] - this._rect.x) / this._sw) + 1, n = Math.floor((e[1] - this._rect.y) / this._sh) + 1, a = this._rangeInfo.range;
      return this._orient === "vertical" ? this._getDateByWeeksAndDay(n, r - 1, a) : this._getDateByWeeksAndDay(r, n - 1, a);
    }, t.prototype.convertToPixel = function(e, r, n) {
      var a = pC(r);
      return a === this ? a.dataToPoint(n) : null;
    }, t.prototype.convertFromPixel = function(e, r, n) {
      var a = pC(r);
      return a === this ? a.pointToData(n) : null;
    }, t.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, t.prototype._initRangeOption = function() {
      var e = this._model.get("range"), r;
      if (V(e) && e.length === 1 && (e = e[0]), V(e))
        r = e;
      else {
        var n = e.toString();
        if (/^\d{4}$/.test(n) && (r = [n + "-01-01", n + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(n)) {
          var a = this.getDateInfo(n), i = a.date;
          i.setMonth(i.getMonth() + 1);
          var o = this.getNextNDay(i, -1);
          r = [a.formatedDate, o.formatedDate];
        }
        /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(n) && (r = [n, n]);
      }
      if (!r)
        return e;
      var s = this._getRangeInfo(r);
      return s.start.time > s.end.time && r.reverse(), r;
    }, t.prototype._getRangeInfo = function(e) {
      var r = [this.getDateInfo(e[0]), this.getDateInfo(e[1])], n;
      r[0].time > r[1].time && (n = !0, r.reverse());
      var a = Math.floor(r[1].time / pv) - Math.floor(r[0].time / pv) + 1, i = new Date(r[0].time), o = i.getDate(), s = r[1].date.getDate();
      i.setDate(o + a - 1);
      var l = i.getDate();
      if (l !== s)
        for (var u = i.getTime() - r[1].time > 0 ? 1 : -1; (l = i.getDate()) !== s && (i.getTime() - r[1].time) * u > 0; )
          a -= u, i.setDate(l - u);
      var c = Math.floor((a + r[0].day + 6) / 7), d = n ? -c + 1 : c - 1;
      return n && r.reverse(), {
        range: [r[0].formatedDate, r[1].formatedDate],
        start: r[0],
        end: r[1],
        allDay: a,
        weeks: c,
        // From 0.
        nthWeek: d,
        fweek: r[0].day,
        lweek: r[1].day
      };
    }, t.prototype._getDateByWeeksAndDay = function(e, r, n) {
      var a = this._getRangeInfo(n);
      if (e > a.weeks || e === 0 && r < a.fweek || e === a.weeks && r > a.lweek)
        return null;
      var i = (e - 1) * 7 - a.fweek + r, o = new Date(a.start.time);
      return o.setDate(+a.start.d + i), this.getDateInfo(o);
    }, t.create = function(e, r) {
      var n = [];
      return e.eachComponent("calendar", function(a) {
        var i = new t(a);
        n.push(i), a.coordinateSystem = i;
      }), e.eachSeries(function(a) {
        a.get("coordinateSystem") === "calendar" && (a.coordinateSystem = n[a.get("calendarIndex") || 0]);
      }), n;
    }, t.dimensions = ["time", "value"], t;
  }()
);
function pC(t) {
  var e = t.calendarModel, r = t.seriesModel, n = e ? e.coordinateSystem : r ? r.coordinateSystem : null;
  return n;
}
function Ure(t) {
  t.registerComponentModel(NY), t.registerComponentView(RY), t.registerCoordinateSystem("calendar", OY);
}
function LY(t, e) {
  var r = t.existing;
  if (e.id = t.keyInfo.id, !e.type && r && (e.type = r.type), e.parentId == null) {
    var n = e.parentOption;
    n ? e.parentId = n.id : r && (e.parentId = r.parentId);
  }
  e.parentOption = null;
}
function fC(t, e) {
  var r;
  return w(e, function(n) {
    t[n] != null && t[n] !== "auto" && (r = !0);
  }), r;
}
function PY(t, e, r) {
  var n = G({}, r), a = t[e], i = r.$action || "merge";
  i === "merge" ? a ? (be(a, n, !0), Xa(a, n, {
    ignoreSize: !0
  }), fM(r, a), cd(r, a), cd(r, a, "shape"), cd(r, a, "style"), cd(r, a, "extra"), r.clipPath = a.clipPath) : t[e] = n : i === "replace" ? t[e] = n : i === "remove" && a && (t[e] = null);
}
var bO = ["transition", "enterFrom", "leaveTo"], kY = bO.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
function cd(t, e, r) {
  if (r && (!t[r] && e[r] && (t[r] = {}), t = t[r], e = e[r]), !(!t || !e))
    for (var n = r ? bO : kY, a = 0; a < n.length; a++) {
      var i = n[a];
      t[i] == null && e[i] != null && (t[i] = e[i]);
    }
}
function BY(t, e) {
  if (t && (t.hv = e.hv = [
    // Rigid body, don't care about `width`.
    fC(e, ["left", "right"]),
    // Rigid body, don't care about `height`.
    fC(e, ["top", "bottom"])
  ], t.type === "group")) {
    var r = t, n = e;
    r.width == null && (r.width = n.width = 0), r.height == null && (r.height = n.height = 0);
  }
}
var FY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.preventAutoZ = !0, r;
    }
    return e.prototype.mergeOption = function(r, n) {
      var a = this.option.elements;
      this.option.elements = null, t.prototype.mergeOption.call(this, r, n), this.option.elements = a;
    }, e.prototype.optionUpdated = function(r, n) {
      var a = this.option, i = (n ? a : r).elements, o = a.elements = n ? [] : a.elements, s = [];
      this._flatten(i, s, null);
      var l = uD(o, s, "normalMerge"), u = this._elOptionsToUpdate = [];
      w(l, function(c, d) {
        var p = c.newOption;
        p && (u.push(p), LY(c, p), PY(o, d, p), BY(o[d], p));
      }, this), a.elements = ze(o, function(c) {
        return c && delete c.$action, c != null;
      });
    }, e.prototype._flatten = function(r, n, a) {
      w(r, function(i) {
        if (i) {
          a && (i.parentOption = a), n.push(i);
          var o = i.children;
          o && o.length && this._flatten(o, n, i), delete i.children;
        }
      }, this);
    }, e.prototype.useElOptionsToUpdate = function() {
      var r = this._elOptionsToUpdate;
      return this._elOptionsToUpdate = null, r;
    }, e.type = "graphic", e.defaultOption = {
      elements: []
      // parentId: null
    }, e;
  }(De)
), hC = {
  // Reserved but not supported in graphic component.
  path: null,
  compoundPath: null,
  // Supported in graphic component.
  group: de,
  image: Bt,
  text: Pe
}, Nr = Oe(), GY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function() {
      this._elMap = J();
    }, e.prototype.render = function(r, n, a) {
      r !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = r, this._updateElements(r), this._relocate(r, a);
    }, e.prototype._updateElements = function(r) {
      var n = r.useElOptionsToUpdate();
      if (n) {
        var a = this._elMap, i = this.group, o = r.get("z"), s = r.get("zlevel");
        w(n, function(l) {
          var u = St(l.id, null), c = u != null ? a.get(u) : null, d = St(l.parentId, null), p = d != null ? a.get(d) : i, f = l.type, h = l.style;
          f === "text" && h && l.hv && l.hv[1] && (h.textVerticalAlign = h.textBaseline = h.verticalAlign = h.align = null);
          var g = l.textContent, v = l.textConfig;
          if (h && eO(h, f, !!v, !!g)) {
            var m = tO(h, f, !0);
            !v && m.textConfig && (v = l.textConfig = m.textConfig), !g && m.textContent && (g = m.textContent);
          }
          var _ = UY(l), y = l.$action || "merge", b = y === "merge", S = y === "replace";
          if (b) {
            var E = !c, T = c;
            E ? T = gC(u, p, l.type, a) : (T && (Nr(T).isNew = !1), iO(T)), T && (zd(T, _, r, {
              isInit: E
            }), vC(T, l, o, s));
          } else if (S) {
            Hd(c, l, a, r);
            var x = gC(u, p, l.type, a);
            x && (zd(x, _, r, {
              isInit: !0
            }), vC(x, l, o, s));
          } else y === "remove" && (nO(c, l), Hd(c, l, a, r));
          var C = a.get(u);
          if (C && g)
            if (b) {
              var A = C.getTextContent();
              A ? A.attr(g) : C.setTextContent(new Pe(g));
            } else S && C.setTextContent(new Pe(g));
          if (C) {
            var D = l.clipPath;
            if (D) {
              var M = D.type, I = void 0, E = !1;
              if (b) {
                var N = C.getClipPath();
                E = !N || Nr(N).type !== M, I = E ? d_(M) : N;
              } else S && (E = !0, I = d_(M));
              C.setClipPath(I), zd(I, D, r, {
                isInit: E
              }), Lp(I, D.keyframeAnimation, r);
            }
            var R = Nr(C);
            C.setTextConfig(v), R.option = l, zY(C, r, l), go({
              el: C,
              componentModel: r,
              itemName: C.name,
              itemTooltipOption: l.tooltip
            }), Lp(C, l.keyframeAnimation, r);
          }
        });
      }
    }, e.prototype._relocate = function(r, n) {
      for (var a = r.option.elements, i = this.group, o = this._elMap, s = n.getWidth(), l = n.getHeight(), u = ["x", "y"], c = 0; c < a.length; c++) {
        var d = a[c], p = St(d.id, null), f = p != null ? o.get(p) : null;
        if (!(!f || !f.isGroup)) {
          var h = f.parent, g = h === i, v = Nr(f), m = Nr(h);
          v.width = q(v.option.width, g ? s : m.width) || 0, v.height = q(v.option.height, g ? l : m.height) || 0;
        }
      }
      for (var c = a.length - 1; c >= 0; c--) {
        var d = a[c], p = St(d.id, null), f = p != null ? o.get(p) : null;
        if (f) {
          var h = f.parent, m = Nr(h), _ = h === i ? {
            width: s,
            height: l
          } : {
            width: m.width,
            height: m.height
          }, y = {}, b = Ef(f, d, _, null, {
            hv: d.hv,
            boundingMode: d.bounding
          }, y);
          if (!Nr(f).isNew && b) {
            for (var S = d.transition, E = {}, T = 0; T < u.length; T++) {
              var x = u[T], C = y[x];
              S && (no(S) || xe(S, x) >= 0) ? E[x] = C : f[x] = C;
            }
            Fe(f, E, r, 0);
          } else
            f.attr(y);
        }
      }
    }, e.prototype._clear = function() {
      var r = this, n = this._elMap;
      n.each(function(a) {
        Hd(a, Nr(a).option, n, r._lastGraphicModel);
      }), this._elMap = J();
    }, e.prototype.dispose = function() {
      this._clear();
    }, e.type = "graphic", e;
  }(st)
);
function d_(t) {
  var e = Q(hC, t) ? hC[t] : cy(t), r = new e({});
  return Nr(r).type = t, r;
}
function gC(t, e, r, n) {
  var a = d_(r);
  return e.add(a), n.set(t, a), Nr(a).id = t, Nr(a).isNew = !0, a;
}
function Hd(t, e, r, n) {
  var a = t && t.parent;
  a && (t.type === "group" && t.traverse(function(i) {
    Hd(i, e, r, n);
  }), Ff(t, e, n), r.removeKey(Nr(t).id));
}
function vC(t, e, r, n) {
  t.isGroup || w([
    ["cursor", Fr.prototype.cursor],
    // We should not support configure z and zlevel in the element level.
    // But seems we didn't limit it previously. So here still use it to avoid breaking.
    ["zlevel", n || 0],
    ["z", r || 0],
    // z2 must not be null/undefined, otherwise sort error may occur.
    ["z2", 0]
  ], function(a) {
    var i = a[0];
    Q(e, i) ? t[i] = ge(e[i], a[1]) : t[i] == null && (t[i] = a[1]);
  }), w(Me(e), function(a) {
    if (a.indexOf("on") === 0) {
      var i = e[a];
      t[a] = ae(i) ? i : null;
    }
  }), Q(e, "draggable") && (t.draggable = e.draggable), e.name != null && (t.name = e.name), e.id != null && (t.id = e.id);
}
function UY(t) {
  return t = G({}, t), w(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(pM), function(e) {
    delete t[e];
  }), t;
}
function zY(t, e, r) {
  var n = pe(t).eventData;
  !t.silent && !t.ignore && !n && (n = pe(t).eventData = {
    componentType: "graphic",
    componentIndex: e.componentIndex,
    name: t.name
  }), n && (n.info = r.info);
}
function zre(t) {
  t.registerComponentModel(FY), t.registerComponentView(GY), t.registerPreprocessor(function(e) {
    var r = e.graphic;
    V(r) ? !r[0] || !r[0].elements ? e.graphic = [{
      elements: r
    }] : e.graphic = [e.graphic[0]] : r && !r.elements && (e.graphic = [{
      elements: [r]
    }]);
  });
}
var mC = ["x", "y", "radius", "angle", "single"], VY = ["cartesian2d", "polar", "singleAxis"];
function $Y(t) {
  var e = t.get("coordinateSystem");
  return xe(VY, e) >= 0;
}
function Ga(t) {
  return t + "Axis";
}
function HY(t, e) {
  var r = J(), n = [], a = J();
  t.eachComponent({
    mainType: "dataZoom",
    query: e
  }, function(c) {
    a.get(c.uid) || s(c);
  });
  var i;
  do
    i = !1, t.eachComponent("dataZoom", o);
  while (i);
  function o(c) {
    !a.get(c.uid) && l(c) && (s(c), i = !0);
  }
  function s(c) {
    a.set(c.uid, !0), n.push(c), u(c);
  }
  function l(c) {
    var d = !1;
    return c.eachTargetAxis(function(p, f) {
      var h = r.get(p);
      h && h[f] && (d = !0);
    }), d;
  }
  function u(c) {
    c.eachTargetAxis(function(d, p) {
      (r.get(d) || r.set(d, []))[p] = !0;
    });
  }
  return n;
}
function SO(t) {
  var e = t.ecModel, r = {
    infoList: [],
    infoMap: J()
  };
  return t.eachTargetAxis(function(n, a) {
    var i = e.getComponent(Ga(n), a);
    if (i) {
      var o = i.getCoordSysModel();
      if (o) {
        var s = o.uid, l = r.infoMap.get(s);
        l || (l = {
          model: o,
          axisModels: []
        }, r.infoList.push(l), r.infoMap.set(s, l)), l.axisModels.push(i);
      }
    }
  }), r;
}
var fv = (
  /** @class */
  function() {
    function t() {
      this.indexList = [], this.indexMap = [];
    }
    return t.prototype.add = function(e) {
      this.indexMap[e] || (this.indexList.push(e), this.indexMap[e] = !0);
    }, t;
  }()
), Ru = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._autoThrottle = !0, r._noTarget = !0, r._rangePropMode = ["percent", "percent"], r;
    }
    return e.prototype.init = function(r, n, a) {
      var i = _C(r);
      this.settledOption = i, this.mergeDefaultAndTheme(r, a), this._doInit(i);
    }, e.prototype.mergeOption = function(r) {
      var n = _C(r);
      be(this.option, r, !0), be(this.settledOption, n, !0), this._doInit(n);
    }, e.prototype._doInit = function(r) {
      var n = this.option;
      this._setDefaultThrottle(r), this._updateRangeUse(r);
      var a = this.settledOption;
      w([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        this._rangePropMode[o] === "value" && (n[i[0]] = a[i[0]] = null);
      }, this), this._resetTarget();
    }, e.prototype._resetTarget = function() {
      var r = this.get("orient", !0), n = this._targetAxisInfoMap = J(), a = this._fillSpecifiedTargetAxis(n);
      a ? this._orient = r || this._makeAutoOrientByTargetAxis() : (this._orient = r || "horizontal", this._fillAutoTargetAxisByOrient(n, this._orient)), this._noTarget = !0, n.each(function(i) {
        i.indexList.length && (this._noTarget = !1);
      }, this);
    }, e.prototype._fillSpecifiedTargetAxis = function(r) {
      var n = !1;
      return w(mC, function(a) {
        var i = this.getReferringComponents(Ga(a), c3);
        if (i.specified) {
          n = !0;
          var o = new fv();
          w(i.models, function(s) {
            o.add(s.componentIndex);
          }), r.set(a, o);
        }
      }, this), n;
    }, e.prototype._fillAutoTargetAxisByOrient = function(r, n) {
      var a = this.ecModel, i = !0;
      if (i) {
        var o = n === "vertical" ? "y" : "x", s = a.findComponents({
          mainType: o + "Axis"
        });
        l(s, o);
      }
      if (i) {
        var s = a.findComponents({
          mainType: "singleAxis",
          filter: function(c) {
            return c.get("orient", !0) === n;
          }
        });
        l(s, "single");
      }
      function l(u, c) {
        var d = u[0];
        if (d) {
          var p = new fv();
          if (p.add(d.componentIndex), r.set(c, p), i = !1, c === "x" || c === "y") {
            var f = d.getReferringComponents("grid", vt).models[0];
            f && w(u, function(h) {
              d.componentIndex !== h.componentIndex && f === h.getReferringComponents("grid", vt).models[0] && p.add(h.componentIndex);
            });
          }
        }
      }
      i && w(mC, function(u) {
        if (i) {
          var c = a.findComponents({
            mainType: Ga(u),
            filter: function(p) {
              return p.get("type", !0) === "category";
            }
          });
          if (c[0]) {
            var d = new fv();
            d.add(c[0].componentIndex), r.set(u, d), i = !1;
          }
        }
      }, this);
    }, e.prototype._makeAutoOrientByTargetAxis = function() {
      var r;
      return this.eachTargetAxis(function(n) {
        !r && (r = n);
      }, this), r === "y" ? "vertical" : "horizontal";
    }, e.prototype._setDefaultThrottle = function(r) {
      if (r.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
        var n = this.ecModel.option;
        this.option.throttle = n.animation && n.animationDurationUpdate > 0 ? 100 : 20;
      }
    }, e.prototype._updateRangeUse = function(r) {
      var n = this._rangePropMode, a = this.get("rangeMode");
      w([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        var s = r[i[0]] != null, l = r[i[1]] != null;
        s && !l ? n[o] = "percent" : !s && l ? n[o] = "value" : a ? n[o] = a[o] : s && (n[o] = "percent");
      });
    }, e.prototype.noTarget = function() {
      return this._noTarget;
    }, e.prototype.getFirstTargetAxisModel = function() {
      var r;
      return this.eachTargetAxis(function(n, a) {
        r == null && (r = this.ecModel.getComponent(Ga(n), a));
      }, this), r;
    }, e.prototype.eachTargetAxis = function(r, n) {
      this._targetAxisInfoMap.each(function(a, i) {
        w(a.indexList, function(o) {
          r.call(n, i, o);
        });
      });
    }, e.prototype.getAxisProxy = function(r, n) {
      var a = this.getAxisModel(r, n);
      if (a)
        return a.__dzAxisProxy;
    }, e.prototype.getAxisModel = function(r, n) {
      var a = this._targetAxisInfoMap.get(r);
      if (a && a.indexMap[n])
        return this.ecModel.getComponent(Ga(r), n);
    }, e.prototype.setRawRange = function(r) {
      var n = this.option, a = this.settledOption;
      w([["start", "startValue"], ["end", "endValue"]], function(i) {
        (r[i[0]] != null || r[i[1]] != null) && (n[i[0]] = a[i[0]] = r[i[0]], n[i[1]] = a[i[1]] = r[i[1]]);
      }, this), this._updateRangeUse(r);
    }, e.prototype.setCalculatedRange = function(r) {
      var n = this.option;
      w(["start", "startValue", "end", "endValue"], function(a) {
        n[a] = r[a];
      });
    }, e.prototype.getPercentRange = function() {
      var r = this.findRepresentativeAxisProxy();
      if (r)
        return r.getDataPercentWindow();
    }, e.prototype.getValueRange = function(r, n) {
      if (r == null && n == null) {
        var a = this.findRepresentativeAxisProxy();
        if (a)
          return a.getDataValueWindow();
      } else
        return this.getAxisProxy(r, n).getDataValueWindow();
    }, e.prototype.findRepresentativeAxisProxy = function(r) {
      if (r)
        return r.__dzAxisProxy;
      for (var n, a = this._targetAxisInfoMap.keys(), i = 0; i < a.length; i++)
        for (var o = a[i], s = this._targetAxisInfoMap.get(o), l = 0; l < s.indexList.length; l++) {
          var u = this.getAxisProxy(o, s.indexList[l]);
          if (u.hostedBy(this))
            return u;
          n || (n = u);
        }
      return n;
    }, e.prototype.getRangePropMode = function() {
      return this._rangePropMode.slice();
    }, e.prototype.getOrient = function() {
      return this._orient;
    }, e.type = "dataZoom", e.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      filterMode: "filter",
      start: 0,
      end: 100
    }, e;
  }(De)
);
function _C(t) {
  var e = {};
  return w(["start", "end", "startValue", "endValue", "throttle"], function(r) {
    t.hasOwnProperty(r) && (e[r] = t[r]);
  }), e;
}
var WY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "dataZoom.select", e;
  }(Ru)
), Ob = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a, i) {
      this.dataZoomModel = r, this.ecModel = n, this.api = a;
    }, e.type = "dataZoom", e;
  }(st)
), qY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "dataZoom.select", e;
  }(Ob)
), Qo = w, yC = kr, YY = (
  /** @class */
  function() {
    function t(e, r, n, a) {
      this._dimName = e, this._axisIndex = r, this.ecModel = a, this._dataZoomModel = n;
    }
    return t.prototype.hostedBy = function(e) {
      return this._dataZoomModel === e;
    }, t.prototype.getDataValueWindow = function() {
      return this._valueWindow.slice();
    }, t.prototype.getDataPercentWindow = function() {
      return this._percentWindow.slice();
    }, t.prototype.getTargetSeriesModels = function() {
      var e = [];
      return this.ecModel.eachSeries(function(r) {
        if ($Y(r)) {
          var n = Ga(this._dimName), a = r.getReferringComponents(n, vt).models[0];
          a && this._axisIndex === a.componentIndex && e.push(r);
        }
      }, this), e;
    }, t.prototype.getAxisModel = function() {
      return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
    }, t.prototype.getMinMaxSpan = function() {
      return le(this._minMaxSpan);
    }, t.prototype.calculateDataWindow = function(e) {
      var r = this._dataExtent, n = this.getAxisModel(), a = n.axis.scale, i = this._dataZoomModel.getRangePropMode(), o = [0, 100], s = [], l = [], u;
      Qo(["start", "end"], function(p, f) {
        var h = e[p], g = e[p + "Value"];
        i[f] === "percent" ? (h == null && (h = o[f]), g = a.parse($e(h, o, r))) : (u = !0, g = g == null ? r[f] : a.parse(g), h = $e(g, r, o)), l[f] = g == null || isNaN(g) ? r[f] : g, s[f] = h == null || isNaN(h) ? o[f] : h;
      }), yC(l), yC(s);
      var c = this._minMaxSpan;
      u ? d(l, s, r, o, !1) : d(s, l, o, r, !0);
      function d(p, f, h, g, v) {
        var m = v ? "Span" : "ValueSpan";
        So(0, p, h, "all", c["min" + m], c["max" + m]);
        for (var _ = 0; _ < 2; _++)
          f[_] = $e(p[_], h, g, !0), v && (f[_] = a.parse(f[_]));
      }
      return {
        valueWindow: l,
        percentWindow: s
      };
    }, t.prototype.reset = function(e) {
      if (e === this._dataZoomModel) {
        var r = this.getTargetSeriesModels();
        this._dataExtent = KY(this, this._dimName, r), this._updateMinMaxSpan();
        var n = this.calculateDataWindow(e.settledOption);
        this._valueWindow = n.valueWindow, this._percentWindow = n.percentWindow, this._setAxisModel();
      }
    }, t.prototype.filterData = function(e, r) {
      if (e !== this._dataZoomModel)
        return;
      var n = this._dimName, a = this.getTargetSeriesModels(), i = e.get("filterMode"), o = this._valueWindow;
      if (i === "none")
        return;
      Qo(a, function(l) {
        var u = l.getData(), c = u.mapDimensionsAll(n);
        if (c.length) {
          if (i === "weakFilter") {
            var d = u.getStore(), p = $(c, function(f) {
              return u.getDimensionIndex(f);
            }, u);
            u.filterSelf(function(f) {
              for (var h, g, v, m = 0; m < c.length; m++) {
                var _ = d.get(p[m], f), y = !isNaN(_), b = _ < o[0], S = _ > o[1];
                if (y && !b && !S)
                  return !0;
                y && (v = !0), b && (h = !0), S && (g = !0);
              }
              return v && h && g;
            });
          } else
            Qo(c, function(f) {
              if (i === "empty")
                l.setData(u = u.map(f, function(g) {
                  return s(g) ? g : NaN;
                }));
              else {
                var h = {};
                h[f] = o, u.selectRange(h);
              }
            });
          Qo(c, function(f) {
            u.setApproximateExtent(o, f);
          });
        }
      });
      function s(l) {
        return l >= o[0] && l <= o[1];
      }
    }, t.prototype._updateMinMaxSpan = function() {
      var e = this._minMaxSpan = {}, r = this._dataZoomModel, n = this._dataExtent;
      Qo(["min", "max"], function(a) {
        var i = r.get(a + "Span"), o = r.get(a + "ValueSpan");
        o != null && (o = this.getAxisModel().axis.scale.parse(o)), o != null ? i = $e(n[0] + o, n, [0, 100], !0) : i != null && (o = $e(i, [0, 100], n, !0) - n[0]), e[a + "Span"] = i, e[a + "ValueSpan"] = o;
      }, this);
    }, t.prototype._setAxisModel = function() {
      var e = this.getAxisModel(), r = this._percentWindow, n = this._valueWindow;
      if (r) {
        var a = tD(n, [0, 500]);
        a = Math.min(a, 20);
        var i = e.axis.scale.rawExtentInfo;
        r[0] !== 0 && i.setDeterminedMinMax("min", +n[0].toFixed(a)), r[1] !== 100 && i.setDeterminedMinMax("max", +n[1].toFixed(a)), i.freeze();
      }
    }, t;
  }()
);
function KY(t, e, r) {
  var n = [1 / 0, -1 / 0];
  Qo(r, function(o) {
    t4(n, o.getData(), e);
  });
  var a = t.getAxisModel(), i = zI(a.axis.scale, a, n).calculate();
  return [i.min, i.max];
}
var ZY = {
  // `dataZoomProcessor` will only be performed in needed series. Consider if
  // there is a line series and a pie series, it is better not to update the
  // line series if only pie series is needed to be updated.
  getTargetSeries: function(t) {
    function e(a) {
      t.eachComponent("dataZoom", function(i) {
        i.eachTargetAxis(function(o, s) {
          var l = t.getComponent(Ga(o), s);
          a(o, s, l, i);
        });
      });
    }
    e(function(a, i, o, s) {
      o.__dzAxisProxy = null;
    });
    var r = [];
    e(function(a, i, o, s) {
      o.__dzAxisProxy || (o.__dzAxisProxy = new YY(a, i, s, t), r.push(o.__dzAxisProxy));
    });
    var n = J();
    return w(r, function(a) {
      w(a.getTargetSeriesModels(), function(i) {
        n.set(i.uid, i);
      });
    }), n;
  },
  // Consider appendData, where filter should be performed. Because data process is
  // in block mode currently, it is not need to worry about that the overallProgress
  // execute every frame.
  overallReset: function(t, e) {
    t.eachComponent("dataZoom", function(r) {
      r.eachTargetAxis(function(n, a) {
        r.getAxisProxy(n, a).reset(r);
      }), r.eachTargetAxis(function(n, a) {
        r.getAxisProxy(n, a).filterData(r, e);
      });
    }), t.eachComponent("dataZoom", function(r) {
      var n = r.findRepresentativeAxisProxy();
      if (n) {
        var a = n.getDataPercentWindow(), i = n.getDataValueWindow();
        r.setCalculatedRange({
          start: a[0],
          end: a[1],
          startValue: i[0],
          endValue: i[1]
        });
      }
    });
  }
};
function XY(t) {
  t.registerAction("dataZoom", function(e, r) {
    var n = HY(r, e);
    w(n, function(a) {
      a.setRawRange({
        start: e.start,
        end: e.end,
        startValue: e.startValue,
        endValue: e.endValue
      });
    });
  });
}
var bC = !1;
function Lb(t) {
  bC || (bC = !0, t.registerProcessor(t.PRIORITY.PROCESSOR.FILTER, ZY), XY(t), t.registerSubTypeDefaulter("dataZoom", function() {
    return "slider";
  }));
}
function QY(t) {
  t.registerComponentModel(WY), t.registerComponentView(qY), Lb(t);
}
var Or = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t;
  }()
), EO = {};
function jo(t, e) {
  EO[t] = e;
}
function TO(t) {
  return EO[t];
}
var jY = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.optionUpdated = function() {
      t.prototype.optionUpdated.apply(this, arguments);
      var r = this.ecModel;
      w(this.option.feature, function(n, a) {
        var i = TO(a);
        i && (i.getDefaultOption && (i.defaultOption = i.getDefaultOption(r)), be(n, i.defaultOption));
      });
    }, e.type = "toolbox", e.layoutMode = {
      type: "box",
      ignoreSize: !0
    }, e.defaultOption = {
      show: !0,
      z: 6,
      // zlevel: 0,
      orient: "horizontal",
      left: "right",
      top: "top",
      // right
      // bottom
      backgroundColor: "transparent",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemSize: 15,
      itemGap: 8,
      showTitle: !0,
      iconStyle: {
        borderColor: "#666",
        color: "none"
      },
      emphasis: {
        iconStyle: {
          borderColor: "#3E98C5"
        }
      },
      // textStyle: {},
      // feature
      tooltip: {
        show: !1,
        position: "bottom"
      }
    }, e;
  }(De)
);
function JY(t, e, r) {
  var n = e.getBoxLayoutParams(), a = e.get("padding"), i = {
    width: r.getWidth(),
    height: r.getHeight()
  }, o = Et(n, i, a);
  to(e.get("orient"), t, e.get("itemGap"), o.width, o.height), Ef(t, n, i, a);
}
function xO(t, e) {
  var r = Ps(e.get("padding")), n = e.getItemStyle(["color", "opacity"]);
  return n.fill = e.get("backgroundColor"), t = new Re({
    shape: {
      x: t.x - r[3],
      y: t.y - r[0],
      width: t.width + r[1] + r[3],
      height: t.height + r[0] + r[2],
      r: e.get("borderRadius")
    },
    style: n,
    silent: !0,
    z2: -1
  }), t;
}
var eK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.render = function(r, n, a, i) {
      var o = this.group;
      if (o.removeAll(), !r.get("show"))
        return;
      var s = +r.get("itemSize"), l = r.get("orient") === "vertical", u = r.get("feature") || {}, c = this._features || (this._features = {}), d = [];
      w(u, function(h, g) {
        d.push(g);
      }), new ia(this._featureNames || [], d).add(p).update(p).remove(_e(p, null)).execute(), this._featureNames = d;
      function p(h, g) {
        var v = d[h], m = d[g], _ = u[v], y = new He(_, r, r.ecModel), b;
        if (i && i.newTitle != null && i.featureName === v && (_.title = i.newTitle), v && !m) {
          if (tK(v))
            b = {
              onclick: y.option.onclick,
              featureName: v
            };
          else {
            var S = TO(v);
            if (!S)
              return;
            b = new S();
          }
          c[v] = b;
        } else if (b = c[m], !b)
          return;
        b.uid = Ls("toolbox-feature"), b.model = y, b.ecModel = n, b.api = a;
        var E = b instanceof Or;
        if (!v && m) {
          E && b.dispose && b.dispose(n, a);
          return;
        }
        if (!y.get("show") || E && b.unusable) {
          E && b.remove && b.remove(n, a);
          return;
        }
        f(y, b, v), y.setIconStatus = function(T, x) {
          var C = this.option, A = this.iconPaths;
          C.iconStatus = C.iconStatus || {}, C.iconStatus[T] = x, A[T] && (x === "emphasis" ? na : aa)(A[T]);
        }, b instanceof Or && b.render && b.render(y, n, a, i);
      }
      function f(h, g, v) {
        var m = h.getModel("iconStyle"), _ = h.getModel(["emphasis", "iconStyle"]), y = g instanceof Or && g.getIcons ? g.getIcons() : h.get("icon"), b = h.get("title") || {}, S, E;
        Y(y) ? (S = {}, S[v] = y) : S = y, Y(b) ? (E = {}, E[v] = b) : E = b;
        var T = h.iconPaths = {};
        w(S, function(x, C) {
          var A = Yu(x, {}, {
            x: -s / 2,
            y: -s / 2,
            width: s,
            height: s
          });
          A.setStyle(m.getItemStyle());
          var D = A.ensureState("emphasis");
          D.style = _.getItemStyle();
          var M = new Pe({
            style: {
              text: E[C],
              align: _.get("textAlign"),
              borderRadius: _.get("textBorderRadius"),
              padding: _.get("textPadding"),
              fill: null,
              font: dy({
                fontStyle: _.get("textFontStyle"),
                fontFamily: _.get("textFontFamily"),
                fontSize: _.get("textFontSize"),
                fontWeight: _.get("textFontWeight")
              }, n)
            },
            ignore: !0
          });
          A.setTextContent(M), go({
            el: A,
            componentModel: r,
            itemName: C,
            formatterParamsExtra: {
              title: E[C]
            }
          }), A.__title = E[C], A.on("mouseover", function() {
            var I = _.getItemStyle(), N = l ? r.get("right") == null && r.get("left") !== "right" ? "right" : "left" : r.get("bottom") == null && r.get("top") !== "bottom" ? "bottom" : "top";
            M.setStyle({
              fill: _.get("textFill") || I.fill || I.stroke || "#000",
              backgroundColor: _.get("textBackgroundColor")
            }), A.setTextConfig({
              position: _.get("textPosition") || N
            }), M.ignore = !r.get("showTitle"), a.enterEmphasis(this);
          }).on("mouseout", function() {
            h.get(["iconStatus", C]) !== "emphasis" && a.leaveEmphasis(this), M.hide();
          }), (h.get(["iconStatus", C]) === "emphasis" ? na : aa)(A), o.add(A), A.on("click", K(g.onclick, g, n, a, C)), T[C] = A;
        });
      }
      JY(o, r, a), o.add(xO(o.getBoundingRect(), r)), l || o.eachChild(function(h) {
        var g = h.__title, v = h.ensureState("emphasis"), m = v.textConfig || (v.textConfig = {}), _ = h.getTextContent(), y = _ && _.ensureState("emphasis");
        if (y && !ae(y) && g) {
          var b = y.style || (y.style = {}), S = Uu(g, Pe.makeFont(b)), E = h.x + o.x, T = h.y + o.y + s, x = !1;
          T + S.height > a.getHeight() && (m.position = "top", x = !0);
          var C = x ? -5 - S.height : s + 10;
          E + S.width / 2 > a.getWidth() ? (m.position = ["100%", C], b.align = "right") : E - S.width / 2 < 0 && (m.position = [0, C], b.align = "left");
        }
      });
    }, e.prototype.updateView = function(r, n, a, i) {
      w(this._features, function(o) {
        o instanceof Or && o.updateView && o.updateView(o.model, n, a, i);
      });
    }, e.prototype.remove = function(r, n) {
      w(this._features, function(a) {
        a instanceof Or && a.remove && a.remove(r, n);
      }), this.group.removeAll();
    }, e.prototype.dispose = function(r, n) {
      w(this._features, function(a) {
        a instanceof Or && a.dispose && a.dispose(r, n);
      });
    }, e.type = "toolbox", e;
  }(st)
);
function tK(t) {
  return t.indexOf("my") === 0;
}
var rK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(r, n) {
      var a = this.model, i = a.get("name") || r.get("title.0.text") || "echarts", o = n.getZr().painter.getType() === "svg", s = o ? "svg" : a.get("type", !0) || "png", l = n.getConnectedDataURL({
        type: s,
        backgroundColor: a.get("backgroundColor", !0) || r.get("backgroundColor") || "#fff",
        connectedBackgroundColor: a.get("connectedBackgroundColor"),
        excludeComponents: a.get("excludeComponents"),
        pixelRatio: a.get("pixelRatio")
      }), u = Ae.browser;
      if (typeof MouseEvent == "function" && (u.newEdge || !u.ie && !u.edge)) {
        var c = document.createElement("a");
        c.download = i + "." + s, c.target = "_blank", c.href = l;
        var d = new MouseEvent("click", {
          // some micro front-end framework， window maybe is a Proxy
          view: document.defaultView,
          bubbles: !0,
          cancelable: !1
        });
        c.dispatchEvent(d);
      } else if (window.navigator.msSaveOrOpenBlob || o) {
        var p = l.split(","), f = p[0].indexOf("base64") > -1, h = o ? decodeURIComponent(p[1]) : p[1];
        f && (h = window.atob(h));
        var g = i + "." + s;
        if (window.navigator.msSaveOrOpenBlob) {
          for (var v = h.length, m = new Uint8Array(v); v--; )
            m[v] = h.charCodeAt(v);
          var _ = new Blob([m]);
          window.navigator.msSaveOrOpenBlob(_, g);
        } else {
          var y = document.createElement("iframe");
          document.body.appendChild(y);
          var b = y.contentWindow, S = b.document;
          S.open("image/svg+xml", "replace"), S.write(h), S.close(), b.focus(), S.execCommand("SaveAs", !0, g), document.body.removeChild(y);
        }
      } else {
        var E = a.get("lang"), T = '<body style="margin:0;"><img src="' + l + '" style="max-width:100%;" title="' + (E && E[0] || "") + '" /></body>', x = window.open();
        x.document.write(T), x.document.title = i;
      }
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
        title: r.getLocaleModel().get(["toolbox", "saveAsImage", "title"]),
        type: "png",
        // Default use option.backgroundColor
        // backgroundColor: '#fff',
        connectedBackgroundColor: "#fff",
        name: "",
        excludeComponents: ["toolbox"],
        // use current pixel ratio of device by default
        // pixelRatio: 1,
        lang: r.getLocaleModel().get(["toolbox", "saveAsImage", "lang"])
      };
      return n;
    }, e;
  }(Or)
), SC = "__ec_magicType_stack__", nK = [["line", "bar"], ["stack"]], aK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.getIcons = function() {
      var r = this.model, n = r.get("icon"), a = {};
      return w(r.get("type"), function(i) {
        n[i] && (a[i] = n[i]);
      }), a;
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        type: [],
        // Icon group
        icon: {
          line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
          bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
          // eslint-disable-next-line
          stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z"
          // jshint ignore:line
        },
        // `line`, `bar`, `stack`, `tiled`
        title: r.getLocaleModel().get(["toolbox", "magicType", "title"]),
        option: {},
        seriesIndex: {}
      };
      return n;
    }, e.prototype.onclick = function(r, n, a) {
      var i = this.model, o = i.get(["seriesIndex", a]);
      if (EC[a]) {
        var s = {
          series: []
        }, l = function(d) {
          var p = d.subType, f = d.id, h = EC[a](p, f, d, i);
          h && (ie(h, d.option), s.series.push(h));
          var g = d.coordinateSystem;
          if (g && g.type === "cartesian2d" && (a === "line" || a === "bar")) {
            var v = g.getAxesByScale("ordinal")[0];
            if (v) {
              var m = v.dim, _ = m + "Axis", y = d.getReferringComponents(_, vt).models[0], b = y.componentIndex;
              s[_] = s[_] || [];
              for (var S = 0; S <= b; S++)
                s[_][b] = s[_][b] || {};
              s[_][b].boundaryGap = a === "bar";
            }
          }
        };
        w(nK, function(d) {
          xe(d, a) >= 0 && w(d, function(p) {
            i.setIconStatus(p, "normal");
          });
        }), i.setIconStatus(a, "emphasis"), r.eachComponent({
          mainType: "series",
          query: o == null ? null : {
            seriesIndex: o
          }
        }, l);
        var u, c = a;
        a === "stack" && (u = be({
          stack: i.option.title.tiled,
          tiled: i.option.title.stack
        }, i.option.title), i.get(["iconStatus", a]) !== "emphasis" && (c = "tiled")), n.dispatchAction({
          type: "changeMagicType",
          currentType: c,
          newOption: s,
          newTitle: u,
          featureName: "magicType"
        });
      }
    }, e;
  }(Or)
), EC = {
  line: function(t, e, r, n) {
    if (t === "bar")
      return be({
        id: e,
        type: "line",
        // Preserve data related option
        data: r.get("data"),
        stack: r.get("stack"),
        markPoint: r.get("markPoint"),
        markLine: r.get("markLine")
      }, n.get(["option", "line"]) || {}, !0);
  },
  bar: function(t, e, r, n) {
    if (t === "line")
      return be({
        id: e,
        type: "bar",
        // Preserve data related option
        data: r.get("data"),
        stack: r.get("stack"),
        markPoint: r.get("markPoint"),
        markLine: r.get("markLine")
      }, n.get(["option", "bar"]) || {}, !0);
  },
  stack: function(t, e, r, n) {
    var a = r.get("stack") === SC;
    if (t === "line" || t === "bar")
      return n.setIconStatus("stack", a ? "normal" : "emphasis"), be({
        id: e,
        stack: a ? "" : SC
      }, n.get(["option", "stack"]) || {}, !0);
  }
};
Gn({
  type: "changeMagicType",
  event: "magicTypeChanged",
  update: "prepareAndUpdate"
}, function(t, e) {
  e.mergeOption(t.newOption);
});
var Uf = new Array(60).join("-"), Cs = "	";
function iK(t) {
  var e = {}, r = [], n = [];
  return t.eachRawSeries(function(a) {
    var i = a.coordinateSystem;
    if (i && (i.type === "cartesian2d" || i.type === "polar")) {
      var o = i.getBaseAxis();
      if (o.type === "category") {
        var s = o.dim + "_" + o.index;
        e[s] || (e[s] = {
          categoryAxis: o,
          valueAxis: i.getOtherAxis(o),
          series: []
        }, n.push({
          axisDim: o.dim,
          axisIndex: o.index
        })), e[s].series.push(a);
      } else
        r.push(a);
    } else
      r.push(a);
  }), {
    seriesGroupByCategoryAxis: e,
    other: r,
    meta: n
  };
}
function oK(t) {
  var e = [];
  return w(t, function(r, n) {
    var a = r.categoryAxis, i = r.valueAxis, o = i.dim, s = [" "].concat($(r.series, function(f) {
      return f.name;
    })), l = [a.model.getCategories()];
    w(r.series, function(f) {
      var h = f.getRawData();
      l.push(f.getRawData().mapArray(h.mapDimension(o), function(g) {
        return g;
      }));
    });
    for (var u = [s.join(Cs)], c = 0; c < l[0].length; c++) {
      for (var d = [], p = 0; p < l.length; p++)
        d.push(l[p][c]);
      u.push(d.join(Cs));
    }
    e.push(u.join(`
`));
  }), e.join(`

` + Uf + `

`);
}
function sK(t) {
  return $(t, function(e) {
    var r = e.getRawData(), n = [e.name], a = [];
    return r.each(r.dimensions, function() {
      for (var i = arguments.length, o = arguments[i - 1], s = r.getName(o), l = 0; l < i - 1; l++)
        a[l] = arguments[l];
      n.push((s ? s + Cs : "") + a.join(Cs));
    }), n.join(`
`);
  }).join(`

` + Uf + `

`);
}
function lK(t) {
  var e = iK(t);
  return {
    value: ze([oK(e.seriesGroupByCategoryAxis), sK(e.other)], function(r) {
      return !!r.replace(/[\n\t\s]/g, "");
    }).join(`

` + Uf + `

`),
    meta: e.meta
  };
}
function Bp(t) {
  return t.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function uK(t) {
  var e = t.slice(0, t.indexOf(`
`));
  if (e.indexOf(Cs) >= 0)
    return !0;
}
var p_ = new RegExp("[" + Cs + "]+", "g");
function cK(t) {
  for (var e = t.split(/\n+/g), r = Bp(e.shift()).split(p_), n = [], a = $(r, function(l) {
    return {
      name: l,
      data: []
    };
  }), i = 0; i < e.length; i++) {
    var o = Bp(e[i]).split(p_);
    n.push(o.shift());
    for (var s = 0; s < o.length; s++)
      a[s] && (a[s].data[i] = o[s]);
  }
  return {
    series: a,
    categories: n
  };
}
function dK(t) {
  for (var e = t.split(/\n+/g), r = Bp(e.shift()), n = [], a = 0; a < e.length; a++) {
    var i = Bp(e[a]);
    if (i) {
      var o = i.split(p_), s = "", l = void 0, u = !1;
      isNaN(o[0]) ? (u = !0, s = o[0], o = o.slice(1), n[a] = {
        name: s,
        value: []
      }, l = n[a].value) : l = n[a] = [];
      for (var c = 0; c < o.length; c++)
        l.push(+o[c]);
      l.length === 1 && (u ? n[a].value = l[0] : n[a] = l[0]);
    }
  }
  return {
    name: r,
    data: n
  };
}
function pK(t, e) {
  var r = t.split(new RegExp(`
*` + Uf + `
*`, "g")), n = {
    series: []
  };
  return w(r, function(a, i) {
    if (uK(a)) {
      var o = cK(a), s = e[i], l = s.axisDim + "Axis";
      s && (n[l] = n[l] || [], n[l][s.axisIndex] = {
        data: o.categories
      }, n.series = n.series.concat(o.series));
    } else {
      var o = dK(a);
      n.series.push(o);
    }
  }), n;
}
var fK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(r, n) {
      setTimeout(function() {
        n.dispatchAction({
          type: "hideTip"
        });
      });
      var a = n.getDom(), i = this.model;
      this._dom && a.removeChild(this._dom);
      var o = document.createElement("div");
      o.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", o.style.backgroundColor = i.get("backgroundColor") || "#fff";
      var s = document.createElement("h4"), l = i.get("lang") || [];
      s.innerHTML = l[0] || i.get("title"), s.style.cssText = "margin:10px 20px", s.style.color = i.get("textColor");
      var u = document.createElement("div"), c = document.createElement("textarea");
      u.style.cssText = "overflow:auto";
      var d = i.get("optionToContent"), p = i.get("contentToOption"), f = lK(r);
      if (ae(d)) {
        var h = d(n.getOption());
        Y(h) ? u.innerHTML = h : gs(h) && u.appendChild(h);
      } else {
        c.readOnly = i.get("readOnly");
        var g = c.style;
        g.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", g.color = i.get("textColor"), g.borderColor = i.get("textareaBorderColor"), g.backgroundColor = i.get("textareaColor"), c.value = f.value, u.appendChild(c);
      }
      var v = f.meta, m = document.createElement("div");
      m.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
      var _ = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", y = document.createElement("div"), b = document.createElement("div");
      _ += ";background-color:" + i.get("buttonColor"), _ += ";color:" + i.get("buttonTextColor");
      var S = this;
      function E() {
        a.removeChild(o), S._dom = null;
      }
      Hv(y, "click", E), Hv(b, "click", function() {
        if (p == null && d != null || p != null && d == null) {
          E();
          return;
        }
        var T;
        try {
          ae(p) ? T = p(u, n.getOption()) : T = pK(c.value, v);
        } catch (x) {
          throw E(), new Error("Data view format error " + x);
        }
        T && n.dispatchAction({
          type: "changeDataView",
          newOption: T
        }), E();
      }), y.innerHTML = l[1], b.innerHTML = l[2], b.style.cssText = y.style.cssText = _, !i.get("readOnly") && m.appendChild(b), m.appendChild(y), o.appendChild(s), o.appendChild(u), o.appendChild(m), u.style.height = a.clientHeight - 80 + "px", a.appendChild(o), this._dom = o;
    }, e.prototype.remove = function(r, n) {
      this._dom && n.getDom().removeChild(this._dom);
    }, e.prototype.dispose = function(r, n) {
      this.remove(r, n);
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        readOnly: !1,
        optionToContent: null,
        contentToOption: null,
        // eslint-disable-next-line
        icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
        title: r.getLocaleModel().get(["toolbox", "dataView", "title"]),
        lang: r.getLocaleModel().get(["toolbox", "dataView", "lang"]),
        backgroundColor: "#fff",
        textColor: "#000",
        textareaColor: "#fff",
        textareaBorderColor: "#333",
        buttonColor: "#c23531",
        buttonTextColor: "#fff"
      };
      return n;
    }, e;
  }(Or)
);
function hK(t, e) {
  return $(t, function(r, n) {
    var a = e && e[n];
    if (se(a) && !V(a)) {
      var i = se(r) && !V(r);
      i || (r = {
        value: r
      });
      var o = a.name != null && r.name == null;
      return r = ie(r, a), o && delete r.name, r;
    } else
      return r;
  });
}
Gn({
  type: "changeDataView",
  event: "dataViewChanged",
  update: "prepareAndUpdate"
}, function(t, e) {
  var r = [];
  w(t.newOption.series, function(n) {
    var a = e.getSeriesByName(n.name)[0];
    if (!a)
      r.push(G({
        // Default is scatter
        type: "scatter"
      }, n));
    else {
      var i = a.get("data");
      r.push({
        name: n.name,
        data: hK(n.data, i)
      });
    }
  }), e.mergeOption(ie({
    series: r
  }, t.newOption));
});
var CO = w, AO = Oe();
function gK(t, e) {
  var r = Pb(t);
  CO(e, function(n, a) {
    for (var i = r.length - 1; i >= 0; i--) {
      var o = r[i];
      if (o[a])
        break;
    }
    if (i < 0) {
      var s = t.queryComponents({
        mainType: "dataZoom",
        subType: "select",
        id: a
      })[0];
      if (s) {
        var l = s.getPercentRange();
        r[0][a] = {
          dataZoomId: a,
          start: l[0],
          end: l[1]
        };
      }
    }
  }), r.push(e);
}
function vK(t) {
  var e = Pb(t), r = e[e.length - 1];
  e.length > 1 && e.pop();
  var n = {};
  return CO(r, function(a, i) {
    for (var o = e.length - 1; o >= 0; o--)
      if (a = e[o][i], a) {
        n[i] = a;
        break;
      }
  }), n;
}
function mK(t) {
  AO(t).snapshots = null;
}
function _K(t) {
  return Pb(t).length;
}
function Pb(t) {
  var e = AO(t);
  return e.snapshots || (e.snapshots = [{}]), e.snapshots;
}
var yK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(r, n) {
      mK(r), n.dispatchAction({
        type: "restore",
        from: this.uid
      });
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        // eslint-disable-next-line
        icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
        title: r.getLocaleModel().get(["toolbox", "restore", "title"])
      };
      return n;
    }, e;
  }(Or)
);
Gn({
  type: "restore",
  event: "restore",
  update: "prepareAndUpdate"
}, function(t, e) {
  e.resetOption("recreate");
});
var bK = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"], kb = (
  /** @class */
  function() {
    function t(e, r, n) {
      var a = this;
      this._targetInfoList = [];
      var i = TC(r, e);
      w(SK, function(o, s) {
        (!n || !n.include || xe(n.include, s) >= 0) && o(i, a._targetInfoList);
      });
    }
    return t.prototype.setOutputRanges = function(e, r) {
      return this.matchOutputRanges(e, r, function(n, a, i) {
        if ((n.coordRanges || (n.coordRanges = [])).push(a), !n.coordRange) {
          n.coordRange = a;
          var o = hv[n.brushType](0, i, a);
          n.__rangeOffset = {
            offset: wC[n.brushType](o.values, n.range, [1, 1]),
            xyMinMax: o.xyMinMax
          };
        }
      }), e;
    }, t.prototype.matchOutputRanges = function(e, r, n) {
      w(e, function(a) {
        var i = this.findTargetInfo(a, r);
        i && i !== !0 && w(i.coordSyses, function(o) {
          var s = hv[a.brushType](1, o, a.range, !0);
          n(a, s.values, o, r);
        });
      }, this);
    }, t.prototype.setInputRanges = function(e, r) {
      w(e, function(n) {
        var a = this.findTargetInfo(n, r);
        if (n.range = n.range || [], a && a !== !0) {
          n.panelId = a.panelId;
          var i = hv[n.brushType](0, a.coordSys, n.coordRange), o = n.__rangeOffset;
          n.range = o ? wC[n.brushType](i.values, o.offset, EK(i.xyMinMax, o.xyMinMax)) : i.values;
        }
      }, this);
    }, t.prototype.makePanelOpts = function(e, r) {
      return $(this._targetInfoList, function(n) {
        var a = n.getPanelRect();
        return {
          panelId: n.panelId,
          defaultBrushType: r ? r(n) : null,
          clipPath: PR(a),
          isTargetByCursor: BR(a, e, n.coordSysModel),
          getLinearBrushOtherExtent: kR(a)
        };
      });
    }, t.prototype.controlSeries = function(e, r, n) {
      var a = this.findTargetInfo(e, n);
      return a === !0 || a && xe(a.coordSyses, r.coordinateSystem) >= 0;
    }, t.prototype.findTargetInfo = function(e, r) {
      for (var n = this._targetInfoList, a = TC(r, e), i = 0; i < n.length; i++) {
        var o = n[i], s = e.panelId;
        if (s) {
          if (o.panelId === s)
            return o;
        } else
          for (var l = 0; l < xC.length; l++)
            if (xC[l](a, o))
              return o;
      }
      return !0;
    }, t;
  }()
);
function f_(t) {
  return t[0] > t[1] && t.reverse(), t;
}
function TC(t, e) {
  return Vl(t, e, {
    includeMainTypes: bK
  });
}
var SK = {
  grid: function(t, e) {
    var r = t.xAxisModels, n = t.yAxisModels, a = t.gridModels, i = J(), o = {}, s = {};
    !r && !n && !a || (w(r, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), o[u.id] = !0;
    }), w(n, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), s[u.id] = !0;
    }), w(a, function(l) {
      i.set(l.id, l), o[l.id] = !0, s[l.id] = !0;
    }), i.each(function(l) {
      var u = l.coordinateSystem, c = [];
      w(u.getCartesians(), function(d, p) {
        (xe(r, d.getAxis("x").model) >= 0 || xe(n, d.getAxis("y").model) >= 0) && c.push(d);
      }), e.push({
        panelId: "grid--" + l.id,
        gridModel: l,
        coordSysModel: l,
        // Use the first one as the representitive coordSys.
        coordSys: c[0],
        coordSyses: c,
        getPanelRect: CC.grid,
        xAxisDeclared: o[l.id],
        yAxisDeclared: s[l.id]
      });
    }));
  },
  geo: function(t, e) {
    w(t.geoModels, function(r) {
      var n = r.coordinateSystem;
      e.push({
        panelId: "geo--" + r.id,
        geoModel: r,
        coordSysModel: r,
        coordSys: n,
        coordSyses: [n],
        getPanelRect: CC.geo
      });
    });
  }
}, xC = [
  // grid
  function(t, e) {
    var r = t.xAxisModel, n = t.yAxisModel, a = t.gridModel;
    return !a && r && (a = r.axis.grid.model), !a && n && (a = n.axis.grid.model), a && a === e.gridModel;
  },
  // geo
  function(t, e) {
    var r = t.geoModel;
    return r && r === e.geoModel;
  }
], CC = {
  grid: function() {
    return this.coordSys.master.getRect().clone();
  },
  geo: function() {
    var t = this.coordSys, e = t.getBoundingRect().clone();
    return e.applyTransform(eo(t)), e;
  }
}, hv = {
  lineX: _e(AC, 0),
  lineY: _e(AC, 1),
  rect: function(t, e, r, n) {
    var a = t ? e.pointToData([r[0][0], r[1][0]], n) : e.dataToPoint([r[0][0], r[1][0]], n), i = t ? e.pointToData([r[0][1], r[1][1]], n) : e.dataToPoint([r[0][1], r[1][1]], n), o = [f_([a[0], i[0]]), f_([a[1], i[1]])];
    return {
      values: o,
      xyMinMax: o
    };
  },
  polygon: function(t, e, r, n) {
    var a = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]], i = $(r, function(o) {
      var s = t ? e.pointToData(o, n) : e.dataToPoint(o, n);
      return a[0][0] = Math.min(a[0][0], s[0]), a[1][0] = Math.min(a[1][0], s[1]), a[0][1] = Math.max(a[0][1], s[0]), a[1][1] = Math.max(a[1][1], s[1]), s;
    });
    return {
      values: i,
      xyMinMax: a
    };
  }
};
function AC(t, e, r, n) {
  var a = r.getAxis(["x", "y"][t]), i = f_($([0, 1], function(s) {
    return e ? a.coordToData(a.toLocalCoord(n[s]), !0) : a.toGlobalCoord(a.dataToCoord(n[s]));
  })), o = [];
  return o[t] = i, o[1 - t] = [NaN, NaN], {
    values: i,
    xyMinMax: o
  };
}
var wC = {
  lineX: _e(DC, 0),
  lineY: _e(DC, 1),
  rect: function(t, e, r) {
    return [[t[0][0] - r[0] * e[0][0], t[0][1] - r[0] * e[0][1]], [t[1][0] - r[1] * e[1][0], t[1][1] - r[1] * e[1][1]]];
  },
  polygon: function(t, e, r) {
    return $(t, function(n, a) {
      return [n[0] - r[0] * e[a][0], n[1] - r[1] * e[a][1]];
    });
  }
};
function DC(t, e, r, n) {
  return [e[0] - n[t] * r[0], e[1] - n[t] * r[1]];
}
function EK(t, e) {
  var r = MC(t), n = MC(e), a = [r[0] / n[0], r[1] / n[1]];
  return isNaN(a[0]) && (a[0] = 1), isNaN(a[1]) && (a[1] = 1), a;
}
function MC(t) {
  return t ? [t[0][1] - t[0][0], t[1][1] - t[1][0]] : [NaN, NaN];
}
var h_ = w, TK = i3("toolbox-dataZoom_"), xK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.render = function(r, n, a, i) {
      this._brushController || (this._brushController = new ub(a.getZr()), this._brushController.on("brush", K(this._onBrush, this)).mount()), wK(r, n, this, i, a), AK(r, n);
    }, e.prototype.onclick = function(r, n, a) {
      CK[a].call(this);
    }, e.prototype.remove = function(r, n) {
      this._brushController && this._brushController.unmount();
    }, e.prototype.dispose = function(r, n) {
      this._brushController && this._brushController.dispose();
    }, e.prototype._onBrush = function(r) {
      var n = r.areas;
      if (!r.isEnd || !n.length)
        return;
      var a = {}, i = this.ecModel;
      this._brushController.updateCovers([]);
      var o = new kb(Bb(this.model), i, {
        include: ["grid"]
      });
      o.matchOutputRanges(n, i, function(u, c, d) {
        if (d.type === "cartesian2d") {
          var p = u.brushType;
          p === "rect" ? (s("x", d, c[0]), s("y", d, c[1])) : s({
            lineX: "x",
            lineY: "y"
          }[p], d, c);
        }
      }), gK(i, a), this._dispatchZoomAction(a);
      function s(u, c, d) {
        var p = c.getAxis(u), f = p.model, h = l(u, f, i), g = h.findRepresentativeAxisProxy(f).getMinMaxSpan();
        (g.minValueSpan != null || g.maxValueSpan != null) && (d = So(0, d.slice(), p.scale.getExtent(), 0, g.minValueSpan, g.maxValueSpan)), h && (a[h.id] = {
          dataZoomId: h.id,
          startValue: d[0],
          endValue: d[1]
        });
      }
      function l(u, c, d) {
        var p;
        return d.eachComponent({
          mainType: "dataZoom",
          subType: "select"
        }, function(f) {
          var h = f.getAxisModel(u, c.componentIndex);
          h && (p = f);
        }), p;
      }
    }, e.prototype._dispatchZoomAction = function(r) {
      var n = [];
      h_(r, function(a, i) {
        n.push(le(a));
      }), n.length && this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        batch: n
      });
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        filterMode: "filter",
        // Icon group
        icon: {
          zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
          back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
        },
        // `zoom`, `back`
        title: r.getLocaleModel().get(["toolbox", "dataZoom", "title"]),
        brushStyle: {
          borderWidth: 0,
          color: "rgba(210,219,238,0.2)"
        }
      };
      return n;
    }, e;
  }(Or)
), CK = {
  zoom: function() {
    var t = !this._isZoomActive;
    this.api.dispatchAction({
      type: "takeGlobalCursor",
      key: "dataZoomSelect",
      dataZoomSelectActive: t
    });
  },
  back: function() {
    this._dispatchZoomAction(vK(this.ecModel));
  }
};
function Bb(t) {
  var e = {
    xAxisIndex: t.get("xAxisIndex", !0),
    yAxisIndex: t.get("yAxisIndex", !0),
    xAxisId: t.get("xAxisId", !0),
    yAxisId: t.get("yAxisId", !0)
  };
  return e.xAxisIndex == null && e.xAxisId == null && (e.xAxisIndex = "all"), e.yAxisIndex == null && e.yAxisId == null && (e.yAxisIndex = "all"), e;
}
function AK(t, e) {
  t.setIconStatus("back", _K(e) > 1 ? "emphasis" : "normal");
}
function wK(t, e, r, n, a) {
  var i = r._isZoomActive;
  n && n.type === "takeGlobalCursor" && (i = n.key === "dataZoomSelect" ? n.dataZoomSelectActive : !1), r._isZoomActive = i, t.setIconStatus("zoom", i ? "emphasis" : "normal");
  var o = new kb(Bb(t), e, {
    include: ["grid"]
  }), s = o.makePanelOpts(a, function(l) {
    return l.xAxisDeclared && !l.yAxisDeclared ? "lineX" : !l.xAxisDeclared && l.yAxisDeclared ? "lineY" : "rect";
  });
  r._brushController.setPanels(s).enableBrush(i && s.length ? {
    brushType: "auto",
    brushStyle: t.getModel("brushStyle").getItemStyle()
  } : !1);
}
IU("dataZoom", function(t) {
  var e = t.getComponent("toolbox", 0), r = ["feature", "dataZoom"];
  if (!e || e.get(r) == null)
    return;
  var n = e.getModel(r), a = [], i = Bb(n), o = Vl(t, i);
  h_(o.xAxisModels, function(l) {
    return s(l, "xAxis", "xAxisIndex");
  }), h_(o.yAxisModels, function(l) {
    return s(l, "yAxis", "yAxisIndex");
  });
  function s(l, u, c) {
    var d = l.componentIndex, p = {
      type: "select",
      $fromToolbox: !0,
      // Default to be filter
      filterMode: n.get("filterMode", !0) || "filter",
      // Id for merge mapping.
      id: TK + u + d
    };
    p[c] = d, a.push(p);
  }
  return a;
});
function Vre(t) {
  t.registerComponentModel(jY), t.registerComponentView(eK), jo("saveAsImage", rK), jo("magicType", aK), jo("dataView", fK), jo("dataZoom", xK), jo("restore", yK), kt(QY);
}
var DK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "tooltip", e.dependencies = ["axisPointer"], e.defaultOption = {
      // zlevel: 0,
      z: 60,
      show: !0,
      // tooltip main content
      showContent: !0,
      // 'trigger' only works on coordinate system.
      // 'item' | 'axis' | 'none'
      trigger: "item",
      // 'click' | 'mousemove' | 'none'
      triggerOn: "mousemove|click",
      alwaysShowContent: !1,
      displayMode: "single",
      renderMode: "auto",
      // whether restraint content inside viewRect.
      // If renderMode: 'richText', default true.
      // If renderMode: 'html', defaut false (for backward compat).
      confine: null,
      showDelay: 0,
      hideDelay: 100,
      // Animation transition time, unit is second
      transitionDuration: 0.4,
      enterable: !1,
      backgroundColor: "#fff",
      // box shadow
      shadowBlur: 10,
      shadowColor: "rgba(0, 0, 0, .2)",
      shadowOffsetX: 1,
      shadowOffsetY: 2,
      // tooltip border radius, unit is px, default is 4
      borderRadius: 4,
      // tooltip border width, unit is px, default is 0 (no border)
      borderWidth: 1,
      // Tooltip inside padding, default is 5 for all direction
      // Array is allowed to set up, right, bottom, left, same with css
      // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.
      padding: null,
      // Extra css text
      extraCssText: "",
      // axis indicator, trigger by axis
      axisPointer: {
        // default is line
        // legal values: 'line' | 'shadow' | 'cross'
        type: "line",
        // Valid when type is line, appoint tooltip line locate on which line. Optional
        // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'
        // default is 'auto', chose the axis which type is category.
        // for multiply y axis, cartesian coord chose x axis, polar chose angle axis
        axis: "auto",
        animation: "auto",
        animationDurationUpdate: 200,
        animationEasingUpdate: "exponentialOut",
        crossStyle: {
          color: "#999",
          width: 1,
          type: "dashed",
          // TODO formatter
          textStyle: {}
        }
        // lineStyle and shadowStyle should not be specified here,
        // otherwise it will always override those styles on option.axisPointer.
      },
      textStyle: {
        color: "#666",
        fontSize: 14
      }
    }, e;
  }(De)
);
function wO(t) {
  var e = t.get("confine");
  return e != null ? !!e : t.get("renderMode") === "richText";
}
function DO(t) {
  if (Ae.domSupported) {
    for (var e = document.documentElement.style, r = 0, n = t.length; r < n; r++)
      if (t[r] in e)
        return t[r];
  }
}
var MO = DO(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]), MK = DO(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]);
function IO(t, e) {
  if (!t)
    return e;
  e = cM(e, !0);
  var r = t.indexOf(e);
  return t = r === -1 ? e : "-" + t.slice(0, r) + "-" + e, t.toLowerCase();
}
function IK(t, e) {
  var r = t.currentStyle || document.defaultView && document.defaultView.getComputedStyle(t);
  return r ? r[e] : null;
}
var NK = IO(MK, "transition"), Fb = IO(MO, "transform"), RK = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (Ae.transform3dSupported ? "will-change:transform;" : "");
function OK(t) {
  return t = t === "left" ? "right" : t === "right" ? "left" : t === "top" ? "bottom" : "top", t;
}
function LK(t, e, r) {
  if (!Y(r) || r === "inside")
    return "";
  var n = t.get("backgroundColor"), a = t.get("borderWidth");
  e = uo(e);
  var i = OK(r), o = Math.max(Math.round(a) * 1.5, 6), s = "", l = Fb + ":", u;
  xe(["left", "right"], i) > -1 ? (s += "top:50%", l += "translateY(-50%) rotate(" + (u = i === "left" ? -225 : -45) + "deg)") : (s += "left:50%", l += "translateX(-50%) rotate(" + (u = i === "top" ? 225 : 45) + "deg)");
  var c = u * Math.PI / 180, d = o + a, p = d * Math.abs(Math.cos(c)) + d * Math.abs(Math.sin(c)), f = Math.round(((p - Math.SQRT2 * a) / 2 + Math.SQRT2 * a - (p - d) / 2) * 100) / 100;
  s += ";" + i + ":-" + f + "px";
  var h = e + " solid " + a + "px;", g = ["position:absolute;width:" + o + "px;height:" + o + "px;z-index:-1;", s + ";" + l + ";", "border-bottom:" + h, "border-right:" + h, "background-color:" + n + ";"];
  return '<div style="' + g.join("") + '"></div>';
}
function PK(t, e) {
  var r = "cubic-bezier(0.23,1,0.32,1)", n = " " + t / 2 + "s " + r, a = "opacity" + n + ",visibility" + n;
  return e || (n = " " + t + "s " + r, a += Ae.transformSupported ? "," + Fb + n : ",left" + n + ",top" + n), NK + ":" + a;
}
function IC(t, e, r) {
  var n = t.toFixed(0) + "px", a = e.toFixed(0) + "px";
  if (!Ae.transformSupported)
    return r ? "top:" + a + ";left:" + n + ";" : [["top", a], ["left", n]];
  var i = Ae.transform3dSupported, o = "translate" + (i ? "3d" : "") + "(" + n + "," + a + (i ? ",0" : "") + ")";
  return r ? "top:0;left:0;" + Fb + ":" + o + ";" : [["top", 0], ["left", 0], [MO, o]];
}
function kK(t) {
  var e = [], r = t.get("fontSize"), n = t.getTextColor();
  n && e.push("color:" + n), e.push("font:" + t.getFont());
  var a = ge(t.get("lineHeight"), Math.round(r * 3 / 2));
  r && e.push("line-height:" + a + "px");
  var i = t.get("textShadowColor"), o = t.get("textShadowBlur") || 0, s = t.get("textShadowOffsetX") || 0, l = t.get("textShadowOffsetY") || 0;
  return i && o && e.push("text-shadow:" + s + "px " + l + "px " + o + "px " + i), w(["decoration", "align"], function(u) {
    var c = t.get(u);
    c && e.push("text-" + u + ":" + c);
  }), e.join(";");
}
function BK(t, e, r) {
  var n = [], a = t.get("transitionDuration"), i = t.get("backgroundColor"), o = t.get("shadowBlur"), s = t.get("shadowColor"), l = t.get("shadowOffsetX"), u = t.get("shadowOffsetY"), c = t.getModel("textStyle"), d = HM(t, "html"), p = l + "px " + u + "px " + o + "px " + s;
  return n.push("box-shadow:" + p), e && a && n.push(PK(a, r)), i && n.push("background-color:" + i), w(["width", "color", "radius"], function(f) {
    var h = "border-" + f, g = cM(h), v = t.get(g);
    v != null && n.push(h + ":" + v + (f === "color" ? "" : "px"));
  }), n.push(kK(c)), d != null && n.push("padding:" + Ps(d).join("px ") + "px"), n.join(";") + ";";
}
function NC(t, e, r, n, a) {
  var i = e && e.painter;
  if (r) {
    var o = i && i.getViewportRoot();
    o && LB(t, o, r, n, a);
  } else {
    t[0] = n, t[1] = a;
    var s = i && i.getViewportRootOffset();
    s && (t[0] += s.offsetLeft, t[1] += s.offsetTop);
  }
  t[2] = t[0] / e.getWidth(), t[3] = t[1] / e.getHeight();
}
var FK = (
  /** @class */
  function() {
    function t(e, r) {
      if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._alwaysShowContent = !1, this._firstShow = !0, this._longHide = !0, Ae.wxa)
        return null;
      var n = document.createElement("div");
      n.domBelongToZr = !0, this.el = n;
      var a = this._zr = e.getZr(), i = r.appendTo, o = i && (Y(i) ? document.querySelector(i) : gs(i) ? i : ae(i) && i(e.getDom()));
      NC(this._styleCoord, a, o, e.getWidth() / 2, e.getHeight() / 2), (o || e.getDom()).appendChild(n), this._api = e, this._container = o;
      var s = this;
      n.onmouseenter = function() {
        s._enterable && (clearTimeout(s._hideTimeout), s._show = !0), s._inContent = !0;
      }, n.onmousemove = function(l) {
        if (l = l || window.event, !s._enterable) {
          var u = a.handler, c = a.painter.getViewportRoot();
          Dr(c, l, !0), u.dispatch("mousemove", l);
        }
      }, n.onmouseleave = function() {
        s._inContent = !1, s._enterable && s._show && s.hideLater(s._hideDelay);
      };
    }
    return t.prototype.update = function(e) {
      if (!this._container) {
        var r = this._api.getDom(), n = IK(r, "position"), a = r.style;
        a.position !== "absolute" && n !== "absolute" && (a.position = "relative");
      }
      var i = e.get("alwaysShowContent");
      i && this._moveIfResized(), this._alwaysShowContent = i, this.el.className = e.get("className") || "";
    }, t.prototype.show = function(e, r) {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var n = this.el, a = n.style, i = this._styleCoord;
      n.innerHTML ? a.cssText = RK + BK(e, !this._firstShow, this._longHide) + IC(i[0], i[1], !0) + ("border-color:" + uo(r) + ";") + (e.get("extraCssText") || "") + (";pointer-events:" + (this._enterable ? "auto" : "none")) : a.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1;
    }, t.prototype.setContent = function(e, r, n, a, i) {
      var o = this.el;
      if (e == null) {
        o.innerHTML = "";
        return;
      }
      var s = "";
      if (Y(i) && n.get("trigger") === "item" && !wO(n) && (s = LK(n, a, i)), Y(e))
        o.innerHTML = e + s;
      else if (e) {
        o.innerHTML = "", V(e) || (e = [e]);
        for (var l = 0; l < e.length; l++)
          gs(e[l]) && e[l].parentNode !== o && o.appendChild(e[l]);
        if (s && o.childNodes.length) {
          var u = document.createElement("div");
          u.innerHTML = s, o.appendChild(u);
        }
      }
    }, t.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, t.prototype.getSize = function() {
      var e = this.el;
      return e ? [e.offsetWidth, e.offsetHeight] : [0, 0];
    }, t.prototype.moveTo = function(e, r) {
      if (this.el) {
        var n = this._styleCoord;
        if (NC(n, this._zr, this._container, e, r), n[0] != null && n[1] != null) {
          var a = this.el.style, i = IC(n[0], n[1]);
          w(i, function(o) {
            a[o[0]] = o[1];
          });
        }
      }
    }, t.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], r = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), r * this._zr.getHeight());
    }, t.prototype.hide = function() {
      var e = this, r = this.el.style;
      r.visibility = "hidden", r.opacity = "0", Ae.transform3dSupported && (r.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function() {
        return e._longHide = !0;
      }, 500);
    }, t.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(K(this.hide, this), e)) : this.hide());
    }, t.prototype.isShow = function() {
      return this._show;
    }, t.prototype.dispose = function() {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var e = this.el.parentNode;
      e && e.removeChild(this.el), this.el = this._container = null;
    }, t;
  }()
), GK = (
  /** @class */
  function() {
    function t(e) {
      this._show = !1, this._styleCoord = [0, 0, 0, 0], this._alwaysShowContent = !1, this._enterable = !0, this._zr = e.getZr(), OC(this._styleCoord, this._zr, e.getWidth() / 2, e.getHeight() / 2);
    }
    return t.prototype.update = function(e) {
      var r = e.get("alwaysShowContent");
      r && this._moveIfResized(), this._alwaysShowContent = r;
    }, t.prototype.show = function() {
      this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0;
    }, t.prototype.setContent = function(e, r, n, a, i) {
      var o = this;
      se(e) && Ue(""), this.el && this._zr.remove(this.el);
      var s = n.getModel("textStyle");
      this.el = new Pe({
        style: {
          rich: r.richTextStyles,
          text: e,
          lineHeight: 22,
          borderWidth: 1,
          borderColor: a,
          textShadowColor: s.get("textShadowColor"),
          fill: n.get(["textStyle", "color"]),
          padding: HM(n, "richText"),
          verticalAlign: "top",
          align: "left"
        },
        z: n.get("z")
      }), w(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(u) {
        o.el.style[u] = n.get(u);
      }), w(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(u) {
        o.el.style[u] = s.get(u) || 0;
      }), this._zr.add(this.el);
      var l = this;
      this.el.on("mouseover", function() {
        l._enterable && (clearTimeout(l._hideTimeout), l._show = !0), l._inContent = !0;
      }), this.el.on("mouseout", function() {
        l._enterable && l._show && l.hideLater(l._hideDelay), l._inContent = !1;
      });
    }, t.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, t.prototype.getSize = function() {
      var e = this.el, r = this.el.getBoundingRect(), n = RC(e.style);
      return [r.width + n.left + n.right, r.height + n.top + n.bottom];
    }, t.prototype.moveTo = function(e, r) {
      var n = this.el;
      if (n) {
        var a = this._styleCoord;
        OC(a, this._zr, e, r), e = a[0], r = a[1];
        var i = n.style, o = xa(i.borderWidth || 0), s = RC(i);
        n.x = e + o + s.left, n.y = r + o + s.top, n.markRedraw();
      }
    }, t.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], r = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), r * this._zr.getHeight());
    }, t.prototype.hide = function() {
      this.el && this.el.hide(), this._show = !1;
    }, t.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(K(this.hide, this), e)) : this.hide());
    }, t.prototype.isShow = function() {
      return this._show;
    }, t.prototype.dispose = function() {
      this._zr.remove(this.el);
    }, t;
  }()
);
function xa(t) {
  return Math.max(0, t);
}
function RC(t) {
  var e = xa(t.shadowBlur || 0), r = xa(t.shadowOffsetX || 0), n = xa(t.shadowOffsetY || 0);
  return {
    left: xa(e - r),
    right: xa(e + r),
    top: xa(e - n),
    bottom: xa(e + n)
  };
}
function OC(t, e, r, n) {
  t[0] = r, t[1] = n, t[2] = t[0] / e.getWidth(), t[3] = t[1] / e.getHeight();
}
var UK = new Re({
  shape: {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }
}), zK = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n) {
      if (!(Ae.node || !n.getDom())) {
        var a = r.getComponent("tooltip"), i = this._renderMode = p3(a.get("renderMode"));
        this._tooltipContent = i === "richText" ? new GK(n) : new FK(n, {
          appendTo: a.get("appendToBody", !0) ? "body" : a.get("appendTo", !0)
        });
      }
    }, e.prototype.render = function(r, n, a) {
      if (!(Ae.node || !a.getDom())) {
        this.group.removeAll(), this._tooltipModel = r, this._ecModel = n, this._api = a;
        var i = this._tooltipContent;
        i.update(r), i.setEnterable(r.get("enterable")), this._initGlobalListener(), this._keepShow(), this._renderMode !== "richText" && r.get("transitionDuration") ? Gs(this, "_updatePosition", 50, "fixRate") : yu(this, "_updatePosition");
      }
    }, e.prototype._initGlobalListener = function() {
      var r = this._tooltipModel, n = r.get("triggerOn");
      hO("itemTooltip", this._api, K(function(a, i, o) {
        n !== "none" && (n.indexOf(a) >= 0 ? this._tryShow(i, o) : a === "leave" && this._hide(o));
      }, this));
    }, e.prototype._keepShow = function() {
      var r = this._tooltipModel, n = this._ecModel, a = this._api, i = r.get("triggerOn");
      if (this._lastX != null && this._lastY != null && i !== "none" && i !== "click") {
        var o = this;
        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
          !a.isDisposed() && o.manuallyShowTip(r, n, a, {
            x: o._lastX,
            y: o._lastY,
            dataByCoordSys: o._lastDataByCoordSys
          });
        });
      }
    }, e.prototype.manuallyShowTip = function(r, n, a, i) {
      if (!(i.from === this.uid || Ae.node || !a.getDom())) {
        var o = LC(i, a);
        this._ticket = "";
        var s = i.dataByCoordSys, l = WK(i, n, a);
        if (l) {
          var u = l.el.getBoundingRect().clone();
          u.applyTransform(l.el.transform), this._tryShow({
            offsetX: u.x + u.width / 2,
            offsetY: u.y + u.height / 2,
            target: l.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else if (i.tooltip && i.x != null && i.y != null) {
          var c = UK;
          c.x = i.x, c.y = i.y, c.update(), pe(c).tooltipConfig = {
            name: null,
            option: i.tooltip
          }, this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            target: c
          }, o);
        } else if (s)
          this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            position: i.position,
            dataByCoordSys: s,
            tooltipOption: i.tooltipOption
          }, o);
        else if (i.seriesIndex != null) {
          if (this._manuallyAxisShowTip(r, n, a, i))
            return;
          var d = gO(i, n), p = d.point[0], f = d.point[1];
          p != null && f != null && this._tryShow({
            offsetX: p,
            offsetY: f,
            target: d.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else i.x != null && i.y != null && (a.dispatchAction({
          type: "updateAxisPointer",
          x: i.x,
          y: i.y
        }), this._tryShow({
          offsetX: i.x,
          offsetY: i.y,
          position: i.position,
          target: a.getZr().findHover(i.x, i.y).target
        }, o));
      }
    }, e.prototype.manuallyHideTip = function(r, n, a, i) {
      var o = this._tooltipContent;
      this._tooltipModel && o.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i.from !== this.uid && this._hide(LC(i, a));
    }, e.prototype._manuallyAxisShowTip = function(r, n, a, i) {
      var o = i.seriesIndex, s = i.dataIndex, l = n.getComponent("axisPointer").coordSysAxesInfo;
      if (!(o == null || s == null || l == null)) {
        var u = n.getSeriesByIndex(o);
        if (u) {
          var c = u.getData(), d = gl([c.getItemModel(s), u, (u.coordinateSystem || {}).model], this._tooltipModel);
          if (d.get("trigger") === "axis")
            return a.dispatchAction({
              type: "updateAxisPointer",
              seriesIndex: o,
              dataIndex: s,
              position: i.position
            }), !0;
        }
      }
    }, e.prototype._tryShow = function(r, n) {
      var a = r.target, i = this._tooltipModel;
      if (i) {
        this._lastX = r.offsetX, this._lastY = r.offsetY;
        var o = r.dataByCoordSys;
        if (o && o.length)
          this._showAxisTooltip(o, r);
        else if (a) {
          var s = pe(a);
          if (s.ssrType === "legend")
            return;
          this._lastDataByCoordSys = null;
          var l, u;
          Wi(a, function(c) {
            if (pe(c).dataIndex != null)
              return l = c, !0;
            if (pe(c).tooltipConfig != null)
              return u = c, !0;
          }, !0), l ? this._showSeriesItemTooltip(r, l, n) : u ? this._showComponentItemTooltip(r, u, n) : this._hide(n);
        } else
          this._lastDataByCoordSys = null, this._hide(n);
      }
    }, e.prototype._showOrMove = function(r, n) {
      var a = r.get("showDelay");
      n = K(n, this), clearTimeout(this._showTimout), a > 0 ? this._showTimout = setTimeout(n, a) : n();
    }, e.prototype._showAxisTooltip = function(r, n) {
      var a = this._ecModel, i = this._tooltipModel, o = [n.offsetX, n.offsetY], s = gl([n.tooltipOption], i), l = this._renderMode, u = [], c = Mt("section", {
        blocks: [],
        noHeader: !0
      }), d = [], p = new Jh();
      w(r, function(_) {
        w(_.dataByAxis, function(y) {
          var b = a.getComponent(y.axisDim + "Axis", y.axisIndex), S = y.value;
          if (!(!b || S == null)) {
            var E = dO(S, b.axis, a, y.seriesDataIndices, y.valueLabelOpt), T = Mt("section", {
              header: E,
              noHeader: !Xr(E),
              sortBlocks: !0,
              blocks: []
            });
            c.blocks.push(T), w(y.seriesDataIndices, function(x) {
              var C = a.getSeriesByIndex(x.seriesIndex), A = x.dataIndexInside, D = C.getDataParams(A);
              if (!(D.dataIndex < 0)) {
                D.axisDim = y.axisDim, D.axisIndex = y.axisIndex, D.axisType = y.axisType, D.axisId = y.axisId, D.axisValue = By(b.axis, {
                  value: S
                }), D.axisValueLabel = E, D.marker = p.makeTooltipMarker("item", uo(D.color), l);
                var M = yE(C.formatTooltip(A, !0, null)), I = M.frag;
                if (I) {
                  var N = gl([C], i).get("valueFormatter");
                  T.blocks.push(N ? G({
                    valueFormatter: N
                  }, I) : I);
                }
                M.text && d.push(M.text), u.push(D);
              }
            });
          }
        });
      }), c.blocks.reverse(), d.reverse();
      var f = n.position, h = s.get("order"), g = CE(c, p, l, h, a.get("useUTC"), s.get("textStyle"));
      g && d.unshift(g);
      var v = l === "richText" ? `

` : "<br/>", m = d.join(v);
      this._showOrMove(s, function() {
        this._updateContentNotChangedOnAxis(r, u) ? this._updatePosition(s, f, o[0], o[1], this._tooltipContent, u) : this._showTooltipContent(s, m, u, Math.random() + "", o[0], o[1], f, null, p);
      });
    }, e.prototype._showSeriesItemTooltip = function(r, n, a) {
      var i = this._ecModel, o = pe(n), s = o.seriesIndex, l = i.getSeriesByIndex(s), u = o.dataModel || l, c = o.dataIndex, d = o.dataType, p = u.getData(d), f = this._renderMode, h = r.positionDefault, g = gl([p.getItemModel(c), u, l && (l.coordinateSystem || {}).model], this._tooltipModel, h ? {
        position: h
      } : null), v = g.get("trigger");
      if (!(v != null && v !== "item")) {
        var m = u.getDataParams(c, d), _ = new Jh();
        m.marker = _.makeTooltipMarker("item", uo(m.color), f);
        var y = yE(u.formatTooltip(c, !1, d)), b = g.get("order"), S = g.get("valueFormatter"), E = y.frag, T = E ? CE(S ? G({
          valueFormatter: S
        }, E) : E, _, f, b, i.get("useUTC"), g.get("textStyle")) : y.text, x = "item_" + u.name + "_" + c;
        this._showOrMove(g, function() {
          this._showTooltipContent(g, T, m, x, r.offsetX, r.offsetY, r.position, r.target, _);
        }), a({
          type: "showTip",
          dataIndexInside: c,
          dataIndex: p.getRawIndex(c),
          seriesIndex: s,
          from: this.uid
        });
      }
    }, e.prototype._showComponentItemTooltip = function(r, n, a) {
      var i = this._renderMode === "html", o = pe(n), s = o.tooltipConfig, l = s.option || {}, u = l.encodeHTMLContent;
      if (Y(l)) {
        var c = l;
        l = {
          content: c,
          // Fixed formatter
          formatter: c
        }, u = !0;
      }
      u && i && l.content && (l = le(l), l.content = tr(l.content));
      var d = [l], p = this._ecModel.getComponent(o.componentMainType, o.componentIndex);
      p && d.push(p), d.push({
        formatter: l.content
      });
      var f = r.positionDefault, h = gl(d, this._tooltipModel, f ? {
        position: f
      } : null), g = h.get("content"), v = Math.random() + "", m = new Jh();
      this._showOrMove(h, function() {
        var _ = le(h.get("formatterParams") || {});
        this._showTooltipContent(h, g, _, v, r.offsetX, r.offsetY, r.position, n, m);
      }), a({
        type: "showTip",
        from: this.uid
      });
    }, e.prototype._showTooltipContent = function(r, n, a, i, o, s, l, u, c) {
      if (this._ticket = "", !(!r.get("showContent") || !r.get("show"))) {
        var d = this._tooltipContent;
        d.setEnterable(r.get("enterable"));
        var p = r.get("formatter");
        l = l || r.get("position");
        var f = n, h = this._getNearestPoint([o, s], a, r.get("trigger"), r.get("borderColor")), g = h.color;
        if (p)
          if (Y(p)) {
            var v = r.ecModel.get("useUTC"), m = V(a) ? a[0] : a, _ = m && m.axisType && m.axisType.indexOf("time") >= 0;
            f = p, _ && (f = mf(m.axisValue, f, v)), f = dM(f, a, !0);
          } else if (ae(p)) {
            var y = K(function(b, S) {
              b === this._ticket && (d.setContent(S, c, r, g, l), this._updatePosition(r, l, o, s, d, a, u));
            }, this);
            this._ticket = i, f = p(a, i, y);
          } else
            f = p;
        d.setContent(f, c, r, g, l), d.show(r, g), this._updatePosition(r, l, o, s, d, a, u);
      }
    }, e.prototype._getNearestPoint = function(r, n, a, i) {
      if (a === "axis" || V(n))
        return {
          color: i || (this._renderMode === "html" ? "#fff" : "none")
        };
      if (!V(n))
        return {
          color: i || n.color || n.borderColor
        };
    }, e.prototype._updatePosition = function(r, n, a, i, o, s, l) {
      var u = this._api.getWidth(), c = this._api.getHeight();
      n = n || r.get("position");
      var d = o.getSize(), p = r.get("align"), f = r.get("verticalAlign"), h = l && l.getBoundingRect().clone();
      if (l && h.applyTransform(l.transform), ae(n) && (n = n([a, i], s, o.el, h, {
        viewSize: [u, c],
        contentSize: d.slice()
      })), V(n))
        a = q(n[0], u), i = q(n[1], c);
      else if (se(n)) {
        var g = n;
        g.width = d[0], g.height = d[1];
        var v = Et(g, {
          width: u,
          height: c
        });
        a = v.x, i = v.y, p = null, f = null;
      } else if (Y(n) && l) {
        var m = HK(n, h, d, r.get("borderWidth"));
        a = m[0], i = m[1];
      } else {
        var m = VK(a, i, o, u, c, p ? null : 20, f ? null : 20);
        a = m[0], i = m[1];
      }
      if (p && (a -= PC(p) ? d[0] / 2 : p === "right" ? d[0] : 0), f && (i -= PC(f) ? d[1] / 2 : f === "bottom" ? d[1] : 0), wO(r)) {
        var m = $K(a, i, o, u, c);
        a = m[0], i = m[1];
      }
      o.moveTo(a, i);
    }, e.prototype._updateContentNotChangedOnAxis = function(r, n) {
      var a = this._lastDataByCoordSys, i = this._cbParamsList, o = !!a && a.length === r.length;
      return o && w(a, function(s, l) {
        var u = s.dataByAxis || [], c = r[l] || {}, d = c.dataByAxis || [];
        o = o && u.length === d.length, o && w(u, function(p, f) {
          var h = d[f] || {}, g = p.seriesDataIndices || [], v = h.seriesDataIndices || [];
          o = o && p.value === h.value && p.axisType === h.axisType && p.axisId === h.axisId && g.length === v.length, o && w(g, function(m, _) {
            var y = v[_];
            o = o && m.seriesIndex === y.seriesIndex && m.dataIndex === y.dataIndex;
          }), i && w(p.seriesDataIndices, function(m) {
            var _ = m.seriesIndex, y = n[_], b = i[_];
            y && b && b.data !== y.data && (o = !1);
          });
        });
      }), this._lastDataByCoordSys = r, this._cbParamsList = n, !!o;
    }, e.prototype._hide = function(r) {
      this._lastDataByCoordSys = null, r({
        type: "hideTip",
        from: this.uid
      });
    }, e.prototype.dispose = function(r, n) {
      Ae.node || !n.getDom() || (yu(this, "_updatePosition"), this._tooltipContent.dispose(), u_("itemTooltip", n));
    }, e.type = "tooltip", e;
  }(st)
);
function gl(t, e, r) {
  var n = e.ecModel, a;
  r ? (a = new He(r, n, n), a = new He(e.option, a, n)) : a = e;
  for (var i = t.length - 1; i >= 0; i--) {
    var o = t[i];
    o && (o instanceof He && (o = o.get("tooltip", !0)), Y(o) && (o = {
      formatter: o
    }), o && (a = new He(o, a, n)));
  }
  return a;
}
function LC(t, e) {
  return t.dispatchAction || K(e.dispatchAction, e);
}
function VK(t, e, r, n, a, i, o) {
  var s = r.getSize(), l = s[0], u = s[1];
  return i != null && (t + l + i + 2 > n ? t -= l + i : t += i), o != null && (e + u + o > a ? e -= u + o : e += o), [t, e];
}
function $K(t, e, r, n, a) {
  var i = r.getSize(), o = i[0], s = i[1];
  return t = Math.min(t + o, n) - o, e = Math.min(e + s, a) - s, t = Math.max(t, 0), e = Math.max(e, 0), [t, e];
}
function HK(t, e, r, n) {
  var a = r[0], i = r[1], o = Math.ceil(Math.SQRT2 * n) + 8, s = 0, l = 0, u = e.width, c = e.height;
  switch (t) {
    case "inside":
      s = e.x + u / 2 - a / 2, l = e.y + c / 2 - i / 2;
      break;
    case "top":
      s = e.x + u / 2 - a / 2, l = e.y - i - o;
      break;
    case "bottom":
      s = e.x + u / 2 - a / 2, l = e.y + c + o;
      break;
    case "left":
      s = e.x - a - o, l = e.y + c / 2 - i / 2;
      break;
    case "right":
      s = e.x + u + o, l = e.y + c / 2 - i / 2;
  }
  return [s, l];
}
function PC(t) {
  return t === "center" || t === "middle";
}
function WK(t, e, r) {
  var n = j_(t).queryOptionMap, a = n.keys()[0];
  if (!(!a || a === "series")) {
    var i = zu(e, a, n.get(a), {
      useDefault: !1,
      enableAll: !1,
      enableNone: !1
    }), o = i.models[0];
    if (o) {
      var s = r.getViewOfComponentModel(o), l;
      if (s.group.traverse(function(u) {
        var c = pe(u).tooltipConfig;
        if (c && c.name === t.name)
          return l = u, !0;
      }), l)
        return {
          componentMainType: a,
          componentIndex: o.componentIndex,
          el: l
        };
    }
  }
}
function $re(t) {
  kt(Gf), t.registerComponentModel(DK), t.registerComponentView(zK), t.registerAction({
    type: "showTip",
    event: "showTip",
    update: "tooltip:manuallyShowTip"
  }, dt), t.registerAction({
    type: "hideTip",
    event: "hideTip",
    update: "tooltip:manuallyHideTip"
  }, dt);
}
var qK = ["rect", "polygon", "keep", "clear"];
function YK(t, e) {
  var r = Ye(t ? t.brush : []);
  if (r.length) {
    var n = [];
    w(r, function(l) {
      var u = l.hasOwnProperty("toolbox") ? l.toolbox : [];
      u instanceof Array && (n = n.concat(u));
    });
    var a = t && t.toolbox;
    V(a) && (a = a[0]), a || (a = {
      feature: {}
    }, t.toolbox = [a]);
    var i = a.feature || (a.feature = {}), o = i.brush || (i.brush = {}), s = o.type || (o.type = []);
    s.push.apply(s, n), KK(s), e && !s.length && s.push.apply(s, qK);
  }
}
function KK(t) {
  var e = {};
  w(t, function(r) {
    e[r] = 1;
  }), t.length = 0, w(e, function(r, n) {
    t.push(n);
  });
}
var kC = w;
function BC(t) {
  if (t) {
    for (var e in t)
      if (t.hasOwnProperty(e))
        return !0;
  }
}
function g_(t, e, r) {
  var n = {};
  return kC(e, function(i) {
    var o = n[i] = a();
    kC(t[i], function(s, l) {
      if (wt.isValidType(l)) {
        var u = {
          type: l,
          visual: s
        };
        r && r(u, i), o[l] = new wt(u), l === "opacity" && (u = le(u), u.type = "colorAlpha", o.__hidden.__alphaForOpacity = new wt(u));
      }
    });
  }), n;
  function a() {
    var i = function() {
    };
    i.prototype.__hidden = i.prototype;
    var o = new i();
    return o;
  }
}
function NO(t, e, r) {
  var n;
  w(r, function(a) {
    e.hasOwnProperty(a) && BC(e[a]) && (n = !0);
  }), n && w(r, function(a) {
    e.hasOwnProperty(a) && BC(e[a]) ? t[a] = le(e[a]) : delete t[a];
  });
}
function ZK(t, e, r, n, a, i) {
  var o = {};
  w(t, function(d) {
    var p = wt.prepareVisualTypes(e[d]);
    o[d] = p;
  });
  var s;
  function l(d) {
    return wy(r, s, d);
  }
  function u(d, p) {
    eI(r, s, d, p);
  }
  r.each(c);
  function c(d, p) {
    s = d;
    var f = r.getRawDataItem(s);
    if (!(f && f.visualMap === !1))
      for (var h = n.call(a, d), g = e[h], v = o[h], m = 0, _ = v.length; m < _; m++) {
        var y = v[m];
        g[y] && g[y].applyVisual(d, l, u);
      }
  }
}
function XK(t, e, r, n) {
  var a = {};
  return w(t, function(i) {
    var o = wt.prepareVisualTypes(e[i]);
    a[i] = o;
  }), {
    progress: function(o, s) {
      var l;
      n != null && (l = s.getDimensionIndex(n));
      function u(S) {
        return wy(s, d, S);
      }
      function c(S, E) {
        eI(s, d, S, E);
      }
      for (var d, p = s.getStore(); (d = o.next()) != null; ) {
        var f = s.getRawDataItem(d);
        if (!(f && f.visualMap === !1))
          for (var h = n != null ? p.get(l, d) : d, g = r(h), v = e[g], m = a[g], _ = 0, y = m.length; _ < y; _++) {
            var b = m[_];
            v[b] && v[b].applyVisual(h, u, c);
          }
      }
    }
  };
}
function QK(t) {
  var e = t.brushType, r = {
    point: function(n) {
      return FC[e].point(n, r, t);
    },
    rect: function(n) {
      return FC[e].rect(n, r, t);
    }
  };
  return r;
}
var FC = {
  lineX: GC(0),
  lineY: GC(1),
  rect: {
    point: function(t, e, r) {
      return t && r.boundingRect.contain(t[0], t[1]);
    },
    rect: function(t, e, r) {
      return t && r.boundingRect.intersect(t);
    }
  },
  polygon: {
    point: function(t, e, r) {
      return t && r.boundingRect.contain(t[0], t[1]) && ki(r.range, t[0], t[1]);
    },
    rect: function(t, e, r) {
      var n = r.range;
      if (!t || n.length <= 1)
        return !1;
      var a = t.x, i = t.y, o = t.width, s = t.height, l = n[0];
      if (ki(n, a, i) || ki(n, a + o, i) || ki(n, a, i + s) || ki(n, a + o, i + s) || Te.create(t).contain(l[0], l[1]) || Al(a, i, a + o, i, n) || Al(a, i, a, i + s, n) || Al(a + o, i, a + o, i + s, n) || Al(a, i + s, a + o, i + s, n))
        return !0;
    }
  }
};
function GC(t) {
  var e = ["x", "y"], r = ["width", "height"];
  return {
    point: function(n, a, i) {
      if (n) {
        var o = i.range, s = n[t];
        return vl(s, o);
      }
    },
    rect: function(n, a, i) {
      if (n) {
        var o = i.range, s = [n[e[t]], n[e[t]] + n[r[t]]];
        return s[1] < s[0] && s.reverse(), vl(s[0], o) || vl(s[1], o) || vl(o[0], s) || vl(o[1], s);
      }
    }
  };
}
function vl(t, e) {
  return e[0] <= t && t <= e[1];
}
var UC = ["inBrush", "outOfBrush"], gv = "__ecBrushSelect", v_ = "__ecInBrushSelectEvent";
function RO(t) {
  t.eachComponent({
    mainType: "brush"
  }, function(e) {
    var r = e.brushTargetManager = new kb(e.option, t);
    r.setInputRanges(e.areas, t);
  });
}
function jK(t, e, r) {
  var n = [], a, i;
  t.eachComponent({
    mainType: "brush"
  }, function(o) {
    r && r.type === "takeGlobalCursor" && o.setBrushOption(r.key === "brush" ? r.brushOption : {
      brushType: !1
    });
  }), RO(t), t.eachComponent({
    mainType: "brush"
  }, function(o, s) {
    var l = {
      brushId: o.id,
      brushIndex: s,
      brushName: o.name,
      areas: le(o.areas),
      selected: []
    };
    n.push(l);
    var u = o.option, c = u.brushLink, d = [], p = [], f = [], h = !1;
    s || (a = u.throttleType, i = u.throttleDelay);
    var g = $(o.areas, function(S) {
      var E = rZ[S.brushType], T = ie({
        boundingRect: E ? E(S) : void 0
      }, S);
      return T.selectors = QK(T), T;
    }), v = g_(o.option, UC, function(S) {
      S.mappingMethod = "fixed";
    });
    V(c) && w(c, function(S) {
      d[S] = 1;
    });
    function m(S) {
      return c === "all" || !!d[S];
    }
    function _(S) {
      return !!S.length;
    }
    t.eachSeries(function(S, E) {
      var T = f[E] = [];
      S.subType === "parallel" ? y(S, E) : b(S, E, T);
    });
    function y(S, E) {
      var T = S.coordinateSystem;
      h = h || T.hasAxisBrushed(), m(E) && T.eachActiveState(S.getData(), function(x, C) {
        x === "active" && (p[C] = 1);
      });
    }
    function b(S, E, T) {
      if (!(!S.brushSelector || tZ(o, E)) && (w(g, function(C) {
        o.brushTargetManager.controlSeries(C, S, t) && T.push(C), h = h || _(T);
      }), m(E) && _(T))) {
        var x = S.getData();
        x.each(function(C) {
          zC(S, T, x, C) && (p[C] = 1);
        });
      }
    }
    t.eachSeries(function(S, E) {
      var T = {
        seriesId: S.id,
        seriesIndex: E,
        seriesName: S.name,
        dataIndex: []
      };
      l.selected.push(T);
      var x = f[E], C = S.getData(), A = m(E) ? function(D) {
        return p[D] ? (T.dataIndex.push(C.getRawIndex(D)), "inBrush") : "outOfBrush";
      } : function(D) {
        return zC(S, x, C, D) ? (T.dataIndex.push(C.getRawIndex(D)), "inBrush") : "outOfBrush";
      };
      (m(E) ? h : _(x)) && ZK(UC, v, C, A);
    });
  }), JK(e, a, i, n, r);
}
function JK(t, e, r, n, a) {
  if (a) {
    var i = t.getZr();
    if (!i[v_]) {
      i[gv] || (i[gv] = eZ);
      var o = Gs(i, gv, r, e);
      o(t, n);
    }
  }
}
function eZ(t, e) {
  if (!t.isDisposed()) {
    var r = t.getZr();
    r[v_] = !0, t.dispatchAction({
      type: "brushSelect",
      batch: e
    }), r[v_] = !1;
  }
}
function zC(t, e, r, n) {
  for (var a = 0, i = e.length; a < i; a++) {
    var o = e[a];
    if (t.brushSelector(n, r, o.selectors, o))
      return !0;
  }
}
function tZ(t, e) {
  var r = t.option.seriesIndex;
  return r != null && r !== "all" && (V(r) ? xe(r, e) < 0 : e !== r);
}
var rZ = {
  rect: function(t) {
    return VC(t.range);
  },
  polygon: function(t) {
    for (var e, r = t.range, n = 0, a = r.length; n < a; n++) {
      e = e || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
      var i = r[n];
      i[0] < e[0][0] && (e[0][0] = i[0]), i[0] > e[0][1] && (e[0][1] = i[0]), i[1] < e[1][0] && (e[1][0] = i[1]), i[1] > e[1][1] && (e[1][1] = i[1]);
    }
    return e && VC(e);
  }
};
function VC(t) {
  return new Te(t[0][0], t[1][0], t[0][1] - t[0][0], t[1][1] - t[1][0]);
}
var nZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n) {
      this.ecModel = r, this.api = n, this.model, (this._brushController = new ub(n.getZr())).on("brush", K(this._onBrush, this)).mount();
    }, e.prototype.render = function(r, n, a, i) {
      this.model = r, this._updateController(r, n, a, i);
    }, e.prototype.updateTransform = function(r, n, a, i) {
      RO(n), this._updateController(r, n, a, i);
    }, e.prototype.updateVisual = function(r, n, a, i) {
      this.updateTransform(r, n, a, i);
    }, e.prototype.updateView = function(r, n, a, i) {
      this._updateController(r, n, a, i);
    }, e.prototype._updateController = function(r, n, a, i) {
      (!i || i.$from !== r.id) && this._brushController.setPanels(r.brushTargetManager.makePanelOpts(a)).enableBrush(r.brushOption).updateCovers(r.areas.slice());
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.prototype._onBrush = function(r) {
      var n = this.model.id, a = this.model.brushTargetManager.setOutputRanges(r.areas, this.ecModel);
      (!r.isEnd || r.removeOnClick) && this.api.dispatchAction({
        type: "brush",
        brushId: n,
        areas: le(a),
        $from: n
      }), r.isEnd && this.api.dispatchAction({
        type: "brushEnd",
        brushId: n,
        areas: le(a),
        $from: n
      });
    }, e.type = "brush", e;
  }(st)
), aZ = "#ddd", iZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.areas = [], r.brushOption = {}, r;
    }
    return e.prototype.optionUpdated = function(r, n) {
      var a = this.option;
      !n && NO(a, r, ["inBrush", "outOfBrush"]);
      var i = a.inBrush = a.inBrush || {};
      a.outOfBrush = a.outOfBrush || {
        color: aZ
      }, i.hasOwnProperty("liftZ") || (i.liftZ = 5);
    }, e.prototype.setAreas = function(r) {
      r && (this.areas = $(r, function(n) {
        return $C(this.option, n);
      }, this));
    }, e.prototype.setBrushOption = function(r) {
      this.brushOption = $C(this.option, r), this.brushType = this.brushOption.brushType;
    }, e.type = "brush", e.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], e.defaultOption = {
      seriesIndex: "all",
      brushType: "rect",
      brushMode: "single",
      transformable: !0,
      brushStyle: {
        borderWidth: 1,
        color: "rgba(210,219,238,0.3)",
        borderColor: "#D2DBEE"
      },
      throttleType: "fixRate",
      throttleDelay: 0,
      removeOnClick: !0,
      z: 1e4
    }, e;
  }(De)
);
function $C(t, e) {
  return be({
    brushType: t.brushType,
    brushMode: t.brushMode,
    transformable: t.transformable,
    brushStyle: new He(t.brushStyle).getItemStyle(),
    removeOnClick: t.removeOnClick,
    z: t.z
  }, e, !0);
}
var oZ = ["rect", "polygon", "lineX", "lineY", "keep", "clear"], sZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      return t !== null && t.apply(this, arguments) || this;
    }
    return e.prototype.render = function(r, n, a) {
      var i, o, s;
      n.eachComponent({
        mainType: "brush"
      }, function(l) {
        i = l.brushType, o = l.brushOption.brushMode || "single", s = s || !!l.areas.length;
      }), this._brushType = i, this._brushMode = o, w(r.get("type", !0), function(l) {
        r.setIconStatus(l, (l === "keep" ? o === "multiple" : l === "clear" ? s : l === i) ? "emphasis" : "normal");
      });
    }, e.prototype.updateView = function(r, n, a) {
      this.render(r, n, a);
    }, e.prototype.getIcons = function() {
      var r = this.model, n = r.get("icon", !0), a = {};
      return w(r.get("type", !0), function(i) {
        n[i] && (a[i] = n[i]);
      }), a;
    }, e.prototype.onclick = function(r, n, a) {
      var i = this._brushType, o = this._brushMode;
      a === "clear" ? (n.dispatchAction({
        type: "axisAreaSelect",
        intervals: []
      }), n.dispatchAction({
        type: "brush",
        command: "clear",
        // Clear all areas of all brush components.
        areas: []
      })) : n.dispatchAction({
        type: "takeGlobalCursor",
        key: "brush",
        brushOption: {
          brushType: a === "keep" ? i : i === a ? !1 : a,
          brushMode: a === "keep" ? o === "multiple" ? "single" : "multiple" : o
        }
      });
    }, e.getDefaultOption = function(r) {
      var n = {
        show: !0,
        type: oZ.slice(),
        icon: {
          /* eslint-disable */
          rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
          polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
          lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
          lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
          keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
          clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
          // jshint ignore:line
          /* eslint-enable */
        },
        // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`
        title: r.getLocaleModel().get(["toolbox", "brush", "title"])
      };
      return n;
    }, e;
  }(Or)
);
function Hre(t) {
  t.registerComponentView(nZ), t.registerComponentModel(iZ), t.registerPreprocessor(YK), t.registerVisual(t.PRIORITY.VISUAL.BRUSH, jK), t.registerAction({
    type: "brush",
    event: "brush",
    update: "updateVisual"
  }, function(e, r) {
    r.eachComponent({
      mainType: "brush",
      query: e
    }, function(n) {
      n.setAreas(e.areas);
    });
  }), t.registerAction({
    type: "brushSelect",
    event: "brushSelected",
    update: "none"
  }, dt), t.registerAction({
    type: "brushEnd",
    event: "brushEnd",
    update: "none"
  }, dt), jo("brush", sZ);
}
var lZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, r;
    }
    return e.type = "title", e.defaultOption = {
      // zlevel: 0,
      z: 6,
      show: !0,
      text: "",
      target: "blank",
      subtext: "",
      subtarget: "blank",
      left: 0,
      top: 0,
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      textStyle: {
        fontSize: 18,
        fontWeight: "bold",
        color: "#464646"
      },
      subtextStyle: {
        fontSize: 12,
        color: "#6E7079"
      }
    }, e;
  }(De)
), uZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.render = function(r, n, a) {
      if (this.group.removeAll(), !!r.get("show")) {
        var i = this.group, o = r.getModel("textStyle"), s = r.getModel("subtextStyle"), l = r.get("textAlign"), u = ge(r.get("textBaseline"), r.get("textVerticalAlign")), c = new Pe({
          style: Je(o, {
            text: r.get("text"),
            fill: o.getTextColor()
          }, {
            disableBox: !0
          }),
          z2: 10
        }), d = c.getBoundingRect(), p = r.get("subtext"), f = new Pe({
          style: Je(s, {
            text: p,
            fill: s.getTextColor(),
            y: d.height + r.get("itemGap"),
            verticalAlign: "top"
          }, {
            disableBox: !0
          }),
          z2: 10
        }), h = r.get("link"), g = r.get("sublink"), v = r.get("triggerEvent", !0);
        c.silent = !h && !v, f.silent = !g && !v, h && c.on("click", function() {
          fp(h, "_" + r.get("target"));
        }), g && f.on("click", function() {
          fp(g, "_" + r.get("subtarget"));
        }), pe(c).eventData = pe(f).eventData = v ? {
          componentType: "title",
          componentIndex: r.componentIndex
        } : null, i.add(c), p && i.add(f);
        var m = i.getBoundingRect(), _ = r.getBoxLayoutParams();
        _.width = m.width, _.height = m.height;
        var y = Et(_, {
          width: a.getWidth(),
          height: a.getHeight()
        }, r.get("padding"));
        l || (l = r.get("left") || r.get("right"), l === "middle" && (l = "center"), l === "right" ? y.x += y.width : l === "center" && (y.x += y.width / 2)), u || (u = r.get("top") || r.get("bottom"), u === "center" && (u = "middle"), u === "bottom" ? y.y += y.height : u === "middle" && (y.y += y.height / 2), u = u || "top"), i.x = y.x, i.y = y.y, i.markRedraw();
        var b = {
          align: l,
          verticalAlign: u
        };
        c.setStyle(b), f.setStyle(b), m = i.getBoundingRect();
        var S = y.margin, E = r.getItemStyle(["color", "opacity"]);
        E.fill = r.get("backgroundColor");
        var T = new Re({
          shape: {
            x: m.x - S[3],
            y: m.y - S[0],
            width: m.width + S[1] + S[3],
            height: m.height + S[0] + S[2],
            r: r.get("borderRadius")
          },
          style: E,
          subPixelOptimize: !0,
          silent: !0
        });
        i.add(T);
      }
    }, e.type = "title", e;
  }(st)
);
function Wre(t) {
  t.registerComponentModel(lZ), t.registerComponentView(uZ);
}
var HC = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.layoutMode = "box", r;
    }
    return e.prototype.init = function(r, n, a) {
      this.mergeDefaultAndTheme(r, a), this._initData();
    }, e.prototype.mergeOption = function(r) {
      t.prototype.mergeOption.apply(this, arguments), this._initData();
    }, e.prototype.setCurrentIndex = function(r) {
      r == null && (r = this.option.currentIndex);
      var n = this._data.count();
      this.option.loop ? r = (r % n + n) % n : (r >= n && (r = n - 1), r < 0 && (r = 0)), this.option.currentIndex = r;
    }, e.prototype.getCurrentIndex = function() {
      return this.option.currentIndex;
    }, e.prototype.isIndexMax = function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    }, e.prototype.setPlayState = function(r) {
      this.option.autoPlay = !!r;
    }, e.prototype.getPlayState = function() {
      return !!this.option.autoPlay;
    }, e.prototype._initData = function() {
      var r = this.option, n = r.data || [], a = r.axisType, i = this._names = [], o;
      a === "category" ? (o = [], w(n, function(u, c) {
        var d = St(Is(u), ""), p;
        se(u) ? (p = le(u), p.value = c) : p = c, o.push(p), i.push(d);
      })) : o = n;
      var s = {
        category: "ordinal",
        time: "time",
        value: "number"
      }[a] || "number", l = this._data = new rr([{
        name: "value",
        type: s
      }], this);
      l.initData(o, i);
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.getCategories = function() {
      if (this.get("axisType") === "category")
        return this._names.slice();
    }, e.type = "timeline", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 4,
      show: !0,
      axisType: "time",
      realtime: !0,
      left: "20%",
      top: null,
      right: "20%",
      bottom: 0,
      width: null,
      height: 40,
      padding: 5,
      controlPosition: "left",
      autoPlay: !1,
      rewind: !1,
      loop: !0,
      playInterval: 2e3,
      currentIndex: 0,
      itemStyle: {},
      label: {
        color: "#000"
      },
      data: []
    }, e;
  }(De)
), OO = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "timeline.slider", e.defaultOption = ti(HC.defaultOption, {
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      orient: "horizontal",
      inverse: !1,
      tooltip: {
        trigger: "item"
        // data item may also have tootip attr.
      },
      symbol: "circle",
      symbolSize: 12,
      lineStyle: {
        show: !0,
        width: 2,
        color: "#DAE1F5"
      },
      label: {
        position: "auto",
        // When using number, label position is not
        // restricted by viewRect.
        // positive: right/bottom, negative: left/top
        show: !0,
        interval: "auto",
        rotate: 0,
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#A4B1D7"
      },
      itemStyle: {
        color: "#A4B1D7",
        borderWidth: 1
      },
      checkpointStyle: {
        symbol: "circle",
        symbolSize: 15,
        color: "#316bf3",
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0, 0, 0, 0.3)",
        // borderColor: 'rgba(194,53,49, 0.5)',
        animation: !0,
        animationDuration: 300,
        animationEasing: "quinticInOut"
      },
      controlStyle: {
        show: !0,
        showPlayBtn: !0,
        showPrevBtn: !0,
        showNextBtn: !0,
        itemSize: 24,
        itemGap: 12,
        position: "left",
        playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
        stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
        // eslint-disable-next-line max-len
        nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z",
        // eslint-disable-next-line max-len
        prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z",
        prevBtnSize: 18,
        nextBtnSize: 18,
        color: "#A4B1D7",
        borderColor: "#A4B1D7",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#6f778d"
        },
        itemStyle: {
          color: "#316BF3"
        },
        controlStyle: {
          color: "#316BF3",
          borderColor: "#316BF3",
          borderWidth: 2
        }
      },
      progress: {
        lineStyle: {
          color: "#316BF3"
        },
        itemStyle: {
          color: "#316BF3"
        },
        label: {
          color: "#6f778d"
        }
      },
      data: []
    }), e;
  }(HC)
);
_t(OO, xf.prototype);
var cZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "timeline", e;
  }(st)
), dZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e(r, n, a, i) {
      var o = t.call(this, r, n, a) || this;
      return o.type = i || "value", o;
    }
    return e.prototype.getLabelModel = function() {
      return this.model.getModel("label");
    }, e.prototype.isHorizontal = function() {
      return this.model.get("orient") === "horizontal";
    }, e;
  }(on)
), vv = Math.PI, WC = Oe(), pZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function(r, n) {
      this.api = n;
    }, e.prototype.render = function(r, n, a) {
      if (this.model = r, this.api = a, this.ecModel = n, this.group.removeAll(), r.get("show", !0)) {
        var i = this._layout(r, a), o = this._createGroup("_mainGroup"), s = this._createGroup("_labelGroup"), l = this._axis = this._createAxis(i, r);
        r.formatTooltip = function(u) {
          var c = l.scale.getLabel({
            value: u
          });
          return Mt("nameValue", {
            noName: !0,
            value: c
          });
        }, w(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(u) {
          this["_render" + u](i, o, l, r);
        }, this), this._renderAxisLabel(i, s, l, r), this._position(i, r);
      }
      this._doPlayStop(), this._updateTicksStatus();
    }, e.prototype.remove = function() {
      this._clearTimer(), this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._clearTimer();
    }, e.prototype._layout = function(r, n) {
      var a = r.get(["label", "position"]), i = r.get("orient"), o = hZ(r, n), s;
      a == null || a === "auto" ? s = i === "horizontal" ? o.y + o.height / 2 < n.getHeight() / 2 ? "-" : "+" : o.x + o.width / 2 < n.getWidth() / 2 ? "+" : "-" : Y(a) ? s = {
        horizontal: {
          top: "-",
          bottom: "+"
        },
        vertical: {
          left: "-",
          right: "+"
        }
      }[i][a] : s = a;
      var l = {
        horizontal: "center",
        vertical: s >= 0 || s === "+" ? "left" : "right"
      }, u = {
        horizontal: s >= 0 || s === "+" ? "top" : "bottom",
        vertical: "middle"
      }, c = {
        horizontal: 0,
        vertical: vv / 2
      }, d = i === "vertical" ? o.height : o.width, p = r.getModel("controlStyle"), f = p.get("show", !0), h = f ? p.get("itemSize") : 0, g = f ? p.get("itemGap") : 0, v = h + g, m = r.get(["label", "rotate"]) || 0;
      m = m * vv / 180;
      var _, y, b, S = p.get("position", !0), E = f && p.get("showPlayBtn", !0), T = f && p.get("showPrevBtn", !0), x = f && p.get("showNextBtn", !0), C = 0, A = d;
      S === "left" || S === "bottom" ? (E && (_ = [0, 0], C += v), T && (y = [C, 0], C += v), x && (b = [A - h, 0], A -= v)) : (E && (_ = [A - h, 0], A -= v), T && (y = [0, 0], C += v), x && (b = [A - h, 0], A -= v));
      var D = [C, A];
      return r.get("inverse") && D.reverse(), {
        viewRect: o,
        mainLength: d,
        orient: i,
        rotation: c[i],
        labelRotation: m,
        labelPosOpt: s,
        labelAlign: r.get(["label", "align"]) || l[i],
        labelBaseline: r.get(["label", "verticalAlign"]) || r.get(["label", "baseline"]) || u[i],
        // Based on mainGroup.
        playPosition: _,
        prevBtnPosition: y,
        nextBtnPosition: b,
        axisExtent: D,
        controlSize: h,
        controlGap: g
      };
    }, e.prototype._position = function(r, n) {
      var a = this._mainGroup, i = this._labelGroup, o = r.viewRect;
      if (r.orient === "vertical") {
        var s = yr(), l = o.x, u = o.y + o.height;
        Rn(s, s, [-l, -u]), ho(s, s, -vv / 2), Rn(s, s, [l, u]), o = o.clone(), o.applyTransform(s);
      }
      var c = _(o), d = _(a.getBoundingRect()), p = _(i.getBoundingRect()), f = [a.x, a.y], h = [i.x, i.y];
      h[0] = f[0] = c[0][0];
      var g = r.labelPosOpt;
      if (g == null || Y(g)) {
        var v = g === "+" ? 0 : 1;
        y(f, d, c, 1, v), y(h, p, c, 1, 1 - v);
      } else {
        var v = g >= 0 ? 0 : 1;
        y(f, d, c, 1, v), h[1] = f[1] + g;
      }
      a.setPosition(f), i.setPosition(h), a.rotation = i.rotation = r.rotation, m(a), m(i);
      function m(b) {
        b.originX = c[0][0] - b.x, b.originY = c[1][0] - b.y;
      }
      function _(b) {
        return [[b.x, b.x + b.width], [b.y, b.y + b.height]];
      }
      function y(b, S, E, T, x) {
        b[T] += E[T][x] - S[T][x];
      }
    }, e.prototype._createAxis = function(r, n) {
      var a = n.getData(), i = n.get("axisType"), o = fZ(n, i);
      o.getTicks = function() {
        return a.mapArray(["value"], function(u) {
          return {
            value: u
          };
        });
      };
      var s = a.getDataExtent("value");
      o.setExtent(s[0], s[1]), o.calcNiceTicks();
      var l = new dZ("value", o, r.axisExtent, i);
      return l.model = n, l;
    }, e.prototype._createGroup = function(r) {
      var n = this[r] = new de();
      return this.group.add(n), n;
    }, e.prototype._renderAxisLine = function(r, n, a, i) {
      var o = a.getExtent();
      if (i.get(["lineStyle", "show"])) {
        var s = new Ct({
          shape: {
            x1: o[0],
            y1: 0,
            x2: o[1],
            y2: 0
          },
          style: G({
            lineCap: "round"
          }, i.getModel("lineStyle").getLineStyle()),
          silent: !0,
          z2: 1
        });
        n.add(s);
        var l = this._progressLine = new Ct({
          shape: {
            x1: o[0],
            x2: this._currentPointer ? this._currentPointer.x : o[0],
            y1: 0,
            y2: 0
          },
          style: ie({
            lineCap: "round",
            lineWidth: s.style.lineWidth
          }, i.getModel(["progress", "lineStyle"]).getLineStyle()),
          silent: !0,
          z2: 1
        });
        n.add(l);
      }
    }, e.prototype._renderAxisTick = function(r, n, a, i) {
      var o = this, s = i.getData(), l = a.scale.getTicks();
      this._tickSymbols = [], w(l, function(u) {
        var c = a.dataToCoord(u.value), d = s.getItemModel(u.value), p = d.getModel("itemStyle"), f = d.getModel(["emphasis", "itemStyle"]), h = d.getModel(["progress", "itemStyle"]), g = {
          x: c,
          y: 0,
          onclick: K(o._changeTimeline, o, u.value)
        }, v = qC(d, p, n, g);
        v.ensureState("emphasis").style = f.getItemStyle(), v.ensureState("progress").style = h.getItemStyle(), Ji(v);
        var m = pe(v);
        d.get("tooltip") ? (m.dataIndex = u.value, m.dataModel = i) : m.dataIndex = m.dataModel = null, o._tickSymbols.push(v);
      });
    }, e.prototype._renderAxisLabel = function(r, n, a, i) {
      var o = this, s = a.getLabelModel();
      if (s.get("show")) {
        var l = i.getData(), u = a.getViewLabels();
        this._tickLabels = [], w(u, function(c) {
          var d = c.tickValue, p = l.getItemModel(d), f = p.getModel("label"), h = p.getModel(["emphasis", "label"]), g = p.getModel(["progress", "label"]), v = a.dataToCoord(c.tickValue), m = new Pe({
            x: v,
            y: 0,
            rotation: r.labelRotation - r.rotation,
            onclick: K(o._changeTimeline, o, d),
            silent: !1,
            style: Je(f, {
              text: c.formattedLabel,
              align: r.labelAlign,
              verticalAlign: r.labelBaseline
            })
          });
          m.ensureState("emphasis").style = Je(h), m.ensureState("progress").style = Je(g), n.add(m), Ji(m), WC(m).dataIndex = d, o._tickLabels.push(m);
        });
      }
    }, e.prototype._renderControl = function(r, n, a, i) {
      var o = r.controlSize, s = r.rotation, l = i.getModel("controlStyle").getItemStyle(), u = i.getModel(["emphasis", "controlStyle"]).getItemStyle(), c = i.getPlayState(), d = i.get("inverse", !0);
      p(r.nextBtnPosition, "next", K(this._changeTimeline, this, d ? "-" : "+")), p(r.prevBtnPosition, "prev", K(this._changeTimeline, this, d ? "+" : "-")), p(r.playPosition, c ? "stop" : "play", K(this._handlePlayClick, this, !c), !0);
      function p(f, h, g, v) {
        if (f) {
          var m = tn(ge(i.get(["controlStyle", h + "BtnSize"]), o), o), _ = [0, -m / 2, m, m], y = gZ(i, h + "Icon", _, {
            x: f[0],
            y: f[1],
            originX: o / 2,
            originY: 0,
            rotation: v ? -s : 0,
            rectHover: !0,
            style: l,
            onclick: g
          });
          y.ensureState("emphasis").style = u, n.add(y), Ji(y);
        }
      }
    }, e.prototype._renderCurrentPointer = function(r, n, a, i) {
      var o = i.getData(), s = i.getCurrentIndex(), l = o.getItemModel(s).getModel("checkpointStyle"), u = this, c = {
        onCreate: function(d) {
          d.draggable = !0, d.drift = K(u._handlePointerDrag, u), d.ondragend = K(u._handlePointerDragend, u), YC(d, u._progressLine, s, a, i, !0);
        },
        onUpdate: function(d) {
          YC(d, u._progressLine, s, a, i);
        }
      };
      this._currentPointer = qC(l, l, this._mainGroup, {}, this._currentPointer, c);
    }, e.prototype._handlePlayClick = function(r) {
      this._clearTimer(), this.api.dispatchAction({
        type: "timelinePlayChange",
        playState: r,
        from: this.uid
      });
    }, e.prototype._handlePointerDrag = function(r, n, a) {
      this._clearTimer(), this._pointerChangeTimeline([a.offsetX, a.offsetY]);
    }, e.prototype._handlePointerDragend = function(r) {
      this._pointerChangeTimeline([r.offsetX, r.offsetY], !0);
    }, e.prototype._pointerChangeTimeline = function(r, n) {
      var a = this._toAxisCoord(r)[0], i = this._axis, o = kr(i.getExtent().slice());
      a > o[1] && (a = o[1]), a < o[0] && (a = o[0]), this._currentPointer.x = a, this._currentPointer.markRedraw();
      var s = this._progressLine;
      s && (s.shape.x2 = a, s.dirty());
      var l = this._findNearestTick(a), u = this.model;
      (n || l !== u.getCurrentIndex() && u.get("realtime")) && this._changeTimeline(l);
    }, e.prototype._doPlayStop = function() {
      var r = this;
      this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
        var n = r.model;
        r._changeTimeline(n.getCurrentIndex() + (n.get("rewind", !0) ? -1 : 1));
      }, this.model.get("playInterval")));
    }, e.prototype._toAxisCoord = function(r) {
      var n = this._mainGroup.getLocalTransform();
      return Jr(r, n, !0);
    }, e.prototype._findNearestTick = function(r) {
      var n = this.model.getData(), a = 1 / 0, i, o = this._axis;
      return n.each(["value"], function(s, l) {
        var u = o.dataToCoord(s), c = Math.abs(u - r);
        c < a && (a = c, i = l);
      }), i;
    }, e.prototype._clearTimer = function() {
      this._timer && (clearTimeout(this._timer), this._timer = null);
    }, e.prototype._changeTimeline = function(r) {
      var n = this.model.getCurrentIndex();
      r === "+" ? r = n + 1 : r === "-" && (r = n - 1), this.api.dispatchAction({
        type: "timelineChange",
        currentIndex: r,
        from: this.uid
      });
    }, e.prototype._updateTicksStatus = function() {
      var r = this.model.getCurrentIndex(), n = this._tickSymbols, a = this._tickLabels;
      if (n)
        for (var i = 0; i < n.length; i++)
          n && n[i] && n[i].toggleState("progress", i < r);
      if (a)
        for (var i = 0; i < a.length; i++)
          a && a[i] && a[i].toggleState("progress", WC(a[i]).dataIndex <= r);
    }, e.type = "timeline.slider", e;
  }(cZ)
);
function fZ(t, e) {
  if (e = e || t.get("type"), e)
    switch (e) {
      // Buildin scale
      case "category":
        return new If({
          ordinalMeta: t.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new Py({
          locale: t.ecModel.getLocaleModel(),
          useUTC: t.ecModel.get("useUTC")
        });
      default:
        return new oa();
    }
}
function hZ(t, e) {
  return Et(t.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  }, t.get("padding"));
}
function gZ(t, e, r, n) {
  var a = n.style, i = Yu(t.get(["controlStyle", e]), n || {}, new Te(r[0], r[1], r[2], r[3]));
  return a && i.setStyle(a), i;
}
function qC(t, e, r, n, a, i) {
  var o = e.get("color");
  if (a)
    a.setColor(o), r.add(a), i && i.onUpdate(a);
  else {
    var s = t.get("symbol");
    a = mt(s, -1, -1, 2, 2, o), a.setStyle("strokeNoScale", !0), r.add(a), i && i.onCreate(a);
  }
  var l = e.getItemStyle(["color"]);
  a.setStyle(l), n = be({
    rectHover: !0,
    z2: 100
  }, n, !0);
  var u = Us(t.get("symbolSize"));
  n.scaleX = u[0] / 2, n.scaleY = u[1] / 2;
  var c = mo(t.get("symbolOffset"), u);
  c && (n.x = (n.x || 0) + c[0], n.y = (n.y || 0) + c[1]);
  var d = t.get("symbolRotate");
  return n.rotation = (d || 0) * Math.PI / 180 || 0, a.attr(n), a.updateTransform(), a;
}
function YC(t, e, r, n, a, i) {
  if (!t.dragging) {
    var o = a.getModel("checkpointStyle"), s = n.dataToCoord(a.getData().get("value", r));
    if (i || !o.get("animation", !0))
      t.attr({
        x: s,
        y: 0
      }), e && e.attr({
        shape: {
          x2: s
        }
      });
    else {
      var l = {
        duration: o.get("animationDuration", !0),
        easing: o.get("animationEasing", !0)
      };
      t.stopAnimation(null, !0), t.animateTo({
        x: s,
        y: 0
      }, l), e && e.animateTo({
        shape: {
          x2: s
        }
      }, l);
    }
  }
}
function vZ(t) {
  t.registerAction({
    type: "timelineChange",
    event: "timelineChanged",
    update: "prepareAndUpdate"
  }, function(e, r, n) {
    var a = r.getComponent("timeline");
    return a && e.currentIndex != null && (a.setCurrentIndex(e.currentIndex), !a.get("loop", !0) && a.isIndexMax() && a.getPlayState() && (a.setPlayState(!1), n.dispatchAction({
      type: "timelinePlayChange",
      playState: !1,
      from: e.from
    }))), r.resetOption("timeline", {
      replaceMerge: a.get("replaceMerge", !0)
    }), ie({
      currentIndex: a.option.currentIndex
    }, e);
  }), t.registerAction({
    type: "timelinePlayChange",
    event: "timelinePlayChanged",
    update: "update"
  }, function(e, r) {
    var n = r.getComponent("timeline");
    n && e.playState != null && n.setPlayState(e.playState);
  });
}
function mZ(t) {
  var e = t && t.timeline;
  V(e) || (e = e ? [e] : []), w(e, function(r) {
    r && _Z(r);
  });
}
function _Z(t) {
  var e = t.type, r = {
    number: "value",
    time: "time"
  };
  if (r[e] && (t.axisType = r[e], delete t.type), KC(t), Gi(t, "controlPosition")) {
    var n = t.controlStyle || (t.controlStyle = {});
    Gi(n, "position") || (n.position = t.controlPosition), n.position === "none" && !Gi(n, "show") && (n.show = !1, delete n.position), delete t.controlPosition;
  }
  w(t.data || [], function(a) {
    se(a) && !V(a) && (!Gi(a, "value") && Gi(a, "name") && (a.value = a.name), KC(a));
  });
}
function KC(t) {
  var e = t.itemStyle || (t.itemStyle = {}), r = e.emphasis || (e.emphasis = {}), n = t.label || t.label || {}, a = n.normal || (n.normal = {}), i = {
    normal: 1,
    emphasis: 1
  };
  w(n, function(o, s) {
    !i[s] && !Gi(a, s) && (a[s] = o);
  }), r.label && !Gi(n, "emphasis") && (n.emphasis = r.label, delete r.label);
}
function Gi(t, e) {
  return t.hasOwnProperty(e);
}
function qre(t) {
  t.registerComponentModel(OO), t.registerComponentView(pZ), t.registerSubTypeDefaulter("timeline", function() {
    return "slider";
  }), vZ(t), t.registerPreprocessor(mZ);
}
function Gb(t, e) {
  if (!t)
    return !1;
  for (var r = V(t) ? t : [t], n = 0; n < r.length; n++)
    if (r[n] && r[n][e])
      return !0;
  return !1;
}
function dd(t) {
  io(t, "label", ["show"]);
}
var pd = Oe(), la = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.createdBySelf = !1, r;
    }
    return e.prototype.init = function(r, n, a) {
      this.mergeDefaultAndTheme(r, a), this._mergeOption(r, a, !1, !0);
    }, e.prototype.isAnimationEnabled = function() {
      if (Ae.node)
        return !1;
      var r = this.__hostSeries;
      return this.getShallow("animation") && r && r.isAnimationEnabled();
    }, e.prototype.mergeOption = function(r, n) {
      this._mergeOption(r, n, !1, !1);
    }, e.prototype._mergeOption = function(r, n, a, i) {
      var o = this.mainType;
      a || n.eachSeries(function(s) {
        var l = s.get(this.mainType, !0), u = pd(s)[o];
        if (!l || !l.data) {
          pd(s)[o] = null;
          return;
        }
        u ? u._mergeOption(l, n, !0) : (i && dd(l), w(l.data, function(c) {
          c instanceof Array ? (dd(c[0]), dd(c[1])) : dd(c);
        }), u = this.createMarkerModelFromSeries(l, this, n), G(u, {
          mainType: this.mainType,
          // Use the same series index and name
          seriesIndex: s.seriesIndex,
          name: s.name,
          createdBySelf: !0
        }), u.__hostSeries = s), pd(s)[o] = u;
      }, this);
    }, e.prototype.formatTooltip = function(r, n, a) {
      var i = this.getData(), o = this.getRawValue(r), s = i.getName(r);
      return Mt("section", {
        header: this.name,
        blocks: [Mt("nameValue", {
          name: s,
          value: o,
          noName: !s,
          noValue: o == null
        })]
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.setData = function(r) {
      this._data = r;
    }, e.prototype.getDataParams = function(r, n) {
      var a = xf.prototype.getDataParams.call(this, r, n), i = this.__hostSeries;
      return i && (a.seriesId = i.id, a.seriesName = i.name, a.seriesType = i.subType), a;
    }, e.getMarkerModelFromSeries = function(r, n) {
      return pd(r)[n];
    }, e.type = "marker", e.dependencies = ["series", "grid", "polar", "geo"], e;
  }(De)
);
_t(la, xf.prototype);
var yZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.createMarkerModelFromSeries = function(r, n, a) {
      return new e(r, n, a);
    }, e.type = "markPoint", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: "pin",
      symbolSize: 50,
      // symbolRotate: 0,
      // symbolOffset: [0, 0]
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "inside"
      },
      itemStyle: {
        borderWidth: 2
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(la)
);
function m_(t) {
  return !(isNaN(parseFloat(t.x)) && isNaN(parseFloat(t.y)));
}
function bZ(t) {
  return !isNaN(parseFloat(t.x)) && !isNaN(parseFloat(t.y));
}
function fd(t, e, r, n, a, i) {
  var o = [], s = Qa(
    e,
    n
    /* , otherDataDim */
  ), l = s ? e.getCalculationInfo("stackResultDimension") : n, u = Ub(e, l, t), c = e.indicesOfNearest(l, u)[0];
  o[a] = e.get(r, c), o[i] = e.get(l, c);
  var d = e.get(n, c), p = xn(e.get(n, c));
  return p = Math.min(p, 20), p >= 0 && (o[i] = +o[i].toFixed(p)), [o, d];
}
var mv = {
  min: _e(fd, "min"),
  max: _e(fd, "max"),
  average: _e(fd, "average"),
  median: _e(fd, "median")
};
function Ou(t, e) {
  if (e) {
    var r = t.getData(), n = t.coordinateSystem, a = n && n.dimensions;
    if (!bZ(e) && !V(e.coord) && V(a)) {
      var i = LO(e, r, n, t);
      if (e = le(e), e.type && mv[e.type] && i.baseAxis && i.valueAxis) {
        var o = xe(a, i.baseAxis.dim), s = xe(a, i.valueAxis.dim), l = mv[e.type](r, i.baseDataDim, i.valueDataDim, o, s);
        e.coord = l[0], e.value = l[1];
      } else
        e.coord = [e.xAxis != null ? e.xAxis : e.radiusAxis, e.yAxis != null ? e.yAxis : e.angleAxis];
    }
    if (e.coord == null || !V(a))
      e.coord = [];
    else
      for (var u = e.coord, c = 0; c < 2; c++)
        mv[u[c]] && (u[c] = Ub(r, r.mapDimension(a[c]), u[c]));
    return e;
  }
}
function LO(t, e, r, n) {
  var a = {};
  return t.valueIndex != null || t.valueDim != null ? (a.valueDataDim = t.valueIndex != null ? e.getDimension(t.valueIndex) : t.valueDim, a.valueAxis = r.getAxis(SZ(n, a.valueDataDim)), a.baseAxis = r.getOtherAxis(a.valueAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim)) : (a.baseAxis = n.getBaseAxis(), a.valueAxis = r.getOtherAxis(a.baseAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim), a.valueDataDim = e.mapDimension(a.valueAxis.dim)), a;
}
function SZ(t, e) {
  var r = t.getData().getDimensionInfo(e);
  return r && r.coordDim;
}
function Lu(t, e) {
  return t && t.containData && e.coord && !m_(e) ? t.containData(e.coord) : !0;
}
function EZ(t, e, r) {
  return t && t.containZone && e.coord && r.coord && !m_(e) && !m_(r) ? t.containZone(e.coord, r.coord) : !0;
}
function PO(t, e) {
  return t ? function(r, n, a, i) {
    var o = i < 2 ? r.coord && r.coord[i] : r.value;
    return $a(o, e[i]);
  } : function(r, n, a, i) {
    return $a(r.value, e[i]);
  };
}
function Ub(t, e, r) {
  if (r === "average") {
    var n = 0, a = 0;
    return t.each(e, function(i, o) {
      isNaN(i) || (n += i, a++);
    }), n / a;
  } else return r === "median" ? t.getMedian(e) : t.getDataExtent(e)[r === "max" ? 1 : 0];
}
var _v = Oe(), zb = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.init = function() {
      this.markerGroupMap = J();
    }, e.prototype.render = function(r, n, a) {
      var i = this, o = this.markerGroupMap;
      o.each(function(s) {
        _v(s).keep = !1;
      }), n.eachSeries(function(s) {
        var l = la.getMarkerModelFromSeries(s, i.type);
        l && i.renderSeries(s, l, n, a);
      }), o.each(function(s) {
        !_v(s).keep && i.group.remove(s.group);
      });
    }, e.prototype.markKeep = function(r) {
      _v(r).keep = !0;
    }, e.prototype.toggleBlurSeries = function(r, n) {
      var a = this;
      w(r, function(i) {
        var o = la.getMarkerModelFromSeries(i, a.type);
        if (o) {
          var s = o.getData();
          s.eachItemGraphicEl(function(l) {
            l && (n ? DD(l) : iy(l));
          });
        }
      });
    }, e.type = "marker", e;
  }(st)
);
function ZC(t, e, r) {
  var n = e.coordinateSystem;
  t.each(function(a) {
    var i = t.getItemModel(a), o, s = q(i.get("x"), r.getWidth()), l = q(i.get("y"), r.getHeight());
    if (!isNaN(s) && !isNaN(l))
      o = [s, l];
    else if (e.getMarkerPosition)
      o = e.getMarkerPosition(t.getValues(t.dimensions, a));
    else if (n) {
      var u = t.get(n.dimensions[0], a), c = t.get(n.dimensions[1], a);
      o = n.dataToPoint([u, c]);
    }
    isNaN(s) || (o[0] = s), isNaN(l) || (o[1] = l), t.setItemLayout(a, o);
  });
}
var TZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.updateTransform = function(r, n, a) {
      n.eachSeries(function(i) {
        var o = la.getMarkerModelFromSeries(i, "markPoint");
        o && (ZC(o.getData(), i, a), this.markerGroupMap.get(i.id).updateLayout());
      }, this);
    }, e.prototype.renderSeries = function(r, n, a, i) {
      var o = r.coordinateSystem, s = r.id, l = r.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, new Ju()), d = xZ(o, r, n);
      n.setData(d), ZC(n.getData(), r, i), d.each(function(p) {
        var f = d.getItemModel(p), h = f.getShallow("symbol"), g = f.getShallow("symbolSize"), v = f.getShallow("symbolRotate"), m = f.getShallow("symbolOffset"), _ = f.getShallow("symbolKeepAspect");
        if (ae(h) || ae(g) || ae(v) || ae(m)) {
          var y = n.getRawValue(p), b = n.getDataParams(p);
          ae(h) && (h = h(y, b)), ae(g) && (g = g(y, b)), ae(v) && (v = v(y, b)), ae(m) && (m = m(y, b));
        }
        var S = f.getModel("itemStyle").getItemStyle(), E = Zu(l, "color");
        S.fill || (S.fill = E), d.setItemVisual(p, {
          symbol: h,
          symbolSize: g,
          symbolRotate: v,
          symbolOffset: m,
          symbolKeepAspect: _,
          style: S
        });
      }), c.updateData(d), this.group.add(c.group), d.eachItemGraphicEl(function(p) {
        p.traverse(function(f) {
          pe(f).dataModel = n;
        });
      }), this.markKeep(c), c.group.silent = n.get("silent") || r.get("silent");
    }, e.type = "markPoint", e;
  }(zb)
);
function xZ(t, e, r) {
  var n;
  t ? n = $(t && t.dimensions, function(s) {
    var l = e.getData().getDimensionInfo(e.getData().mapDimension(s)) || {};
    return G(G({}, l), {
      name: s,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : n = [{
    name: "value",
    type: "float"
  }];
  var a = new rr(n, r), i = $(r.get("data"), _e(Ou, e));
  t && (i = ze(i, _e(Lu, t)));
  var o = PO(!!t, n);
  return a.initData(i, null, o), a;
}
function Yre(t) {
  t.registerComponentModel(yZ), t.registerComponentView(TZ), t.registerPreprocessor(function(e) {
    Gb(e.series, "markPoint") && (e.markPoint = e.markPoint || {});
  });
}
var CZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.createMarkerModelFromSeries = function(r, n, a) {
      return new e(r, n, a);
    }, e.type = "markLine", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: ["circle", "arrow"],
      symbolSize: [8, 16],
      // symbolRotate: 0,
      symbolOffset: 0,
      precision: 2,
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "end",
        distance: 5
      },
      lineStyle: {
        type: "dashed"
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          width: 3
        }
      },
      animationEasing: "linear"
    }, e;
  }(la)
), hd = Oe(), AZ = function(t, e, r, n) {
  var a = t.getData(), i;
  if (V(n))
    i = n;
  else {
    var o = n.type;
    if (o === "min" || o === "max" || o === "average" || o === "median" || n.xAxis != null || n.yAxis != null) {
      var s = void 0, l = void 0;
      if (n.yAxis != null || n.xAxis != null)
        s = e.getAxis(n.yAxis != null ? "y" : "x"), l = Pt(n.yAxis, n.xAxis);
      else {
        var u = LO(n, a, e, t);
        s = u.valueAxis;
        var c = MI(a, u.valueDataDim);
        l = Ub(a, c, o);
      }
      var d = s.dim === "x" ? 0 : 1, p = 1 - d, f = le(n), h = {
        coord: []
      };
      f.type = null, f.coord = [], f.coord[p] = -1 / 0, h.coord[p] = 1 / 0;
      var g = r.get("precision");
      g >= 0 && ke(l) && (l = +l.toFixed(Math.min(g, 20))), f.coord[d] = h.coord[d] = l, i = [f, h, {
        type: o,
        valueIndex: n.valueIndex,
        // Force to use the value of calculated value.
        value: l
      }];
    } else
      i = [];
  }
  var v = [Ou(t, i[0]), Ou(t, i[1]), G({}, i[2])];
  return v[2].type = v[2].type || null, be(v[2], v[0]), be(v[2], v[1]), v;
};
function Fp(t) {
  return !isNaN(t) && !isFinite(t);
}
function XC(t, e, r, n) {
  var a = 1 - t, i = n.dimensions[t];
  return Fp(e[a]) && Fp(r[a]) && e[t] === r[t] && n.getAxis(i).containData(e[t]);
}
function wZ(t, e) {
  if (t.type === "cartesian2d") {
    var r = e[0].coord, n = e[1].coord;
    if (r && n && (XC(1, r, n, t) || XC(0, r, n, t)))
      return !0;
  }
  return Lu(t, e[0]) && Lu(t, e[1]);
}
function yv(t, e, r, n, a) {
  var i = n.coordinateSystem, o = t.getItemModel(e), s, l = q(o.get("x"), a.getWidth()), u = q(o.get("y"), a.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (n.getMarkerPosition)
      s = n.getMarkerPosition(t.getValues(t.dimensions, e));
    else {
      var c = i.dimensions, d = t.get(c[0], e), p = t.get(c[1], e);
      s = i.dataToPoint([d, p]);
    }
    if (yo(i, "cartesian2d")) {
      var f = i.getAxis("x"), h = i.getAxis("y"), c = i.dimensions;
      Fp(t.get(c[0], e)) ? s[0] = f.toGlobalCoord(f.getExtent()[r ? 0 : 1]) : Fp(t.get(c[1], e)) && (s[1] = h.toGlobalCoord(h.getExtent()[r ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  t.setItemLayout(e, s);
}
var DZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.updateTransform = function(r, n, a) {
      n.eachSeries(function(i) {
        var o = la.getMarkerModelFromSeries(i, "markLine");
        if (o) {
          var s = o.getData(), l = hd(o).from, u = hd(o).to;
          l.each(function(c) {
            yv(l, c, !0, i, a), yv(u, c, !1, i, a);
          }), s.each(function(c) {
            s.setItemLayout(c, [l.getItemLayout(c), u.getItemLayout(c)]);
          }), this.markerGroupMap.get(i.id).updateLayout();
        }
      }, this);
    }, e.prototype.renderSeries = function(r, n, a, i) {
      var o = r.coordinateSystem, s = r.id, l = r.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, new lb());
      this.group.add(c.group);
      var d = MZ(o, r, n), p = d.from, f = d.to, h = d.line;
      hd(n).from = p, hd(n).to = f, n.setData(h);
      var g = n.get("symbol"), v = n.get("symbolSize"), m = n.get("symbolRotate"), _ = n.get("symbolOffset");
      V(g) || (g = [g, g]), V(v) || (v = [v, v]), V(m) || (m = [m, m]), V(_) || (_ = [_, _]), d.from.each(function(b) {
        y(p, b, !0), y(f, b, !1);
      }), h.each(function(b) {
        var S = h.getItemModel(b).getModel("lineStyle").getLineStyle();
        h.setItemLayout(b, [p.getItemLayout(b), f.getItemLayout(b)]), S.stroke == null && (S.stroke = p.getItemVisual(b, "style").fill), h.setItemVisual(b, {
          fromSymbolKeepAspect: p.getItemVisual(b, "symbolKeepAspect"),
          fromSymbolOffset: p.getItemVisual(b, "symbolOffset"),
          fromSymbolRotate: p.getItemVisual(b, "symbolRotate"),
          fromSymbolSize: p.getItemVisual(b, "symbolSize"),
          fromSymbol: p.getItemVisual(b, "symbol"),
          toSymbolKeepAspect: f.getItemVisual(b, "symbolKeepAspect"),
          toSymbolOffset: f.getItemVisual(b, "symbolOffset"),
          toSymbolRotate: f.getItemVisual(b, "symbolRotate"),
          toSymbolSize: f.getItemVisual(b, "symbolSize"),
          toSymbol: f.getItemVisual(b, "symbol"),
          style: S
        });
      }), c.updateData(h), d.line.eachItemGraphicEl(function(b) {
        pe(b).dataModel = n, b.traverse(function(S) {
          pe(S).dataModel = n;
        });
      });
      function y(b, S, E) {
        var T = b.getItemModel(S);
        yv(b, S, E, r, i);
        var x = T.getModel("itemStyle").getItemStyle();
        x.fill == null && (x.fill = Zu(l, "color")), b.setItemVisual(S, {
          symbolKeepAspect: T.get("symbolKeepAspect"),
          // `0` should be considered as a valid value, so use `retrieve2` instead of `||`
          symbolOffset: ge(T.get("symbolOffset", !0), _[E ? 0 : 1]),
          symbolRotate: ge(T.get("symbolRotate", !0), m[E ? 0 : 1]),
          // TODO: when 2d array is supported, it should ignore parent
          symbolSize: ge(T.get("symbolSize"), v[E ? 0 : 1]),
          symbol: ge(T.get("symbol", !0), g[E ? 0 : 1]),
          style: x
        });
      }
      this.markKeep(c), c.group.silent = n.get("silent") || r.get("silent");
    }, e.type = "markLine", e;
  }(zb)
);
function MZ(t, e, r) {
  var n;
  t ? n = $(t && t.dimensions, function(u) {
    var c = e.getData().getDimensionInfo(e.getData().mapDimension(u)) || {};
    return G(G({}, c), {
      name: u,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : n = [{
    name: "value",
    type: "float"
  }];
  var a = new rr(n, r), i = new rr(n, r), o = new rr([], r), s = $(r.get("data"), _e(AZ, e, t, r));
  t && (s = ze(s, _e(wZ, t)));
  var l = PO(!!t, n);
  return a.initData($(s, function(u) {
    return u[0];
  }), null, l), i.initData($(s, function(u) {
    return u[1];
  }), null, l), o.initData($(s, function(u) {
    return u[2];
  })), o.hasItemOption = !0, {
    from: a,
    to: i,
    line: o
  };
}
function Kre(t) {
  t.registerComponentModel(CZ), t.registerComponentView(DZ), t.registerPreprocessor(function(e) {
    Gb(e.series, "markLine") && (e.markLine = e.markLine || {});
  });
}
var IZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.createMarkerModelFromSeries = function(r, n, a) {
      return new e(r, n, a);
    }, e.type = "markArea", e.defaultOption = {
      // zlevel: 0,
      // PENDING
      z: 1,
      tooltip: {
        trigger: "item"
      },
      // markArea should fixed on the coordinate system
      animation: !1,
      label: {
        show: !0,
        position: "top"
      },
      itemStyle: {
        // color and borderColor default to use color from series
        // color: 'auto'
        // borderColor: 'auto'
        borderWidth: 0
      },
      emphasis: {
        label: {
          show: !0,
          position: "top"
        }
      }
    }, e;
  }(la)
), gd = Oe(), NZ = function(t, e, r, n) {
  var a = n[0], i = n[1];
  if (!(!a || !i)) {
    var o = Ou(t, a), s = Ou(t, i), l = o.coord, u = s.coord;
    l[0] = Pt(l[0], -1 / 0), l[1] = Pt(l[1], -1 / 0), u[0] = Pt(u[0], 1 / 0), u[1] = Pt(u[1], 1 / 0);
    var c = z_([{}, o, s]);
    return c.coord = [o.coord, s.coord], c.x0 = o.x, c.y0 = o.y, c.x1 = s.x, c.y1 = s.y, c;
  }
};
function Gp(t) {
  return !isNaN(t) && !isFinite(t);
}
function QC(t, e, r, n) {
  var a = 1 - t;
  return Gp(e[a]) && Gp(r[a]);
}
function RZ(t, e) {
  var r = e.coord[0], n = e.coord[1], a = {
    coord: r,
    x: e.x0,
    y: e.y0
  }, i = {
    coord: n,
    x: e.x1,
    y: e.y1
  };
  return yo(t, "cartesian2d") ? r && n && (QC(1, r, n) || QC(0, r, n)) ? !0 : EZ(t, a, i) : Lu(t, a) || Lu(t, i);
}
function jC(t, e, r, n, a) {
  var i = n.coordinateSystem, o = t.getItemModel(e), s, l = q(o.get(r[0]), a.getWidth()), u = q(o.get(r[1]), a.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (n.getMarkerPosition) {
      var c = t.getValues(["x0", "y0"], e), d = t.getValues(["x1", "y1"], e), p = i.clampData(c), f = i.clampData(d), h = [];
      r[0] === "x0" ? h[0] = p[0] > f[0] ? d[0] : c[0] : h[0] = p[0] > f[0] ? c[0] : d[0], r[1] === "y0" ? h[1] = p[1] > f[1] ? d[1] : c[1] : h[1] = p[1] > f[1] ? c[1] : d[1], s = n.getMarkerPosition(h, r, !0);
    } else {
      var g = t.get(r[0], e), v = t.get(r[1], e), m = [g, v];
      i.clampData && i.clampData(m, m), s = i.dataToPoint(m, !0);
    }
    if (yo(i, "cartesian2d")) {
      var _ = i.getAxis("x"), y = i.getAxis("y"), g = t.get(r[0], e), v = t.get(r[1], e);
      Gp(g) ? s[0] = _.toGlobalCoord(_.getExtent()[r[0] === "x0" ? 0 : 1]) : Gp(v) && (s[1] = y.toGlobalCoord(y.getExtent()[r[1] === "y0" ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  return s;
}
var JC = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]], OZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.updateTransform = function(r, n, a) {
      n.eachSeries(function(i) {
        var o = la.getMarkerModelFromSeries(i, "markArea");
        if (o) {
          var s = o.getData();
          s.each(function(l) {
            var u = $(JC, function(d) {
              return jC(s, l, d, i, a);
            });
            s.setItemLayout(l, u);
            var c = s.getItemGraphicEl(l);
            c.setShape("points", u);
          });
        }
      }, this);
    }, e.prototype.renderSeries = function(r, n, a, i) {
      var o = r.coordinateSystem, s = r.id, l = r.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, {
        group: new de()
      });
      this.group.add(c.group), this.markKeep(c);
      var d = LZ(o, r, n);
      n.setData(d), d.each(function(p) {
        var f = $(JC, function(x) {
          return jC(d, p, x, r, i);
        }), h = o.getAxis("x").scale, g = o.getAxis("y").scale, v = h.getExtent(), m = g.getExtent(), _ = [h.parse(d.get("x0", p)), h.parse(d.get("x1", p))], y = [g.parse(d.get("y0", p)), g.parse(d.get("y1", p))];
        kr(_), kr(y);
        var b = !(v[0] > _[1] || v[1] < _[0] || m[0] > y[1] || m[1] < y[0]), S = !b;
        d.setItemLayout(p, {
          points: f,
          allClipped: S
        });
        var E = d.getItemModel(p).getModel("itemStyle").getItemStyle(), T = Zu(l, "color");
        E.fill || (E.fill = T, Y(E.fill) && (E.fill = tp(E.fill, 0.4))), E.stroke || (E.stroke = T), d.setItemVisual(p, "style", E);
      }), d.diff(gd(c).data).add(function(p) {
        var f = d.getItemLayout(p);
        if (!f.allClipped) {
          var h = new sr({
            shape: {
              points: f.points
            }
          });
          d.setItemGraphicEl(p, h), c.group.add(h);
        }
      }).update(function(p, f) {
        var h = gd(c).data.getItemGraphicEl(f), g = d.getItemLayout(p);
        g.allClipped ? h && c.group.remove(h) : (h ? Fe(h, {
          shape: {
            points: g.points
          }
        }, n, p) : h = new sr({
          shape: {
            points: g.points
          }
        }), d.setItemGraphicEl(p, h), c.group.add(h));
      }).remove(function(p) {
        var f = gd(c).data.getItemGraphicEl(p);
        c.group.remove(f);
      }).execute(), d.eachItemGraphicEl(function(p, f) {
        var h = d.getItemModel(f), g = d.getItemVisual(f, "style");
        p.useStyle(d.getItemVisual(f, "style")), Vt(p, Dt(h), {
          labelFetcher: n,
          labelDataIndex: f,
          defaultText: d.getName(f) || "",
          inheritColor: Y(g.fill) ? tp(g.fill, 1) : "#000"
        }), zt(p, h), lt(p, null, null, h.get(["emphasis", "disabled"])), pe(p).dataModel = n;
      }), gd(c).data = d, c.group.silent = n.get("silent") || r.get("silent");
    }, e.type = "markArea", e;
  }(zb)
);
function LZ(t, e, r) {
  var n, a, i = ["x0", "y0", "x1", "y1"];
  if (t) {
    var o = $(t && t.dimensions, function(u) {
      var c = e.getData(), d = c.getDimensionInfo(c.mapDimension(u)) || {};
      return G(G({}, d), {
        name: u,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    });
    a = $(i, function(u, c) {
      return {
        name: u,
        type: o[c % 2].type
      };
    }), n = new rr(a, r);
  } else
    a = [{
      name: "value",
      type: "float"
    }], n = new rr(a, r);
  var s = $(r.get("data"), _e(NZ, e, t, r));
  t && (s = ze(s, _e(RZ, t)));
  var l = t ? function(u, c, d, p) {
    var f = u.coord[Math.floor(p / 2)][p % 2];
    return $a(f, a[p]);
  } : function(u, c, d, p) {
    return $a(u.value, a[p]);
  };
  return n.initData(s, null, l), n.hasItemOption = !0, n;
}
function Zre(t) {
  t.registerComponentModel(IZ), t.registerComponentView(OZ), t.registerPreprocessor(function(e) {
    Gb(e.series, "markArea") && (e.markArea = e.markArea || {});
  });
}
var PZ = function(t, e) {
  if (e === "all")
    return {
      type: "all",
      title: t.getLocaleModel().get(["legend", "selector", "all"])
    };
  if (e === "inverse")
    return {
      type: "inverse",
      title: t.getLocaleModel().get(["legend", "selector", "inverse"])
    };
}, __ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.layoutMode = {
        type: "box",
        // legend.width/height are maxWidth/maxHeight actually,
        // whereas real width/height is calculated by its content.
        // (Setting {left: 10, right: 10} does not make sense).
        // So consider the case:
        // `setOption({legend: {left: 10});`
        // then `setOption({legend: {right: 10});`
        // The previous `left` should be cleared by setting `ignoreSize`.
        ignoreSize: !0
      }, r;
    }
    return e.prototype.init = function(r, n, a) {
      this.mergeDefaultAndTheme(r, a), r.selected = r.selected || {}, this._updateSelector(r);
    }, e.prototype.mergeOption = function(r, n) {
      t.prototype.mergeOption.call(this, r, n), this._updateSelector(r);
    }, e.prototype._updateSelector = function(r) {
      var n = r.selector, a = this.ecModel;
      n === !0 && (n = r.selector = ["all", "inverse"]), V(n) && w(n, function(i, o) {
        Y(i) && (i = {
          type: i
        }), n[o] = be(i, PZ(a, i.type));
      });
    }, e.prototype.optionUpdated = function() {
      this._updateData(this.ecModel);
      var r = this._data;
      if (r[0] && this.get("selectedMode") === "single") {
        for (var n = !1, a = 0; a < r.length; a++) {
          var i = r[a].get("name");
          if (this.isSelected(i)) {
            this.select(i), n = !0;
            break;
          }
        }
        !n && this.select(r[0].get("name"));
      }
    }, e.prototype._updateData = function(r) {
      var n = [], a = [];
      r.eachRawSeries(function(l) {
        var u = l.name;
        a.push(u);
        var c;
        if (l.legendVisualProvider) {
          var d = l.legendVisualProvider, p = d.getAllNames();
          r.isSeriesFiltered(l) || (a = a.concat(p)), p.length ? n = n.concat(p) : c = !0;
        } else
          c = !0;
        c && Q_(l) && n.push(l.name);
      }), this._availableNames = a;
      var i = this.get("data") || n, o = J(), s = $(i, function(l) {
        return (Y(l) || ke(l)) && (l = {
          name: l
        }), o.get(l.name) ? null : (o.set(l.name, !0), new He(l, this, this.ecModel));
      }, this);
      this._data = ze(s, function(l) {
        return !!l;
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.select = function(r) {
      var n = this.option.selected, a = this.get("selectedMode");
      if (a === "single") {
        var i = this._data;
        w(i, function(o) {
          n[o.get("name")] = !1;
        });
      }
      n[r] = !0;
    }, e.prototype.unSelect = function(r) {
      this.get("selectedMode") !== "single" && (this.option.selected[r] = !1);
    }, e.prototype.toggleSelected = function(r) {
      var n = this.option.selected;
      n.hasOwnProperty(r) || (n[r] = !0), this[n[r] ? "unSelect" : "select"](r);
    }, e.prototype.allSelect = function() {
      var r = this._data, n = this.option.selected;
      w(r, function(a) {
        n[a.get("name", !0)] = !0;
      });
    }, e.prototype.inverseSelect = function() {
      var r = this._data, n = this.option.selected;
      w(r, function(a) {
        var i = a.get("name", !0);
        n.hasOwnProperty(i) || (n[i] = !0), n[i] = !n[i];
      });
    }, e.prototype.isSelected = function(r) {
      var n = this.option.selected;
      return !(n.hasOwnProperty(r) && !n[r]) && xe(this._availableNames, r) >= 0;
    }, e.prototype.getOrient = function() {
      return this.get("orient") === "vertical" ? {
        index: 1,
        name: "vertical"
      } : {
        index: 0,
        name: "horizontal"
      };
    }, e.type = "legend.plain", e.dependencies = ["series"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      show: !0,
      orient: "horizontal",
      left: "center",
      // right: 'center',
      top: 0,
      // bottom: null,
      align: "auto",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      symbolRotate: "inherit",
      symbolKeepAspect: !0,
      inactiveColor: "#ccc",
      inactiveBorderColor: "#ccc",
      inactiveBorderWidth: "auto",
      itemStyle: {
        color: "inherit",
        opacity: "inherit",
        borderColor: "inherit",
        borderWidth: "auto",
        borderCap: "inherit",
        borderJoin: "inherit",
        borderDashOffset: "inherit",
        borderMiterLimit: "inherit"
      },
      lineStyle: {
        width: "auto",
        color: "inherit",
        inactiveColor: "#ccc",
        inactiveWidth: 2,
        opacity: "inherit",
        type: "inherit",
        cap: "inherit",
        join: "inherit",
        dashOffset: "inherit",
        miterLimit: "inherit"
      },
      textStyle: {
        color: "#333"
      },
      selectedMode: !0,
      selector: !1,
      selectorLabel: {
        show: !0,
        borderRadius: 10,
        padding: [3, 5, 3, 5],
        fontSize: 12,
        fontFamily: "sans-serif",
        color: "#666",
        borderWidth: 1,
        borderColor: "#666"
      },
      emphasis: {
        selectorLabel: {
          show: !0,
          color: "#eee",
          backgroundColor: "#666"
        }
      },
      selectorPosition: "auto",
      selectorItemGap: 7,
      selectorButtonGap: 10,
      tooltip: {
        show: !1
      }
    }, e;
  }(De)
), Ho = _e, y_ = w, vd = de, kO = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.newlineDisabled = !1, r;
    }
    return e.prototype.init = function() {
      this.group.add(this._contentGroup = new vd()), this.group.add(this._selectorGroup = new vd()), this._isFirstRender = !0;
    }, e.prototype.getContentGroup = function() {
      return this._contentGroup;
    }, e.prototype.getSelectorGroup = function() {
      return this._selectorGroup;
    }, e.prototype.render = function(r, n, a) {
      var i = this._isFirstRender;
      if (this._isFirstRender = !1, this.resetInner(), !!r.get("show", !0)) {
        var o = r.get("align"), s = r.get("orient");
        (!o || o === "auto") && (o = r.get("left") === "right" && s === "vertical" ? "right" : "left");
        var l = r.get("selector", !0), u = r.get("selectorPosition", !0);
        l && (!u || u === "auto") && (u = s === "horizontal" ? "end" : "start"), this.renderInner(o, r, n, a, l, s, u);
        var c = r.getBoxLayoutParams(), d = {
          width: a.getWidth(),
          height: a.getHeight()
        }, p = r.get("padding"), f = Et(c, d, p), h = this.layoutInner(r, o, f, i, l, u), g = Et(ie({
          width: h.width,
          height: h.height
        }, c), d, p);
        this.group.x = g.x - h.x, this.group.y = g.y - h.y, this.group.markRedraw(), this.group.add(this._backgroundEl = xO(h, r));
      }
    }, e.prototype.resetInner = function() {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, e.prototype.renderInner = function(r, n, a, i, o, s, l) {
      var u = this.getContentGroup(), c = J(), d = n.get("selectedMode"), p = [];
      a.eachRawSeries(function(f) {
        !f.get("legendHoverLink") && p.push(f.id);
      }), y_(n.getData(), function(f, h) {
        var g = f.get("name");
        if (!this.newlineDisabled && (g === "" || g === `
`)) {
          var v = new vd();
          v.newline = !0, u.add(v);
          return;
        }
        var m = a.getSeriesByName(g)[0];
        if (!c.get(g))
          if (m) {
            var _ = m.getData(), y = _.getVisual("legendLineStyle") || {}, b = _.getVisual("legendIcon"), S = _.getVisual("style"), E = this._createItem(m, g, h, f, n, r, y, S, b, d, i);
            E.on("click", Ho(eA, g, null, i, p)).on("mouseover", Ho(b_, m.name, null, i, p)).on("mouseout", Ho(S_, m.name, null, i, p)), a.ssr && E.eachChild(function(T) {
              var x = pe(T);
              x.seriesIndex = m.seriesIndex, x.dataIndex = h, x.ssrType = "legend";
            }), c.set(g, !0);
          } else
            a.eachRawSeries(function(T) {
              if (!c.get(g) && T.legendVisualProvider) {
                var x = T.legendVisualProvider;
                if (!x.containName(g))
                  return;
                var C = x.indexOfName(g), A = x.getItemVisual(C, "style"), D = x.getItemVisual(C, "legendIcon"), M = br(A.fill);
                M && M[3] === 0 && (M[3] = 0.2, A = G(G({}, A), {
                  fill: Qn(M, "rgba")
                }));
                var I = this._createItem(T, g, h, f, n, r, {}, A, D, d, i);
                I.on("click", Ho(eA, null, g, i, p)).on("mouseover", Ho(b_, null, g, i, p)).on("mouseout", Ho(S_, null, g, i, p)), a.ssr && I.eachChild(function(N) {
                  var R = pe(N);
                  R.seriesIndex = T.seriesIndex, R.dataIndex = h, R.ssrType = "legend";
                }), c.set(g, !0);
              }
            }, this);
      }, this), o && this._createSelector(o, n, i, s, l);
    }, e.prototype._createSelector = function(r, n, a, i, o) {
      var s = this.getSelectorGroup();
      y_(r, function(u) {
        var c = u.type, d = new Pe({
          style: {
            x: 0,
            y: 0,
            align: "center",
            verticalAlign: "middle"
          },
          onclick: function() {
            a.dispatchAction({
              type: c === "all" ? "legendAllSelect" : "legendInverseSelect",
              legendId: n.id
            });
          }
        });
        s.add(d);
        var p = n.getModel("selectorLabel"), f = n.getModel(["emphasis", "selectorLabel"]);
        Vt(d, {
          normal: p,
          emphasis: f
        }, {
          defaultText: u.title
        }), Ji(d);
      });
    }, e.prototype._createItem = function(r, n, a, i, o, s, l, u, c, d, p) {
      var f = r.visualDrawType, h = o.get("itemWidth"), g = o.get("itemHeight"), v = o.isSelected(n), m = i.get("symbolRotate"), _ = i.get("symbolKeepAspect"), y = i.get("icon");
      c = y || c || "roundRect";
      var b = kZ(c, i, l, u, f, v, p), S = new vd(), E = i.getModel("textStyle");
      if (ae(r.getLegendIcon) && (!y || y === "inherit"))
        S.add(r.getLegendIcon({
          itemWidth: h,
          itemHeight: g,
          icon: c,
          iconRotate: m,
          itemStyle: b.itemStyle,
          lineStyle: b.lineStyle,
          symbolKeepAspect: _
        }));
      else {
        var T = y === "inherit" && r.getData().getVisual("symbol") ? m === "inherit" ? r.getData().getVisual("symbolRotate") : m : 0;
        S.add(BZ({
          itemWidth: h,
          itemHeight: g,
          icon: c,
          iconRotate: T,
          itemStyle: b.itemStyle,
          symbolKeepAspect: _
        }));
      }
      var x = s === "left" ? h + 5 : -5, C = s, A = o.get("formatter"), D = n;
      Y(A) && A ? D = A.replace("{name}", n ?? "") : ae(A) && (D = A(n));
      var M = v ? E.getTextColor() : i.get("inactiveColor");
      S.add(new Pe({
        style: Je(E, {
          text: D,
          x,
          y: g / 2,
          fill: M,
          align: C,
          verticalAlign: "middle"
        }, {
          inheritColor: M
        })
      }));
      var I = new Re({
        shape: S.getBoundingRect(),
        style: {
          // Cannot use 'invisible' because SVG SSR will miss the node
          fill: "transparent"
        }
      }), N = i.getModel("tooltip");
      return N.get("show") && go({
        el: I,
        componentModel: o,
        itemName: n,
        itemTooltipOption: N.option
      }), S.add(I), S.eachChild(function(R) {
        R.silent = !0;
      }), I.silent = !d, this.getContentGroup().add(S), Ji(S), S.__legendDataIndex = a, S;
    }, e.prototype.layoutInner = function(r, n, a, i, o, s) {
      var l = this.getContentGroup(), u = this.getSelectorGroup();
      to(r.get("orient"), l, r.get("itemGap"), a.width, a.height);
      var c = l.getBoundingRect(), d = [-c.x, -c.y];
      if (u.markRedraw(), l.markRedraw(), o) {
        to(
          // Buttons in selectorGroup always layout horizontally
          "horizontal",
          u,
          r.get("selectorItemGap", !0)
        );
        var p = u.getBoundingRect(), f = [-p.x, -p.y], h = r.get("selectorButtonGap", !0), g = r.getOrient().index, v = g === 0 ? "width" : "height", m = g === 0 ? "height" : "width", _ = g === 0 ? "y" : "x";
        s === "end" ? f[g] += c[v] + h : d[g] += p[v] + h, f[1 - g] += c[m] / 2 - p[m] / 2, u.x = f[0], u.y = f[1], l.x = d[0], l.y = d[1];
        var y = {
          x: 0,
          y: 0
        };
        return y[v] = c[v] + h + p[v], y[m] = Math.max(c[m], p[m]), y[_] = Math.min(0, p[_] + f[1 - g]), y;
      } else
        return l.x = d[0], l.y = d[1], this.group.getBoundingRect();
    }, e.prototype.remove = function() {
      this.getContentGroup().removeAll(), this._isFirstRender = !0;
    }, e.type = "legend.plain", e;
  }(st)
);
function kZ(t, e, r, n, a, i, o) {
  function s(v, m) {
    v.lineWidth === "auto" && (v.lineWidth = m.lineWidth > 0 ? 2 : 0), y_(v, function(_, y) {
      v[y] === "inherit" && (v[y] = m[y]);
    });
  }
  var l = e.getModel("itemStyle"), u = l.getItemStyle(), c = t.lastIndexOf("empty", 0) === 0 ? "fill" : "stroke", d = l.getShallow("decal");
  u.decal = !d || d === "inherit" ? n.decal : ys(d, o), u.fill === "inherit" && (u.fill = n[a]), u.stroke === "inherit" && (u.stroke = n[c]), u.opacity === "inherit" && (u.opacity = (a === "fill" ? n : r).opacity), s(u, n);
  var p = e.getModel("lineStyle"), f = p.getLineStyle();
  if (s(f, r), u.fill === "auto" && (u.fill = n.fill), u.stroke === "auto" && (u.stroke = n.fill), f.stroke === "auto" && (f.stroke = n.fill), !i) {
    var h = e.get("inactiveBorderWidth"), g = u[c];
    u.lineWidth = h === "auto" ? n.lineWidth > 0 && g ? 2 : 0 : u.lineWidth, u.fill = e.get("inactiveColor"), u.stroke = e.get("inactiveBorderColor"), f.stroke = p.get("inactiveColor"), f.lineWidth = p.get("inactiveWidth");
  }
  return {
    itemStyle: u,
    lineStyle: f
  };
}
function BZ(t) {
  var e = t.icon || "roundRect", r = mt(e, 0, 0, t.itemWidth, t.itemHeight, t.itemStyle.fill, t.symbolKeepAspect);
  return r.setStyle(t.itemStyle), r.rotation = (t.iconRotate || 0) * Math.PI / 180, r.setOrigin([t.itemWidth / 2, t.itemHeight / 2]), e.indexOf("empty") > -1 && (r.style.stroke = r.style.fill, r.style.fill = "#fff", r.style.lineWidth = 2), r;
}
function eA(t, e, r, n) {
  S_(t, e, r, n), r.dispatchAction({
    type: "legendToggleSelect",
    name: t ?? e
  }), b_(t, e, r, n);
}
function BO(t) {
  for (var e = t.getZr().storage.getDisplayList(), r, n = 0, a = e.length; n < a && !(r = e[n].states.emphasis); )
    n++;
  return r && r.hoverLayer;
}
function b_(t, e, r, n) {
  BO(r) || r.dispatchAction({
    type: "highlight",
    seriesName: t,
    name: e,
    excludeSeriesId: n
  });
}
function S_(t, e, r, n) {
  BO(r) || r.dispatchAction({
    type: "downplay",
    seriesName: t,
    name: e,
    excludeSeriesId: n
  });
}
function FZ(t) {
  var e = t.findComponents({
    mainType: "legend"
  });
  e && e.length && t.filterSeries(function(r) {
    for (var n = 0; n < e.length; n++)
      if (!e[n].isSelected(r.name))
        return !1;
    return !0;
  });
}
function ml(t, e, r) {
  var n = t === "allSelect" || t === "inverseSelect", a = {}, i = [];
  r.eachComponent({
    mainType: "legend",
    query: e
  }, function(s) {
    n ? s[t]() : s[t](e.name), tA(s, a), i.push(s.componentIndex);
  });
  var o = {};
  return r.eachComponent("legend", function(s) {
    w(a, function(l, u) {
      s[l ? "select" : "unSelect"](u);
    }), tA(s, o);
  }), n ? {
    selected: o,
    // return legendIndex array to tell the developers which legends are allSelect / inverseSelect
    legendIndex: i
  } : {
    name: e.name,
    selected: o
  };
}
function tA(t, e) {
  var r = e || {};
  return w(t.getData(), function(n) {
    var a = n.get("name");
    if (!(a === `
` || a === "")) {
      var i = t.isSelected(a);
      Q(r, a) ? r[a] = r[a] && i : r[a] = i;
    }
  }), r;
}
function GZ(t) {
  t.registerAction("legendToggleSelect", "legendselectchanged", _e(ml, "toggleSelected")), t.registerAction("legendAllSelect", "legendselectall", _e(ml, "allSelect")), t.registerAction("legendInverseSelect", "legendinverseselect", _e(ml, "inverseSelect")), t.registerAction("legendSelect", "legendselected", _e(ml, "select")), t.registerAction("legendUnSelect", "legendunselected", _e(ml, "unSelect"));
}
function FO(t) {
  t.registerComponentModel(__), t.registerComponentView(kO), t.registerProcessor(t.PRIORITY.PROCESSOR.SERIES_FILTER, FZ), t.registerSubTypeDefaulter("legend", function() {
    return "plain";
  }), GZ(t);
}
var UZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.setScrollDataIndex = function(r) {
      this.option.scrollDataIndex = r;
    }, e.prototype.init = function(r, n, a) {
      var i = ks(r);
      t.prototype.init.call(this, r, n, a), rA(this, r, i);
    }, e.prototype.mergeOption = function(r, n) {
      t.prototype.mergeOption.call(this, r, n), rA(this, this.option, r);
    }, e.type = "legend.scroll", e.defaultOption = ti(__.defaultOption, {
      scrollDataIndex: 0,
      pageButtonItemGap: 5,
      pageButtonGap: null,
      pageButtonPosition: "end",
      pageFormatter: "{current}/{total}",
      pageIcons: {
        horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
        vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
      },
      pageIconColor: "#2f4554",
      pageIconInactiveColor: "#aaa",
      pageIconSize: 15,
      pageTextStyle: {
        color: "#333"
      },
      animationDurationUpdate: 800
    }), e;
  }(__)
);
function rA(t, e, r) {
  var n = t.getOrient(), a = [1, 1];
  a[n.index] = 0, Xa(e, r, {
    type: "box",
    ignoreSize: !!a
  });
}
var nA = de, bv = ["width", "height"], Sv = ["x", "y"], zZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.newlineDisabled = !0, r._currentIndex = 0, r;
    }
    return e.prototype.init = function() {
      t.prototype.init.call(this), this.group.add(this._containerGroup = new nA()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new nA());
    }, e.prototype.resetInner = function() {
      t.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, e.prototype.renderInner = function(r, n, a, i, o, s, l) {
      var u = this;
      t.prototype.renderInner.call(this, r, n, a, i, o, s, l);
      var c = this._controllerGroup, d = n.get("pageIconSize", !0), p = V(d) ? d : [d, d];
      h("pagePrev", 0);
      var f = n.getModel("pageTextStyle");
      c.add(new Pe({
        name: "pageText",
        style: {
          // Placeholder to calculate a proper layout.
          text: "xx/xx",
          fill: f.getTextColor(),
          font: f.getFont(),
          verticalAlign: "middle",
          align: "center"
        },
        silent: !0
      })), h("pageNext", 1);
      function h(g, v) {
        var m = g + "DataIndex", _ = Yu(n.get("pageIcons", !0)[n.getOrient().name][v], {
          // Buttons will be created in each render, so we do not need
          // to worry about avoiding using legendModel kept in scope.
          onclick: K(u._pageGo, u, m, n, i)
        }, {
          x: -p[0] / 2,
          y: -p[1] / 2,
          width: p[0],
          height: p[1]
        });
        _.name = g, c.add(_);
      }
    }, e.prototype.layoutInner = function(r, n, a, i, o, s) {
      var l = this.getSelectorGroup(), u = r.getOrient().index, c = bv[u], d = Sv[u], p = bv[1 - u], f = Sv[1 - u];
      o && to(
        // Buttons in selectorGroup always layout horizontally
        "horizontal",
        l,
        r.get("selectorItemGap", !0)
      );
      var h = r.get("selectorButtonGap", !0), g = l.getBoundingRect(), v = [-g.x, -g.y], m = le(a);
      o && (m[c] = a[c] - g[c] - h);
      var _ = this._layoutContentAndController(r, i, m, u, c, p, f, d);
      if (o) {
        if (s === "end")
          v[u] += _[c] + h;
        else {
          var y = g[c] + h;
          v[u] -= y, _[d] -= y;
        }
        _[c] += g[c] + h, v[1 - u] += _[f] + _[p] / 2 - g[p] / 2, _[p] = Math.max(_[p], g[p]), _[f] = Math.min(_[f], g[f] + v[1 - u]), l.x = v[0], l.y = v[1], l.markRedraw();
      }
      return _;
    }, e.prototype._layoutContentAndController = function(r, n, a, i, o, s, l, u) {
      var c = this.getContentGroup(), d = this._containerGroup, p = this._controllerGroup;
      to(r.get("orient"), c, r.get("itemGap"), i ? a.width : null, i ? null : a.height), to(
        // Buttons in controller are layout always horizontally.
        "horizontal",
        p,
        r.get("pageButtonItemGap", !0)
      );
      var f = c.getBoundingRect(), h = p.getBoundingRect(), g = this._showController = f[o] > a[o], v = [-f.x, -f.y];
      n || (v[i] = c[u]);
      var m = [0, 0], _ = [-h.x, -h.y], y = ge(r.get("pageButtonGap", !0), r.get("itemGap", !0));
      if (g) {
        var b = r.get("pageButtonPosition", !0);
        b === "end" ? _[i] += a[o] - h[o] : m[i] += h[o] + y;
      }
      _[1 - i] += f[s] / 2 - h[s] / 2, c.setPosition(v), d.setPosition(m), p.setPosition(_);
      var S = {
        x: 0,
        y: 0
      };
      if (S[o] = g ? a[o] : f[o], S[s] = Math.max(f[s], h[s]), S[l] = Math.min(0, h[l] + _[1 - i]), d.__rectSize = a[o], g) {
        var E = {
          x: 0,
          y: 0
        };
        E[o] = Math.max(a[o] - h[o] - y, 0), E[s] = S[s], d.setClipPath(new Re({
          shape: E
        })), d.__rectSize = E[o];
      } else
        p.eachChild(function(x) {
          x.attr({
            invisible: !0,
            silent: !0
          });
        });
      var T = this._getPageInfo(r);
      return T.pageIndex != null && Fe(
        c,
        {
          x: T.contentPosition[0],
          y: T.contentPosition[1]
        },
        // When switch from "show controller" to "not show controller", view should be
        // updated immediately without animation, otherwise causes weird effect.
        g ? r : null
      ), this._updatePageInfoView(r, T), S;
    }, e.prototype._pageGo = function(r, n, a) {
      var i = this._getPageInfo(n)[r];
      i != null && a.dispatchAction({
        type: "legendScroll",
        scrollDataIndex: i,
        legendId: n.id
      });
    }, e.prototype._updatePageInfoView = function(r, n) {
      var a = this._controllerGroup;
      w(["pagePrev", "pageNext"], function(c) {
        var d = c + "DataIndex", p = n[d] != null, f = a.childOfName(c);
        f && (f.setStyle("fill", p ? r.get("pageIconColor", !0) : r.get("pageIconInactiveColor", !0)), f.cursor = p ? "pointer" : "default");
      });
      var i = a.childOfName("pageText"), o = r.get("pageFormatter"), s = n.pageIndex, l = s != null ? s + 1 : 0, u = n.pageCount;
      i && o && i.setStyle("text", Y(o) ? o.replace("{current}", l == null ? "" : l + "").replace("{total}", u == null ? "" : u + "") : o({
        current: l,
        total: u
      }));
    }, e.prototype._getPageInfo = function(r) {
      var n = r.get("scrollDataIndex", !0), a = this.getContentGroup(), i = this._containerGroup.__rectSize, o = r.getOrient().index, s = bv[o], l = Sv[o], u = this._findTargetItemIndex(n), c = a.children(), d = c[u], p = c.length, f = p ? 1 : 0, h = {
        contentPosition: [a.x, a.y],
        pageCount: f,
        pageIndex: f - 1,
        pagePrevDataIndex: null,
        pageNextDataIndex: null
      };
      if (!d)
        return h;
      var g = b(d);
      h.contentPosition[o] = -g.s;
      for (var v = u + 1, m = g, _ = g, y = null; v <= p; ++v)
        y = b(c[v]), // Half of the last item is out of the window.
        (!y && _.e > m.s + i || y && !S(y, m.s)) && (_.i > m.i ? m = _ : m = y, m && (h.pageNextDataIndex == null && (h.pageNextDataIndex = m.i), ++h.pageCount)), _ = y;
      for (var v = u - 1, m = g, _ = g, y = null; v >= -1; --v)
        y = b(c[v]), // If the the end item does not intersect with the window started
        // from the current item, a page can be settled.
        (!y || !S(_, y.s)) && m.i < _.i && (_ = m, h.pagePrevDataIndex == null && (h.pagePrevDataIndex = m.i), ++h.pageCount, ++h.pageIndex), m = y;
      return h;
      function b(E) {
        if (E) {
          var T = E.getBoundingRect(), x = T[l] + E[l];
          return {
            s: x,
            e: x + T[s],
            i: E.__legendDataIndex
          };
        }
      }
      function S(E, T) {
        return E.e >= T && E.s <= T + i;
      }
    }, e.prototype._findTargetItemIndex = function(r) {
      if (!this._showController)
        return 0;
      var n, a = this.getContentGroup(), i;
      return a.eachChild(function(o, s) {
        var l = o.__legendDataIndex;
        i == null && l != null && (i = s), l === r && (n = s);
      }), n ?? i;
    }, e.type = "legend.scroll", e;
  }(kO)
);
function VZ(t) {
  t.registerAction("legendScroll", "legendscroll", function(e, r) {
    var n = e.scrollDataIndex;
    n != null && r.eachComponent({
      mainType: "legend",
      subType: "scroll",
      query: e
    }, function(a) {
      a.setScrollDataIndex(n);
    });
  });
}
function $Z(t) {
  kt(FO), t.registerComponentModel(UZ), t.registerComponentView(zZ), VZ(t);
}
function Xre(t) {
  kt(FO), kt($Z);
}
var HZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "dataZoom.inside", e.defaultOption = ti(Ru.defaultOption, {
      disabled: !1,
      zoomLock: !1,
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !1,
      preventDefaultMouseMove: !0
    }), e;
  }(Ru)
), Vb = Oe();
function WZ(t, e, r) {
  Vb(t).coordSysRecordMap.each(function(n) {
    var a = n.dataZoomInfoMap.get(e.uid);
    a && (a.getRange = r);
  });
}
function qZ(t, e) {
  for (var r = Vb(t).coordSysRecordMap, n = r.keys(), a = 0; a < n.length; a++) {
    var i = n[a], o = r.get(i), s = o.dataZoomInfoMap;
    if (s) {
      var l = e.uid, u = s.get(l);
      u && (s.removeKey(l), s.keys().length || GO(r, o));
    }
  }
}
function GO(t, e) {
  if (e) {
    t.removeKey(e.model.uid);
    var r = e.controller;
    r && r.dispose();
  }
}
function YZ(t, e) {
  var r = {
    model: e,
    containsPoint: _e(ZZ, e),
    dispatchAction: _e(KZ, t),
    dataZoomInfoMap: null,
    controller: null
  }, n = r.controller = new ac(t.getZr());
  return w(["pan", "zoom", "scrollMove"], function(a) {
    n.on(a, function(i) {
      var o = [];
      r.dataZoomInfoMap.each(function(s) {
        if (i.isAvailableBehavior(s.model.option)) {
          var l = (s.getRange || {})[a], u = l && l(s.dzReferCoordSysInfo, r.model.mainType, r.controller, i);
          !s.model.get("disabled", !0) && u && o.push({
            dataZoomId: s.model.id,
            start: u[0],
            end: u[1]
          });
        }
      }), o.length && r.dispatchAction(o);
    });
  }), r;
}
function KZ(t, e) {
  t.isDisposed() || t.dispatchAction({
    type: "dataZoom",
    animation: {
      easing: "cubicOut",
      duration: 100
    },
    batch: e
  });
}
function ZZ(t, e, r, n) {
  return t.coordinateSystem.containPoint([r, n]);
}
function XZ(t) {
  var e, r = "type_", n = {
    type_true: 2,
    type_move: 1,
    type_false: 0,
    type_undefined: -1
  }, a = !0;
  return t.each(function(i) {
    var o = i.model, s = o.get("disabled", !0) ? !1 : o.get("zoomLock", !0) ? "move" : !0;
    n[r + s] > n[r + e] && (e = s), a = a && o.get("preventDefaultMouseMove", !0);
  }), {
    controlType: e,
    opt: {
      // RoamController will enable all of these functionalities,
      // and the final behavior is determined by its event listener
      // provided by each inside zoom.
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !0,
      preventDefaultMouseMove: !!a
    }
  };
}
function QZ(t) {
  t.registerProcessor(t.PRIORITY.PROCESSOR.FILTER, function(e, r) {
    var n = Vb(r), a = n.coordSysRecordMap || (n.coordSysRecordMap = J());
    a.each(function(i) {
      i.dataZoomInfoMap = null;
    }), e.eachComponent({
      mainType: "dataZoom",
      subType: "inside"
    }, function(i) {
      var o = SO(i);
      w(o.infoList, function(s) {
        var l = s.model.uid, u = a.get(l) || a.set(l, YZ(r, s.model)), c = u.dataZoomInfoMap || (u.dataZoomInfoMap = J());
        c.set(i.uid, {
          dzReferCoordSysInfo: s,
          model: i,
          getRange: null
        });
      });
    }), a.each(function(i) {
      var o = i.controller, s, l = i.dataZoomInfoMap;
      if (l) {
        var u = l.keys()[0];
        u != null && (s = l.get(u));
      }
      if (!s) {
        GO(a, i);
        return;
      }
      var c = XZ(l);
      o.enable(c.controlType, c.opt), o.setPointerChecker(i.containsPoint), Gs(i, "dispatchAction", s.model.get("throttle", !0), "fixRate");
    });
  });
}
var jZ = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "dataZoom.inside", r;
    }
    return e.prototype.render = function(r, n, a) {
      if (t.prototype.render.apply(this, arguments), r.noTarget()) {
        this._clear();
        return;
      }
      this.range = r.getPercentRange(), WZ(a, r, {
        pan: K(Ev.pan, this),
        zoom: K(Ev.zoom, this),
        scrollMove: K(Ev.scrollMove, this)
      });
    }, e.prototype.dispose = function() {
      this._clear(), t.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      qZ(this.api, this.dataZoomModel), this.range = null;
    }, e.type = "dataZoom.inside", e;
  }(Ob)
), Ev = {
  zoom: function(t, e, r, n) {
    var a = this.range, i = a.slice(), o = t.axisModels[0];
    if (o) {
      var s = Tv[e](null, [n.originX, n.originY], o, r, t), l = (s.signal > 0 ? s.pixelStart + s.pixelLength - s.pixel : s.pixel - s.pixelStart) / s.pixelLength * (i[1] - i[0]) + i[0], u = Math.max(1 / n.scale, 0);
      i[0] = (i[0] - l) * u + l, i[1] = (i[1] - l) * u + l;
      var c = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
      if (So(0, i, [0, 100], 0, c.minSpan, c.maxSpan), this.range = i, a[0] !== i[0] || a[1] !== i[1])
        return i;
    }
  },
  pan: aA(function(t, e, r, n, a, i) {
    var o = Tv[n]([i.oldX, i.oldY], [i.newX, i.newY], e, a, r);
    return o.signal * (t[1] - t[0]) * o.pixel / o.pixelLength;
  }),
  scrollMove: aA(function(t, e, r, n, a, i) {
    var o = Tv[n]([0, 0], [i.scrollDelta, i.scrollDelta], e, a, r);
    return o.signal * (t[1] - t[0]) * i.scrollDelta;
  })
};
function aA(t) {
  return function(e, r, n, a) {
    var i = this.range, o = i.slice(), s = e.axisModels[0];
    if (s) {
      var l = t(o, s, e, r, n, a);
      if (So(l, o, [0, 100], "all"), this.range = o, i[0] !== o[0] || i[1] !== o[1])
        return o;
    }
  };
}
var Tv = {
  grid: function(t, e, r, n, a) {
    var i = r.axis, o = {}, s = a.model.coordinateSystem.getRect();
    return t = t || [0, 0], i.dim === "x" ? (o.pixel = e[0] - t[0], o.pixelLength = s.width, o.pixelStart = s.x, o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - t[1], o.pixelLength = s.height, o.pixelStart = s.y, o.signal = i.inverse ? -1 : 1), o;
  },
  polar: function(t, e, r, n, a) {
    var i = r.axis, o = {}, s = a.model.coordinateSystem, l = s.getRadiusAxis().getExtent(), u = s.getAngleAxis().getExtent();
    return t = t ? s.pointToCoord(t) : [0, 0], e = s.pointToCoord(e), r.mainType === "radiusAxis" ? (o.pixel = e[0] - t[0], o.pixelLength = l[1] - l[0], o.pixelStart = l[0], o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - t[1], o.pixelLength = u[1] - u[0], o.pixelStart = u[0], o.signal = i.inverse ? -1 : 1), o;
  },
  singleAxis: function(t, e, r, n, a) {
    var i = r.axis, o = a.model.coordinateSystem.getRect(), s = {};
    return t = t || [0, 0], i.orient === "horizontal" ? (s.pixel = e[0] - t[0], s.pixelLength = o.width, s.pixelStart = o.x, s.signal = i.inverse ? 1 : -1) : (s.pixel = e[1] - t[1], s.pixelLength = o.height, s.pixelStart = o.y, s.signal = i.inverse ? -1 : 1), s;
  }
};
function JZ(t) {
  Lb(t), t.registerComponentModel(HZ), t.registerComponentView(jZ), QZ(t);
}
var eX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.type = "dataZoom.slider", e.layoutMode = "box", e.defaultOption = ti(Ru.defaultOption, {
      show: !0,
      // deault value can only be drived in view stage.
      right: "ph",
      top: "ph",
      width: "ph",
      height: "ph",
      left: null,
      bottom: null,
      borderColor: "#d2dbee",
      borderRadius: 3,
      backgroundColor: "rgba(47,69,84,0)",
      // dataBackgroundColor: '#ddd',
      dataBackground: {
        lineStyle: {
          color: "#d2dbee",
          width: 0.5
        },
        areaStyle: {
          color: "#d2dbee",
          opacity: 0.2
        }
      },
      selectedDataBackground: {
        lineStyle: {
          color: "#8fb0f7",
          width: 0.5
        },
        areaStyle: {
          color: "#8fb0f7",
          opacity: 0.2
        }
      },
      // Color of selected window.
      fillerColor: "rgba(135,175,274,0.2)",
      handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z",
      // Percent of the slider height
      handleSize: "100%",
      handleStyle: {
        color: "#fff",
        borderColor: "#ACB8D1"
      },
      moveHandleSize: 7,
      moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z",
      moveHandleStyle: {
        color: "#D2DBEE",
        opacity: 0.7
      },
      showDetail: !0,
      showDataShadow: "auto",
      realtime: !0,
      zoomLock: !1,
      textStyle: {
        color: "#6E7079"
      },
      brushSelect: !0,
      brushStyle: {
        color: "rgba(135,175,274,0.15)"
      },
      emphasis: {
        handleLabel: {
          show: !0
        },
        handleStyle: {
          borderColor: "#8FB0F7"
        },
        moveHandleStyle: {
          color: "#8FB0F7"
        }
      }
    }), e;
  }(Ru)
), _l = Re, iA = 7, tX = 1, xv = 30, rX = 7, yl = "horizontal", oA = "vertical", nX = 5, aX = ["line", "bar", "candlestick", "scatter"], iX = {
  easing: "cubicOut",
  duration: 100,
  delay: 0
}, oX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._displayables = {}, r;
    }
    return e.prototype.init = function(r, n) {
      this.api = n, this._onBrush = K(this._onBrush, this), this._onBrushEnd = K(this._onBrushEnd, this);
    }, e.prototype.render = function(r, n, a, i) {
      if (t.prototype.render.apply(this, arguments), Gs(this, "_dispatchZoomAction", r.get("throttle"), "fixRate"), this._orient = r.getOrient(), r.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      if (r.noTarget()) {
        this._clear(), this.group.removeAll();
        return;
      }
      (!i || i.type !== "dataZoom" || i.from !== this.uid) && this._buildView(), this._updateView();
    }, e.prototype.dispose = function() {
      this._clear(), t.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      yu(this, "_dispatchZoomAction");
      var r = this.api.getZr();
      r.off("mousemove", this._onBrush), r.off("mouseup", this._onBrushEnd);
    }, e.prototype._buildView = function() {
      var r = this.group;
      r.removeAll(), this._brushing = !1, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
      var n = this._displayables.sliderGroup = new de();
      this._renderBackground(), this._renderHandle(), this._renderDataShadow(), r.add(n), this._positionGroup();
    }, e.prototype._resetLocation = function() {
      var r = this.dataZoomModel, n = this.api, a = r.get("brushSelect"), i = a ? rX : 0, o = this._findCoordRect(), s = {
        width: n.getWidth(),
        height: n.getHeight()
      }, l = this._orient === yl ? {
        // Why using 'right', because right should be used in vertical,
        // and it is better to be consistent for dealing with position param merge.
        right: s.width - o.x - o.width,
        top: s.height - xv - iA - i,
        width: o.width,
        height: xv
      } : {
        right: iA,
        top: o.y,
        width: xv,
        height: o.height
      }, u = ks(r.option);
      w(["right", "top", "width", "height"], function(d) {
        u[d] === "ph" && (u[d] = l[d]);
      });
      var c = Et(u, s);
      this._location = {
        x: c.x,
        y: c.y
      }, this._size = [c.width, c.height], this._orient === oA && this._size.reverse();
    }, e.prototype._positionGroup = function() {
      var r = this.group, n = this._location, a = this._orient, i = this.dataZoomModel.getFirstTargetAxisModel(), o = i && i.get("inverse"), s = this._displayables.sliderGroup, l = (this._dataShadowInfo || {}).otherAxisInverse;
      s.attr(a === yl && !o ? {
        scaleY: l ? 1 : -1,
        scaleX: 1
      } : a === yl && o ? {
        scaleY: l ? 1 : -1,
        scaleX: -1
      } : a === oA && !o ? {
        scaleY: l ? -1 : 1,
        scaleX: 1,
        rotation: Math.PI / 2
      } : {
        scaleY: l ? -1 : 1,
        scaleX: -1,
        rotation: Math.PI / 2
      });
      var u = r.getBoundingRect([s]);
      r.x = n.x - u.x, r.y = n.y - u.y, r.markRedraw();
    }, e.prototype._getViewExtent = function() {
      return [0, this._size[0]];
    }, e.prototype._renderBackground = function() {
      var r = this.dataZoomModel, n = this._size, a = this._displayables.sliderGroup, i = r.get("brushSelect");
      a.add(new _l({
        silent: !0,
        shape: {
          x: 0,
          y: 0,
          width: n[0],
          height: n[1]
        },
        style: {
          fill: r.get("backgroundColor")
        },
        z2: -40
      }));
      var o = new _l({
        shape: {
          x: 0,
          y: 0,
          width: n[0],
          height: n[1]
        },
        style: {
          fill: "transparent"
        },
        z2: 0,
        onclick: K(this._onClickPanel, this)
      }), s = this.api.getZr();
      i ? (o.on("mousedown", this._onBrushStart, this), o.cursor = "crosshair", s.on("mousemove", this._onBrush), s.on("mouseup", this._onBrushEnd)) : (s.off("mousemove", this._onBrush), s.off("mouseup", this._onBrushEnd)), a.add(o);
    }, e.prototype._renderDataShadow = function() {
      var r = this._dataShadowInfo = this._prepareDataShadowInfo();
      if (this._displayables.dataShadowSegs = [], !r)
        return;
      var n = this._size, a = this._shadowSize || [], i = r.series, o = i.getRawData(), s = i.getShadowDim && i.getShadowDim(), l = s && o.getDimensionInfo(s) ? i.getShadowDim() : r.otherDim;
      if (l == null)
        return;
      var u = this._shadowPolygonPts, c = this._shadowPolylinePts;
      if (o !== this._shadowData || l !== this._shadowDim || n[0] !== a[0] || n[1] !== a[1]) {
        var d = o.getDataExtent(l), p = (d[1] - d[0]) * 0.3;
        d = [d[0] - p, d[1] + p];
        var f = [0, n[1]], h = [0, n[0]], g = [[n[0], 0], [0, 0]], v = [], m = h[1] / (o.count() - 1), _ = 0, y = Math.round(o.count() / n[0]), b;
        o.each([l], function(C, A) {
          if (y > 0 && A % y) {
            _ += m;
            return;
          }
          var D = C == null || isNaN(C) || C === "", M = D ? 0 : $e(C, d, f, !0);
          D && !b && A ? (g.push([g[g.length - 1][0], 0]), v.push([v[v.length - 1][0], 0])) : !D && b && (g.push([_, 0]), v.push([_, 0])), g.push([_, M]), v.push([_, M]), _ += m, b = D;
        }), u = this._shadowPolygonPts = g, c = this._shadowPolylinePts = v;
      }
      this._shadowData = o, this._shadowDim = l, this._shadowSize = [n[0], n[1]];
      var S = this.dataZoomModel;
      function E(C) {
        var A = S.getModel(C ? "selectedDataBackground" : "dataBackground"), D = new de(), M = new sr({
          shape: {
            points: u
          },
          segmentIgnoreThreshold: 1,
          style: A.getModel("areaStyle").getAreaStyle(),
          silent: !0,
          z2: -20
        }), I = new lr({
          shape: {
            points: c
          },
          segmentIgnoreThreshold: 1,
          style: A.getModel("lineStyle").getLineStyle(),
          silent: !0,
          z2: -19
        });
        return D.add(M), D.add(I), D;
      }
      for (var T = 0; T < 3; T++) {
        var x = E(T === 1);
        this._displayables.sliderGroup.add(x), this._displayables.dataShadowSegs.push(x);
      }
    }, e.prototype._prepareDataShadowInfo = function() {
      var r = this.dataZoomModel, n = r.get("showDataShadow");
      if (n !== !1) {
        var a, i = this.ecModel;
        return r.eachTargetAxis(function(o, s) {
          var l = r.getAxisProxy(o, s).getTargetSeriesModels();
          w(l, function(u) {
            if (!a && !(n !== !0 && xe(aX, u.get("type")) < 0)) {
              var c = i.getComponent(Ga(o), s).axis, d = sX(o), p, f = u.coordinateSystem;
              d != null && f.getOtherAxis && (p = f.getOtherAxis(c).inverse), d = u.getData().mapDimension(d), a = {
                thisAxis: c,
                series: u,
                thisDim: o,
                otherDim: d,
                otherAxisInverse: p
              };
            }
          }, this);
        }, this), a;
      }
    }, e.prototype._renderHandle = function() {
      var r = this.group, n = this._displayables, a = n.handles = [null, null], i = n.handleLabels = [null, null], o = this._displayables.sliderGroup, s = this._size, l = this.dataZoomModel, u = this.api, c = l.get("borderRadius") || 0, d = l.get("brushSelect"), p = n.filler = new _l({
        silent: d,
        style: {
          fill: l.get("fillerColor")
        },
        textConfig: {
          position: "inside"
        }
      });
      o.add(p), o.add(new _l({
        silent: !0,
        subPixelOptimize: !0,
        shape: {
          x: 0,
          y: 0,
          width: s[0],
          height: s[1],
          r: c
        },
        style: {
          // deprecated option
          stroke: l.get("dataBackgroundColor") || l.get("borderColor"),
          lineWidth: tX,
          fill: "rgba(0,0,0,0)"
        }
      })), w([0, 1], function(y) {
        var b = l.get("handleIcon");
        !vp[b] && b.indexOf("path://") < 0 && b.indexOf("image://") < 0 && (b = "path://" + b);
        var S = mt(b, -1, 0, 2, 2, null, !0);
        S.attr({
          cursor: sA(this._orient),
          draggable: !0,
          drift: K(this._onDragMove, this, y),
          ondragend: K(this._onDragEnd, this),
          onmouseover: K(this._showDataInfo, this, !0),
          onmouseout: K(this._showDataInfo, this, !1),
          z2: 5
        });
        var E = S.getBoundingRect(), T = l.get("handleSize");
        this._handleHeight = q(T, this._size[1]), this._handleWidth = E.width / E.height * this._handleHeight, S.setStyle(l.getModel("handleStyle").getItemStyle()), S.style.strokeNoScale = !0, S.rectHover = !0, S.ensureState("emphasis").style = l.getModel(["emphasis", "handleStyle"]).getItemStyle(), Ji(S);
        var x = l.get("handleColor");
        x != null && (S.style.fill = x), o.add(a[y] = S);
        var C = l.getModel("textStyle"), A = l.get("handleLabel") || {}, D = A.show || !1;
        r.add(i[y] = new Pe({
          silent: !0,
          invisible: !D,
          style: Je(C, {
            x: 0,
            y: 0,
            text: "",
            verticalAlign: "middle",
            align: "center",
            fill: C.getTextColor(),
            font: C.getFont()
          }),
          z2: 10
        }));
      }, this);
      var f = p;
      if (d) {
        var h = q(l.get("moveHandleSize"), s[1]), g = n.moveHandle = new Re({
          style: l.getModel("moveHandleStyle").getItemStyle(),
          silent: !0,
          shape: {
            r: [0, 0, 2, 2],
            y: s[1] - 0.5,
            height: h
          }
        }), v = h * 0.8, m = n.moveHandleIcon = mt(l.get("moveHandleIcon"), -v / 2, -v / 2, v, v, "#fff", !0);
        m.silent = !0, m.y = s[1] + h / 2 - 0.5, g.ensureState("emphasis").style = l.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
        var _ = Math.min(s[1] / 2, Math.max(h, 10));
        f = n.moveZone = new Re({
          invisible: !0,
          shape: {
            y: s[1] - _,
            height: h + _
          }
        }), f.on("mouseover", function() {
          u.enterEmphasis(g);
        }).on("mouseout", function() {
          u.leaveEmphasis(g);
        }), o.add(g), o.add(m), o.add(f);
      }
      f.attr({
        draggable: !0,
        cursor: sA(this._orient),
        drift: K(this._onDragMove, this, "all"),
        ondragstart: K(this._showDataInfo, this, !0),
        ondragend: K(this._onDragEnd, this),
        onmouseover: K(this._showDataInfo, this, !0),
        onmouseout: K(this._showDataInfo, this, !1)
      });
    }, e.prototype._resetInterval = function() {
      var r = this._range = this.dataZoomModel.getPercentRange(), n = this._getViewExtent();
      this._handleEnds = [$e(r[0], [0, 100], n, !0), $e(r[1], [0, 100], n, !0)];
    }, e.prototype._updateInterval = function(r, n) {
      var a = this.dataZoomModel, i = this._handleEnds, o = this._getViewExtent(), s = a.findRepresentativeAxisProxy().getMinMaxSpan(), l = [0, 100];
      So(n, i, o, a.get("zoomLock") ? "all" : r, s.minSpan != null ? $e(s.minSpan, l, o, !0) : null, s.maxSpan != null ? $e(s.maxSpan, l, o, !0) : null);
      var u = this._range, c = this._range = kr([$e(i[0], o, l, !0), $e(i[1], o, l, !0)]);
      return !u || u[0] !== c[0] || u[1] !== c[1];
    }, e.prototype._updateView = function(r) {
      var n = this._displayables, a = this._handleEnds, i = kr(a.slice()), o = this._size;
      w([0, 1], function(f) {
        var h = n.handles[f], g = this._handleHeight;
        h.attr({
          scaleX: g / 2,
          scaleY: g / 2,
          // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.
          // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.
          x: a[f] + (f ? -1 : 1),
          y: o[1] / 2 - g / 2
        });
      }, this), n.filler.setShape({
        x: i[0],
        y: 0,
        width: i[1] - i[0],
        height: o[1]
      });
      var s = {
        x: i[0],
        width: i[1] - i[0]
      };
      n.moveHandle && (n.moveHandle.setShape(s), n.moveZone.setShape(s), n.moveZone.getBoundingRect(), n.moveHandleIcon && n.moveHandleIcon.attr("x", s.x + s.width / 2));
      for (var l = n.dataShadowSegs, u = [0, i[0], i[1], o[0]], c = 0; c < l.length; c++) {
        var d = l[c], p = d.getClipPath();
        p || (p = new Re(), d.setClipPath(p)), p.setShape({
          x: u[c],
          y: 0,
          width: u[c + 1] - u[c],
          height: o[1]
        });
      }
      this._updateDataInfo(r);
    }, e.prototype._updateDataInfo = function(r) {
      var n = this.dataZoomModel, a = this._displayables, i = a.handleLabels, o = this._orient, s = ["", ""];
      if (n.get("showDetail")) {
        var l = n.findRepresentativeAxisProxy();
        if (l) {
          var u = l.getAxisModel().axis, c = this._range, d = r ? l.calculateDataWindow({
            start: c[0],
            end: c[1]
          }).valueWindow : l.getDataValueWindow();
          s = [this._formatLabel(d[0], u), this._formatLabel(d[1], u)];
        }
      }
      var p = kr(this._handleEnds.slice());
      f.call(this, 0), f.call(this, 1);
      function f(h) {
        var g = eo(a.handles[h].parent, this.group), v = gf(h === 0 ? "right" : "left", g), m = this._handleWidth / 2 + nX, _ = Jr([p[h] + (h === 0 ? -m : m), this._size[1] / 2], g);
        i[h].setStyle({
          x: _[0],
          y: _[1],
          verticalAlign: o === yl ? "middle" : v,
          align: o === yl ? v : "center",
          text: s[h]
        });
      }
    }, e.prototype._formatLabel = function(r, n) {
      var a = this.dataZoomModel, i = a.get("labelFormatter"), o = a.get("labelPrecision");
      (o == null || o === "auto") && (o = n.getPixelPrecision());
      var s = r == null || isNaN(r) ? "" : n.type === "category" || n.type === "time" ? n.scale.getLabel({
        value: Math.round(r)
      }) : r.toFixed(Math.min(o, 20));
      return ae(i) ? i(r, s) : Y(i) ? i.replace("{value}", s) : s;
    }, e.prototype._showDataInfo = function(r) {
      var n = this.dataZoomModel.get("handleLabel") || {}, a = n.show || !1, i = this.dataZoomModel.getModel(["emphasis", "handleLabel"]), o = i.get("show") || !1, s = r || this._dragging ? o : a, l = this._displayables, u = l.handleLabels;
      u[0].attr("invisible", !s), u[1].attr("invisible", !s), l.moveHandle && this.api[s ? "enterEmphasis" : "leaveEmphasis"](l.moveHandle, 1);
    }, e.prototype._onDragMove = function(r, n, a, i) {
      this._dragging = !0, ta(i.event);
      var o = this._displayables.sliderGroup.getLocalTransform(), s = Jr([n, a], o, !0), l = this._updateInterval(r, s[0]), u = this.dataZoomModel.get("realtime");
      this._updateView(!u), l && u && this._dispatchZoomAction(!0);
    }, e.prototype._onDragEnd = function() {
      this._dragging = !1, this._showDataInfo(!1);
      var r = this.dataZoomModel.get("realtime");
      !r && this._dispatchZoomAction(!1);
    }, e.prototype._onClickPanel = function(r) {
      var n = this._size, a = this._displayables.sliderGroup.transformCoordToLocal(r.offsetX, r.offsetY);
      if (!(a[0] < 0 || a[0] > n[0] || a[1] < 0 || a[1] > n[1])) {
        var i = this._handleEnds, o = (i[0] + i[1]) / 2, s = this._updateInterval("all", a[0] - o);
        this._updateView(), s && this._dispatchZoomAction(!1);
      }
    }, e.prototype._onBrushStart = function(r) {
      var n = r.offsetX, a = r.offsetY;
      this._brushStart = new Ee(n, a), this._brushing = !0, this._brushStartTime = +/* @__PURE__ */ new Date();
    }, e.prototype._onBrushEnd = function(r) {
      if (this._brushing) {
        var n = this._displayables.brushRect;
        if (this._brushing = !1, !!n) {
          n.attr("ignore", !0);
          var a = n.shape, i = +/* @__PURE__ */ new Date();
          if (!(i - this._brushStartTime < 200 && Math.abs(a.width) < 5)) {
            var o = this._getViewExtent(), s = [0, 100];
            this._range = kr([$e(a.x, o, s, !0), $e(a.x + a.width, o, s, !0)]), this._handleEnds = [a.x, a.x + a.width], this._updateView(), this._dispatchZoomAction(!1);
          }
        }
      }
    }, e.prototype._onBrush = function(r) {
      this._brushing && (ta(r.event), this._updateBrushRect(r.offsetX, r.offsetY));
    }, e.prototype._updateBrushRect = function(r, n) {
      var a = this._displayables, i = this.dataZoomModel, o = a.brushRect;
      o || (o = a.brushRect = new _l({
        silent: !0,
        style: i.getModel("brushStyle").getItemStyle()
      }), a.sliderGroup.add(o)), o.attr("ignore", !1);
      var s = this._brushStart, l = this._displayables.sliderGroup, u = l.transformCoordToLocal(r, n), c = l.transformCoordToLocal(s.x, s.y), d = this._size;
      u[0] = Math.max(Math.min(d[0], u[0]), 0), o.setShape({
        x: c[0],
        y: 0,
        width: u[0] - c[0],
        height: d[1]
      });
    }, e.prototype._dispatchZoomAction = function(r) {
      var n = this._range;
      this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        dataZoomId: this.dataZoomModel.id,
        animation: r ? iX : null,
        start: n[0],
        end: n[1]
      });
    }, e.prototype._findCoordRect = function() {
      var r, n = SO(this.dataZoomModel).infoList;
      if (!r && n.length) {
        var a = n[0].model.coordinateSystem;
        r = a.getRect && a.getRect();
      }
      if (!r) {
        var i = this.api.getWidth(), o = this.api.getHeight();
        r = {
          x: i * 0.2,
          y: o * 0.2,
          width: i * 0.6,
          height: o * 0.6
        };
      }
      return r;
    }, e.type = "dataZoom.slider", e;
  }(Ob)
);
function sX(t) {
  var e = {
    x: "y",
    y: "x",
    radius: "angle",
    angle: "radius"
  };
  return e[t];
}
function sA(t) {
  return t === "vertical" ? "ns-resize" : "ew-resize";
}
function lX(t) {
  t.registerComponentModel(eX), t.registerComponentView(oX), Lb(t);
}
function Qre(t) {
  kt(JZ), kt(lX);
}
var UO = {
  /**
   * @public
   */
  get: function(t, e, r) {
    var n = le((uX[t] || {})[e]);
    return r && V(n) ? n[n.length - 1] : n;
  }
}, uX = {
  color: {
    active: ["#006edd", "#e0ffff"],
    inactive: ["rgba(0,0,0,0)"]
  },
  colorHue: {
    active: [0, 360],
    inactive: [0, 0]
  },
  colorSaturation: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  colorLightness: {
    active: [0.9, 0.5],
    inactive: [0, 0]
  },
  colorAlpha: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  opacity: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  symbol: {
    active: ["circle", "roundRect", "diamond"],
    inactive: ["none"]
  },
  symbolSize: {
    active: [10, 50],
    inactive: [0, 0]
  }
}, lA = wt.mapVisual, cX = wt.eachVisual, dX = V, uA = w, pX = kr, fX = $e, Up = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.stateList = ["inRange", "outOfRange"], r.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], r.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, r.dataBound = [-1 / 0, 1 / 0], r.targetVisuals = {}, r.controllerVisuals = {}, r;
    }
    return e.prototype.init = function(r, n, a) {
      this.mergeDefaultAndTheme(r, a);
    }, e.prototype.optionUpdated = function(r, n) {
      var a = this.option;
      !n && NO(a, r, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
    }, e.prototype.resetVisual = function(r) {
      var n = this.stateList;
      r = K(r, this), this.controllerVisuals = g_(this.option.controller, n, r), this.targetVisuals = g_(this.option.target, n, r);
    }, e.prototype.getItemSymbol = function() {
      return null;
    }, e.prototype.getTargetSeriesIndices = function() {
      var r = this.option.seriesIndex, n = [];
      return r == null || r === "all" ? this.ecModel.eachSeries(function(a, i) {
        n.push(i);
      }) : n = Ye(r), n;
    }, e.prototype.eachTargetSeries = function(r, n) {
      w(this.getTargetSeriesIndices(), function(a) {
        var i = this.ecModel.getSeriesByIndex(a);
        i && r.call(n, i);
      }, this);
    }, e.prototype.isTargetSeries = function(r) {
      var n = !1;
      return this.eachTargetSeries(function(a) {
        a === r && (n = !0);
      }), n;
    }, e.prototype.formatValueText = function(r, n, a) {
      var i = this.option, o = i.precision, s = this.dataBound, l = i.formatter, u;
      a = a || ["<", ">"], V(r) && (r = r.slice(), u = !0);
      var c = n ? r : u ? [d(r[0]), d(r[1])] : d(r);
      if (Y(l))
        return l.replace("{value}", u ? c[0] : c).replace("{value2}", u ? c[1] : c);
      if (ae(l))
        return u ? l(r[0], r[1]) : l(r);
      if (u)
        return r[0] === s[0] ? a[0] + " " + c[1] : r[1] === s[1] ? a[1] + " " + c[0] : c[0] + " - " + c[1];
      return c;
      function d(p) {
        return p === s[0] ? "min" : p === s[1] ? "max" : (+p).toFixed(Math.min(o, 20));
      }
    }, e.prototype.resetExtent = function() {
      var r = this.option, n = pX([r.min, r.max]);
      this._dataExtent = n;
    }, e.prototype.getDataDimensionIndex = function(r) {
      var n = this.option.dimension;
      if (n != null)
        return r.getDimensionIndex(n);
      for (var a = r.dimensions, i = a.length - 1; i >= 0; i--) {
        var o = a[i], s = r.getDimensionInfo(o);
        if (!s.isCalculationCoord)
          return s.storeDimIndex;
      }
    }, e.prototype.getExtent = function() {
      return this._dataExtent.slice();
    }, e.prototype.completeVisualOption = function() {
      var r = this.ecModel, n = this.option, a = {
        inRange: n.inRange,
        outOfRange: n.outOfRange
      }, i = n.target || (n.target = {}), o = n.controller || (n.controller = {});
      be(i, a), be(o, a);
      var s = this.isCategory();
      l.call(this, i), l.call(this, o), u.call(this, i, "inRange", "outOfRange"), c.call(this, o);
      function l(d) {
        dX(n.color) && !d.inRange && (d.inRange = {
          color: n.color.slice().reverse()
        }), d.inRange = d.inRange || {
          color: r.get("gradientColor")
        };
      }
      function u(d, p, f) {
        var h = d[p], g = d[f];
        h && !g && (g = d[f] = {}, uA(h, function(v, m) {
          if (wt.isValidType(m)) {
            var _ = UO.get(m, "inactive", s);
            _ != null && (g[m] = _, m === "color" && !g.hasOwnProperty("opacity") && !g.hasOwnProperty("colorAlpha") && (g.opacity = [0, 0]));
          }
        }));
      }
      function c(d) {
        var p = (d.inRange || {}).symbol || (d.outOfRange || {}).symbol, f = (d.inRange || {}).symbolSize || (d.outOfRange || {}).symbolSize, h = this.get("inactiveColor"), g = this.getItemSymbol(), v = g || "roundRect";
        uA(this.stateList, function(m) {
          var _ = this.itemSize, y = d[m];
          y || (y = d[m] = {
            color: s ? h : [h]
          }), y.symbol == null && (y.symbol = p && le(p) || (s ? v : [v])), y.symbolSize == null && (y.symbolSize = f && le(f) || (s ? _[0] : [_[0], _[0]])), y.symbol = lA(y.symbol, function(E) {
            return E === "none" ? v : E;
          });
          var b = y.symbolSize;
          if (b != null) {
            var S = -1 / 0;
            cX(b, function(E) {
              E > S && (S = E);
            }), y.symbolSize = lA(b, function(E) {
              return fX(E, [0, S], [0, _[0]], !0);
            });
          }
        }, this);
      }
    }, e.prototype.resetItemSize = function() {
      this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
    }, e.prototype.isCategory = function() {
      return !!this.option.categories;
    }, e.prototype.setSelected = function(r) {
    }, e.prototype.getSelected = function() {
      return null;
    }, e.prototype.getValueState = function(r) {
      return null;
    }, e.prototype.getVisualMeta = function(r) {
      return null;
    }, e.type = "visualMap", e.dependencies = ["series"], e.defaultOption = {
      show: !0,
      // zlevel: 0,
      z: 4,
      seriesIndex: "all",
      min: 0,
      max: 200,
      left: 0,
      right: null,
      top: null,
      bottom: 0,
      itemWidth: null,
      itemHeight: null,
      inverse: !1,
      orient: "vertical",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      contentColor: "#5793f3",
      inactiveColor: "#aaa",
      borderWidth: 0,
      padding: 5,
      // 接受数组分别设定上右下左边距，同css
      textGap: 10,
      precision: 0,
      textStyle: {
        color: "#333"
        // 值域文字颜色
      }
    }, e;
  }(De)
), cA = [20, 140], hX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.optionUpdated = function(r, n) {
      t.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(a) {
        a.mappingMethod = "linear", a.dataExtent = this.getExtent();
      }), this._resetRange();
    }, e.prototype.resetItemSize = function() {
      t.prototype.resetItemSize.apply(this, arguments);
      var r = this.itemSize;
      (r[0] == null || isNaN(r[0])) && (r[0] = cA[0]), (r[1] == null || isNaN(r[1])) && (r[1] = cA[1]);
    }, e.prototype._resetRange = function() {
      var r = this.getExtent(), n = this.option.range;
      !n || n.auto ? (r.auto = 1, this.option.range = r) : V(n) && (n[0] > n[1] && n.reverse(), n[0] = Math.max(n[0], r[0]), n[1] = Math.min(n[1], r[1]));
    }, e.prototype.completeVisualOption = function() {
      t.prototype.completeVisualOption.apply(this, arguments), w(this.stateList, function(r) {
        var n = this.option.controller[r].symbolSize;
        n && n[0] !== n[1] && (n[0] = n[1] / 3);
      }, this);
    }, e.prototype.setSelected = function(r) {
      this.option.range = r.slice(), this._resetRange();
    }, e.prototype.getSelected = function() {
      var r = this.getExtent(), n = kr((this.get("range") || []).slice());
      return n[0] > r[1] && (n[0] = r[1]), n[1] > r[1] && (n[1] = r[1]), n[0] < r[0] && (n[0] = r[0]), n[1] < r[0] && (n[1] = r[0]), n;
    }, e.prototype.getValueState = function(r) {
      var n = this.option.range, a = this.getExtent();
      return (n[0] <= a[0] || n[0] <= r) && (n[1] >= a[1] || r <= n[1]) ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(r) {
      var n = [];
      return this.eachTargetSeries(function(a) {
        var i = [], o = a.getData();
        o.each(this.getDataDimensionIndex(o), function(s, l) {
          r[0] <= s && s <= r[1] && i.push(l);
        }, this), n.push({
          seriesId: a.id,
          dataIndex: i
        });
      }, this), n;
    }, e.prototype.getVisualMeta = function(r) {
      var n = dA(this, "outOfRange", this.getExtent()), a = dA(this, "inRange", this.option.range.slice()), i = [];
      function o(f, h) {
        i.push({
          value: f,
          color: r(f, h)
        });
      }
      for (var s = 0, l = 0, u = a.length, c = n.length; l < c && (!a.length || n[l] <= a[0]); l++)
        n[l] < a[s] && o(n[l], "outOfRange");
      for (var d = 1; s < u; s++, d = 0)
        d && i.length && o(a[s], "outOfRange"), o(a[s], "inRange");
      for (var d = 1; l < c; l++)
        (!a.length || a[a.length - 1] < n[l]) && (d && (i.length && o(i[i.length - 1].value, "outOfRange"), d = 0), o(n[l], "outOfRange"));
      var p = i.length;
      return {
        stops: i,
        outerColors: [p ? i[0].color : "transparent", p ? i[p - 1].color : "transparent"]
      };
    }, e.type = "visualMap.continuous", e.defaultOption = ti(Up.defaultOption, {
      align: "auto",
      calculable: !1,
      hoverLink: !0,
      realtime: !0,
      handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z",
      handleSize: "120%",
      handleStyle: {
        borderColor: "#fff",
        borderWidth: 1
      },
      indicatorIcon: "circle",
      indicatorSize: "50%",
      indicatorStyle: {
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0,0,0,0.2)"
      }
      // emphasis: {
      //     handleStyle: {
      //         shadowBlur: 3,
      //         shadowOffsetX: 1,
      //         shadowOffsetY: 1,
      //         shadowColor: 'rgba(0,0,0,0.2)'
      //     }
      // }
    }), e;
  }(Up)
);
function dA(t, e, r) {
  if (r[0] === r[1])
    return r.slice();
  for (var n = 200, a = (r[1] - r[0]) / n, i = r[0], o = [], s = 0; s <= n && i < r[1]; s++)
    o.push(i), i += a;
  return o.push(r[1]), o;
}
var zO = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r.autoPositionValues = {
        left: 1,
        right: 1,
        top: 1,
        bottom: 1
      }, r;
    }
    return e.prototype.init = function(r, n) {
      this.ecModel = r, this.api = n;
    }, e.prototype.render = function(r, n, a, i) {
      if (this.visualMapModel = r, r.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      this.doRender(r, n, a, i);
    }, e.prototype.renderBackground = function(r) {
      var n = this.visualMapModel, a = Ps(n.get("padding") || 0), i = r.getBoundingRect();
      r.add(new Re({
        z2: -1,
        silent: !0,
        shape: {
          x: i.x - a[3],
          y: i.y - a[0],
          width: i.width + a[3] + a[1],
          height: i.height + a[0] + a[2]
        },
        style: {
          fill: n.get("backgroundColor"),
          stroke: n.get("borderColor"),
          lineWidth: n.get("borderWidth")
        }
      }));
    }, e.prototype.getControllerVisual = function(r, n, a) {
      a = a || {};
      var i = a.forceState, o = this.visualMapModel, s = {};
      if (n === "color") {
        var l = o.get("contentColor");
        s.color = l;
      }
      function u(f) {
        return s[f];
      }
      function c(f, h) {
        s[f] = h;
      }
      var d = o.controllerVisuals[i || o.getValueState(r)], p = wt.prepareVisualTypes(d);
      return w(p, function(f) {
        var h = d[f];
        a.convertOpacityToAlpha && f === "opacity" && (f = "colorAlpha", h = d.__alphaForOpacity), wt.dependsOn(f, n) && h && h.applyVisual(r, u, c);
      }), s[n];
    }, e.prototype.positionGroup = function(r) {
      var n = this.visualMapModel, a = this.api;
      Ef(r, n.getBoxLayoutParams(), {
        width: a.getWidth(),
        height: a.getHeight()
      });
    }, e.prototype.doRender = function(r, n, a, i) {
    }, e.type = "visualMap", e;
  }(st)
), pA = [["left", "right", "width"], ["top", "bottom", "height"]];
function VO(t, e, r) {
  var n = t.option, a = n.align;
  if (a != null && a !== "auto")
    return a;
  for (var i = {
    width: e.getWidth(),
    height: e.getHeight()
  }, o = n.orient === "horizontal" ? 1 : 0, s = pA[o], l = [0, null, 10], u = {}, c = 0; c < 3; c++)
    u[pA[1 - o][c]] = l[c], u[s[c]] = c === 2 ? r[0] : n[s[c]];
  var d = [["x", "width", 3], ["y", "height", 0]][o], p = Et(u, i, n.padding);
  return s[(p.margin[d[2]] || 0) + p[d[0]] + p[d[1]] * 0.5 < i[d[1]] * 0.5 ? 0 : 1];
}
function Wd(t, e) {
  return w(t || [], function(r) {
    r.dataIndex != null && (r.dataIndexInside = r.dataIndex, r.dataIndex = null), r.highlightKey = "visualMap" + (e ? e.componentIndex : "");
  }), t;
}
var mn = $e, gX = w, fA = Math.min, Cv = Math.max, vX = 12, mX = 6, _X = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._shapes = {}, r._dataInterval = [], r._handleEnds = [], r._hoverLinkDataIndices = [], r;
    }
    return e.prototype.init = function(r, n) {
      t.prototype.init.call(this, r, n), this._hoverLinkFromSeriesMouseOver = K(this._hoverLinkFromSeriesMouseOver, this), this._hideIndicator = K(this._hideIndicator, this);
    }, e.prototype.doRender = function(r, n, a, i) {
      (!i || i.type !== "selectDataRange" || i.from !== this.uid) && this._buildView();
    }, e.prototype._buildView = function() {
      this.group.removeAll();
      var r = this.visualMapModel, n = this.group;
      this._orient = r.get("orient"), this._useHandle = r.get("calculable"), this._resetInterval(), this._renderBar(n);
      var a = r.get("text");
      this._renderEndsText(n, a, 0), this._renderEndsText(n, a, 1), this._updateView(!0), this.renderBackground(n), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(n);
    }, e.prototype._renderEndsText = function(r, n, a) {
      if (n) {
        var i = n[1 - a];
        i = i != null ? i + "" : "";
        var o = this.visualMapModel, s = o.get("textGap"), l = o.itemSize, u = this._shapes.mainGroup, c = this._applyTransform([l[0] / 2, a === 0 ? -s : l[1] + s], u), d = this._applyTransform(a === 0 ? "bottom" : "top", u), p = this._orient, f = this.visualMapModel.textStyleModel;
        this.group.add(new Pe({
          style: Je(f, {
            x: c[0],
            y: c[1],
            verticalAlign: p === "horizontal" ? "middle" : d,
            align: p === "horizontal" ? d : "center",
            text: i
          })
        }));
      }
    }, e.prototype._renderBar = function(r) {
      var n = this.visualMapModel, a = this._shapes, i = n.itemSize, o = this._orient, s = this._useHandle, l = VO(n, this.api, i), u = a.mainGroup = this._createBarGroup(l), c = new de();
      u.add(c), c.add(a.outOfRange = hA()), c.add(a.inRange = hA(null, s ? vA(this._orient) : null, K(this._dragHandle, this, "all", !1), K(this._dragHandle, this, "all", !0))), c.setClipPath(new Re({
        shape: {
          x: 0,
          y: 0,
          width: i[0],
          height: i[1],
          r: 3
        }
      }));
      var d = n.textStyleModel.getTextRect("国"), p = Cv(d.width, d.height);
      s && (a.handleThumbs = [], a.handleLabels = [], a.handleLabelPoints = [], this._createHandle(n, u, 0, i, p, o), this._createHandle(n, u, 1, i, p, o)), this._createIndicator(n, u, i, p, o), r.add(u);
    }, e.prototype._createHandle = function(r, n, a, i, o, s) {
      var l = K(this._dragHandle, this, a, !1), u = K(this._dragHandle, this, a, !0), c = tn(r.get("handleSize"), i[0]), d = mt(r.get("handleIcon"), -c / 2, -c / 2, c, c, null, !0), p = vA(this._orient);
      d.attr({
        cursor: p,
        draggable: !0,
        drift: l,
        ondragend: u,
        onmousemove: function(m) {
          ta(m.event);
        }
      }), d.x = i[0] / 2, d.useStyle(r.getModel("handleStyle").getItemStyle()), d.setStyle({
        strokeNoScale: !0,
        strokeFirst: !0
      }), d.style.lineWidth *= 2, d.ensureState("emphasis").style = r.getModel(["emphasis", "handleStyle"]).getItemStyle(), $i(d, !0), n.add(d);
      var f = this.visualMapModel.textStyleModel, h = new Pe({
        cursor: p,
        draggable: !0,
        drift: l,
        onmousemove: function(m) {
          ta(m.event);
        },
        ondragend: u,
        style: Je(f, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      h.ensureState("blur").style = {
        opacity: 0.1
      }, h.stateTransition = {
        duration: 200
      }, this.group.add(h);
      var g = [c, 0], v = this._shapes;
      v.handleThumbs[a] = d, v.handleLabelPoints[a] = g, v.handleLabels[a] = h;
    }, e.prototype._createIndicator = function(r, n, a, i, o) {
      var s = tn(r.get("indicatorSize"), a[0]), l = mt(r.get("indicatorIcon"), -s / 2, -s / 2, s, s, null, !0);
      l.attr({
        cursor: "move",
        invisible: !0,
        silent: !0,
        x: a[0] / 2
      });
      var u = r.getModel("indicatorStyle").getItemStyle();
      if (l instanceof Bt) {
        var c = l.style;
        l.useStyle(G({
          // TODO other properties like x, y ?
          image: c.image,
          x: c.x,
          y: c.y,
          width: c.width,
          height: c.height
        }, u));
      } else
        l.useStyle(u);
      n.add(l);
      var d = this.visualMapModel.textStyleModel, p = new Pe({
        silent: !0,
        invisible: !0,
        style: Je(d, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      this.group.add(p);
      var f = [(o === "horizontal" ? i / 2 : mX) + a[0] / 2, 0], h = this._shapes;
      h.indicator = l, h.indicatorLabel = p, h.indicatorLabelPoint = f, this._firstShowIndicator = !0;
    }, e.prototype._dragHandle = function(r, n, a, i) {
      if (this._useHandle) {
        if (this._dragging = !n, !n) {
          var o = this._applyTransform([a, i], this._shapes.mainGroup, !0);
          this._updateInterval(r, o[1]), this._hideIndicator(), this._updateView();
        }
        n === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: this._dataInterval.slice()
        }), n ? !this._hovering && this._clearHoverLinkToSeries() : gA(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[r], !1);
      }
    }, e.prototype._resetInterval = function() {
      var r = this.visualMapModel, n = this._dataInterval = r.getSelected(), a = r.getExtent(), i = [0, r.itemSize[1]];
      this._handleEnds = [mn(n[0], a, i, !0), mn(n[1], a, i, !0)];
    }, e.prototype._updateInterval = function(r, n) {
      n = n || 0;
      var a = this.visualMapModel, i = this._handleEnds, o = [0, a.itemSize[1]];
      So(
        n,
        i,
        o,
        r,
        // cross is forbidden
        0
      );
      var s = a.getExtent();
      this._dataInterval = [mn(i[0], o, s, !0), mn(i[1], o, s, !0)];
    }, e.prototype._updateView = function(r) {
      var n = this.visualMapModel, a = n.getExtent(), i = this._shapes, o = [0, n.itemSize[1]], s = r ? o : this._handleEnds, l = this._createBarVisual(this._dataInterval, a, s, "inRange"), u = this._createBarVisual(a, a, o, "outOfRange");
      i.inRange.setStyle({
        fill: l.barColor
        // opacity: visualInRange.opacity
      }).setShape("points", l.barPoints), i.outOfRange.setStyle({
        fill: u.barColor
        // opacity: visualOutOfRange.opacity
      }).setShape("points", u.barPoints), this._updateHandle(s, l);
    }, e.prototype._createBarVisual = function(r, n, a, i) {
      var o = {
        forceState: i,
        convertOpacityToAlpha: !0
      }, s = this._makeColorGradient(r, o), l = [this.getControllerVisual(r[0], "symbolSize", o), this.getControllerVisual(r[1], "symbolSize", o)], u = this._createBarPoints(a, l);
      return {
        barColor: new Wu(0, 0, 0, 1, s),
        barPoints: u,
        handlesColor: [s[0].color, s[s.length - 1].color]
      };
    }, e.prototype._makeColorGradient = function(r, n) {
      var a = 100, i = [], o = (r[1] - r[0]) / a;
      i.push({
        color: this.getControllerVisual(r[0], "color", n),
        offset: 0
      });
      for (var s = 1; s < a; s++) {
        var l = r[0] + o * s;
        if (l > r[1])
          break;
        i.push({
          color: this.getControllerVisual(l, "color", n),
          offset: s / a
        });
      }
      return i.push({
        color: this.getControllerVisual(r[1], "color", n),
        offset: 1
      }), i;
    }, e.prototype._createBarPoints = function(r, n) {
      var a = this.visualMapModel.itemSize;
      return [[a[0] - n[0], r[0]], [a[0], r[0]], [a[0], r[1]], [a[0] - n[1], r[1]]];
    }, e.prototype._createBarGroup = function(r) {
      var n = this._orient, a = this.visualMapModel.get("inverse");
      return new de(n === "horizontal" && !a ? {
        scaleX: r === "bottom" ? 1 : -1,
        rotation: Math.PI / 2
      } : n === "horizontal" && a ? {
        scaleX: r === "bottom" ? -1 : 1,
        rotation: -Math.PI / 2
      } : n === "vertical" && !a ? {
        scaleX: r === "left" ? 1 : -1,
        scaleY: -1
      } : {
        scaleX: r === "left" ? 1 : -1
      });
    }, e.prototype._updateHandle = function(r, n) {
      if (this._useHandle) {
        var a = this._shapes, i = this.visualMapModel, o = a.handleThumbs, s = a.handleLabels, l = i.itemSize, u = i.getExtent(), c = this._applyTransform("left", a.mainGroup);
        gX([0, 1], function(d) {
          var p = o[d];
          p.setStyle("fill", n.handlesColor[d]), p.y = r[d];
          var f = mn(r[d], [0, l[1]], u, !0), h = this.getControllerVisual(f, "symbolSize");
          p.scaleX = p.scaleY = h / l[0], p.x = l[0] - h / 2;
          var g = Jr(a.handleLabelPoints[d], eo(p, this.group));
          if (this._orient === "horizontal") {
            var v = c === "left" || c === "top" ? (l[0] - h) / 2 : (l[0] - h) / -2;
            g[1] += v;
          }
          s[d].setStyle({
            x: g[0],
            y: g[1],
            text: i.formatValueText(this._dataInterval[d]),
            verticalAlign: "middle",
            align: this._orient === "vertical" ? this._applyTransform("left", a.mainGroup) : "center"
          });
        }, this);
      }
    }, e.prototype._showIndicator = function(r, n, a, i) {
      var o = this.visualMapModel, s = o.getExtent(), l = o.itemSize, u = [0, l[1]], c = this._shapes, d = c.indicator;
      if (d) {
        d.attr("invisible", !1);
        var p = {
          convertOpacityToAlpha: !0
        }, f = this.getControllerVisual(r, "color", p), h = this.getControllerVisual(r, "symbolSize"), g = mn(r, s, u, !0), v = l[0] - h / 2, m = {
          x: d.x,
          y: d.y
        };
        d.y = g, d.x = v;
        var _ = Jr(c.indicatorLabelPoint, eo(d, this.group)), y = c.indicatorLabel;
        y.attr("invisible", !1);
        var b = this._applyTransform("left", c.mainGroup), S = this._orient, E = S === "horizontal";
        y.setStyle({
          text: (a || "") + o.formatValueText(n),
          verticalAlign: E ? b : "middle",
          align: E ? "center" : b
        });
        var T = {
          x: v,
          y: g,
          style: {
            fill: f
          }
        }, x = {
          style: {
            x: _[0],
            y: _[1]
          }
        };
        if (o.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
          var C = {
            duration: 100,
            easing: "cubicInOut",
            additive: !0
          };
          d.x = m.x, d.y = m.y, d.animateTo(T, C), y.animateTo(x, C);
        } else
          d.attr(T), y.attr(x);
        this._firstShowIndicator = !1;
        var A = this._shapes.handleLabels;
        if (A)
          for (var D = 0; D < A.length; D++)
            this.api.enterBlur(A[D]);
      }
    }, e.prototype._enableHoverLinkToSeries = function() {
      var r = this;
      this._shapes.mainGroup.on("mousemove", function(n) {
        if (r._hovering = !0, !r._dragging) {
          var a = r.visualMapModel.itemSize, i = r._applyTransform([n.offsetX, n.offsetY], r._shapes.mainGroup, !0, !0);
          i[1] = fA(Cv(0, i[1]), a[1]), r._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= a[0]);
        }
      }).on("mouseout", function() {
        r._hovering = !1, !r._dragging && r._clearHoverLinkToSeries();
      });
    }, e.prototype._enableHoverLinkFromSeries = function() {
      var r = this.api.getZr();
      this.visualMapModel.option.hoverLink ? (r.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), r.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
    }, e.prototype._doHoverLinkToSeries = function(r, n) {
      var a = this.visualMapModel, i = a.itemSize;
      if (a.option.hoverLink) {
        var o = [0, i[1]], s = a.getExtent();
        r = fA(Cv(o[0], r), o[1]);
        var l = yX(a, s, o), u = [r - l, r + l], c = mn(r, o, s, !0), d = [mn(u[0], o, s, !0), mn(u[1], o, s, !0)];
        u[0] < o[0] && (d[0] = -1 / 0), u[1] > o[1] && (d[1] = 1 / 0), n && (d[0] === -1 / 0 ? this._showIndicator(c, d[1], "< ", l) : d[1] === 1 / 0 ? this._showIndicator(c, d[0], "> ", l) : this._showIndicator(c, c, "≈ ", l));
        var p = this._hoverLinkDataIndices, f = [];
        (n || gA(a)) && (f = this._hoverLinkDataIndices = a.findTargetDataIndices(d));
        var h = l3(p, f);
        this._dispatchHighDown("downplay", Wd(h[0], a)), this._dispatchHighDown("highlight", Wd(h[1], a));
      }
    }, e.prototype._hoverLinkFromSeriesMouseOver = function(r) {
      var n;
      if (Wi(r.target, function(l) {
        var u = pe(l);
        if (u.dataIndex != null)
          return n = u, !0;
      }, !0), !!n) {
        var a = this.ecModel.getSeriesByIndex(n.seriesIndex), i = this.visualMapModel;
        if (i.isTargetSeries(a)) {
          var o = a.getData(n.dataType), s = o.getStore().get(i.getDataDimensionIndex(o), n.dataIndex);
          isNaN(s) || this._showIndicator(s, s);
        }
      }
    }, e.prototype._hideIndicator = function() {
      var r = this._shapes;
      r.indicator && r.indicator.attr("invisible", !0), r.indicatorLabel && r.indicatorLabel.attr("invisible", !0);
      var n = this._shapes.handleLabels;
      if (n)
        for (var a = 0; a < n.length; a++)
          this.api.leaveBlur(n[a]);
    }, e.prototype._clearHoverLinkToSeries = function() {
      this._hideIndicator();
      var r = this._hoverLinkDataIndices;
      this._dispatchHighDown("downplay", Wd(r, this.visualMapModel)), r.length = 0;
    }, e.prototype._clearHoverLinkFromSeries = function() {
      this._hideIndicator();
      var r = this.api.getZr();
      r.off("mouseover", this._hoverLinkFromSeriesMouseOver), r.off("mouseout", this._hideIndicator);
    }, e.prototype._applyTransform = function(r, n, a, i) {
      var o = eo(n, i ? null : this.group);
      return V(r) ? Jr(r, o, a) : gf(r, o, a);
    }, e.prototype._dispatchHighDown = function(r, n) {
      n && n.length && this.api.dispatchAction({
        type: r,
        batch: n
      });
    }, e.prototype.dispose = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, e.type = "visualMap.continuous", e;
  }(zO)
);
function hA(t, e, r, n) {
  return new sr({
    shape: {
      points: t
    },
    draggable: !!r,
    cursor: e,
    drift: r,
    onmousemove: function(a) {
      ta(a.event);
    },
    ondragend: n
  });
}
function yX(t, e, r) {
  var n = vX / 2, a = t.get("hoverLinkDataSize");
  return a && (n = mn(a, e, r, !0) / 2), n;
}
function gA(t) {
  var e = t.get("hoverLinkOnHandle");
  return !!(e ?? t.get("realtime"));
}
function vA(t) {
  return t === "vertical" ? "ns-resize" : "ew-resize";
}
var bX = {
  type: "selectDataRange",
  event: "dataRangeSelected",
  // FIXME use updateView appears wrong
  update: "update"
}, SX = function(t, e) {
  e.eachComponent({
    mainType: "visualMap",
    query: t
  }, function(r) {
    r.setSelected(t.selected);
  });
}, EX = [
  {
    createOnAllSeries: !0,
    reset: function(t, e) {
      var r = [];
      return e.eachComponent("visualMap", function(n) {
        var a = t.pipelineContext;
        !n.isTargetSeries(t) || a && a.large || r.push(XK(n.stateList, n.targetVisuals, K(n.getValueState, n), n.getDataDimensionIndex(t.getData())));
      }), r;
    }
  },
  // Only support color.
  {
    createOnAllSeries: !0,
    reset: function(t, e) {
      var r = t.getData(), n = [];
      e.eachComponent("visualMap", function(a) {
        if (a.isTargetSeries(t)) {
          var i = a.getVisualMeta(K(TX, null, t, a)) || {
            stops: [],
            outerColors: []
          }, o = a.getDataDimensionIndex(r);
          o >= 0 && (i.dimension = o, n.push(i));
        }
      }), t.getData().setVisual("visualMeta", n);
    }
  }
];
function TX(t, e, r, n) {
  for (var a = e.targetVisuals[n], i = wt.prepareVisualTypes(a), o = {
    color: Zu(t.getData(), "color")
    // default color.
  }, s = 0, l = i.length; s < l; s++) {
    var u = i[s], c = a[u === "opacity" ? "__alphaForOpacity" : u];
    c && c.applyVisual(r, d, p);
  }
  return o.color;
  function d(f) {
    return o[f];
  }
  function p(f, h) {
    o[f] = h;
  }
}
var mA = w;
function xX(t) {
  var e = t && t.visualMap;
  V(e) || (e = e ? [e] : []), mA(e, function(r) {
    if (r) {
      Wo(r, "splitList") && !Wo(r, "pieces") && (r.pieces = r.splitList, delete r.splitList);
      var n = r.pieces;
      n && V(n) && mA(n, function(a) {
        se(a) && (Wo(a, "start") && !Wo(a, "min") && (a.min = a.start), Wo(a, "end") && !Wo(a, "max") && (a.max = a.end));
      });
    }
  });
}
function Wo(t, e) {
  return t && t.hasOwnProperty && t.hasOwnProperty(e);
}
var _A = !1;
function $O(t) {
  _A || (_A = !0, t.registerSubTypeDefaulter("visualMap", function(e) {
    return !e.categories && (!(e.pieces ? e.pieces.length > 0 : e.splitNumber > 0) || e.calculable) ? "continuous" : "piecewise";
  }), t.registerAction(bX, SX), w(EX, function(e) {
    t.registerVisual(t.PRIORITY.VISUAL.COMPONENT, e);
  }), t.registerPreprocessor(xX));
}
function CX(t) {
  t.registerComponentModel(hX), t.registerComponentView(_X), $O(t);
}
var AX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r._pieceList = [], r;
    }
    return e.prototype.optionUpdated = function(r, n) {
      t.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
      var a = this._mode = this._determineMode();
      this._pieceList = [], wX[this._mode].call(this, this._pieceList), this._resetSelected(r, n);
      var i = this.option.categories;
      this.resetVisual(function(o, s) {
        a === "categories" ? (o.mappingMethod = "category", o.categories = le(i)) : (o.dataExtent = this.getExtent(), o.mappingMethod = "piecewise", o.pieceList = $(this._pieceList, function(l) {
          return l = le(l), s !== "inRange" && (l.visual = null), l;
        }));
      });
    }, e.prototype.completeVisualOption = function() {
      var r = this.option, n = {}, a = wt.listVisualTypes(), i = this.isCategory();
      w(r.pieces, function(s) {
        w(a, function(l) {
          s.hasOwnProperty(l) && (n[l] = 1);
        });
      }), w(n, function(s, l) {
        var u = !1;
        w(this.stateList, function(c) {
          u = u || o(r, c, l) || o(r.target, c, l);
        }, this), !u && w(this.stateList, function(c) {
          (r[c] || (r[c] = {}))[l] = UO.get(l, c === "inRange" ? "active" : "inactive", i);
        });
      }, this);
      function o(s, l, u) {
        return s && s[l] && s[l].hasOwnProperty(u);
      }
      t.prototype.completeVisualOption.apply(this, arguments);
    }, e.prototype._resetSelected = function(r, n) {
      var a = this.option, i = this._pieceList, o = (n ? a : r).selected || {};
      if (a.selected = o, w(i, function(l, u) {
        var c = this.getSelectedMapKey(l);
        o.hasOwnProperty(c) || (o[c] = !0);
      }, this), a.selectedMode === "single") {
        var s = !1;
        w(i, function(l, u) {
          var c = this.getSelectedMapKey(l);
          o[c] && (s ? o[c] = !1 : s = !0);
        }, this);
      }
    }, e.prototype.getItemSymbol = function() {
      return this.get("itemSymbol");
    }, e.prototype.getSelectedMapKey = function(r) {
      return this._mode === "categories" ? r.value + "" : r.index + "";
    }, e.prototype.getPieceList = function() {
      return this._pieceList;
    }, e.prototype._determineMode = function() {
      var r = this.option;
      return r.pieces && r.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
    }, e.prototype.setSelected = function(r) {
      this.option.selected = le(r);
    }, e.prototype.getValueState = function(r) {
      var n = wt.findPieceIndex(r, this._pieceList);
      return n != null && this.option.selected[this.getSelectedMapKey(this._pieceList[n])] ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(r) {
      var n = [], a = this._pieceList;
      return this.eachTargetSeries(function(i) {
        var o = [], s = i.getData();
        s.each(this.getDataDimensionIndex(s), function(l, u) {
          var c = wt.findPieceIndex(l, a);
          c === r && o.push(u);
        }, this), n.push({
          seriesId: i.id,
          dataIndex: o
        });
      }, this), n;
    }, e.prototype.getRepresentValue = function(r) {
      var n;
      if (this.isCategory())
        n = r.value;
      else if (r.value != null)
        n = r.value;
      else {
        var a = r.interval || [];
        n = a[0] === -1 / 0 && a[1] === 1 / 0 ? 0 : (a[0] + a[1]) / 2;
      }
      return n;
    }, e.prototype.getVisualMeta = function(r) {
      if (this.isCategory())
        return;
      var n = [], a = ["", ""], i = this;
      function o(c, d) {
        var p = i.getRepresentValue({
          interval: c
        });
        d || (d = i.getValueState(p));
        var f = r(p, d);
        c[0] === -1 / 0 ? a[0] = f : c[1] === 1 / 0 ? a[1] = f : n.push({
          value: c[0],
          color: f
        }, {
          value: c[1],
          color: f
        });
      }
      var s = this._pieceList.slice();
      if (!s.length)
        s.push({
          interval: [-1 / 0, 1 / 0]
        });
      else {
        var l = s[0].interval[0];
        l !== -1 / 0 && s.unshift({
          interval: [-1 / 0, l]
        }), l = s[s.length - 1].interval[1], l !== 1 / 0 && s.push({
          interval: [l, 1 / 0]
        });
      }
      var u = -1 / 0;
      return w(s, function(c) {
        var d = c.interval;
        d && (d[0] > u && o([u, d[0]], "outOfRange"), o(d.slice()), u = d[1]);
      }, this), {
        stops: n,
        outerColors: a
      };
    }, e.type = "visualMap.piecewise", e.defaultOption = ti(Up.defaultOption, {
      selected: null,
      minOpen: !1,
      maxOpen: !1,
      align: "auto",
      itemWidth: 20,
      itemHeight: 14,
      itemSymbol: "roundRect",
      pieces: null,
      categories: null,
      splitNumber: 5,
      selectedMode: "multiple",
      itemGap: 10,
      hoverLink: !0
      // Enable hover highlight.
    }), e;
  }(Up)
), wX = {
  splitNumber: function(t) {
    var e = this.option, r = Math.min(e.precision, 20), n = this.getExtent(), a = e.splitNumber;
    a = Math.max(parseInt(a, 10), 1), e.splitNumber = a;
    for (var i = (n[1] - n[0]) / a; +i.toFixed(r) !== i && r < 5; )
      r++;
    e.precision = r, i = +i.toFixed(r), e.minOpen && t.push({
      interval: [-1 / 0, n[0]],
      close: [0, 0]
    });
    for (var o = 0, s = n[0]; o < a; s += i, o++) {
      var l = o === a - 1 ? n[1] : s + i;
      t.push({
        interval: [s, l],
        close: [1, 1]
      });
    }
    e.maxOpen && t.push({
      interval: [n[1], 1 / 0],
      close: [0, 0]
    }), dS(t), w(t, function(u, c) {
      u.index = c, u.text = this.formatValueText(u.interval);
    }, this);
  },
  categories: function(t) {
    var e = this.option;
    w(e.categories, function(r) {
      t.push({
        text: this.formatValueText(r, !0),
        value: r
      });
    }, this), yA(e, t);
  },
  pieces: function(t) {
    var e = this.option;
    w(e.pieces, function(r, n) {
      se(r) || (r = {
        value: r
      });
      var a = {
        text: "",
        index: n
      };
      if (r.label != null && (a.text = r.label), r.hasOwnProperty("value")) {
        var i = a.value = r.value;
        a.interval = [i, i], a.close = [1, 1];
      } else {
        for (var o = a.interval = [], s = a.close = [0, 0], l = [1, 0, 1], u = [-1 / 0, 1 / 0], c = [], d = 0; d < 2; d++) {
          for (var p = [["gte", "gt", "min"], ["lte", "lt", "max"]][d], f = 0; f < 3 && o[d] == null; f++)
            o[d] = r[p[f]], s[d] = l[f], c[d] = f === 2;
          o[d] == null && (o[d] = u[d]);
        }
        c[0] && o[1] === 1 / 0 && (s[0] = 0), c[1] && o[0] === -1 / 0 && (s[1] = 0), o[0] === o[1] && s[0] && s[1] && (a.value = o[0]);
      }
      a.visual = wt.retrieveVisuals(r), t.push(a);
    }, this), yA(e, t), dS(t), w(t, function(r) {
      var n = r.close, a = [["<", "≤"][n[1]], [">", "≥"][n[0]]];
      r.text = r.text || this.formatValueText(r.value != null ? r.value : r.interval, !1, a);
    }, this);
  }
};
function yA(t, e) {
  var r = t.inverse;
  (t.orient === "vertical" ? !r : r) && e.reverse();
}
var DX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = e.type, r;
    }
    return e.prototype.doRender = function() {
      var r = this.group;
      r.removeAll();
      var n = this.visualMapModel, a = n.get("textGap"), i = n.textStyleModel, o = i.getFont(), s = i.getTextColor(), l = this._getItemAlign(), u = n.itemSize, c = this._getViewData(), d = c.endsText, p = Pt(n.get("showLabel", !0), !d), f = !n.get("selectedMode");
      d && this._renderEndsText(r, d[0], u, p, l), w(c.viewPieceList, function(h) {
        var g = h.piece, v = new de();
        v.onclick = K(this._onItemClick, this, g), this._enableHoverLink(v, h.indexInModelPieceList);
        var m = n.getRepresentValue(g);
        if (this._createItemSymbol(v, m, [0, 0, u[0], u[1]], f), p) {
          var _ = this.visualMapModel.getValueState(m);
          v.add(new Pe({
            style: {
              x: l === "right" ? -a : u[0] + a,
              y: u[1] / 2,
              text: g.text,
              verticalAlign: "middle",
              align: l,
              font: o,
              fill: s,
              opacity: _ === "outOfRange" ? 0.5 : 1
            },
            silent: f
          }));
        }
        r.add(v);
      }, this), d && this._renderEndsText(r, d[1], u, p, l), to(n.get("orient"), r, n.get("itemGap")), this.renderBackground(r), this.positionGroup(r);
    }, e.prototype._enableHoverLink = function(r, n) {
      var a = this;
      r.on("mouseover", function() {
        return i("highlight");
      }).on("mouseout", function() {
        return i("downplay");
      });
      var i = function(o) {
        var s = a.visualMapModel;
        s.option.hoverLink && a.api.dispatchAction({
          type: o,
          batch: Wd(s.findTargetDataIndices(n), s)
        });
      };
    }, e.prototype._getItemAlign = function() {
      var r = this.visualMapModel, n = r.option;
      if (n.orient === "vertical")
        return VO(r, this.api, r.itemSize);
      var a = n.align;
      return (!a || a === "auto") && (a = "left"), a;
    }, e.prototype._renderEndsText = function(r, n, a, i, o) {
      if (n) {
        var s = new de(), l = this.visualMapModel.textStyleModel;
        s.add(new Pe({
          style: Je(l, {
            x: i ? o === "right" ? a[0] : 0 : a[0] / 2,
            y: a[1] / 2,
            verticalAlign: "middle",
            align: i ? o : "center",
            text: n
          })
        })), r.add(s);
      }
    }, e.prototype._getViewData = function() {
      var r = this.visualMapModel, n = $(r.getPieceList(), function(s, l) {
        return {
          piece: s,
          indexInModelPieceList: l
        };
      }), a = r.get("text"), i = r.get("orient"), o = r.get("inverse");
      return (i === "horizontal" ? o : !o) ? n.reverse() : a && (a = a.slice().reverse()), {
        viewPieceList: n,
        endsText: a
      };
    }, e.prototype._createItemSymbol = function(r, n, a, i) {
      var o = mt(
        // symbol will be string
        this.getControllerVisual(n, "symbol"),
        a[0],
        a[1],
        a[2],
        a[3],
        // color will be string
        this.getControllerVisual(n, "color")
      );
      o.silent = i, r.add(o);
    }, e.prototype._onItemClick = function(r) {
      var n = this.visualMapModel, a = n.option, i = a.selectedMode;
      if (i) {
        var o = le(a.selected), s = n.getSelectedMapKey(r);
        i === "single" || i === !0 ? (o[s] = !0, w(o, function(l, u) {
          o[u] = u === s;
        })) : o[s] = !o[s], this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: o
        });
      }
    }, e.type = "visualMap.piecewise", e;
  }(zO)
);
function MX(t) {
  t.registerComponentModel(AX), t.registerComponentView(DX), $O(t);
}
function jre(t) {
  kt(CX), kt(MX);
}
var IX = {
  label: {
    enabled: !0
  },
  decal: {
    show: !1
  }
}, bA = Oe(), NX = {};
function RX(t, e) {
  var r = t.getModel("aria");
  if (!r.get("enabled"))
    return;
  var n = le(IX);
  be(n.label, t.getLocaleModel().get("aria"), !1), be(r.option, n, !1), a(), i();
  function a() {
    var u = r.getModel("decal"), c = u.get("show");
    if (c) {
      var d = J();
      t.eachSeries(function(p) {
        if (!p.isColorBySeries()) {
          var f = d.get(p.type);
          f || (f = {}, d.set(p.type, f)), bA(p).scope = f;
        }
      }), t.eachRawSeries(function(p) {
        if (t.isSeriesFiltered(p))
          return;
        if (ae(p.enableAriaDecal)) {
          p.enableAriaDecal();
          return;
        }
        var f = p.getData();
        if (p.isColorBySeries()) {
          var _ = Sm(p.ecModel, p.name, NX, t.getSeriesCount()), y = f.getVisual("decal");
          f.setVisual("decal", b(y, _));
        } else {
          var h = p.getRawData(), g = {}, v = bA(p).scope;
          f.each(function(S) {
            var E = f.getRawIndex(S);
            g[E] = S;
          });
          var m = h.count();
          h.each(function(S) {
            var E = g[S], T = h.getName(S) || S + "", x = Sm(p.ecModel, T, v, m), C = f.getItemVisual(E, "decal");
            f.setItemVisual(E, "decal", b(C, x));
          });
        }
        function b(S, E) {
          var T = S ? G(G({}, E), S) : E;
          return T.dirty = !0, T;
        }
      });
    }
  }
  function i() {
    var u = e.getZr().dom;
    if (u) {
      var c = t.getLocaleModel().get("aria"), d = r.getModel("label");
      if (d.option = ie(d.option, c), !!d.get("enabled")) {
        if (u.setAttribute("role", "img"), d.get("description")) {
          u.setAttribute("aria-label", d.get("description"));
          return;
        }
        var p = t.getSeriesCount(), f = d.get(["data", "maxCount"]) || 10, h = d.get(["series", "maxCount"]) || 10, g = Math.min(p, h), v;
        if (!(p < 1)) {
          var m = s();
          if (m) {
            var _ = d.get(["general", "withTitle"]);
            v = o(_, {
              title: m
            });
          } else
            v = d.get(["general", "withoutTitle"]);
          var y = [], b = p > 1 ? d.get(["series", "multiple", "prefix"]) : d.get(["series", "single", "prefix"]);
          v += o(b, {
            seriesCount: p
          }), t.eachSeries(function(x, C) {
            if (C < g) {
              var A = void 0, D = x.get("name"), M = D ? "withName" : "withoutName";
              A = p > 1 ? d.get(["series", "multiple", M]) : d.get(["series", "single", M]), A = o(A, {
                seriesId: x.seriesIndex,
                seriesName: x.get("name"),
                seriesType: l(x.subType)
              });
              var I = x.getData();
              if (I.count() > f) {
                var N = d.get(["data", "partialData"]);
                A += o(N, {
                  displayCnt: f
                });
              } else
                A += d.get(["data", "allData"]);
              for (var R = d.get(["data", "separator", "middle"]), O = d.get(["data", "separator", "end"]), B = d.get(["data", "excludeDimensionId"]), L = [], F = 0; F < I.count(); F++)
                if (F < f) {
                  var U = I.getName(F), z = B ? ze(I.getValues(F), function(Z, ee) {
                    return xe(B, ee) === -1;
                  }) : I.getValues(F), H = d.get(["data", U ? "withName" : "withoutName"]);
                  L.push(o(H, {
                    name: U,
                    value: z.join(R)
                  }));
                }
              A += L.join(R) + O, y.push(A);
            }
          });
          var S = d.getModel(["series", "multiple", "separator"]), E = S.get("middle"), T = S.get("end");
          v += y.join(E) + T, u.setAttribute("aria-label", v);
        }
      }
    }
  }
  function o(u, c) {
    if (!Y(u))
      return u;
    var d = u;
    return w(c, function(p, f) {
      d = d.replace(new RegExp("\\{\\s*" + f + "\\s*\\}", "g"), p);
    }), d;
  }
  function s() {
    var u = t.get("title");
    return u && u.length && (u = u[0]), u && u.text;
  }
  function l(u) {
    var c = t.getLocaleModel().get(["series", "typeNames"]);
    return c[u] || c.chart;
  }
}
function OX(t) {
  if (!(!t || !t.aria)) {
    var e = t.aria;
    e.show != null && (e.enabled = e.show), e.label = e.label || {}, w(["description", "general", "series", "data"], function(r) {
      e[r] != null && (e.label[r] = e[r]);
    });
  }
}
function Jre(t) {
  t.registerPreprocessor(OX), t.registerVisual(t.PRIORITY.VISUAL.ARIA, RX);
}
var SA = {
  value: "eq",
  // PENDING: not good for literal semantic?
  "<": "lt",
  "<=": "lte",
  ">": "gt",
  ">=": "gte",
  "=": "eq",
  "!=": "ne",
  "<>": "ne"
  // Might be misleading for sake of the difference between '==' and '===',
  // so don't support them.
  // '==': 'eq',
  // '===': 'seq',
  // '!==': 'sne'
  // PENDING: Whether support some common alias "ge", "le", "neq"?
  // ge: 'gte',
  // le: 'lte',
  // neq: 'ne',
}, LX = (
  /** @class */
  function() {
    function t(e) {
      var r = this._condVal = Y(e) ? new RegExp(e) : CB(e) ? e : null;
      if (r == null) {
        var n = "";
        Ue(n);
      }
    }
    return t.prototype.evaluate = function(e) {
      var r = typeof e;
      return Y(r) ? this._condVal.test(e) : ke(r) ? this._condVal.test(e + "") : !1;
    }, t;
  }()
), PX = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.evaluate = function() {
      return this.value;
    }, t;
  }()
), kX = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.evaluate = function() {
      for (var e = this.children, r = 0; r < e.length; r++)
        if (!e[r].evaluate())
          return !1;
      return !0;
    }, t;
  }()
), BX = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.evaluate = function() {
      for (var e = this.children, r = 0; r < e.length; r++)
        if (e[r].evaluate())
          return !0;
      return !1;
    }, t;
  }()
), FX = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.evaluate = function() {
      return !this.child.evaluate();
    }, t;
  }()
), GX = (
  /** @class */
  function() {
    function t() {
    }
    return t.prototype.evaluate = function() {
      for (var e = !!this.valueParser, r = this.getValue, n = r(this.valueGetterParam), a = e ? this.valueParser(n) : null, i = 0; i < this.subCondList.length; i++)
        if (!this.subCondList[i].evaluate(e ? a : n))
          return !1;
      return !0;
    }, t;
  }()
);
function $b(t, e) {
  if (t === !0 || t === !1) {
    var r = new PX();
    return r.value = t, r;
  }
  var n = "";
  return HO(t) || Ue(n), t.and ? EA("and", t, e) : t.or ? EA("or", t, e) : t.not ? UX(t, e) : zX(t, e);
}
function EA(t, e, r) {
  var n = e[t], a = "";
  V(n) || Ue(a), n.length || Ue(a);
  var i = t === "and" ? new kX() : new BX();
  return i.children = $(n, function(o) {
    return $b(o, r);
  }), i.children.length || Ue(a), i;
}
function UX(t, e) {
  var r = t.not, n = "";
  HO(r) || Ue(n);
  var a = new FX();
  return a.child = $b(r, e), a.child || Ue(n), a;
}
function zX(t, e) {
  for (var r = "", n = e.prepareGetValue(t), a = [], i = Me(t), o = t.parser, s = o ? NM(o) : null, l = 0; l < i.length; l++) {
    var u = i[l];
    if (!(u === "parser" || e.valueGetterAttrMap.get(u))) {
      var c = Q(SA, u) ? SA[u] : u, d = t[u], p = s ? s(d) : d, f = dz(c, p) || c === "reg" && new LX(p);
      f || Ue(r), a.push(f);
    }
  }
  a.length || Ue(r);
  var h = new GX();
  return h.valueGetterParam = n, h.valueParser = s, h.getValue = e.getValue, h.subCondList = a, h;
}
function HO(t) {
  return se(t) && !Kt(t);
}
var VX = (
  /** @class */
  function() {
    function t(e, r) {
      this._cond = $b(e, r);
    }
    return t.prototype.evaluate = function() {
      return this._cond.evaluate();
    }, t;
  }()
);
function $X(t, e) {
  return new VX(t, e);
}
var HX = {
  type: "echarts:filter",
  // PENDING: enhance to filter by index rather than create new data
  transform: function(t) {
    for (var e = t.upstream, r, n = $X(t.config, {
      valueGetterAttrMap: J({
        dimension: !0
      }),
      prepareGetValue: function(s) {
        var l = "", u = s.dimension;
        Q(s, "dimension") || Ue(l);
        var c = e.getDimensionInfo(u);
        return c || Ue(l), {
          dimIdx: c.index
        };
      },
      getValue: function(s) {
        return e.retrieveValueFromItem(r, s.dimIdx);
      }
    }), a = [], i = 0, o = e.count(); i < o; i++)
      r = e.getRawDataItem(i), n.evaluate() && a.push(r);
    return {
      data: a
    };
  }
}, WX = {
  type: "echarts:sort",
  transform: function(t) {
    var e = t.upstream, r = t.config, n = "", a = Ye(r);
    a.length || Ue(n);
    var i = [];
    w(a, function(c) {
      var d = c.dimension, p = c.order, f = c.parser, h = c.incomparable;
      if (d == null && Ue(n), p !== "asc" && p !== "desc" && Ue(n), h && h !== "min" && h !== "max") {
        var g = "";
        Ue(g);
      }
      if (p !== "asc" && p !== "desc") {
        var v = "";
        Ue(v);
      }
      var m = e.getDimensionInfo(d);
      m || Ue(n);
      var _ = f ? NM(f) : null;
      f && !_ && Ue(n), i.push({
        dimIdx: m.index,
        parser: _,
        comparator: new OM(p, h)
      });
    });
    var o = e.sourceFormat;
    o !== Zt && o !== zr && Ue(n);
    for (var s = [], l = 0, u = e.count(); l < u; l++)
      s.push(e.getRawDataItem(l));
    return s.sort(function(c, d) {
      for (var p = 0; p < i.length; p++) {
        var f = i[p], h = e.retrieveValueFromItem(c, f.dimIdx), g = e.retrieveValueFromItem(d, f.dimIdx);
        f.parser && (h = f.parser(h), g = f.parser(g));
        var v = f.comparator.evaluate(h, g);
        if (v !== 0)
          return v;
      }
      return 0;
    }), {
      data: s
    };
  }
};
function ene(t) {
  t.registerTransform(HX), t.registerTransform(WX);
}
var qX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "dataset", r;
    }
    return e.prototype.init = function(r, n, a) {
      t.prototype.init.call(this, r, n, a), this._sourceManager = new BM(this), TE(this);
    }, e.prototype.mergeOption = function(r, n) {
      t.prototype.mergeOption.call(this, r, n), TE(this);
    }, e.prototype.optionUpdated = function() {
      this._sourceManager.dirty();
    }, e.prototype.getSourceManager = function() {
      return this._sourceManager;
    }, e.type = "dataset", e.defaultOption = {
      seriesLayoutBy: In
    }, e;
  }(De)
), YX = (
  /** @class */
  function(t) {
    k(e, t);
    function e() {
      var r = t !== null && t.apply(this, arguments) || this;
      return r.type = "dataset", r;
    }
    return e.type = "dataset", e;
  }(st)
);
function tne(t) {
  t.registerComponentModel(qX), t.registerComponentView(YX);
}
var gn = Pn.CMD;
function as(t, e) {
  return Math.abs(t - e) < 1e-5;
}
function E_(t) {
  var e = t.data, r = t.len(), n = [], a, i = 0, o = 0, s = 0, l = 0;
  function u(I, N) {
    a && a.length > 2 && n.push(a), a = [I, N];
  }
  function c(I, N, R, O) {
    as(I, R) && as(N, O) || a.push(I, N, R, O, R, O);
  }
  function d(I, N, R, O, B, L) {
    var F = Math.abs(N - I), U = Math.tan(F / 4) * 4 / 3, z = N < I ? -1 : 1, H = Math.cos(I), Z = Math.sin(I), ee = Math.cos(N), oe = Math.sin(N), Le = H * B + R, Xe = Z * L + O, fe = ee * B + R, re = oe * L + O, ve = B * U * z, j = L * U * z;
    a.push(Le - ve * Z, Xe + j * H, fe + ve * oe, re - j * ee, fe, re);
  }
  for (var p, f, h, g, v = 0; v < r; ) {
    var m = e[v++], _ = v === 1;
    switch (_ && (i = e[v], o = e[v + 1], s = i, l = o, (m === gn.L || m === gn.C || m === gn.Q) && (a = [s, l])), m) {
      case gn.M:
        i = s = e[v++], o = l = e[v++], u(s, l);
        break;
      case gn.L:
        p = e[v++], f = e[v++], c(i, o, p, f), i = p, o = f;
        break;
      case gn.C:
        a.push(e[v++], e[v++], e[v++], e[v++], i = e[v++], o = e[v++]);
        break;
      case gn.Q:
        p = e[v++], f = e[v++], h = e[v++], g = e[v++], a.push(i + 2 / 3 * (p - i), o + 2 / 3 * (f - o), h + 2 / 3 * (p - h), g + 2 / 3 * (f - g), h, g), i = h, o = g;
        break;
      case gn.A:
        var y = e[v++], b = e[v++], S = e[v++], E = e[v++], T = e[v++], x = e[v++] + T;
        v += 1;
        var C = !e[v++];
        p = Math.cos(T) * S + y, f = Math.sin(T) * E + b, _ ? (s = p, l = f, u(s, l)) : c(i, o, p, f), i = Math.cos(x) * S + y, o = Math.sin(x) * E + b;
        for (var A = (C ? -1 : 1) * Math.PI / 2, D = T; C ? D > x : D < x; D += A) {
          var M = C ? Math.max(D + A, x) : Math.min(D + A, x);
          d(D, M, y, b, S, E);
        }
        break;
      case gn.R:
        s = i = e[v++], l = o = e[v++], p = s + e[v++], f = l + e[v++], u(p, l), c(p, l, p, f), c(p, f, s, f), c(s, f, s, l), c(s, l, p, l);
        break;
      case gn.Z:
        a && c(i, o, s, l), i = s, o = l;
        break;
    }
  }
  return a && a.length > 2 && n.push(a), n;
}
function T_(t, e, r, n, a, i, o, s, l, u) {
  if (as(t, r) && as(e, n) && as(a, o) && as(i, s)) {
    l.push(o, s);
    return;
  }
  var c = 2 / u, d = c * c, p = o - t, f = s - e, h = Math.sqrt(p * p + f * f);
  p /= h, f /= h;
  var g = r - t, v = n - e, m = a - o, _ = i - s, y = g * g + v * v, b = m * m + _ * _;
  if (y < d && b < d) {
    l.push(o, s);
    return;
  }
  var S = p * g + f * v, E = -p * m - f * _, T = y - S * S, x = b - E * E;
  if (T < d && S >= 0 && x < d && E >= 0) {
    l.push(o, s);
    return;
  }
  var C = [], A = [];
  Ka(t, r, a, o, 0.5, C), Ka(e, n, i, s, 0.5, A), T_(C[0], A[0], C[1], A[1], C[2], A[2], C[3], A[3], l, u), T_(C[4], A[4], C[5], A[5], C[6], A[6], C[7], A[7], l, u);
}
function KX(t, e) {
  var r = E_(t), n = [];
  e = e || 1;
  for (var a = 0; a < r.length; a++) {
    var i = r[a], o = [], s = i[0], l = i[1];
    o.push(s, l);
    for (var u = 2; u < i.length; ) {
      var c = i[u++], d = i[u++], p = i[u++], f = i[u++], h = i[u++], g = i[u++];
      T_(s, l, c, d, p, f, h, g, o, e), s = h, l = g;
    }
    n.push(o);
  }
  return n;
}
function WO(t, e, r) {
  var n = t[e], a = t[1 - e], i = Math.abs(n / a), o = Math.ceil(Math.sqrt(i * r)), s = Math.floor(r / o);
  s === 0 && (s = 1, o = r);
  for (var l = [], u = 0; u < o; u++)
    l.push(s);
  var c = o * s, d = r - c;
  if (d > 0)
    for (var u = 0; u < d; u++)
      l[u % o] += 1;
  return l;
}
function TA(t, e, r) {
  for (var n = t.r0, a = t.r, i = t.startAngle, o = t.endAngle, s = Math.abs(o - i), l = s * a, u = a - n, c = l > Math.abs(u), d = WO([l, u], c ? 0 : 1, e), p = (c ? s : u) / d.length, f = 0; f < d.length; f++)
    for (var h = (c ? u : s) / d[f], g = 0; g < d[f]; g++) {
      var v = {};
      c ? (v.startAngle = i + p * f, v.endAngle = i + p * (f + 1), v.r0 = n + h * g, v.r = n + h * (g + 1)) : (v.startAngle = i + h * g, v.endAngle = i + h * (g + 1), v.r0 = n + p * f, v.r = n + p * (f + 1)), v.clockwise = t.clockwise, v.cx = t.cx, v.cy = t.cy, r.push(v);
    }
}
function ZX(t, e, r) {
  for (var n = t.width, a = t.height, i = n > a, o = WO([n, a], i ? 0 : 1, e), s = i ? "width" : "height", l = i ? "height" : "width", u = i ? "x" : "y", c = i ? "y" : "x", d = t[s] / o.length, p = 0; p < o.length; p++)
    for (var f = t[l] / o[p], h = 0; h < o[p]; h++) {
      var g = {};
      g[u] = p * d, g[c] = h * f, g[s] = d, g[l] = f, g.x += t.x, g.y += t.y, r.push(g);
    }
}
function xA(t, e, r, n) {
  return t * n - r * e;
}
function XX(t, e, r, n, a, i, o, s) {
  var l = r - t, u = n - e, c = o - a, d = s - i, p = xA(c, d, l, u);
  if (Math.abs(p) < 1e-6)
    return null;
  var f = t - a, h = e - i, g = xA(f, h, c, d) / p;
  return g < 0 || g > 1 ? null : new Ee(g * l + t, g * u + e);
}
function QX(t, e, r) {
  var n = new Ee();
  Ee.sub(n, r, e), n.normalize();
  var a = new Ee();
  Ee.sub(a, t, e);
  var i = a.dot(n);
  return i;
}
function qo(t, e) {
  var r = t[t.length - 1];
  r && r[0] === e[0] && r[1] === e[1] || t.push(e);
}
function jX(t, e, r) {
  for (var n = t.length, a = [], i = 0; i < n; i++) {
    var o = t[i], s = t[(i + 1) % n], l = XX(o[0], o[1], s[0], s[1], e.x, e.y, r.x, r.y);
    l && a.push({
      projPt: QX(l, e, r),
      pt: l,
      idx: i
    });
  }
  if (a.length < 2)
    return [{ points: t }, { points: t }];
  a.sort(function(v, m) {
    return v.projPt - m.projPt;
  });
  var u = a[0], c = a[a.length - 1];
  if (c.idx < u.idx) {
    var d = u;
    u = c, c = d;
  }
  for (var p = [u.pt.x, u.pt.y], f = [c.pt.x, c.pt.y], h = [p], g = [f], i = u.idx + 1; i <= c.idx; i++)
    qo(h, t[i].slice());
  qo(h, f), qo(h, p);
  for (var i = c.idx + 1; i <= u.idx + n; i++)
    qo(g, t[i % n].slice());
  return qo(g, p), qo(g, f), [{
    points: h
  }, {
    points: g
  }];
}
function CA(t) {
  var e = t.points, r = [], n = [];
  uf(e, r, n);
  var a = new Te(r[0], r[1], n[0] - r[0], n[1] - r[1]), i = a.width, o = a.height, s = a.x, l = a.y, u = new Ee(), c = new Ee();
  return i > o ? (u.x = c.x = s + i / 2, u.y = l, c.y = l + o) : (u.y = c.y = l + o / 2, u.x = s, c.x = s + i), jX(e, u, c);
}
function zp(t, e, r, n) {
  if (r === 1)
    n.push(e);
  else {
    var a = Math.floor(r / 2), i = t(e);
    zp(t, i[0], a, n), zp(t, i[1], r - a, n);
  }
  return n;
}
function JX(t, e) {
  for (var r = [], n = 0; n < e; n++)
    r.push(sy(t));
  return r;
}
function eQ(t, e) {
  e.setStyle(t.style), e.z = t.z, e.z2 = t.z2, e.zlevel = t.zlevel;
}
function tQ(t) {
  for (var e = [], r = 0; r < t.length; )
    e.push([t[r++], t[r++]]);
  return e;
}
function rQ(t, e) {
  var r = [], n = t.shape, a;
  switch (t.type) {
    case "rect":
      ZX(n, e, r), a = Re;
      break;
    case "sector":
      TA(n, e, r), a = or;
      break;
    case "circle":
      TA({
        r0: 0,
        r: n.r,
        startAngle: 0,
        endAngle: Math.PI * 2,
        cx: n.cx,
        cy: n.cy
      }, e, r), a = or;
      break;
    default:
      var i = t.getComputedTransform(), o = i ? Math.sqrt(Math.max(i[0] * i[0] + i[1] * i[1], i[2] * i[2] + i[3] * i[3])) : 1, s = $(KX(t.getUpdatedPathProxy(), o), function(m) {
        return tQ(m);
      }), l = s.length;
      if (l === 0)
        zp(CA, {
          points: s[0]
        }, e, r);
      else if (l === e)
        for (var u = 0; u < l; u++)
          r.push({
            points: s[u]
          });
      else {
        var c = 0, d = $(s, function(m) {
          var _ = [], y = [];
          uf(m, _, y);
          var b = (y[1] - _[1]) * (y[0] - _[0]);
          return c += b, { poly: m, area: b };
        });
        d.sort(function(m, _) {
          return _.area - m.area;
        });
        for (var p = e, u = 0; u < l; u++) {
          var f = d[u];
          if (p <= 0)
            break;
          var h = u === l - 1 ? p : Math.ceil(f.area / c * e);
          h < 0 || (zp(CA, {
            points: f.poly
          }, h, r), p -= h);
        }
      }
      a = sr;
      break;
  }
  if (!a)
    return JX(t, e);
  for (var g = [], u = 0; u < r.length; u++) {
    var v = new a();
    v.setShape(r[u]), eQ(t, v), g.push(v);
  }
  return g;
}
function nQ(t, e) {
  var r = t.length, n = e.length;
  if (r === n)
    return [t, e];
  for (var a = [], i = [], o = r < n ? t : e, s = Math.min(r, n), l = Math.abs(n - r) / 6, u = (s - 2) / 6, c = Math.ceil(l / u) + 1, d = [o[0], o[1]], p = l, f = 2; f < s; ) {
    var h = o[f - 2], g = o[f - 1], v = o[f++], m = o[f++], _ = o[f++], y = o[f++], b = o[f++], S = o[f++];
    if (p <= 0) {
      d.push(v, m, _, y, b, S);
      continue;
    }
    for (var E = Math.min(p, c - 1) + 1, T = 1; T <= E; T++) {
      var x = T / E;
      Ka(h, v, _, b, x, a), Ka(g, m, y, S, x, i), h = a[3], g = i[3], d.push(a[1], i[1], a[2], i[2], h, g), v = a[5], m = i[5], _ = a[6], y = i[6];
    }
    p -= E - 1;
  }
  return o === t ? [d, e] : [t, d];
}
function AA(t, e) {
  for (var r = t.length, n = t[r - 2], a = t[r - 1], i = [], o = 0; o < e.length; )
    i[o++] = n, i[o++] = a;
  return i;
}
function aQ(t, e) {
  for (var r, n, a, i = [], o = [], s = 0; s < Math.max(t.length, e.length); s++) {
    var l = t[s], u = e[s], c = void 0, d = void 0;
    l ? u ? (r = nQ(l, u), c = r[0], d = r[1], n = c, a = d) : (d = AA(a || l, l), c = l) : (c = AA(n || u, u), d = u), i.push(c), o.push(d);
  }
  return [i, o];
}
function wA(t) {
  for (var e = 0, r = 0, n = 0, a = t.length, i = 0, o = a - 2; i < a; o = i, i += 2) {
    var s = t[o], l = t[o + 1], u = t[i], c = t[i + 1], d = s * c - u * l;
    e += d, r += (s + u) * d, n += (l + c) * d;
  }
  return e === 0 ? [t[0] || 0, t[1] || 0] : [r / e / 3, n / e / 3, e];
}
function iQ(t, e, r, n) {
  for (var a = (t.length - 2) / 6, i = 1 / 0, o = 0, s = t.length, l = s - 2, u = 0; u < a; u++) {
    for (var c = u * 6, d = 0, p = 0; p < s; p += 2) {
      var f = p === 0 ? c : (c + p - 2) % l + 2, h = t[f] - r[0], g = t[f + 1] - r[1], v = e[p] - n[0], m = e[p + 1] - n[1], _ = v - h, y = m - g;
      d += _ * _ + y * y;
    }
    d < i && (i = d, o = u);
  }
  return o;
}
function oQ(t) {
  for (var e = [], r = t.length, n = 0; n < r; n += 2)
    e[n] = t[r - n - 2], e[n + 1] = t[r - n - 1];
  return e;
}
function sQ(t, e, r, n) {
  for (var a = [], i, o = 0; o < t.length; o++) {
    var s = t[o], l = e[o], u = wA(s), c = wA(l);
    i == null && (i = u[2] < 0 != c[2] < 0);
    var d = [], p = [], f = 0, h = 1 / 0, g = [], v = s.length;
    i && (s = oQ(s));
    for (var m = iQ(s, l, u, c) * 6, _ = v - 2, y = 0; y < _; y += 2) {
      var b = (m + y) % _ + 2;
      d[y + 2] = s[b] - u[0], d[y + 3] = s[b + 1] - u[1];
    }
    d[0] = s[m] - u[0], d[1] = s[m + 1] - u[1];
    for (var S = n / r, E = -n / 2; E <= n / 2; E += S) {
      for (var T = Math.sin(E), x = Math.cos(E), C = 0, y = 0; y < s.length; y += 2) {
        var A = d[y], D = d[y + 1], M = l[y] - c[0], I = l[y + 1] - c[1], N = M * x - I * T, R = M * T + I * x;
        g[y] = N, g[y + 1] = R;
        var O = N - A, B = R - D;
        C += O * O + B * B;
      }
      if (C < h) {
        h = C, f = E;
        for (var L = 0; L < g.length; L++)
          p[L] = g[L];
      }
    }
    a.push({
      from: d,
      to: p,
      fromCp: u,
      toCp: c,
      rotation: -f
    });
  }
  return a;
}
function Vp(t) {
  return t.__isCombineMorphing;
}
var qO = "__mOriginal_";
function $p(t, e, r) {
  var n = qO + e, a = t[n] || t[e];
  t[n] || (t[n] = t[e]);
  var i = r.replace, o = r.after, s = r.before;
  t[e] = function() {
    var l = arguments, u;
    return s && s.apply(this, l), i ? u = i.apply(this, l) : u = a.apply(this, l), o && o.apply(this, l), u;
  };
}
function jl(t, e) {
  var r = qO + e;
  t[r] && (t[e] = t[r], t[r] = null);
}
function DA(t, e) {
  for (var r = 0; r < t.length; r++)
    for (var n = t[r], a = 0; a < n.length; ) {
      var i = n[a], o = n[a + 1];
      n[a++] = e[0] * i + e[2] * o + e[4], n[a++] = e[1] * i + e[3] * o + e[5];
    }
}
function YO(t, e) {
  var r = t.getUpdatedPathProxy(), n = e.getUpdatedPathProxy(), a = aQ(E_(r), E_(n)), i = a[0], o = a[1], s = t.getComputedTransform(), l = e.getComputedTransform();
  function u() {
    this.transform = null;
  }
  s && DA(i, s), l && DA(o, l), $p(e, "updateTransform", { replace: u }), e.transform = null;
  var c = sQ(i, o, 10, Math.PI), d = [];
  $p(e, "buildPath", { replace: function(p) {
    for (var f = e.__morphT, h = 1 - f, g = [], v = 0; v < c.length; v++) {
      var m = c[v], _ = m.from, y = m.to, b = m.rotation * f, S = m.fromCp, E = m.toCp, T = Math.sin(b), x = Math.cos(b);
      Ad(g, S, E, f);
      for (var C = 0; C < _.length; C += 2) {
        var A = _[C], D = _[C + 1], M = y[C], I = y[C + 1], N = A * h + M * f, R = D * h + I * f;
        d[C] = N * x - R * T + g[0], d[C + 1] = N * T + R * x + g[1];
      }
      var O = d[0], B = d[1];
      p.moveTo(O, B);
      for (var C = 2; C < _.length; ) {
        var M = d[C++], I = d[C++], L = d[C++], F = d[C++], U = d[C++], z = d[C++];
        O === M && B === I && L === U && F === z ? p.lineTo(U, z) : p.bezierCurveTo(M, I, L, F, U, z), O = U, B = z;
      }
    }
  } });
}
function Hb(t, e, r) {
  if (!t || !e)
    return e;
  var n = r.done, a = r.during;
  YO(t, e), e.__morphT = 0;
  function i() {
    jl(e, "buildPath"), jl(e, "updateTransform"), e.__morphT = -1, e.createPathProxy(), e.dirtyShape();
  }
  return e.animateTo({
    __morphT: 1
  }, ie({
    during: function(o) {
      e.dirtyShape(), a && a(o);
    },
    done: function() {
      i(), n && n();
    }
  }, r)), e;
}
function lQ(t, e, r, n, a, i) {
  var o = 16;
  t = a === r ? 0 : Math.round(32767 * (t - r) / (a - r)), e = i === n ? 0 : Math.round(32767 * (e - n) / (i - n));
  for (var s = 0, l, u = (1 << o) / 2; u > 0; u /= 2) {
    var c = 0, d = 0;
    (t & u) > 0 && (c = 1), (e & u) > 0 && (d = 1), s += u * u * (3 * c ^ d), d === 0 && (c === 1 && (t = u - 1 - t, e = u - 1 - e), l = t, t = e, e = l);
  }
  return s;
}
function Hp(t) {
  var e = 1 / 0, r = 1 / 0, n = -1 / 0, a = -1 / 0, i = $(t, function(s) {
    var l = s.getBoundingRect(), u = s.getComputedTransform(), c = l.x + l.width / 2 + (u ? u[4] : 0), d = l.y + l.height / 2 + (u ? u[5] : 0);
    return e = Math.min(c, e), r = Math.min(d, r), n = Math.max(c, n), a = Math.max(d, a), [c, d];
  }), o = $(i, function(s, l) {
    return {
      cp: s,
      z: lQ(s[0], s[1], e, r, n, a),
      path: t[l]
    };
  });
  return o.sort(function(s, l) {
    return s.z - l.z;
  }).map(function(s) {
    return s.path;
  });
}
function KO(t) {
  return rQ(t.path, t.count);
}
function x_() {
  return {
    fromIndividuals: [],
    toIndividuals: [],
    count: 0
  };
}
function uQ(t, e, r) {
  var n = [];
  function a(S) {
    for (var E = 0; E < S.length; E++) {
      var T = S[E];
      Vp(T) ? a(T.childrenRef()) : T instanceof Ce && n.push(T);
    }
  }
  a(t);
  var i = n.length;
  if (!i)
    return x_();
  var o = r.dividePath || KO, s = o({
    path: e,
    count: i
  });
  if (s.length !== i)
    return console.error("Invalid morphing: unmatched splitted path"), x_();
  n = Hp(n), s = Hp(s);
  for (var l = r.done, u = r.during, c = r.individualDelay, d = new Yn(), p = 0; p < i; p++) {
    var f = n[p], h = s[p];
    h.parent = e, h.copyTransform(d), c || YO(f, h);
  }
  e.__isCombineMorphing = !0, e.childrenRef = function() {
    return s;
  };
  function g(S) {
    for (var E = 0; E < s.length; E++)
      s[E].addSelfToZr(S);
  }
  $p(e, "addSelfToZr", {
    after: function(S) {
      g(S);
    }
  }), $p(e, "removeSelfFromZr", {
    after: function(S) {
      for (var E = 0; E < s.length; E++)
        s[E].removeSelfFromZr(S);
    }
  });
  function v() {
    e.__isCombineMorphing = !1, e.__morphT = -1, e.childrenRef = null, jl(e, "addSelfToZr"), jl(e, "removeSelfFromZr");
  }
  var m = s.length;
  if (c)
    for (var _ = m, y = function() {
      _--, _ === 0 && (v(), l && l());
    }, p = 0; p < m; p++) {
      var b = c ? ie({
        delay: (r.delay || 0) + c(p, m, n[p], s[p]),
        done: y
      }, r) : r;
      Hb(n[p], s[p], b);
    }
  else
    e.__morphT = 0, e.animateTo({
      __morphT: 1
    }, ie({
      during: function(S) {
        for (var E = 0; E < m; E++) {
          var T = s[E];
          T.__morphT = e.__morphT, T.dirtyShape();
        }
        u && u(S);
      },
      done: function() {
        v();
        for (var S = 0; S < t.length; S++)
          jl(t[S], "updateTransform");
        l && l();
      }
    }, r));
  return e.__zr && g(e.__zr), {
    fromIndividuals: n,
    toIndividuals: s,
    count: m
  };
}
function cQ(t, e, r) {
  var n = e.length, a = [], i = r.dividePath || KO;
  function o(f) {
    for (var h = 0; h < f.length; h++) {
      var g = f[h];
      Vp(g) ? o(g.childrenRef()) : g instanceof Ce && a.push(g);
    }
  }
  if (Vp(t)) {
    o(t.childrenRef());
    var s = a.length;
    if (s < n)
      for (var l = 0, u = s; u < n; u++)
        a.push(sy(a[l++ % s]));
    a.length = n;
  } else {
    a = i({ path: t, count: n });
    for (var c = t.getComputedTransform(), u = 0; u < a.length; u++)
      a[u].setLocalTransform(c);
    if (a.length !== n)
      return console.error("Invalid morphing: unmatched splitted path"), x_();
  }
  a = Hp(a), e = Hp(e);
  for (var d = r.individualDelay, u = 0; u < n; u++) {
    var p = d ? ie({
      delay: (r.delay || 0) + d(u, n, a[u], e[u])
    }, r) : r;
    Hb(a[u], e[u], p);
  }
  return {
    fromIndividuals: a,
    toIndividuals: e,
    count: e.length
  };
}
function MA(t) {
  return V(t[0]);
}
function IA(t, e) {
  for (var r = [], n = t.length, a = 0; a < n; a++)
    r.push({
      one: t[a],
      many: []
    });
  for (var a = 0; a < e.length; a++) {
    var i = e[a].length, o = void 0;
    for (o = 0; o < i; o++)
      r[o % n].many.push(e[a][o]);
  }
  for (var s = 0, a = n - 1; a >= 0; a--)
    if (!r[a].many.length) {
      var l = r[s].many;
      if (l.length <= 1)
        if (s)
          s = 0;
        else
          return r;
      var i = l.length, u = Math.ceil(i / 2);
      r[a].many = l.slice(u, i), r[s].many = l.slice(0, u), s++;
    }
  return r;
}
var dQ = {
  clone: function(t) {
    for (var e = [], r = 1 - Math.pow(1 - t.path.style.opacity, 1 / t.count), n = 0; n < t.count; n++) {
      var a = sy(t.path);
      a.setStyle("opacity", r), e.push(a);
    }
    return e;
  },
  // Use the default divider
  split: null
};
function Av(t, e, r, n, a, i) {
  if (!t.length || !e.length)
    return;
  var o = Rs("update", n, a);
  if (!(o && o.duration > 0))
    return;
  var s = n.getModel("universalTransition").get("delay"), l = Object.assign({
    // Need to setToFinal so the further calculation based on the style can be correct.
    // Like emphasis color.
    setToFinal: !0
  }, o), u, c;
  MA(t) && (u = t, c = e), MA(e) && (u = e, c = t);
  function d(m, _, y, b, S) {
    var E = m.many, T = m.one;
    if (E.length === 1 && !S) {
      var x = _ ? E[0] : T, C = _ ? T : E[0];
      if (Vp(x))
        d({
          many: [x],
          one: C
        }, !0, y, b, !0);
      else {
        var A = s ? ie({
          delay: s(y, b)
        }, l) : l;
        Hb(x, C, A), i(x, C, x, C, A);
      }
    } else
      for (var D = ie({
        dividePath: dQ[r],
        individualDelay: s && function(B, L, F, U) {
          return s(B + y, b);
        }
      }, l), M = _ ? uQ(E, T, D) : cQ(T, E, D), I = M.fromIndividuals, N = M.toIndividuals, R = I.length, O = 0; O < R; O++) {
        var A = s ? ie({
          delay: s(O, R)
        }, l) : l;
        i(I[O], N[O], _ ? E[O] : m.one, _ ? m.one : E[O], A);
      }
  }
  for (var p = u ? u === t : t.length > e.length, f = u ? IA(c, u) : IA(p ? e : t, [p ? t : e]), h = 0, g = 0; g < f.length; g++)
    h += f[g].many.length;
  for (var v = 0, g = 0; g < f.length; g++)
    d(f[g], p, v, h), v += f[g].many.length;
}
function Pi(t) {
  if (!t)
    return [];
  if (V(t)) {
    for (var e = [], r = 0; r < t.length; r++)
      e.push(Pi(t[r]));
    return e;
  }
  var n = [];
  return t.traverse(function(a) {
    a instanceof Ce && !a.disableMorphing && !a.invisible && !a.ignore && n.push(a);
  }), n;
}
var ZO = 1e4, pQ = 0, NA = 1, RA = 2, fQ = Oe();
function hQ(t, e) {
  for (var r = t.dimensions, n = 0; n < r.length; n++) {
    var a = t.getDimensionInfo(r[n]);
    if (a && a.otherDims[e] === 0)
      return r[n];
  }
}
function gQ(t, e, r) {
  var n = t.getDimensionInfo(r), a = n && n.ordinalMeta;
  if (n) {
    var i = t.get(n.name, e);
    return a && a.categories[i] || i + "";
  }
}
function OA(t, e, r, n) {
  var a = n ? "itemChildGroupId" : "itemGroupId", i = hQ(t, a);
  if (i) {
    var o = gQ(t, e, i);
    return o;
  }
  var s = t.getRawDataItem(e), l = n ? "childGroupId" : "groupId";
  if (s && s[l])
    return s[l] + "";
  if (!n)
    return r || t.getId(e);
}
function LA(t) {
  var e = [];
  return w(t, function(r) {
    var n = r.data, a = r.dataGroupId;
    if (!(n.count() > ZO))
      for (var i = n.getIndices(), o = 0; o < i.length; o++)
        e.push({
          data: n,
          groupId: OA(n, o, a, !1),
          childGroupId: OA(n, o, a, !0),
          divide: r.divide,
          dataIndex: o
        });
  }), e;
}
function wv(t, e, r) {
  t.traverse(function(n) {
    n instanceof Ce && rt(n, {
      style: {
        opacity: 0
      }
    }, e, {
      dataIndex: r,
      isFrom: !0
    });
  });
}
function Dv(t) {
  if (t.parent) {
    var e = t.getComputedTransform();
    t.setLocalTransform(e), t.parent.remove(t);
  }
}
function Yo(t) {
  t.stopAnimation(), t.isGroup && t.traverse(function(e) {
    e.stopAnimation();
  });
}
function vQ(t, e, r) {
  var n = Rs("update", r, e);
  n && t.traverse(function(a) {
    if (a instanceof Fr) {
      var i = KG(a);
      i && a.animateFrom({
        style: i
      }, n);
    }
  });
}
function mQ(t, e) {
  var r = t.length;
  if (r !== e.length)
    return !1;
  for (var n = 0; n < r; n++) {
    var a = t[n], i = e[n];
    if (a.data.getId(a.dataIndex) !== i.data.getId(i.dataIndex))
      return !1;
  }
  return !0;
}
function XO(t, e, r) {
  var n = LA(t), a = LA(e);
  function i(y, b, S, E, T) {
    (S || y) && b.animateFrom({
      style: S && S !== y ? G(G({}, S.style), y.style) : y.style
    }, T);
  }
  var o = !1, s = pQ, l = J(), u = J();
  n.forEach(function(y) {
    y.groupId && l.set(y.groupId, !0), y.childGroupId && u.set(y.childGroupId, !0);
  });
  for (var c = 0; c < a.length; c++) {
    var d = a[c].groupId;
    if (u.get(d)) {
      s = NA;
      break;
    }
    var p = a[c].childGroupId;
    if (p && l.get(p)) {
      s = RA;
      break;
    }
  }
  function f(y, b) {
    return function(S) {
      var E = S.data, T = S.dataIndex;
      return b ? E.getId(T) : y ? s === NA ? S.childGroupId : S.groupId : s === RA ? S.childGroupId : S.groupId;
    };
  }
  var h = mQ(n, a), g = {};
  if (!h)
    for (var c = 0; c < a.length; c++) {
      var v = a[c], m = v.data.getItemGraphicEl(v.dataIndex);
      m && (g[m.id] = !0);
    }
  function _(y, b) {
    var S = n[b], E = a[y], T = E.data.hostModel, x = S.data.getItemGraphicEl(S.dataIndex), C = E.data.getItemGraphicEl(E.dataIndex);
    if (x === C) {
      C && vQ(C, E.dataIndex, T);
      return;
    }
    // We can't use the elements that already being morphed
    x && g[x.id] || C && (Yo(C), x ? (Yo(x), Dv(x), o = !0, Av(Pi(x), Pi(C), E.divide, T, y, i)) : wv(C, T, y));
  }
  new ia(n, a, f(!0, h), f(!1, h), null, "multiple").update(_).updateManyToOne(function(y, b) {
    var S = a[y], E = S.data, T = E.hostModel, x = E.getItemGraphicEl(S.dataIndex), C = ze($(b, function(A) {
      return n[A].data.getItemGraphicEl(n[A].dataIndex);
    }), function(A) {
      return A && A !== x && !g[A.id];
    });
    x && (Yo(x), C.length ? (w(C, function(A) {
      Yo(A), Dv(A);
    }), o = !0, Av(Pi(C), Pi(x), S.divide, T, y, i)) : wv(x, T, S.dataIndex));
  }).updateOneToMany(function(y, b) {
    var S = n[b], E = S.data.getItemGraphicEl(S.dataIndex);
    if (!(E && g[E.id])) {
      var T = ze($(y, function(C) {
        return a[C].data.getItemGraphicEl(a[C].dataIndex);
      }), function(C) {
        return C && C !== E;
      }), x = a[y[0]].data.hostModel;
      T.length && (w(T, function(C) {
        return Yo(C);
      }), E ? (Yo(E), Dv(E), o = !0, Av(
        Pi(E),
        Pi(T),
        S.divide,
        // Use divide on old.
        x,
        y[0],
        i
      )) : w(T, function(C) {
        return wv(C, x, y[0]);
      }));
    }
  }).updateManyToMany(function(y, b) {
    new ia(b, y, function(S) {
      return n[S].data.getId(n[S].dataIndex);
    }, function(S) {
      return a[S].data.getId(a[S].dataIndex);
    }).update(function(S, E) {
      _(y[S], b[E]);
    }).execute();
  }).execute(), o && w(e, function(y) {
    var b = y.data, S = b.hostModel, E = S && r.getViewOfSeriesModel(S), T = Rs("update", S, 0);
    E && S.isAnimationEnabled() && T && T.duration > 0 && E.group.traverse(function(x) {
      x instanceof Ce && !x.animators.length && x.animateFrom({
        style: {
          opacity: 0
        }
      }, T);
    });
  });
}
function PA(t) {
  var e = t.getModel("universalTransition").get("seriesKey");
  return e || t.id;
}
function kA(t) {
  return V(t) ? t.sort().join(",") : t;
}
function wa(t) {
  if (t.hostModel)
    return t.hostModel.getModel("universalTransition").get("divideShape");
}
function _Q(t, e) {
  var r = J(), n = J(), a = J();
  return w(t.oldSeries, function(i, o) {
    var s = t.oldDataGroupIds[o], l = t.oldData[o], u = PA(i), c = kA(u);
    n.set(c, {
      dataGroupId: s,
      data: l
    }), V(u) && w(u, function(d) {
      a.set(d, {
        key: c,
        dataGroupId: s,
        data: l
      });
    });
  }), w(e.updatedSeries, function(i) {
    if (i.isUniversalTransitionEnabled() && i.isAnimationEnabled()) {
      var o = i.get("dataGroupId"), s = i.getData(), l = PA(i), u = kA(l), c = n.get(u);
      if (c)
        r.set(u, {
          oldSeries: [{
            dataGroupId: c.dataGroupId,
            divide: wa(c.data),
            data: c.data
          }],
          newSeries: [{
            dataGroupId: o,
            divide: wa(s),
            data: s
          }]
        });
      else if (V(l)) {
        var d = [];
        w(l, function(h) {
          var g = n.get(h);
          g.data && d.push({
            dataGroupId: g.dataGroupId,
            divide: wa(g.data),
            data: g.data
          });
        }), d.length && r.set(u, {
          oldSeries: d,
          newSeries: [{
            dataGroupId: o,
            data: s,
            divide: wa(s)
          }]
        });
      } else {
        var p = a.get(l);
        if (p) {
          var f = r.get(p.key);
          f || (f = {
            oldSeries: [{
              dataGroupId: p.dataGroupId,
              data: p.data,
              divide: wa(p.data)
            }],
            newSeries: []
          }, r.set(p.key, f)), f.newSeries.push({
            dataGroupId: o,
            data: s,
            divide: wa(s)
          });
        }
      }
    }
  }), r;
}
function BA(t, e) {
  for (var r = 0; r < t.length; r++) {
    var n = e.seriesIndex != null && e.seriesIndex === t[r].seriesIndex || e.seriesId != null && e.seriesId === t[r].id;
    if (n)
      return r;
  }
}
function yQ(t, e, r, n) {
  var a = [], i = [];
  w(Ye(t.from), function(o) {
    var s = BA(e.oldSeries, o);
    s >= 0 && a.push({
      dataGroupId: e.oldDataGroupIds[s],
      data: e.oldData[s],
      // TODO can specify divideShape in transition.
      divide: wa(e.oldData[s]),
      groupIdDim: o.dimension
    });
  }), w(Ye(t.to), function(o) {
    var s = BA(r.updatedSeries, o);
    if (s >= 0) {
      var l = r.updatedSeries[s].getData();
      i.push({
        dataGroupId: e.oldDataGroupIds[s],
        data: l,
        divide: wa(l),
        groupIdDim: o.dimension
      });
    }
  }), a.length > 0 && i.length > 0 && XO(a, i, n);
}
function rne(t) {
  t.registerUpdateLifecycle("series:beforeupdate", function(e, r, n) {
    w(Ye(n.seriesTransition), function(a) {
      w(Ye(a.to), function(i) {
        for (var o = n.updatedSeries, s = 0; s < o.length; s++)
          (i.seriesIndex != null && i.seriesIndex === o[s].seriesIndex || i.seriesId != null && i.seriesId === o[s].id) && (o[s][Fd] = !0);
      });
    });
  }), t.registerUpdateLifecycle("series:transition", function(e, r, n) {
    var a = fQ(r);
    if (a.oldSeries && n.updatedSeries && n.optionChanged) {
      var i = n.seriesTransition;
      if (i)
        w(Ye(i), function(f) {
          yQ(f, a, n, r);
        });
      else {
        var o = _Q(a, n);
        w(o.keys(), function(f) {
          var h = o.get(f);
          XO(h.oldSeries, h.newSeries, r);
        });
      }
      w(n.updatedSeries, function(f) {
        f[Fd] && (f[Fd] = !1);
      });
    }
    for (var s = e.getSeries(), l = a.oldSeries = [], u = a.oldDataGroupIds = [], c = a.oldData = [], d = 0; d < s.length; d++) {
      var p = s[d].getData();
      p.count() < ZO && (l.push(s[d]), u.push(s[d].get("dataGroupId")), c.push(p));
    }
  });
}
function bQ(t) {
  const e = "[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+", a = "далее " + "возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт ", s = "загрузитьизфайла " + "вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент ", p = "разделительстраниц разделительстрок символтабуляции " + "ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон " + "acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища " + "wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ", F = "webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля " + "автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени форматкартинки ширинаподчиненныхэлементовформы " + "виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента " + "авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных " + "использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц " + "отображениевремениэлементовпланировщика " + "типфайлаформатированногодокумента " + "обходрезультатазапроса типзаписизапроса " + "видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов " + "доступкфайлу режимдиалогавыборафайла режимоткрытияфайла " + "типизмеренияпостроителязапроса " + "видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений " + "wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs форматдатыjson экранированиесимволовjson " + "видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных использованиеусловногооформлениякомпоновкиданных " + "важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты статусразборапочтовогосообщения " + "режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации " + "расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии типхранилищасертификатовкриптографии " + "кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip режимсохраненияпутейzip уровеньсжатияzip " + "звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp " + "направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса " + "httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса типномерадокумента типномеразадачи типформы удалениедвижений " + "важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты", H = "comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных " + "comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура фиксированноесоответствие фиксированныймассив ", Z = "null истина ложь неопределено", ee = t.inherit(t.NUMBER_MODE), oe = {
    className: "string",
    begin: '"|\\|',
    end: '"|$',
    contains: [{ begin: '""' }]
  }, Le = {
    begin: "'",
    end: "'",
    excludeBegin: !0,
    excludeEnd: !0,
    contains: [
      {
        className: "number",
        begin: "\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}"
      }
    ]
  }, Xe = {
    match: /[;()+\-:=,]/,
    className: "punctuation",
    relevance: 0
  }, fe = t.inherit(t.C_LINE_COMMENT_MODE), re = {
    className: "meta",
    begin: "#|&",
    end: "$",
    keywords: {
      $pattern: e,
      keyword: a + s
    },
    contains: [fe]
  }, ve = {
    className: "symbol",
    begin: "~",
    end: ";|:",
    excludeEnd: !0
  }, j = {
    className: "function",
    variants: [
      {
        begin: "процедура|функция",
        end: "\\)",
        keywords: "процедура функция"
      },
      {
        begin: "конецпроцедуры|конецфункции",
        keywords: "конецпроцедуры конецфункции"
      }
    ],
    contains: [
      {
        begin: "\\(",
        end: "\\)",
        endsParent: !0,
        contains: [
          {
            className: "params",
            begin: e,
            end: ",",
            excludeEnd: !0,
            endsWithParent: !0,
            keywords: {
              $pattern: e,
              keyword: "знач",
              literal: Z
            },
            contains: [
              ee,
              oe,
              Le
            ]
          },
          fe
        ]
      },
      t.inherit(t.TITLE_MODE, { begin: e })
    ]
  };
  return {
    name: "1C:Enterprise",
    case_insensitive: !0,
    keywords: {
      $pattern: e,
      keyword: a,
      built_in: p,
      class: F,
      type: H,
      literal: Z
    },
    contains: [
      re,
      j,
      fe,
      ve,
      ee,
      oe,
      Le,
      Xe
    ]
  };
}
const nne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bQ
}, Symbol.toStringTag, { value: "Module" }));
function SQ(t) {
  const e = t.regex, r = /^[a-zA-Z][a-zA-Z0-9-]*/, n = [
    "ALPHA",
    "BIT",
    "CHAR",
    "CR",
    "CRLF",
    "CTL",
    "DIGIT",
    "DQUOTE",
    "HEXDIG",
    "HTAB",
    "LF",
    "LWSP",
    "OCTET",
    "SP",
    "VCHAR",
    "WSP"
  ], a = t.COMMENT(/;/, /$/), i = {
    scope: "symbol",
    match: /%b[0-1]+(-[0-1]+|(\.[0-1]+)+)?/
  }, o = {
    scope: "symbol",
    match: /%d[0-9]+(-[0-9]+|(\.[0-9]+)+)?/
  }, s = {
    scope: "symbol",
    match: /%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+)?/
  }, l = {
    scope: "symbol",
    match: /%[si](?=".*")/
  }, u = {
    scope: "attribute",
    match: e.concat(r, /(?=\s*=)/)
  };
  return {
    name: "Augmented Backus-Naur Form",
    illegal: /[!@#$^&',?+~`|:]/,
    keywords: n,
    contains: [
      {
        scope: "operator",
        match: /=\/?/
      },
      u,
      a,
      i,
      o,
      s,
      l,
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE
    ]
  };
}
const ane = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SQ
}, Symbol.toStringTag, { value: "Module" }));
function EQ(t) {
  const e = t.regex, r = [
    "GET",
    "POST",
    "HEAD",
    "PUT",
    "DELETE",
    "CONNECT",
    "OPTIONS",
    "PATCH",
    "TRACE"
  ];
  return {
    name: "Apache Access Log",
    contains: [
      // IP
      {
        className: "number",
        begin: /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?\b/,
        relevance: 5
      },
      // Other numbers
      {
        className: "number",
        begin: /\b\d+\b/,
        relevance: 0
      },
      // Requests
      {
        className: "string",
        begin: e.concat(/"/, e.either(...r)),
        end: /"/,
        keywords: r,
        illegal: /\n/,
        relevance: 5,
        contains: [
          {
            begin: /HTTP\/[12]\.\d'/,
            relevance: 5
          }
        ]
      },
      // Dates
      {
        className: "string",
        // dates must have a certain length, this prevents matching
        // simple array accesses a[123] and [] and other common patterns
        // found in other languages
        begin: /\[\d[^\]\n]{8,}\]/,
        illegal: /\n/,
        relevance: 1
      },
      {
        className: "string",
        begin: /\[/,
        end: /\]/,
        illegal: /\n/,
        relevance: 0
      },
      // User agent / relevance boost
      {
        className: "string",
        begin: /"Mozilla\/\d\.\d \(/,
        end: /"/,
        illegal: /\n/,
        relevance: 3
      },
      // Strings
      {
        className: "string",
        begin: /"/,
        end: /"/,
        illegal: /\n/,
        relevance: 0
      }
    ]
  };
}
const ine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: EQ
}, Symbol.toStringTag, { value: "Module" }));
function TQ(t) {
  const e = t.regex, r = /[a-zA-Z_$][a-zA-Z0-9_$]*/, n = e.concat(
    r,
    e.concat("(\\.", r, ")*")
  ), a = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/, i = {
    className: "rest_arg",
    begin: /[.]{3}/,
    end: r,
    relevance: 10
  };
  return {
    name: "ActionScript",
    aliases: ["as"],
    keywords: {
      keyword: [
        "as",
        "break",
        "case",
        "catch",
        "class",
        "const",
        "continue",
        "default",
        "delete",
        "do",
        "dynamic",
        "each",
        "else",
        "extends",
        "final",
        "finally",
        "for",
        "function",
        "get",
        "if",
        "implements",
        "import",
        "in",
        "include",
        "instanceof",
        "interface",
        "internal",
        "is",
        "namespace",
        "native",
        "new",
        "override",
        "package",
        "private",
        "protected",
        "public",
        "return",
        "set",
        "static",
        "super",
        "switch",
        "this",
        "throw",
        "try",
        "typeof",
        "use",
        "var",
        "void",
        "while",
        "with"
      ],
      literal: [
        "true",
        "false",
        "null",
        "undefined"
      ]
    },
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.C_NUMBER_MODE,
      {
        match: [
          /\bpackage/,
          /\s+/,
          n
        ],
        className: {
          1: "keyword",
          3: "title.class"
        }
      },
      {
        match: [
          /\b(?:class|interface|extends|implements)/,
          /\s+/,
          r
        ],
        className: {
          1: "keyword",
          3: "title.class"
        }
      },
      {
        className: "meta",
        beginKeywords: "import include",
        end: /;/,
        keywords: { keyword: "import include" }
      },
      {
        beginKeywords: "function",
        end: /[{;]/,
        excludeEnd: !0,
        illegal: /\S/,
        contains: [
          t.inherit(t.TITLE_MODE, { className: "title.function" }),
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            contains: [
              t.APOS_STRING_MODE,
              t.QUOTE_STRING_MODE,
              t.C_LINE_COMMENT_MODE,
              t.C_BLOCK_COMMENT_MODE,
              i
            ]
          },
          { begin: e.concat(/:\s*/, a) }
        ]
      },
      t.METHOD_GUARD
    ],
    illegal: /#/
  };
}
const one = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TQ
}, Symbol.toStringTag, { value: "Module" }));
function xQ(t) {
  const e = "\\d(_|\\d)*", r = "[eE][-+]?" + e, n = e + "(\\." + e + ")?(" + r + ")?", a = "\\w+", o = "\\b(" + (e + "#" + a + "(\\." + a + ")?#(" + r + ")?") + "|" + n + ")", s = "[A-Za-z](_?[A-Za-z0-9.])*", l = `[]\\{\\}%#'"`, u = t.COMMENT("--", "$"), c = {
    // TODO: These spaces are not required by the Ada syntax
    // however, I have yet to see handwritten Ada code where
    // someone does not put spaces around :
    begin: "\\s+:\\s+",
    end: "\\s*(:=|;|\\)|=>|$)",
    // endsWithParent: true,
    // returnBegin: true,
    illegal: l,
    contains: [
      {
        // workaround to avoid highlighting
        // named loops and declare blocks
        beginKeywords: "loop for declare others",
        endsParent: !0
      },
      {
        // properly highlight all modifiers
        className: "keyword",
        beginKeywords: "not null constant access function procedure in out aliased exception"
      },
      {
        className: "type",
        begin: s,
        endsParent: !0,
        relevance: 0
      }
    ]
  };
  return {
    name: "Ada",
    case_insensitive: !0,
    keywords: {
      keyword: [
        "abort",
        "else",
        "new",
        "return",
        "abs",
        "elsif",
        "not",
        "reverse",
        "abstract",
        "end",
        "accept",
        "entry",
        "select",
        "access",
        "exception",
        "of",
        "separate",
        "aliased",
        "exit",
        "or",
        "some",
        "all",
        "others",
        "subtype",
        "and",
        "for",
        "out",
        "synchronized",
        "array",
        "function",
        "overriding",
        "at",
        "tagged",
        "generic",
        "package",
        "task",
        "begin",
        "goto",
        "pragma",
        "terminate",
        "body",
        "private",
        "then",
        "if",
        "procedure",
        "type",
        "case",
        "in",
        "protected",
        "constant",
        "interface",
        "is",
        "raise",
        "use",
        "declare",
        "range",
        "delay",
        "limited",
        "record",
        "when",
        "delta",
        "loop",
        "rem",
        "while",
        "digits",
        "renames",
        "with",
        "do",
        "mod",
        "requeue",
        "xor"
      ],
      literal: [
        "True",
        "False"
      ]
    },
    contains: [
      u,
      // strings "foobar"
      {
        className: "string",
        begin: /"/,
        end: /"/,
        contains: [
          {
            begin: /""/,
            relevance: 0
          }
        ]
      },
      // characters ''
      {
        // character literals always contain one char
        className: "string",
        begin: /'.'/
      },
      {
        // number literals
        className: "number",
        begin: o,
        relevance: 0
      },
      {
        // Attributes
        className: "symbol",
        begin: "'" + s
      },
      {
        // package definition, maybe inside generic
        className: "title",
        begin: "(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?",
        end: "(is|$)",
        keywords: "package body",
        excludeBegin: !0,
        excludeEnd: !0,
        illegal: l
      },
      {
        // function/procedure declaration/definition
        // maybe inside generic
        begin: "(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+",
        end: "(\\bis|\\bwith|\\brenames|\\)\\s*;)",
        keywords: "overriding function procedure with is renames return",
        // we need to re-match the 'function' keyword, so that
        // the title mode below matches only exactly once
        returnBegin: !0,
        contains: [
          u,
          {
            // name of the function/procedure
            className: "title",
            begin: "(\\bwith\\s+)?\\b(function|procedure)\\s+",
            end: "(\\(|\\s+|$)",
            excludeBegin: !0,
            excludeEnd: !0,
            illegal: l
          },
          // 'self'
          // // parameter types
          c,
          {
            // return type
            className: "type",
            begin: "\\breturn\\s+",
            end: "(\\s+|;|$)",
            keywords: "return",
            excludeBegin: !0,
            excludeEnd: !0,
            // we are done with functions
            endsParent: !0,
            illegal: l
          }
        ]
      },
      {
        // new type declarations
        // maybe inside generic
        className: "type",
        begin: "\\b(sub)?type\\s+",
        end: "\\s+",
        keywords: "type",
        excludeBegin: !0,
        illegal: l
      },
      // see comment above the definition
      c
      // no markup
      // relevance boosters for small snippets
      // {begin: '\\s*=>\\s*'},
      // {begin: '\\s*:=\\s*'},
      // {begin: '\\s+:=\\s+'},
    ]
  };
}
const sne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xQ
}, Symbol.toStringTag, { value: "Module" }));
function CQ(t) {
  const e = {
    className: "built_in",
    begin: "\\b(void|bool|int8|int16|int32|int64|int|uint8|uint16|uint32|uint64|uint|string|ref|array|double|float|auto|dictionary)"
  }, r = {
    className: "symbol",
    begin: "[a-zA-Z0-9_]+@"
  }, n = {
    className: "keyword",
    begin: "<",
    end: ">",
    contains: [
      e,
      r
    ]
  };
  return e.contains = [n], r.contains = [n], {
    name: "AngelScript",
    aliases: ["asc"],
    keywords: [
      "for",
      "in|0",
      "break",
      "continue",
      "while",
      "do|0",
      "return",
      "if",
      "else",
      "case",
      "switch",
      "namespace",
      "is",
      "cast",
      "or",
      "and",
      "xor",
      "not",
      "get|0",
      "in",
      "inout|10",
      "out",
      "override",
      "set|0",
      "private",
      "public",
      "const",
      "default|0",
      "final",
      "shared",
      "external",
      "mixin|10",
      "enum",
      "typedef",
      "funcdef",
      "this",
      "super",
      "import",
      "from",
      "interface",
      "abstract|0",
      "try",
      "catch",
      "protected",
      "explicit",
      "property"
    ],
    // avoid close detection with C# and JS
    illegal: "(^using\\s+[A-Za-z0-9_\\.]+;$|\\bfunction\\s*[^\\(])",
    contains: [
      {
        // 'strings'
        className: "string",
        begin: "'",
        end: "'",
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE],
        relevance: 0
      },
      // """heredoc strings"""
      {
        className: "string",
        begin: '"""',
        end: '"""'
      },
      {
        // "strings"
        className: "string",
        begin: '"',
        end: '"',
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE],
        relevance: 0
      },
      t.C_LINE_COMMENT_MODE,
      // single-line comments
      t.C_BLOCK_COMMENT_MODE,
      // comment blocks
      {
        // metadata
        className: "string",
        begin: "^\\s*\\[",
        end: "\\]"
      },
      {
        // interface or namespace declaration
        beginKeywords: "interface namespace",
        end: /\{/,
        illegal: "[;.\\-]",
        contains: [
          {
            // interface or namespace name
            className: "symbol",
            begin: "[a-zA-Z0-9_]+"
          }
        ]
      },
      {
        // class declaration
        beginKeywords: "class",
        end: /\{/,
        illegal: "[;.\\-]",
        contains: [
          {
            // class name
            className: "symbol",
            begin: "[a-zA-Z0-9_]+",
            contains: [
              {
                begin: "[:,]\\s*",
                contains: [
                  {
                    className: "symbol",
                    begin: "[a-zA-Z0-9_]+"
                  }
                ]
              }
            ]
          }
        ]
      },
      e,
      // built-in types
      r,
      // object handles
      {
        // literals
        className: "literal",
        begin: "\\b(null|true|false)"
      },
      {
        // numbers
        className: "number",
        relevance: 0,
        begin: "(-?)(\\b0[xXbBoOdD][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?f?|\\.\\d+f?)([eE][-+]?\\d+f?)?)"
      }
    ]
  };
}
const lne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CQ
}, Symbol.toStringTag, { value: "Module" }));
function AQ(t) {
  const e = {
    className: "number",
    begin: /[$%]\d+/
  }, r = {
    className: "number",
    begin: /\b\d+/
  }, n = {
    className: "number",
    begin: /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?/
  }, a = {
    className: "number",
    begin: /:\d{1,5}/
  };
  return {
    name: "Apache config",
    aliases: ["apacheconf"],
    case_insensitive: !0,
    contains: [
      t.HASH_COMMENT_MODE,
      {
        className: "section",
        begin: /<\/?/,
        end: />/,
        contains: [
          n,
          a,
          // low relevance prevents us from claming XML/HTML where this rule would
          // match strings inside of XML tags
          t.inherit(t.QUOTE_STRING_MODE, { relevance: 0 })
        ]
      },
      {
        className: "attribute",
        begin: /\w+/,
        relevance: 0,
        // keywords aren’t needed for highlighting per se, they only boost relevance
        // for a very generally defined mode (starts with a word, ends with line-end
        keywords: { _: [
          "order",
          "deny",
          "allow",
          "setenv",
          "rewriterule",
          "rewriteengine",
          "rewritecond",
          "documentroot",
          "sethandler",
          "errordocument",
          "loadmodule",
          "options",
          "header",
          "listen",
          "serverroot",
          "servername"
        ] },
        starts: {
          end: /$/,
          relevance: 0,
          keywords: { literal: "on off all deny allow" },
          contains: [
            {
              scope: "punctuation",
              match: /\\\n/
            },
            {
              className: "meta",
              begin: /\s\[/,
              end: /\]$/
            },
            {
              className: "variable",
              begin: /[\$%]\{/,
              end: /\}/,
              contains: [
                "self",
                e
              ]
            },
            n,
            r,
            t.QUOTE_STRING_MODE
          ]
        }
      }
    ],
    illegal: /\S/
  };
}
const une = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: AQ
}, Symbol.toStringTag, { value: "Module" }));
function wQ(t) {
  const e = t.regex, r = t.inherit(
    t.QUOTE_STRING_MODE,
    { illegal: null }
  ), n = {
    className: "params",
    begin: /\(/,
    end: /\)/,
    contains: [
      "self",
      t.C_NUMBER_MODE,
      r
    ]
  }, a = t.COMMENT(/--/, /$/), i = t.COMMENT(
    /\(\*/,
    /\*\)/,
    { contains: [
      "self",
      // allow nesting
      a
    ] }
  ), o = [
    a,
    i,
    t.HASH_COMMENT_MODE
  ], s = [
    /apart from/,
    /aside from/,
    /instead of/,
    /out of/,
    /greater than/,
    /isn't|(doesn't|does not) (equal|come before|come after|contain)/,
    /(greater|less) than( or equal)?/,
    /(starts?|ends|begins?) with/,
    /contained by/,
    /comes (before|after)/,
    /a (ref|reference)/,
    /POSIX (file|path)/,
    /(date|time) string/,
    /quoted form/
  ], l = [
    /clipboard info/,
    /the clipboard/,
    /info for/,
    /list (disks|folder)/,
    /mount volume/,
    /path to/,
    /(close|open for) access/,
    /(get|set) eof/,
    /current date/,
    /do shell script/,
    /get volume settings/,
    /random number/,
    /set volume/,
    /system attribute/,
    /system info/,
    /time to GMT/,
    /(load|run|store) script/,
    /scripting components/,
    /ASCII (character|number)/,
    /localized string/,
    /choose (application|color|file|file name|folder|from list|remote application|URL)/,
    /display (alert|dialog)/
  ];
  return {
    name: "AppleScript",
    aliases: ["osascript"],
    keywords: {
      keyword: "about above after against and around as at back before beginning behind below beneath beside between but by considering contain contains continue copy div does eighth else end equal equals error every exit fifth first for fourth from front get given global if ignoring in into is it its last local me middle mod my ninth not of on onto or over prop property put ref reference repeat returning script second set seventh since sixth some tell tenth that the|0 then third through thru timeout times to transaction try until where while whose with without",
      literal: "AppleScript false linefeed return pi quote result space tab true",
      built_in: "alias application boolean class constant date file integer list number real record string text activate beep count delay launch log offset read round run say summarize write character characters contents day frontmost id item length month name|0 paragraph paragraphs rest reverse running time version weekday word words year"
    },
    contains: [
      r,
      t.C_NUMBER_MODE,
      {
        className: "built_in",
        begin: e.concat(
          /\b/,
          e.either(...l),
          /\b/
        )
      },
      {
        className: "built_in",
        begin: /^\s*return\b/
      },
      {
        className: "literal",
        begin: /\b(text item delimiters|current application|missing value)\b/
      },
      {
        className: "keyword",
        begin: e.concat(
          /\b/,
          e.either(...s),
          /\b/
        )
      },
      {
        beginKeywords: "on",
        illegal: /[${=;\n]/,
        contains: [
          t.UNDERSCORE_TITLE_MODE,
          n
        ]
      },
      ...o
    ],
    illegal: /\/\/|->|=>|\[\[/
  };
}
const cne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: wQ
}, Symbol.toStringTag, { value: "Module" }));
function DQ(t) {
  const e = t.regex, r = "[A-Za-z_][0-9A-Za-z_]*", n = {
    keyword: [
      "break",
      "case",
      "catch",
      "continue",
      "debugger",
      "do",
      "else",
      "export",
      "for",
      "function",
      "if",
      "import",
      "in",
      "new",
      "of",
      "return",
      "switch",
      "try",
      "var",
      "void",
      "while"
    ],
    literal: [
      "BackSlash",
      "DoubleQuote",
      "ForwardSlash",
      "Infinity",
      "NaN",
      "NewLine",
      "PI",
      "SingleQuote",
      "Tab",
      "TextFormatting",
      "false",
      "null",
      "true",
      "undefined"
    ],
    built_in: [
      "Abs",
      "Acos",
      "All",
      "Angle",
      "Any",
      "Area",
      "AreaGeodetic",
      "Array",
      "Asin",
      "Atan",
      "Atan2",
      "Attachments",
      "Average",
      "Back",
      "Bearing",
      "Boolean",
      "Buffer",
      "BufferGeodetic",
      "Ceil",
      "Centroid",
      "ChangeTimeZone",
      "Clip",
      "Concatenate",
      "Console",
      "Constrain",
      "Contains",
      "ConvertDirection",
      "ConvexHull",
      "Cos",
      "Count",
      "Crosses",
      "Cut",
      "Date|0",
      "DateAdd",
      "DateDiff",
      "DateOnly",
      "Day",
      "Decode",
      "DefaultValue",
      "Densify",
      "DensifyGeodetic",
      "Dictionary",
      "Difference",
      "Disjoint",
      "Distance",
      "DistanceGeodetic",
      "DistanceToCoordinate",
      "Distinct",
      "Domain",
      "DomainCode",
      "DomainName",
      "EnvelopeIntersects",
      "Equals",
      "Erase",
      "Exp",
      "Expects",
      "Extent",
      "Feature",
      "FeatureInFilter",
      "FeatureSet",
      "FeatureSetByAssociation",
      "FeatureSetById",
      "FeatureSetByName",
      "FeatureSetByPortalItem",
      "FeatureSetByRelationshipClass",
      "FeatureSetByRelationshipName",
      "Filter",
      "FilterBySubtypeCode",
      "Find",
      "First|0",
      "Floor",
      "FromCharCode",
      "FromCodePoint",
      "FromJSON",
      "Front",
      "GdbVersion",
      "Generalize",
      "Geometry",
      "GetEnvironment",
      "GetFeatureSet",
      "GetFeatureSetInfo",
      "GetUser",
      "GroupBy",
      "Guid",
      "HasKey",
      "HasValue",
      "Hash",
      "Hour",
      "IIf",
      "ISOMonth",
      "ISOWeek",
      "ISOWeekday",
      "ISOYear",
      "Includes",
      "IndexOf",
      "Insert",
      "Intersection",
      "Intersects",
      "IsEmpty",
      "IsNan",
      "IsSelfIntersecting",
      "IsSimple",
      "KnowledgeGraphByPortalItem",
      "Left|0",
      "Length",
      "Length3D",
      "LengthGeodetic",
      "Log",
      "Lower",
      "Map",
      "Max",
      "Mean",
      "MeasureToCoordinate",
      "Mid",
      "Millisecond",
      "Min",
      "Minute",
      "Month",
      "MultiPartToSinglePart",
      "Multipoint",
      "NearestCoordinate",
      "NearestVertex",
      "NextSequenceValue",
      "None",
      "Now",
      "Number",
      "Offset",
      "OrderBy",
      "Overlaps",
      "Point",
      "PointToCoordinate",
      "Polygon",
      "Polyline",
      "Pop",
      "Portal",
      "Pow",
      "Proper",
      "Push",
      "QueryGraph",
      "Random",
      "Reduce",
      "Relate",
      "Replace",
      "Resize",
      "Reverse",
      "Right|0",
      "RingIsClockwise",
      "Rotate",
      "Round",
      "Schema",
      "Second",
      "SetGeometry",
      "Simplify",
      "Sin",
      "Slice",
      "Sort",
      "Splice",
      "Split",
      "Sqrt",
      "StandardizeFilename",
      "StandardizeGuid",
      "Stdev",
      "SubtypeCode",
      "SubtypeName",
      "Subtypes",
      "Sum",
      "SymmetricDifference",
      "Tan",
      "Text",
      "Time",
      "TimeZone",
      "TimeZoneOffset",
      "Timestamp",
      "ToCharCode",
      "ToCodePoint",
      "ToHex",
      "ToLocal",
      "ToUTC",
      "Today",
      "Top|0",
      "Touches",
      "TrackAccelerationAt",
      "TrackAccelerationWindow",
      "TrackCurrentAcceleration",
      "TrackCurrentDistance",
      "TrackCurrentSpeed",
      "TrackCurrentTime",
      "TrackDistanceAt",
      "TrackDistanceWindow",
      "TrackDuration",
      "TrackFieldWindow",
      "TrackGeometryWindow",
      "TrackIndex",
      "TrackSpeedAt",
      "TrackSpeedWindow",
      "TrackStartTime",
      "TrackWindow",
      "Trim",
      "TypeOf",
      "Union",
      "Upper",
      "UrlEncode",
      "Variance",
      "Week",
      "Weekday",
      "When|0",
      "Within",
      "Year|0"
    ]
  }, a = [
    "aggregatedFeatures",
    "analytic",
    "config",
    "datapoint",
    "datastore",
    "editcontext",
    "feature",
    "featureSet",
    "feedfeature",
    "fencefeature",
    "fencenotificationtype",
    "graph",
    "join",
    "layer",
    "locationupdate",
    "map",
    "measure",
    "measure",
    "originalFeature",
    "record",
    "reference",
    "rowindex",
    "sourcedatastore",
    "sourcefeature",
    "sourcelayer",
    "target",
    "targetdatastore",
    "targetfeature",
    "targetlayer",
    "userInput",
    "value",
    "variables",
    "view"
  ], i = {
    className: "symbol",
    begin: "\\$" + e.either(...a)
  }, o = {
    className: "number",
    variants: [
      { begin: "\\b(0[bB][01]+)" },
      { begin: "\\b(0[oO][0-7]+)" },
      { begin: t.C_NUMBER_RE }
    ],
    relevance: 0
  }, s = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: n,
    contains: []
    // defined later
  }, l = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [
      t.BACKSLASH_ESCAPE,
      s
    ]
  };
  s.contains = [
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    l,
    o,
    t.REGEXP_MODE
  ];
  const u = s.contains.concat([
    t.C_BLOCK_COMMENT_MODE,
    t.C_LINE_COMMENT_MODE
  ]);
  return {
    name: "ArcGIS Arcade",
    case_insensitive: !0,
    keywords: n,
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      l,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      i,
      o,
      {
        // object attr container
        begin: /[{,]\s*/,
        relevance: 0,
        contains: [
          {
            begin: r + "\\s*:",
            returnBegin: !0,
            relevance: 0,
            contains: [
              {
                className: "attr",
                begin: r,
                relevance: 0
              }
            ]
          }
        ]
      },
      {
        // "value" container
        begin: "(" + t.RE_STARTERS_RE + "|\\b(return)\\b)\\s*",
        keywords: "return",
        contains: [
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE,
          t.REGEXP_MODE,
          {
            className: "function",
            begin: "(\\(.*?\\)|" + r + ")\\s*=>",
            returnBegin: !0,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  { begin: r },
                  { begin: /\(\s*\)/ },
                  {
                    begin: /\(/,
                    end: /\)/,
                    excludeBegin: !0,
                    excludeEnd: !0,
                    keywords: n,
                    contains: u
                  }
                ]
              }
            ]
          }
        ],
        relevance: 0
      },
      {
        beginKeywords: "function",
        end: /\{/,
        excludeEnd: !0,
        contains: [
          t.inherit(t.TITLE_MODE, {
            className: "title.function",
            begin: r
          }),
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            excludeBegin: !0,
            excludeEnd: !0,
            contains: u
          }
        ],
        illegal: /\[|%/
      },
      { begin: /\$[(.]/ }
    ],
    illegal: /#(?!!)/
  };
}
const dne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DQ
}, Symbol.toStringTag, { value: "Module" }));
function MQ(t) {
  const e = t.regex, r = t.COMMENT("//", "$", { contains: [{ begin: /\\\n/ }] }), n = "decltype\\(auto\\)", a = "[a-zA-Z_]\\w*::", o = "(?!struct)(" + n + "|" + e.optional(a) + "[a-zA-Z_]\\w*" + e.optional("<[^<>]+>") + ")", s = {
    className: "type",
    begin: "\\b[a-z\\d_]*_t\\b"
  }, u = {
    className: "string",
    variants: [
      {
        begin: '(u8?|U|L)?"',
        end: '"',
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: "(u8?|U|L)?'(" + "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)" + "|.)",
        end: "'",
        illegal: "."
      },
      t.END_SAME_AS_BEGIN({
        begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
        end: /\)([^()\\ ]{0,16})"/
      })
    ]
  }, c = {
    className: "number",
    variants: [
      // Floating-point literal.
      {
        begin: "[+-]?(?:(?:[0-9](?:'?[0-9])*\\.(?:[0-9](?:'?[0-9])*)?|\\.[0-9](?:'?[0-9])*)(?:[Ee][+-]?[0-9](?:'?[0-9])*)?|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*|0[Xx](?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?|\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)[Pp][+-]?[0-9](?:'?[0-9])*)(?:[Ff](?:16|32|64|128)?|(BF|bf)16|[Ll]|)"
      },
      // Integer literal.
      {
        begin: "[+-]?\\b(?:0[Bb][01](?:'?[01])*|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*|0(?:'?[0-7])*|[1-9](?:'?[0-9])*)(?:[Uu](?:LL?|ll?)|[Uu][Zz]?|(?:LL?|ll?)[Uu]?|[Zz][Uu]|)"
        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the
        // literal highlight actually makes it stand out more.
      }
    ],
    relevance: 0
  }, d = {
    className: "meta",
    begin: /#\s*[a-z]+\b/,
    end: /$/,
    keywords: { keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include" },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      t.inherit(u, { className: "string" }),
      {
        className: "string",
        begin: /<.*?>/
      },
      r,
      t.C_BLOCK_COMMENT_MODE
    ]
  }, p = {
    className: "title",
    begin: e.optional(a) + t.IDENT_RE,
    relevance: 0
  }, f = e.optional(a) + t.IDENT_RE + "\\s*\\(", h = [
    "alignas",
    "alignof",
    "and",
    "and_eq",
    "asm",
    "atomic_cancel",
    "atomic_commit",
    "atomic_noexcept",
    "auto",
    "bitand",
    "bitor",
    "break",
    "case",
    "catch",
    "class",
    "co_await",
    "co_return",
    "co_yield",
    "compl",
    "concept",
    "const_cast|10",
    "consteval",
    "constexpr",
    "constinit",
    "continue",
    "decltype",
    "default",
    "delete",
    "do",
    "dynamic_cast|10",
    "else",
    "enum",
    "explicit",
    "export",
    "extern",
    "false",
    "final",
    "for",
    "friend",
    "goto",
    "if",
    "import",
    "inline",
    "module",
    "mutable",
    "namespace",
    "new",
    "noexcept",
    "not",
    "not_eq",
    "nullptr",
    "operator",
    "or",
    "or_eq",
    "override",
    "private",
    "protected",
    "public",
    "reflexpr",
    "register",
    "reinterpret_cast|10",
    "requires",
    "return",
    "sizeof",
    "static_assert",
    "static_cast|10",
    "struct",
    "switch",
    "synchronized",
    "template",
    "this",
    "thread_local",
    "throw",
    "transaction_safe",
    "transaction_safe_dynamic",
    "true",
    "try",
    "typedef",
    "typeid",
    "typename",
    "union",
    "using",
    "virtual",
    "volatile",
    "while",
    "xor",
    "xor_eq"
  ], g = [
    "bool",
    "char",
    "char16_t",
    "char32_t",
    "char8_t",
    "double",
    "float",
    "int",
    "long",
    "short",
    "void",
    "wchar_t",
    "unsigned",
    "signed",
    "const",
    "static"
  ], v = [
    "any",
    "auto_ptr",
    "barrier",
    "binary_semaphore",
    "bitset",
    "complex",
    "condition_variable",
    "condition_variable_any",
    "counting_semaphore",
    "deque",
    "false_type",
    "flat_map",
    "flat_set",
    "future",
    "imaginary",
    "initializer_list",
    "istringstream",
    "jthread",
    "latch",
    "lock_guard",
    "multimap",
    "multiset",
    "mutex",
    "optional",
    "ostringstream",
    "packaged_task",
    "pair",
    "promise",
    "priority_queue",
    "queue",
    "recursive_mutex",
    "recursive_timed_mutex",
    "scoped_lock",
    "set",
    "shared_future",
    "shared_lock",
    "shared_mutex",
    "shared_timed_mutex",
    "shared_ptr",
    "stack",
    "string_view",
    "stringstream",
    "timed_mutex",
    "thread",
    "true_type",
    "tuple",
    "unique_lock",
    "unique_ptr",
    "unordered_map",
    "unordered_multimap",
    "unordered_multiset",
    "unordered_set",
    "variant",
    "vector",
    "weak_ptr",
    "wstring",
    "wstring_view"
  ], m = [
    "abort",
    "abs",
    "acos",
    "apply",
    "as_const",
    "asin",
    "atan",
    "atan2",
    "calloc",
    "ceil",
    "cerr",
    "cin",
    "clog",
    "cos",
    "cosh",
    "cout",
    "declval",
    "endl",
    "exchange",
    "exit",
    "exp",
    "fabs",
    "floor",
    "fmod",
    "forward",
    "fprintf",
    "fputs",
    "free",
    "frexp",
    "fscanf",
    "future",
    "invoke",
    "isalnum",
    "isalpha",
    "iscntrl",
    "isdigit",
    "isgraph",
    "islower",
    "isprint",
    "ispunct",
    "isspace",
    "isupper",
    "isxdigit",
    "labs",
    "launder",
    "ldexp",
    "log",
    "log10",
    "make_pair",
    "make_shared",
    "make_shared_for_overwrite",
    "make_tuple",
    "make_unique",
    "malloc",
    "memchr",
    "memcmp",
    "memcpy",
    "memset",
    "modf",
    "move",
    "pow",
    "printf",
    "putchar",
    "puts",
    "realloc",
    "scanf",
    "sin",
    "sinh",
    "snprintf",
    "sprintf",
    "sqrt",
    "sscanf",
    "std",
    "stderr",
    "stdin",
    "stdout",
    "strcat",
    "strchr",
    "strcmp",
    "strcpy",
    "strcspn",
    "strlen",
    "strncat",
    "strncmp",
    "strncpy",
    "strpbrk",
    "strrchr",
    "strspn",
    "strstr",
    "swap",
    "tan",
    "tanh",
    "terminate",
    "to_underlying",
    "tolower",
    "toupper",
    "vfprintf",
    "visit",
    "vprintf",
    "vsprintf"
  ], b = {
    type: g,
    keyword: h,
    literal: [
      "NULL",
      "false",
      "nullopt",
      "nullptr",
      "true"
    ],
    built_in: ["_Pragma"],
    _type_hints: v
  }, S = {
    className: "function.dispatch",
    relevance: 0,
    keywords: {
      // Only for relevance, not highlighting.
      _hint: m
    },
    begin: e.concat(
      /\b/,
      /(?!decltype)/,
      /(?!if)/,
      /(?!for)/,
      /(?!switch)/,
      /(?!while)/,
      t.IDENT_RE,
      e.lookahead(/(<[^<>]+>|)\s*\(/)
    )
  }, E = [
    S,
    d,
    s,
    r,
    t.C_BLOCK_COMMENT_MODE,
    c,
    u
  ], T = {
    // This mode covers expression context where we can't expect a function
    // definition and shouldn't highlight anything that looks like one:
    // `return some()`, `else if()`, `(x*sum(1, 2))`
    variants: [
      {
        begin: /=/,
        end: /;/
      },
      {
        begin: /\(/,
        end: /\)/
      },
      {
        beginKeywords: "new throw return else",
        end: /;/
      }
    ],
    keywords: b,
    contains: E.concat([
      {
        begin: /\(/,
        end: /\)/,
        keywords: b,
        contains: E.concat(["self"]),
        relevance: 0
      }
    ]),
    relevance: 0
  }, x = {
    className: "function",
    begin: "(" + o + "[\\*&\\s]+)+" + f,
    returnBegin: !0,
    end: /[{;=]/,
    excludeEnd: !0,
    keywords: b,
    illegal: /[^\w\s\*&:<>.]/,
    contains: [
      {
        // to prevent it from being confused as the function title
        begin: n,
        keywords: b,
        relevance: 0
      },
      {
        begin: f,
        returnBegin: !0,
        contains: [p],
        relevance: 0
      },
      // needed because we do not have look-behind on the below rule
      // to prevent it from grabbing the final : in a :: pair
      {
        begin: /::/,
        relevance: 0
      },
      // initializers
      {
        begin: /:/,
        endsWithParent: !0,
        contains: [
          u,
          c
        ]
      },
      // allow for multiple declarations, e.g.:
      // extern void f(int), g(char);
      {
        relevance: 0,
        match: /,/
      },
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        keywords: b,
        relevance: 0,
        contains: [
          r,
          t.C_BLOCK_COMMENT_MODE,
          u,
          c,
          s,
          // Count matching parentheses.
          {
            begin: /\(/,
            end: /\)/,
            keywords: b,
            relevance: 0,
            contains: [
              "self",
              r,
              t.C_BLOCK_COMMENT_MODE,
              u,
              c,
              s
            ]
          }
        ]
      },
      s,
      r,
      t.C_BLOCK_COMMENT_MODE,
      d
    ]
  };
  return {
    name: "C++",
    aliases: [
      "cc",
      "c++",
      "h++",
      "hpp",
      "hh",
      "hxx",
      "cxx"
    ],
    keywords: b,
    illegal: "</",
    classNameAliases: { "function.dispatch": "built_in" },
    contains: [].concat(
      T,
      x,
      S,
      E,
      [
        d,
        {
          // containers: ie, `vector <int> rooms (9);`
          begin: "\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\s*<(?!<)",
          end: ">",
          keywords: b,
          contains: [
            "self",
            s
          ]
        },
        {
          begin: t.IDENT_RE + "::",
          keywords: b
        },
        {
          match: [
            // extra complexity to deal with `enum class` and `enum struct`
            /\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,
            /\s+/,
            /\w+/
          ],
          className: {
            1: "keyword",
            3: "title.class"
          }
        }
      ]
    )
  };
}
function IQ(t) {
  const e = {
    type: [
      "boolean",
      "byte",
      "word",
      "String"
    ],
    built_in: [
      "KeyboardController",
      "MouseController",
      "SoftwareSerial",
      "EthernetServer",
      "EthernetClient",
      "LiquidCrystal",
      "RobotControl",
      "GSMVoiceCall",
      "EthernetUDP",
      "EsploraTFT",
      "HttpClient",
      "RobotMotor",
      "WiFiClient",
      "GSMScanner",
      "FileSystem",
      "Scheduler",
      "GSMServer",
      "YunClient",
      "YunServer",
      "IPAddress",
      "GSMClient",
      "GSMModem",
      "Keyboard",
      "Ethernet",
      "Console",
      "GSMBand",
      "Esplora",
      "Stepper",
      "Process",
      "WiFiUDP",
      "GSM_SMS",
      "Mailbox",
      "USBHost",
      "Firmata",
      "PImage",
      "Client",
      "Server",
      "GSMPIN",
      "FileIO",
      "Bridge",
      "Serial",
      "EEPROM",
      "Stream",
      "Mouse",
      "Audio",
      "Servo",
      "File",
      "Task",
      "GPRS",
      "WiFi",
      "Wire",
      "TFT",
      "GSM",
      "SPI",
      "SD"
    ],
    _hints: [
      "setup",
      "loop",
      "runShellCommandAsynchronously",
      "analogWriteResolution",
      "retrieveCallingNumber",
      "printFirmwareVersion",
      "analogReadResolution",
      "sendDigitalPortPair",
      "noListenOnLocalhost",
      "readJoystickButton",
      "setFirmwareVersion",
      "readJoystickSwitch",
      "scrollDisplayRight",
      "getVoiceCallStatus",
      "scrollDisplayLeft",
      "writeMicroseconds",
      "delayMicroseconds",
      "beginTransmission",
      "getSignalStrength",
      "runAsynchronously",
      "getAsynchronously",
      "listenOnLocalhost",
      "getCurrentCarrier",
      "readAccelerometer",
      "messageAvailable",
      "sendDigitalPorts",
      "lineFollowConfig",
      "countryNameWrite",
      "runShellCommand",
      "readStringUntil",
      "rewindDirectory",
      "readTemperature",
      "setClockDivider",
      "readLightSensor",
      "endTransmission",
      "analogReference",
      "detachInterrupt",
      "countryNameRead",
      "attachInterrupt",
      "encryptionType",
      "readBytesUntil",
      "robotNameWrite",
      "readMicrophone",
      "robotNameRead",
      "cityNameWrite",
      "userNameWrite",
      "readJoystickY",
      "readJoystickX",
      "mouseReleased",
      "openNextFile",
      "scanNetworks",
      "noInterrupts",
      "digitalWrite",
      "beginSpeaker",
      "mousePressed",
      "isActionDone",
      "mouseDragged",
      "displayLogos",
      "noAutoscroll",
      "addParameter",
      "remoteNumber",
      "getModifiers",
      "keyboardRead",
      "userNameRead",
      "waitContinue",
      "processInput",
      "parseCommand",
      "printVersion",
      "readNetworks",
      "writeMessage",
      "blinkVersion",
      "cityNameRead",
      "readMessage",
      "setDataMode",
      "parsePacket",
      "isListening",
      "setBitOrder",
      "beginPacket",
      "isDirectory",
      "motorsWrite",
      "drawCompass",
      "digitalRead",
      "clearScreen",
      "serialEvent",
      "rightToLeft",
      "setTextSize",
      "leftToRight",
      "requestFrom",
      "keyReleased",
      "compassRead",
      "analogWrite",
      "interrupts",
      "WiFiServer",
      "disconnect",
      "playMelody",
      "parseFloat",
      "autoscroll",
      "getPINUsed",
      "setPINUsed",
      "setTimeout",
      "sendAnalog",
      "readSlider",
      "analogRead",
      "beginWrite",
      "createChar",
      "motorsStop",
      "keyPressed",
      "tempoWrite",
      "readButton",
      "subnetMask",
      "debugPrint",
      "macAddress",
      "writeGreen",
      "randomSeed",
      "attachGPRS",
      "readString",
      "sendString",
      "remotePort",
      "releaseAll",
      "mouseMoved",
      "background",
      "getXChange",
      "getYChange",
      "answerCall",
      "getResult",
      "voiceCall",
      "endPacket",
      "constrain",
      "getSocket",
      "writeJSON",
      "getButton",
      "available",
      "connected",
      "findUntil",
      "readBytes",
      "exitValue",
      "readGreen",
      "writeBlue",
      "startLoop",
      "IPAddress",
      "isPressed",
      "sendSysex",
      "pauseMode",
      "gatewayIP",
      "setCursor",
      "getOemKey",
      "tuneWrite",
      "noDisplay",
      "loadImage",
      "switchPIN",
      "onRequest",
      "onReceive",
      "changePIN",
      "playFile",
      "noBuffer",
      "parseInt",
      "overflow",
      "checkPIN",
      "knobRead",
      "beginTFT",
      "bitClear",
      "updateIR",
      "bitWrite",
      "position",
      "writeRGB",
      "highByte",
      "writeRed",
      "setSpeed",
      "readBlue",
      "noStroke",
      "remoteIP",
      "transfer",
      "shutdown",
      "hangCall",
      "beginSMS",
      "endWrite",
      "attached",
      "maintain",
      "noCursor",
      "checkReg",
      "checkPUK",
      "shiftOut",
      "isValid",
      "shiftIn",
      "pulseIn",
      "connect",
      "println",
      "localIP",
      "pinMode",
      "getIMEI",
      "display",
      "noBlink",
      "process",
      "getBand",
      "running",
      "beginSD",
      "drawBMP",
      "lowByte",
      "setBand",
      "release",
      "bitRead",
      "prepare",
      "pointTo",
      "readRed",
      "setMode",
      "noFill",
      "remove",
      "listen",
      "stroke",
      "detach",
      "attach",
      "noTone",
      "exists",
      "buffer",
      "height",
      "bitSet",
      "circle",
      "config",
      "cursor",
      "random",
      "IRread",
      "setDNS",
      "endSMS",
      "getKey",
      "micros",
      "millis",
      "begin",
      "print",
      "write",
      "ready",
      "flush",
      "width",
      "isPIN",
      "blink",
      "clear",
      "press",
      "mkdir",
      "rmdir",
      "close",
      "point",
      "yield",
      "image",
      "BSSID",
      "click",
      "delay",
      "read",
      "text",
      "move",
      "peek",
      "beep",
      "rect",
      "line",
      "open",
      "seek",
      "fill",
      "size",
      "turn",
      "stop",
      "home",
      "find",
      "step",
      "tone",
      "sqrt",
      "RSSI",
      "SSID",
      "end",
      "bit",
      "tan",
      "cos",
      "sin",
      "pow",
      "map",
      "abs",
      "max",
      "min",
      "get",
      "run",
      "put"
    ],
    literal: [
      "DIGITAL_MESSAGE",
      "FIRMATA_STRING",
      "ANALOG_MESSAGE",
      "REPORT_DIGITAL",
      "REPORT_ANALOG",
      "INPUT_PULLUP",
      "SET_PIN_MODE",
      "INTERNAL2V56",
      "SYSTEM_RESET",
      "LED_BUILTIN",
      "INTERNAL1V1",
      "SYSEX_START",
      "INTERNAL",
      "EXTERNAL",
      "DEFAULT",
      "OUTPUT",
      "INPUT",
      "HIGH",
      "LOW"
    ]
  }, r = MQ(t), n = (
    /** @type {Record<string,any>} */
    r.keywords
  );
  return n.type = [
    ...n.type,
    ...e.type
  ], n.literal = [
    ...n.literal,
    ...e.literal
  ], n.built_in = [
    ...n.built_in,
    ...e.built_in
  ], n._hints = e._hints, r.name = "Arduino", r.aliases = ["ino"], r.supersetOf = "cpp", r;
}
const pne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: IQ
}, Symbol.toStringTag, { value: "Module" }));
function NQ(t) {
  const e = { variants: [
    t.COMMENT("^[ \\t]*(?=#)", "$", {
      relevance: 0,
      excludeBegin: !0
    }),
    t.COMMENT("[;@]", "$", { relevance: 0 }),
    t.C_LINE_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE
  ] };
  return {
    name: "ARM Assembly",
    case_insensitive: !0,
    aliases: ["arm"],
    keywords: {
      $pattern: "\\.?" + t.IDENT_RE,
      meta: (
        // GNU preprocs
        ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND "
      ),
      built_in: "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 w0 w1 w2 w3 w4 w5 w6 w7 w8 w9 w10 w11 w12 w13 w14 w15 w16 w17 w18 w19 w20 w21 w22 w23 w24 w25 w26 w27 w28 w29 w30 x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14 x15 x16 x17 x18 x19 x20 x21 x22 x23 x24 x25 x26 x27 x28 x29 x30 pc lr sp ip sl sb fp a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 {PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @"
    },
    contains: [
      {
        className: "keyword",
        begin: "\\b(adc|(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|wfe|wfi|yield)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?[sptrx]?(?=\\s)"
        // followed by space
      },
      e,
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "'",
        end: "[^\\\\]'",
        relevance: 0
      },
      {
        className: "title",
        begin: "\\|",
        end: "\\|",
        illegal: "\\n",
        relevance: 0
      },
      {
        className: "number",
        variants: [
          {
            // hex
            begin: "[#$=]?0x[0-9a-f]+"
          },
          {
            // bin
            begin: "[#$=]?0b[01]+"
          },
          {
            // literal
            begin: "[#$=]\\d+"
          },
          {
            // bare number
            begin: "\\b\\d+"
          }
        ],
        relevance: 0
      },
      {
        className: "symbol",
        variants: [
          {
            // GNU ARM syntax
            begin: "^[ \\t]*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"
          },
          {
            // ARM syntax
            begin: "^[a-z_\\.\\$][a-z0-9_\\.\\$]+"
          },
          {
            // label reference
            begin: "[=#]\\w+"
          }
        ],
        relevance: 0
      }
    ]
  };
}
const fne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: NQ
}, Symbol.toStringTag, { value: "Module" }));
function RQ(t) {
  const e = t.regex, r = {
    begin: "^'{3,}[ \\t]*$",
    relevance: 10
  }, n = [
    // escaped constrained formatting marks (i.e., \* \_ or \`)
    { begin: /\\[*_`]/ },
    // escaped unconstrained formatting marks (i.e., \\** \\__ or \\``)
    // must ignore until the next formatting marks
    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...
    { begin: /\\\\\*{2}[^\n]*?\*{2}/ },
    { begin: /\\\\_{2}[^\n]*_{2}/ },
    { begin: /\\\\`{2}[^\n]*`{2}/ },
    // guard: constrained formatting mark may not be preceded by ":", ";" or
    // "}". match these so the constrained rule doesn't see them
    { begin: /[:;}][*_`](?![*_`])/ }
  ], a = [
    // inline unconstrained strong (single line)
    {
      className: "strong",
      begin: /\*{2}([^\n]+?)\*{2}/
    },
    // inline unconstrained strong (multi-line)
    {
      className: "strong",
      begin: e.concat(
        /\*\*/,
        /((\*(?!\*)|\\[^\n]|[^*\n\\])+\n)+/,
        /(\*(?!\*)|\\[^\n]|[^*\n\\])*/,
        /\*\*/
      ),
      relevance: 0
    },
    // inline constrained strong (single line)
    {
      className: "strong",
      // must not precede or follow a word character
      begin: /\B\*(\S|\S[^\n]*?\S)\*(?!\w)/
    },
    // inline constrained strong (multi-line)
    {
      className: "strong",
      // must not precede or follow a word character
      begin: /\*[^\s]([^\n]+\n)+([^\n]+)\*/
    }
  ], i = [
    // inline unconstrained emphasis (single line)
    {
      className: "emphasis",
      begin: /_{2}([^\n]+?)_{2}/
    },
    // inline unconstrained emphasis (multi-line)
    {
      className: "emphasis",
      begin: e.concat(
        /__/,
        /((_(?!_)|\\[^\n]|[^_\n\\])+\n)+/,
        /(_(?!_)|\\[^\n]|[^_\n\\])*/,
        /__/
      ),
      relevance: 0
    },
    // inline constrained emphasis (single line)
    {
      className: "emphasis",
      // must not precede or follow a word character
      begin: /\b_(\S|\S[^\n]*?\S)_(?!\w)/
    },
    // inline constrained emphasis (multi-line)
    {
      className: "emphasis",
      // must not precede or follow a word character
      begin: /_[^\s]([^\n]+\n)+([^\n]+)_/
    },
    // inline constrained emphasis using single quote (legacy)
    {
      className: "emphasis",
      // must not follow a word character or be followed by a single quote or space
      begin: "\\B'(?!['\\s])",
      end: "(\\n{2}|')",
      // allow escaped single quote followed by word char
      contains: [
        {
          begin: "\\\\'\\w",
          relevance: 0
        }
      ],
      relevance: 0
    }
  ], o = {
    className: "symbol",
    begin: "^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+",
    relevance: 10
  }, s = {
    className: "bullet",
    begin: "^(\\*+|-+|\\.+|[^\\n]+?::)\\s+"
  };
  return {
    name: "AsciiDoc",
    aliases: ["adoc"],
    contains: [
      // block comment
      t.COMMENT(
        "^/{4,}\\n",
        "\\n/{4,}$",
        // can also be done as...
        // '^/{4,}$',
        // '^/{4,}$',
        { relevance: 10 }
      ),
      // line comment
      t.COMMENT(
        "^//",
        "$",
        { relevance: 0 }
      ),
      // title
      {
        className: "title",
        begin: "^\\.\\w.*$"
      },
      // example, admonition & sidebar blocks
      {
        begin: "^[=\\*]{4,}\\n",
        end: "\\n^[=\\*]{4,}$",
        relevance: 10
      },
      // headings
      {
        className: "section",
        relevance: 10,
        variants: [
          { begin: "^(={1,6})[ 	].+?([ 	]\\1)?$" },
          { begin: "^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$" }
        ]
      },
      // document attributes
      {
        className: "meta",
        begin: "^:.+?:",
        end: "\\s",
        excludeEnd: !0,
        relevance: 10
      },
      // block attributes
      {
        className: "meta",
        begin: "^\\[.+?\\]$",
        relevance: 0
      },
      // quoteblocks
      {
        className: "quote",
        begin: "^_{4,}\\n",
        end: "\\n_{4,}$",
        relevance: 10
      },
      // listing and literal blocks
      {
        className: "code",
        begin: "^[\\-\\.]{4,}\\n",
        end: "\\n[\\-\\.]{4,}$",
        relevance: 10
      },
      // passthrough blocks
      {
        begin: "^\\+{4,}\\n",
        end: "\\n\\+{4,}$",
        contains: [
          {
            begin: "<",
            end: ">",
            subLanguage: "xml",
            relevance: 0
          }
        ],
        relevance: 10
      },
      s,
      o,
      ...n,
      ...a,
      ...i,
      // inline smart quotes
      {
        className: "string",
        variants: [
          { begin: "``.+?''" },
          { begin: "`.+?'" }
        ]
      },
      // inline unconstrained emphasis
      {
        className: "code",
        begin: /`{2}/,
        end: /(\n{2}|`{2})/
      },
      // inline code snippets (TODO should get same treatment as strong and emphasis)
      {
        className: "code",
        begin: "(`.+?`|\\+.+?\\+)",
        relevance: 0
      },
      // indented literal block
      {
        className: "code",
        begin: "^[ \\t]",
        end: "$",
        relevance: 0
      },
      r,
      // images and links
      {
        begin: "(link:)?(http|https|ftp|file|irc|image:?):\\S+?\\[[^[]*?\\]",
        returnBegin: !0,
        contains: [
          {
            begin: "(link|image:?):",
            relevance: 0
          },
          {
            className: "link",
            begin: "\\w",
            end: "[^\\[]+",
            relevance: 0
          },
          {
            className: "string",
            begin: "\\[",
            end: "\\]",
            excludeBegin: !0,
            excludeEnd: !0,
            relevance: 0
          }
        ],
        relevance: 10
      }
    ]
  };
}
const hne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: RQ
}, Symbol.toStringTag, { value: "Module" }));
function OQ(t) {
  const e = t.regex, r = [
    "false",
    "synchronized",
    "int",
    "abstract",
    "float",
    "private",
    "char",
    "boolean",
    "static",
    "null",
    "if",
    "const",
    "for",
    "true",
    "while",
    "long",
    "throw",
    "strictfp",
    "finally",
    "protected",
    "import",
    "native",
    "final",
    "return",
    "void",
    "enum",
    "else",
    "extends",
    "implements",
    "break",
    "transient",
    "new",
    "catch",
    "instanceof",
    "byte",
    "super",
    "volatile",
    "case",
    "assert",
    "short",
    "package",
    "default",
    "double",
    "public",
    "try",
    "this",
    "switch",
    "continue",
    "throws",
    "privileged",
    "aspectOf",
    "adviceexecution",
    "proceed",
    "cflowbelow",
    "cflow",
    "initialization",
    "preinitialization",
    "staticinitialization",
    "withincode",
    "target",
    "within",
    "execution",
    "getWithinTypeName",
    "handler",
    "thisJoinPoint",
    "thisJoinPointStaticPart",
    "thisEnclosingJoinPointStaticPart",
    "declare",
    "parents",
    "warning",
    "error",
    "soft",
    "precedence",
    "thisAspectInstance"
  ], n = [
    "get",
    "set",
    "args",
    "call"
  ];
  return {
    name: "AspectJ",
    keywords: r,
    illegal: /<\/|#/,
    contains: [
      t.COMMENT(
        /\/\*\*/,
        /\*\//,
        {
          relevance: 0,
          contains: [
            {
              // eat up @'s in emails to prevent them to be recognized as doctags
              begin: /\w+@/,
              relevance: 0
            },
            {
              className: "doctag",
              begin: /@[A-Za-z]+/
            }
          ]
        }
      ),
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        className: "class",
        beginKeywords: "aspect",
        end: /[{;=]/,
        excludeEnd: !0,
        illegal: /[:;"\[\]]/,
        contains: [
          { beginKeywords: "extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton" },
          t.UNDERSCORE_TITLE_MODE,
          {
            begin: /\([^\)]*/,
            end: /[)]+/,
            keywords: r.concat(n),
            excludeEnd: !1
          }
        ]
      },
      {
        className: "class",
        beginKeywords: "class interface",
        end: /[{;=]/,
        excludeEnd: !0,
        relevance: 0,
        keywords: "class interface",
        illegal: /[:"\[\]]/,
        contains: [
          { beginKeywords: "extends implements" },
          t.UNDERSCORE_TITLE_MODE
        ]
      },
      {
        // AspectJ Constructs
        beginKeywords: "pointcut after before around throwing returning",
        end: /[)]/,
        excludeEnd: !1,
        illegal: /["\[\]]/,
        contains: [
          {
            begin: e.concat(t.UNDERSCORE_IDENT_RE, /\s*\(/),
            returnBegin: !0,
            contains: [t.UNDERSCORE_TITLE_MODE]
          }
        ]
      },
      {
        begin: /[:]/,
        returnBegin: !0,
        end: /[{;]/,
        relevance: 0,
        excludeEnd: !1,
        keywords: r,
        illegal: /["\[\]]/,
        contains: [
          {
            begin: e.concat(t.UNDERSCORE_IDENT_RE, /\s*\(/),
            keywords: r.concat(n),
            relevance: 0
          },
          t.QUOTE_STRING_MODE
        ]
      },
      {
        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition
        beginKeywords: "new throw",
        relevance: 0
      },
      {
        // the function class is a bit different for AspectJ compared to the Java language
        className: "function",
        begin: /\w+ +\w+(\.\w+)?\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,
        returnBegin: !0,
        end: /[{;=]/,
        keywords: r,
        excludeEnd: !0,
        contains: [
          {
            begin: e.concat(t.UNDERSCORE_IDENT_RE, /\s*\(/),
            returnBegin: !0,
            relevance: 0,
            contains: [t.UNDERSCORE_TITLE_MODE]
          },
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            relevance: 0,
            keywords: r,
            contains: [
              t.APOS_STRING_MODE,
              t.QUOTE_STRING_MODE,
              t.C_NUMBER_MODE,
              t.C_BLOCK_COMMENT_MODE
            ]
          },
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      t.C_NUMBER_MODE,
      {
        // annotation is also used in this language
        className: "meta",
        begin: /@[A-Za-z]+/
      }
    ]
  };
}
const gne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: OQ
}, Symbol.toStringTag, { value: "Module" }));
function LQ(t) {
  const e = { begin: "`[\\s\\S]" };
  return {
    name: "AutoHotkey",
    case_insensitive: !0,
    aliases: ["ahk"],
    keywords: {
      keyword: "Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group",
      literal: "true false NOT AND OR",
      built_in: "ComSpec Clipboard ClipboardAll ErrorLevel"
    },
    contains: [
      e,
      t.inherit(t.QUOTE_STRING_MODE, { contains: [e] }),
      t.COMMENT(";", "$", { relevance: 0 }),
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "number",
        begin: t.NUMBER_RE,
        relevance: 0
      },
      {
        // subst would be the most accurate however fails the point of
        // highlighting. variable is comparably the most accurate that actually
        // has some effect
        className: "variable",
        begin: "%[a-zA-Z0-9#_$@]+%"
      },
      {
        className: "built_in",
        begin: "^\\s*\\w+\\s*(,|%)"
        // I don't really know if this is totally relevant
      },
      {
        // symbol would be most accurate however is highlighted just like
        // built_in and that makes up a lot of AutoHotkey code meaning that it
        // would fail to highlight anything
        className: "title",
        variants: [
          { begin: '^[^\\n";]+::(?!=)' },
          {
            begin: '^[^\\n";]+:(?!=)',
            // zero relevance as it catches a lot of things
            // followed by a single ':' in many languages
            relevance: 0
          }
        ]
      },
      {
        className: "meta",
        begin: "^\\s*#\\w+",
        end: "$",
        relevance: 0
      },
      {
        className: "built_in",
        begin: "A_[a-zA-Z0-9]+"
      },
      {
        // consecutive commas, not for highlighting but just for relevance
        begin: ",\\s*,"
      }
    ]
  };
}
const vne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: LQ
}, Symbol.toStringTag, { value: "Module" }));
function PQ(t) {
  const e = "ByRef Case Const ContinueCase ContinueLoop Dim Do Else ElseIf EndFunc EndIf EndSelect EndSwitch EndWith Enum Exit ExitLoop For Func Global If In Local Next ReDim Return Select Static Step Switch Then To Until Volatile WEnd While With", r = [
    "EndRegion",
    "forcedef",
    "forceref",
    "ignorefunc",
    "include",
    "include-once",
    "NoTrayIcon",
    "OnAutoItStartRegister",
    "pragma",
    "Region",
    "RequireAdmin",
    "Tidy_Off",
    "Tidy_On",
    "Tidy_Parameters"
  ], n = "True False And Null Not Or Default", a = "Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait WinWaitActive WinWaitClose WinWaitNotActive", i = { variants: [
    t.COMMENT(";", "$", { relevance: 0 }),
    t.COMMENT("#cs", "#ce"),
    t.COMMENT("#comments-start", "#comments-end")
  ] }, o = { begin: "\\$[A-z0-9_]+" }, s = {
    className: "string",
    variants: [
      {
        begin: /"/,
        end: /"/,
        contains: [
          {
            begin: /""/,
            relevance: 0
          }
        ]
      },
      {
        begin: /'/,
        end: /'/,
        contains: [
          {
            begin: /''/,
            relevance: 0
          }
        ]
      }
    ]
  }, l = { variants: [
    t.BINARY_NUMBER_MODE,
    t.C_NUMBER_MODE
  ] }, u = {
    className: "meta",
    begin: "#",
    end: "$",
    keywords: { keyword: r },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      {
        beginKeywords: "include",
        keywords: { keyword: "include" },
        end: "$",
        contains: [
          s,
          {
            className: "string",
            variants: [
              {
                begin: "<",
                end: ">"
              },
              {
                begin: /"/,
                end: /"/,
                contains: [
                  {
                    begin: /""/,
                    relevance: 0
                  }
                ]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [
                  {
                    begin: /''/,
                    relevance: 0
                  }
                ]
              }
            ]
          }
        ]
      },
      s,
      i
    ]
  }, c = {
    className: "symbol",
    // begin: '@',
    // end: '$',
    // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',
    // relevance: 5
    begin: "@[A-z0-9_]+"
  }, d = {
    beginKeywords: "Func",
    end: "$",
    illegal: "\\$|\\[|%",
    contains: [
      t.inherit(t.UNDERSCORE_TITLE_MODE, { className: "title.function" }),
      {
        className: "params",
        begin: "\\(",
        end: "\\)",
        contains: [
          o,
          s,
          l
        ]
      }
    ]
  };
  return {
    name: "AutoIt",
    case_insensitive: !0,
    illegal: /\/\*/,
    keywords: {
      keyword: e,
      built_in: a,
      literal: n
    },
    contains: [
      i,
      o,
      s,
      l,
      u,
      c,
      d
    ]
  };
}
const mne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PQ
}, Symbol.toStringTag, { value: "Module" }));
function kQ(t) {
  return {
    name: "AVR Assembly",
    case_insensitive: !0,
    keywords: {
      $pattern: "\\.?" + t.IDENT_RE,
      keyword: (
        /* mnemonic */
        "adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub subi swap tst wdr"
      ),
      built_in: (
        /* general purpose registers */
        "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf"
      ),
      meta: ".byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list .listmac .macro .nolist .org .set"
    },
    contains: [
      t.C_BLOCK_COMMENT_MODE,
      t.COMMENT(
        ";",
        "$",
        { relevance: 0 }
      ),
      t.C_NUMBER_MODE,
      // 0x..., decimal, float
      t.BINARY_NUMBER_MODE,
      // 0b...
      {
        className: "number",
        begin: "\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)"
        // $..., 0o...
      },
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "'",
        end: "[^\\\\]'",
        illegal: "[^\\\\][^']"
      },
      {
        className: "symbol",
        begin: "^[A-Za-z0-9_.$]+:"
      },
      {
        className: "meta",
        begin: "#",
        end: "$"
      },
      {
        // substitution within a macro
        className: "subst",
        begin: "@[0-9]+"
      }
    ]
  };
}
const _ne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kQ
}, Symbol.toStringTag, { value: "Module" }));
function BQ(t) {
  const e = {
    className: "variable",
    variants: [
      { begin: /\$[\w\d#@][\w\d_]*/ },
      { begin: /\$\{(.*?)\}/ }
    ]
  }, r = "BEGIN END if else while do for in break continue delete next nextfile function func exit|10", n = {
    className: "string",
    contains: [t.BACKSLASH_ESCAPE],
    variants: [
      {
        begin: /(u|b)?r?'''/,
        end: /'''/,
        relevance: 10
      },
      {
        begin: /(u|b)?r?"""/,
        end: /"""/,
        relevance: 10
      },
      {
        begin: /(u|r|ur)'/,
        end: /'/,
        relevance: 10
      },
      {
        begin: /(u|r|ur)"/,
        end: /"/,
        relevance: 10
      },
      {
        begin: /(b|br)'/,
        end: /'/
      },
      {
        begin: /(b|br)"/,
        end: /"/
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  };
  return {
    name: "Awk",
    keywords: { keyword: r },
    contains: [
      e,
      n,
      t.REGEXP_MODE,
      t.HASH_COMMENT_MODE,
      t.NUMBER_MODE
    ]
  };
}
const yne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: BQ
}, Symbol.toStringTag, { value: "Module" }));
function FQ(t) {
  const e = t.UNDERSCORE_IDENT_RE, i = {
    keyword: [
      "abstract",
      "as",
      "asc",
      "avg",
      "break",
      "breakpoint",
      "by",
      "byref",
      "case",
      "catch",
      "changecompany",
      "class",
      "client",
      "client",
      "common",
      "const",
      "continue",
      "count",
      "crosscompany",
      "delegate",
      "delete_from",
      "desc",
      "display",
      "div",
      "do",
      "edit",
      "else",
      "eventhandler",
      "exists",
      "extends",
      "final",
      "finally",
      "firstfast",
      "firstonly",
      "firstonly1",
      "firstonly10",
      "firstonly100",
      "firstonly1000",
      "flush",
      "for",
      "forceliterals",
      "forcenestedloop",
      "forceplaceholders",
      "forceselectorder",
      "forupdate",
      "from",
      "generateonly",
      "group",
      "hint",
      "if",
      "implements",
      "in",
      "index",
      "insert_recordset",
      "interface",
      "internal",
      "is",
      "join",
      "like",
      "maxof",
      "minof",
      "mod",
      "namespace",
      "new",
      "next",
      "nofetch",
      "notexists",
      "optimisticlock",
      "order",
      "outer",
      "pessimisticlock",
      "print",
      "private",
      "protected",
      "public",
      "readonly",
      "repeatableread",
      "retry",
      "return",
      "reverse",
      "select",
      "server",
      "setting",
      "static",
      "sum",
      "super",
      "switch",
      "this",
      "throw",
      "try",
      "ttsabort",
      "ttsbegin",
      "ttscommit",
      "unchecked",
      "update_recordset",
      "using",
      "validtimestate",
      "void",
      "where",
      "while"
    ],
    built_in: [
      "anytype",
      "boolean",
      "byte",
      "char",
      "container",
      "date",
      "double",
      "enum",
      "guid",
      "int",
      "int64",
      "long",
      "real",
      "short",
      "str",
      "utcdatetime",
      "var"
    ],
    literal: [
      "default",
      "false",
      "null",
      "true"
    ]
  }, o = {
    variants: [
      { match: [
        /(class|interface)\s+/,
        e,
        /\s+(extends|implements)\s+/,
        e
      ] },
      { match: [
        /class\s+/,
        e
      ] }
    ],
    scope: {
      2: "title.class",
      4: "title.class.inherited"
    },
    keywords: i
  };
  return {
    name: "X++",
    aliases: ["x++"],
    keywords: i,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        className: "meta",
        begin: "#",
        end: "$"
      },
      o
    ]
  };
}
const bne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: FQ
}, Symbol.toStringTag, { value: "Module" }));
function GQ(t) {
  const e = t.regex, r = {}, n = {
    begin: /\$\{/,
    end: /\}/,
    contains: [
      "self",
      {
        begin: /:-/,
        contains: [r]
      }
      // default values
    ]
  };
  Object.assign(r, {
    className: "variable",
    variants: [
      { begin: e.concat(
        /\$[\w\d#@][\w\d_]*/,
        // negative look-ahead tries to avoid matching patterns that are not
        // Perl at all like $ident$, @ident@, etc.
        "(?![\\w\\d])(?![$])"
      ) },
      n
    ]
  });
  const a = {
    className: "subst",
    begin: /\$\(/,
    end: /\)/,
    contains: [t.BACKSLASH_ESCAPE]
  }, i = t.inherit(
    t.COMMENT(),
    {
      match: [
        /(^|\s)/,
        /#.*$/
      ],
      scope: {
        2: "comment"
      }
    }
  ), o = {
    begin: /<<-?\s*(?=\w+)/,
    starts: { contains: [
      t.END_SAME_AS_BEGIN({
        begin: /(\w+)/,
        end: /(\w+)/,
        className: "string"
      })
    ] }
  }, s = {
    className: "string",
    begin: /"/,
    end: /"/,
    contains: [
      t.BACKSLASH_ESCAPE,
      r,
      a
    ]
  };
  a.contains.push(s);
  const l = {
    match: /\\"/
  }, u = {
    className: "string",
    begin: /'/,
    end: /'/
  }, c = {
    match: /\\'/
  }, d = {
    begin: /\$?\(\(/,
    end: /\)\)/,
    contains: [
      {
        begin: /\d+#[0-9a-f]+/,
        className: "number"
      },
      t.NUMBER_MODE,
      r
    ]
  }, p = [
    "fish",
    "bash",
    "zsh",
    "sh",
    "csh",
    "ksh",
    "tcsh",
    "dash",
    "scsh"
  ], f = t.SHEBANG({
    binary: `(${p.join("|")})`,
    relevance: 10
  }), h = {
    className: "function",
    begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
    returnBegin: !0,
    contains: [t.inherit(t.TITLE_MODE, { begin: /\w[\w\d_]*/ })],
    relevance: 0
  }, g = [
    "if",
    "then",
    "else",
    "elif",
    "fi",
    "time",
    "for",
    "while",
    "until",
    "in",
    "do",
    "done",
    "case",
    "esac",
    "coproc",
    "function",
    "select"
  ], v = [
    "true",
    "false"
  ], m = { match: /(\/[a-z._-]+)+/ }, _ = [
    "break",
    "cd",
    "continue",
    "eval",
    "exec",
    "exit",
    "export",
    "getopts",
    "hash",
    "pwd",
    "readonly",
    "return",
    "shift",
    "test",
    "times",
    "trap",
    "umask",
    "unset"
  ], y = [
    "alias",
    "bind",
    "builtin",
    "caller",
    "command",
    "declare",
    "echo",
    "enable",
    "help",
    "let",
    "local",
    "logout",
    "mapfile",
    "printf",
    "read",
    "readarray",
    "source",
    "sudo",
    "type",
    "typeset",
    "ulimit",
    "unalias"
  ], b = [
    "autoload",
    "bg",
    "bindkey",
    "bye",
    "cap",
    "chdir",
    "clone",
    "comparguments",
    "compcall",
    "compctl",
    "compdescribe",
    "compfiles",
    "compgroups",
    "compquote",
    "comptags",
    "comptry",
    "compvalues",
    "dirs",
    "disable",
    "disown",
    "echotc",
    "echoti",
    "emulate",
    "fc",
    "fg",
    "float",
    "functions",
    "getcap",
    "getln",
    "history",
    "integer",
    "jobs",
    "kill",
    "limit",
    "log",
    "noglob",
    "popd",
    "print",
    "pushd",
    "pushln",
    "rehash",
    "sched",
    "setcap",
    "setopt",
    "stat",
    "suspend",
    "ttyctl",
    "unfunction",
    "unhash",
    "unlimit",
    "unsetopt",
    "vared",
    "wait",
    "whence",
    "where",
    "which",
    "zcompile",
    "zformat",
    "zftp",
    "zle",
    "zmodload",
    "zparseopts",
    "zprof",
    "zpty",
    "zregexparse",
    "zsocket",
    "zstyle",
    "ztcp"
  ], S = [
    "chcon",
    "chgrp",
    "chown",
    "chmod",
    "cp",
    "dd",
    "df",
    "dir",
    "dircolors",
    "ln",
    "ls",
    "mkdir",
    "mkfifo",
    "mknod",
    "mktemp",
    "mv",
    "realpath",
    "rm",
    "rmdir",
    "shred",
    "sync",
    "touch",
    "truncate",
    "vdir",
    "b2sum",
    "base32",
    "base64",
    "cat",
    "cksum",
    "comm",
    "csplit",
    "cut",
    "expand",
    "fmt",
    "fold",
    "head",
    "join",
    "md5sum",
    "nl",
    "numfmt",
    "od",
    "paste",
    "ptx",
    "pr",
    "sha1sum",
    "sha224sum",
    "sha256sum",
    "sha384sum",
    "sha512sum",
    "shuf",
    "sort",
    "split",
    "sum",
    "tac",
    "tail",
    "tr",
    "tsort",
    "unexpand",
    "uniq",
    "wc",
    "arch",
    "basename",
    "chroot",
    "date",
    "dirname",
    "du",
    "echo",
    "env",
    "expr",
    "factor",
    // "false", // keyword literal already
    "groups",
    "hostid",
    "id",
    "link",
    "logname",
    "nice",
    "nohup",
    "nproc",
    "pathchk",
    "pinky",
    "printenv",
    "printf",
    "pwd",
    "readlink",
    "runcon",
    "seq",
    "sleep",
    "stat",
    "stdbuf",
    "stty",
    "tee",
    "test",
    "timeout",
    // "true", // keyword literal already
    "tty",
    "uname",
    "unlink",
    "uptime",
    "users",
    "who",
    "whoami",
    "yes"
  ];
  return {
    name: "Bash",
    aliases: [
      "sh",
      "zsh"
    ],
    keywords: {
      $pattern: /\b[a-z][a-z0-9._-]+\b/,
      keyword: g,
      literal: v,
      built_in: [
        ..._,
        ...y,
        // Shell modifiers
        "set",
        "shopt",
        ...b,
        ...S
      ]
    },
    contains: [
      f,
      // to catch known shells and boost relevancy
      t.SHEBANG(),
      // to catch unknown shells but still highlight the shebang
      h,
      d,
      i,
      o,
      m,
      s,
      l,
      u,
      c,
      r
    ]
  };
}
const Sne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: GQ
}, Symbol.toStringTag, { value: "Module" }));
function UQ(t) {
  return {
    name: "BASIC",
    case_insensitive: !0,
    illegal: "^.",
    // Support explicitly typed variables that end with $%! or #.
    keywords: {
      $pattern: "[a-zA-Z][a-zA-Z0-9_$%!#]*",
      keyword: [
        "ABS",
        "ASC",
        "AND",
        "ATN",
        "AUTO|0",
        "BEEP",
        "BLOAD|10",
        "BSAVE|10",
        "CALL",
        "CALLS",
        "CDBL",
        "CHAIN",
        "CHDIR",
        "CHR$|10",
        "CINT",
        "CIRCLE",
        "CLEAR",
        "CLOSE",
        "CLS",
        "COLOR",
        "COM",
        "COMMON",
        "CONT",
        "COS",
        "CSNG",
        "CSRLIN",
        "CVD",
        "CVI",
        "CVS",
        "DATA",
        "DATE$",
        "DEFDBL",
        "DEFINT",
        "DEFSNG",
        "DEFSTR",
        "DEF|0",
        "SEG",
        "USR",
        "DELETE",
        "DIM",
        "DRAW",
        "EDIT",
        "END",
        "ENVIRON",
        "ENVIRON$",
        "EOF",
        "EQV",
        "ERASE",
        "ERDEV",
        "ERDEV$",
        "ERL",
        "ERR",
        "ERROR",
        "EXP",
        "FIELD",
        "FILES",
        "FIX",
        "FOR|0",
        "FRE",
        "GET",
        "GOSUB|10",
        "GOTO",
        "HEX$",
        "IF",
        "THEN",
        "ELSE|0",
        "INKEY$",
        "INP",
        "INPUT",
        "INPUT#",
        "INPUT$",
        "INSTR",
        "IMP",
        "INT",
        "IOCTL",
        "IOCTL$",
        "KEY",
        "ON",
        "OFF",
        "LIST",
        "KILL",
        "LEFT$",
        "LEN",
        "LET",
        "LINE",
        "LLIST",
        "LOAD",
        "LOC",
        "LOCATE",
        "LOF",
        "LOG",
        "LPRINT",
        "USING",
        "LSET",
        "MERGE",
        "MID$",
        "MKDIR",
        "MKD$",
        "MKI$",
        "MKS$",
        "MOD",
        "NAME",
        "NEW",
        "NEXT",
        "NOISE",
        "NOT",
        "OCT$",
        "ON",
        "OR",
        "PEN",
        "PLAY",
        "STRIG",
        "OPEN",
        "OPTION",
        "BASE",
        "OUT",
        "PAINT",
        "PALETTE",
        "PCOPY",
        "PEEK",
        "PMAP",
        "POINT",
        "POKE",
        "POS",
        "PRINT",
        "PRINT]",
        "PSET",
        "PRESET",
        "PUT",
        "RANDOMIZE",
        "READ",
        "REM",
        "RENUM",
        "RESET|0",
        "RESTORE",
        "RESUME",
        "RETURN|0",
        "RIGHT$",
        "RMDIR",
        "RND",
        "RSET",
        "RUN",
        "SAVE",
        "SCREEN",
        "SGN",
        "SHELL",
        "SIN",
        "SOUND",
        "SPACE$",
        "SPC",
        "SQR",
        "STEP",
        "STICK",
        "STOP",
        "STR$",
        "STRING$",
        "SWAP",
        "SYSTEM",
        "TAB",
        "TAN",
        "TIME$",
        "TIMER",
        "TROFF",
        "TRON",
        "TO",
        "USR",
        "VAL",
        "VARPTR",
        "VARPTR$",
        "VIEW",
        "WAIT",
        "WHILE",
        "WEND",
        "WIDTH",
        "WINDOW",
        "WRITE",
        "XOR"
      ]
    },
    contains: [
      {
        // Match strings that start with " and end with " or a line break
        scope: "string",
        begin: /"/,
        end: /"|$/,
        contains: [t.BACKSLASH_ESCAPE]
      },
      t.COMMENT("REM", "$", { relevance: 10 }),
      t.COMMENT("'", "$", { relevance: 0 }),
      {
        // Match line numbers
        className: "symbol",
        begin: "^[0-9]+ ",
        relevance: 10
      },
      {
        // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)
        className: "number",
        begin: "\\b\\d+(\\.\\d+)?([edED]\\d+)?[#!]?",
        relevance: 0
      },
      {
        // Match hexadecimal numbers (&Hxxxx)
        className: "number",
        begin: "(&[hH][0-9a-fA-F]{1,4})"
      },
      {
        // Match octal numbers (&Oxxxxxx)
        className: "number",
        begin: "(&[oO][0-7]{1,6})"
      }
    ]
  };
}
const Ene = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UQ
}, Symbol.toStringTag, { value: "Module" }));
function zQ(t) {
  return {
    name: "Backus–Naur Form",
    contains: [
      // Attribute
      {
        className: "attribute",
        begin: /</,
        end: />/
      },
      // Specific
      {
        begin: /::=/,
        end: /$/,
        contains: [
          {
            begin: /</,
            end: />/
          },
          // Common
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE,
          t.APOS_STRING_MODE,
          t.QUOTE_STRING_MODE
        ]
      }
    ]
  };
}
const Tne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zQ
}, Symbol.toStringTag, { value: "Module" }));
function VQ(t) {
  const e = {
    className: "literal",
    begin: /[+-]+/,
    relevance: 0
  };
  return {
    name: "Brainfuck",
    aliases: ["bf"],
    contains: [
      t.COMMENT(
        /[^\[\]\.,\+\-<> \r\n]/,
        /[\[\]\.,\+\-<> \r\n]/,
        {
          contains: [
            {
              match: /[ ]+[^\[\]\.,\+\-<> \r\n]/,
              relevance: 0
            }
          ],
          returnEnd: !0,
          relevance: 0
        }
      ),
      {
        className: "title",
        begin: "[\\[\\]]",
        relevance: 0
      },
      {
        className: "string",
        begin: "[\\.,]",
        relevance: 0
      },
      {
        // this mode works as the only relevance counter
        // it looks ahead to find the start of a run of literals
        // so only the runs are counted as relevant
        begin: /(?=\+\+|--)/,
        contains: [e]
      },
      e
    ]
  };
}
const xne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: VQ
}, Symbol.toStringTag, { value: "Module" }));
function $Q(t) {
  const e = t.regex, r = t.COMMENT("//", "$", { contains: [{ begin: /\\\n/ }] }), n = "decltype\\(auto\\)", a = "[a-zA-Z_]\\w*::", o = "(" + n + "|" + e.optional(a) + "[a-zA-Z_]\\w*" + e.optional("<[^<>]+>") + ")", s = {
    className: "type",
    variants: [
      { begin: "\\b[a-z\\d_]*_t\\b" },
      { match: /\batomic_[a-z]{3,6}\b/ }
    ]
  }, u = {
    className: "string",
    variants: [
      {
        begin: '(u8?|U|L)?"',
        end: '"',
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: "(u8?|U|L)?'(" + "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)" + "|.)",
        end: "'",
        illegal: "."
      },
      t.END_SAME_AS_BEGIN({
        begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
        end: /\)([^()\\ ]{0,16})"/
      })
    ]
  }, c = {
    className: "number",
    variants: [
      { match: /\b(0b[01']+)/ },
      { match: /(-?)\b([\d']+(\.[\d']*)?|\.[\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)/ },
      { match: /(-?)\b(0[xX][a-fA-F0-9]+(?:'[a-fA-F0-9]+)*(?:\.[a-fA-F0-9]*(?:'[a-fA-F0-9]*)*)?(?:[pP][-+]?[0-9]+)?(l|L)?(u|U)?)/ },
      { match: /(-?)\b\d+(?:'\d+)*(?:\.\d*(?:'\d*)*)?(?:[eE][-+]?\d+)?/ }
    ],
    relevance: 0
  }, d = {
    className: "meta",
    begin: /#\s*[a-z]+\b/,
    end: /$/,
    keywords: { keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef elifdef elifndef include" },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      t.inherit(u, { className: "string" }),
      {
        className: "string",
        begin: /<.*?>/
      },
      r,
      t.C_BLOCK_COMMENT_MODE
    ]
  }, p = {
    className: "title",
    begin: e.optional(a) + t.IDENT_RE,
    relevance: 0
  }, f = e.optional(a) + t.IDENT_RE + "\\s*\\(", v = {
    keyword: [
      "asm",
      "auto",
      "break",
      "case",
      "continue",
      "default",
      "do",
      "else",
      "enum",
      "extern",
      "for",
      "fortran",
      "goto",
      "if",
      "inline",
      "register",
      "restrict",
      "return",
      "sizeof",
      "typeof",
      "typeof_unqual",
      "struct",
      "switch",
      "typedef",
      "union",
      "volatile",
      "while",
      "_Alignas",
      "_Alignof",
      "_Atomic",
      "_Generic",
      "_Noreturn",
      "_Static_assert",
      "_Thread_local",
      // aliases
      "alignas",
      "alignof",
      "noreturn",
      "static_assert",
      "thread_local",
      // not a C keyword but is, for all intents and purposes, treated exactly like one.
      "_Pragma"
    ],
    type: [
      "float",
      "double",
      "signed",
      "unsigned",
      "int",
      "short",
      "long",
      "char",
      "void",
      "_Bool",
      "_BitInt",
      "_Complex",
      "_Imaginary",
      "_Decimal32",
      "_Decimal64",
      "_Decimal96",
      "_Decimal128",
      "_Decimal64x",
      "_Decimal128x",
      "_Float16",
      "_Float32",
      "_Float64",
      "_Float128",
      "_Float32x",
      "_Float64x",
      "_Float128x",
      // modifiers
      "const",
      "static",
      "constexpr",
      // aliases
      "complex",
      "bool",
      "imaginary"
    ],
    literal: "true false NULL",
    // TODO: apply hinting work similar to what was done in cpp.js
    built_in: "std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr"
  }, m = [
    d,
    s,
    r,
    t.C_BLOCK_COMMENT_MODE,
    c,
    u
  ], _ = {
    // This mode covers expression context where we can't expect a function
    // definition and shouldn't highlight anything that looks like one:
    // `return some()`, `else if()`, `(x*sum(1, 2))`
    variants: [
      {
        begin: /=/,
        end: /;/
      },
      {
        begin: /\(/,
        end: /\)/
      },
      {
        beginKeywords: "new throw return else",
        end: /;/
      }
    ],
    keywords: v,
    contains: m.concat([
      {
        begin: /\(/,
        end: /\)/,
        keywords: v,
        contains: m.concat(["self"]),
        relevance: 0
      }
    ]),
    relevance: 0
  }, y = {
    begin: "(" + o + "[\\*&\\s]+)+" + f,
    returnBegin: !0,
    end: /[{;=]/,
    excludeEnd: !0,
    keywords: v,
    illegal: /[^\w\s\*&:<>.]/,
    contains: [
      {
        // to prevent it from being confused as the function title
        begin: n,
        keywords: v,
        relevance: 0
      },
      {
        begin: f,
        returnBegin: !0,
        contains: [t.inherit(p, { className: "title.function" })],
        relevance: 0
      },
      // allow for multiple declarations, e.g.:
      // extern void f(int), g(char);
      {
        relevance: 0,
        match: /,/
      },
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        keywords: v,
        relevance: 0,
        contains: [
          r,
          t.C_BLOCK_COMMENT_MODE,
          u,
          c,
          s,
          // Count matching parentheses.
          {
            begin: /\(/,
            end: /\)/,
            keywords: v,
            relevance: 0,
            contains: [
              "self",
              r,
              t.C_BLOCK_COMMENT_MODE,
              u,
              c,
              s
            ]
          }
        ]
      },
      s,
      r,
      t.C_BLOCK_COMMENT_MODE,
      d
    ]
  };
  return {
    name: "C",
    aliases: ["h"],
    keywords: v,
    // Until differentiations are added between `c` and `cpp`, `c` will
    // not be auto-detected to avoid auto-detect conflicts between C and C++
    disableAutodetect: !0,
    illegal: "</",
    contains: [].concat(
      _,
      y,
      m,
      [
        d,
        {
          begin: t.IDENT_RE + "::",
          keywords: v
        },
        {
          className: "class",
          beginKeywords: "enum class struct union",
          end: /[{;:<>=]/,
          contains: [
            { beginKeywords: "final class struct" },
            t.TITLE_MODE
          ]
        }
      ]
    ),
    exports: {
      preprocessor: d,
      strings: u,
      keywords: v
    }
  };
}
const Cne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $Q
}, Symbol.toStringTag, { value: "Module" }));
function HQ(t) {
  const e = t.regex, r = [
    "div",
    "mod",
    "in",
    "and",
    "or",
    "not",
    "xor",
    "asserterror",
    "begin",
    "case",
    "do",
    "downto",
    "else",
    "end",
    "exit",
    "for",
    "local",
    "if",
    "of",
    "repeat",
    "then",
    "to",
    "until",
    "while",
    "with",
    "var"
  ], n = "false true", a = [
    t.C_LINE_COMMENT_MODE,
    t.COMMENT(
      /\{/,
      /\}/,
      { relevance: 0 }
    ),
    t.COMMENT(
      /\(\*/,
      /\*\)/,
      { relevance: 10 }
    )
  ], i = {
    className: "string",
    begin: /'/,
    end: /'/,
    contains: [{ begin: /''/ }]
  }, o = {
    className: "string",
    begin: /(#\d+)+/
  }, s = {
    className: "number",
    begin: "\\b\\d+(\\.\\d+)?(DT|D|T)",
    relevance: 0
  }, l = {
    className: "string",
    // not a string technically but makes sense to be highlighted in the same style
    begin: '"',
    end: '"'
  }, u = {
    match: [
      /procedure/,
      /\s+/,
      /[a-zA-Z_][\w@]*/,
      /\s*/
    ],
    scope: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        keywords: r,
        contains: [
          i,
          o,
          t.NUMBER_MODE
        ]
      },
      ...a
    ]
  }, c = [
    "Table",
    "Form",
    "Report",
    "Dataport",
    "Codeunit",
    "XMLport",
    "MenuSuite",
    "Page",
    "Query"
  ], d = {
    match: [
      /OBJECT/,
      /\s+/,
      e.either(...c),
      /\s+/,
      /\d+/,
      /\s+(?=[^\s])/,
      /.*/,
      /$/
    ],
    relevance: 3,
    scope: {
      1: "keyword",
      3: "type",
      5: "number",
      7: "title"
    }
  };
  return {
    name: "C/AL",
    case_insensitive: !0,
    keywords: {
      keyword: r,
      literal: n
    },
    illegal: /\/\*/,
    contains: [
      {
        match: /[\w]+(?=\=)/,
        scope: "attribute",
        relevance: 0
      },
      i,
      o,
      s,
      l,
      t.NUMBER_MODE,
      d,
      u
    ]
  };
}
const Ane = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: HQ
}, Symbol.toStringTag, { value: "Module" }));
function WQ(t) {
  const e = [
    "struct",
    "enum",
    "interface",
    "union",
    "group",
    "import",
    "using",
    "const",
    "annotation",
    "extends",
    "in",
    "of",
    "on",
    "as",
    "with",
    "from",
    "fixed"
  ], r = [
    "Void",
    "Bool",
    "Int8",
    "Int16",
    "Int32",
    "Int64",
    "UInt8",
    "UInt16",
    "UInt32",
    "UInt64",
    "Float32",
    "Float64",
    "Text",
    "Data",
    "AnyPointer",
    "AnyStruct",
    "Capability",
    "List"
  ], n = [
    "true",
    "false"
  ], a = {
    variants: [
      { match: [
        /(struct|enum|interface)/,
        /\s+/,
        t.IDENT_RE
      ] },
      { match: [
        /extends/,
        /\s*\(/,
        t.IDENT_RE,
        /\s*\)/
      ] }
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  };
  return {
    name: "Cap’n Proto",
    aliases: ["capnp"],
    keywords: {
      keyword: e,
      type: r,
      literal: n
    },
    contains: [
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE,
      t.HASH_COMMENT_MODE,
      {
        className: "meta",
        begin: /@0x[\w\d]{16};/,
        illegal: /\n/
      },
      {
        className: "symbol",
        begin: /@\d+\b/
      },
      a
    ]
  };
}
const wne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: WQ
}, Symbol.toStringTag, { value: "Module" }));
function qQ(t) {
  const e = [
    "assembly",
    "module",
    "package",
    "import",
    "alias",
    "class",
    "interface",
    "object",
    "given",
    "value",
    "assign",
    "void",
    "function",
    "new",
    "of",
    "extends",
    "satisfies",
    "abstracts",
    "in",
    "out",
    "return",
    "break",
    "continue",
    "throw",
    "assert",
    "dynamic",
    "if",
    "else",
    "switch",
    "case",
    "for",
    "while",
    "try",
    "catch",
    "finally",
    "then",
    "let",
    "this",
    "outer",
    "super",
    "is",
    "exists",
    "nonempty"
  ], r = [
    "shared",
    "abstract",
    "formal",
    "default",
    "actual",
    "variable",
    "late",
    "native",
    "deprecated",
    "final",
    "sealed",
    "annotation",
    "suppressWarnings",
    "small"
  ], n = [
    "doc",
    "by",
    "license",
    "see",
    "throws",
    "tagged"
  ], a = {
    className: "subst",
    excludeBegin: !0,
    excludeEnd: !0,
    begin: /``/,
    end: /``/,
    keywords: e,
    relevance: 10
  }, i = [
    {
      // verbatim string
      className: "string",
      begin: '"""',
      end: '"""',
      relevance: 10
    },
    {
      // string literal or template
      className: "string",
      begin: '"',
      end: '"',
      contains: [a]
    },
    {
      // character literal
      className: "string",
      begin: "'",
      end: "'"
    },
    {
      // numeric literal
      className: "number",
      begin: "#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?",
      relevance: 0
    }
  ];
  return a.contains = i, {
    name: "Ceylon",
    keywords: {
      keyword: e.concat(r),
      meta: n
    },
    illegal: "\\$[^01]|#[^0-9a-fA-F]",
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.COMMENT("/\\*", "\\*/", { contains: ["self"] }),
      {
        // compiler annotation
        className: "meta",
        begin: '@[a-z]\\w*(?::"[^"]*")?'
      }
    ].concat(i)
  };
}
const Dne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qQ
}, Symbol.toStringTag, { value: "Module" }));
function YQ(t) {
  return {
    name: "Clean",
    aliases: [
      "icl",
      "dcl"
    ],
    keywords: {
      keyword: [
        "if",
        "let",
        "in",
        "with",
        "where",
        "case",
        "of",
        "class",
        "instance",
        "otherwise",
        "implementation",
        "definition",
        "system",
        "module",
        "from",
        "import",
        "qualified",
        "as",
        "special",
        "code",
        "inline",
        "foreign",
        "export",
        "ccall",
        "stdcall",
        "generic",
        "derive",
        "infix",
        "infixl",
        "infixr"
      ],
      built_in: "Int Real Char Bool",
      literal: "True False"
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        // relevance booster
        begin: "->|<-[|:]?|#!?|>>=|\\{\\||\\|\\}|:==|=:|<>"
      }
    ]
  };
}
const Mne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: YQ
}, Symbol.toStringTag, { value: "Module" }));
function KQ(t) {
  const e = "a-zA-Z_\\-!.?+*=<>&'", r = "[#]?[" + e + "][" + e + "0-9/;:$#]*", n = "def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord", a = {
    $pattern: r,
    built_in: (
      // Clojure keywords
      n + " cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last drop-while while intern condp case reduced cycle split-at split-with repeat replicate iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter monitor-exit macroexpand macroexpand-1 for dosync and or when when-not when-let comp juxt partial sequence memoize constantly complement identity assert peek pop doto proxy first rest cons cast coll last butlast sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"
    )
  }, i = {
    begin: r,
    relevance: 0
  }, o = {
    scope: "number",
    relevance: 0,
    variants: [
      { match: /[-+]?0[xX][0-9a-fA-F]+N?/ },
      // hexadecimal                 // 0x2a
      { match: /[-+]?0[0-7]+N?/ },
      // octal                       // 052
      { match: /[-+]?[1-9][0-9]?[rR][0-9a-zA-Z]+N?/ },
      // variable radix from 2 to 36 // 2r101010, 8r52, 36r16
      { match: /[-+]?[0-9]+\/[0-9]+N?/ },
      // ratio                       // 1/2
      { match: /[-+]?[0-9]+((\.[0-9]*([eE][+-]?[0-9]+)?M?)|([eE][+-]?[0-9]+M?|M))/ },
      // float        // 0.42 4.2E-1M 42E1 42M
      { match: /[-+]?([1-9][0-9]*|0)N?/ }
      // int (don't match leading 0) // 42 42N
    ]
  }, s = {
    scope: "character",
    variants: [
      { match: /\\o[0-3]?[0-7]{1,2}/ },
      // Unicode Octal 0 - 377
      { match: /\\u[0-9a-fA-F]{4}/ },
      // Unicode Hex 0000 - FFFF
      { match: /\\(newline|space|tab|formfeed|backspace|return)/ },
      // special characters
      {
        match: /\\\S/,
        relevance: 0
      }
      // any non-whitespace char
    ]
  }, l = {
    scope: "regex",
    begin: /#"/,
    end: /"/,
    contains: [t.BACKSLASH_ESCAPE]
  }, u = t.inherit(t.QUOTE_STRING_MODE, { illegal: null }), c = {
    scope: "punctuation",
    match: /,/,
    relevance: 0
  }, d = t.COMMENT(
    ";",
    "$",
    { relevance: 0 }
  ), p = {
    className: "literal",
    begin: /\b(true|false|nil)\b/
  }, f = {
    begin: "\\[|(#::?" + r + ")?\\{",
    end: "[\\]\\}]",
    relevance: 0
  }, h = {
    className: "symbol",
    begin: "[:]{1,2}" + r
  }, g = {
    begin: "\\(",
    end: "\\)"
  }, v = {
    endsWithParent: !0,
    relevance: 0
  }, m = {
    keywords: a,
    className: "name",
    begin: r,
    relevance: 0,
    starts: v
  }, _ = [
    c,
    g,
    s,
    l,
    u,
    d,
    h,
    f,
    o,
    p,
    i
  ], y = {
    beginKeywords: n,
    keywords: {
      $pattern: r,
      keyword: n
    },
    end: '(\\[|#|\\d|"|:|\\{|\\)|\\(|$)',
    contains: [
      {
        className: "title",
        begin: r,
        relevance: 0,
        excludeEnd: !0,
        // we can only have a single title
        endsParent: !0
      }
    ].concat(_)
  };
  return g.contains = [
    y,
    m,
    v
  ], v.contains = _, f.contains = _, {
    name: "Clojure",
    aliases: [
      "clj",
      "edn"
    ],
    illegal: /\S/,
    contains: [
      c,
      g,
      s,
      l,
      u,
      d,
      h,
      f,
      o,
      p
    ]
  };
}
const Ine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: KQ
}, Symbol.toStringTag, { value: "Module" }));
function ZQ(t) {
  return {
    name: "Clojure REPL",
    contains: [
      {
        className: "meta.prompt",
        begin: /^([\w.-]+|\s*#_)?=>/,
        starts: {
          end: /$/,
          subLanguage: "clojure"
        }
      }
    ]
  };
}
const Nne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ZQ
}, Symbol.toStringTag, { value: "Module" }));
function XQ(t) {
  return {
    name: "CMake",
    aliases: ["cmake.in"],
    case_insensitive: !0,
    keywords: { keyword: (
      // scripting commands
      "break cmake_host_system_information cmake_minimum_required cmake_parse_arguments cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro endwhile execute_process file find_file find_library find_package find_path find_program foreach function get_cmake_property get_directory_property get_filename_component get_property if include include_guard list macro mark_as_advanced math message option return separate_arguments set_directory_properties set_property set site_name string unset variable_watch while add_compile_definitions add_compile_options add_custom_command add_custom_target add_definitions add_dependencies add_executable add_library add_link_options add_subdirectory add_test aux_source_directory build_command create_test_sourcelist define_property enable_language enable_testing export fltk_wrap_ui get_source_file_property get_target_property get_test_property include_directories include_external_msproject include_regular_expression install link_directories link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions set_source_files_properties set_target_properties set_tests_properties source_group target_compile_definitions target_compile_features target_compile_options target_include_directories target_link_directories target_link_libraries target_link_options target_sources try_compile try_run ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ctest_test ctest_update ctest_upload build_name exec_program export_library_dependencies install_files install_programs install_targets load_command make_directory output_required_files remove subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or not command policy target test exists is_newer_than is_directory is_symlink is_absolute matches less greater equal less_equal greater_equal strless strgreater strequal strless_equal strgreater_equal version_less version_greater version_equal version_less_equal version_greater_equal in_list defined"
    ) },
    contains: [
      {
        className: "variable",
        begin: /\$\{/,
        end: /\}/
      },
      t.COMMENT(/#\[\[/, /]]/),
      t.HASH_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE
    ]
  };
}
const Rne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XQ
}, Symbol.toStringTag, { value: "Module" })), QQ = [
  "as",
  // for exports
  "in",
  "of",
  "if",
  "for",
  "while",
  "finally",
  "var",
  "new",
  "function",
  "do",
  "return",
  "void",
  "else",
  "break",
  "catch",
  "instanceof",
  "with",
  "throw",
  "case",
  "default",
  "try",
  "switch",
  "continue",
  "typeof",
  "delete",
  "let",
  "yield",
  "const",
  "class",
  // JS handles these with a special rule
  // "get",
  // "set",
  "debugger",
  "async",
  "await",
  "static",
  "import",
  "from",
  "export",
  "extends",
  // It's reached stage 3, which is "recommended for implementation":
  "using"
], jQ = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
], JQ = [
  // Fundamental objects
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  // numbers and dates
  "Math",
  "Date",
  "Number",
  "BigInt",
  // text
  "String",
  "RegExp",
  // Indexed collections
  "Array",
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Int32Array",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  // Keyed collections
  "Set",
  "Map",
  "WeakSet",
  "WeakMap",
  // Structured data
  "ArrayBuffer",
  "SharedArrayBuffer",
  "Atomics",
  "DataView",
  "JSON",
  // Control abstraction objects
  "Promise",
  "Generator",
  "GeneratorFunction",
  "AsyncFunction",
  // Reflection
  "Reflect",
  "Proxy",
  // Internationalization
  "Intl",
  // WebAssembly
  "WebAssembly"
], ej = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
], tj = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
], rj = [].concat(
  tj,
  JQ,
  ej
);
function nj(t) {
  const e = [
    "npm",
    "print"
  ], r = [
    "yes",
    "no",
    "on",
    "off"
  ], n = [
    "then",
    "unless",
    "until",
    "loop",
    "by",
    "when",
    "and",
    "or",
    "is",
    "isnt",
    "not"
  ], a = [
    "var",
    "const",
    "let",
    "function",
    "static"
  ], i = (h) => (g) => !h.includes(g), o = {
    keyword: QQ.concat(n).filter(i(a)),
    literal: jQ.concat(r),
    built_in: rj.concat(e)
  }, s = "[A-Za-z$_][0-9A-Za-z$_]*", l = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: o
  }, u = [
    t.BINARY_NUMBER_MODE,
    t.inherit(t.C_NUMBER_MODE, { starts: {
      end: "(\\s*/)?",
      relevance: 0
    } }),
    // a number tries to eat the following slash to prevent treating it as a regexp
    {
      className: "string",
      variants: [
        {
          begin: /'''/,
          end: /'''/,
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /'/,
          end: /'/,
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /"""/,
          end: /"""/,
          contains: [
            t.BACKSLASH_ESCAPE,
            l
          ]
        },
        {
          begin: /"/,
          end: /"/,
          contains: [
            t.BACKSLASH_ESCAPE,
            l
          ]
        }
      ]
    },
    {
      className: "regexp",
      variants: [
        {
          begin: "///",
          end: "///",
          contains: [
            l,
            t.HASH_COMMENT_MODE
          ]
        },
        {
          begin: "//[gim]{0,3}(?=\\W)",
          relevance: 0
        },
        {
          // regex can't start with space to parse x / 2 / 3 as two divisions
          // regex can't start with *, and it supports an "illegal" in the main mode
          begin: /\/(?![ *]).*?(?![\\]).\/[gim]{0,3}(?=\W)/
        }
      ]
    },
    {
      begin: "@" + s
      // relevance booster
    },
    {
      subLanguage: "javascript",
      excludeBegin: !0,
      excludeEnd: !0,
      variants: [
        {
          begin: "```",
          end: "```"
        },
        {
          begin: "`",
          end: "`"
        }
      ]
    }
  ];
  l.contains = u;
  const c = t.inherit(t.TITLE_MODE, { begin: s }), d = "(\\(.*\\)\\s*)?\\B[-=]>", p = {
    className: "params",
    begin: "\\([^\\(]",
    returnBegin: !0,
    /* We need another contained nameless mode to not have every nested
    pair of parens to be called "params" */
    contains: [
      {
        begin: /\(/,
        end: /\)/,
        keywords: o,
        contains: ["self"].concat(u)
      }
    ]
  }, f = {
    variants: [
      { match: [
        /class\s+/,
        s,
        /\s+extends\s+/,
        s
      ] },
      { match: [
        /class\s+/,
        s
      ] }
    ],
    scope: {
      2: "title.class",
      4: "title.class.inherited"
    },
    keywords: o
  };
  return {
    name: "CoffeeScript",
    aliases: [
      "coffee",
      "cson",
      "iced"
    ],
    keywords: o,
    illegal: /\/\*/,
    contains: [
      ...u,
      t.COMMENT("###", "###"),
      t.HASH_COMMENT_MODE,
      {
        className: "function",
        begin: "^\\s*" + s + "\\s*=\\s*" + d,
        end: "[-=]>",
        returnBegin: !0,
        contains: [
          c,
          p
        ]
      },
      {
        // anonymous function start
        begin: /[:\(,=]\s*/,
        relevance: 0,
        contains: [
          {
            className: "function",
            begin: d,
            end: "[-=]>",
            returnBegin: !0,
            contains: [p]
          }
        ]
      },
      f,
      {
        begin: s + ":",
        end: ":",
        returnBegin: !0,
        returnEnd: !0,
        relevance: 0
      }
    ]
  };
}
const One = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: nj
}, Symbol.toStringTag, { value: "Module" }));
function aj(t) {
  return {
    name: "Coq",
    keywords: {
      keyword: [
        "_|0",
        "as",
        "at",
        "cofix",
        "else",
        "end",
        "exists",
        "exists2",
        "fix",
        "for",
        "forall",
        "fun",
        "if",
        "IF",
        "in",
        "let",
        "match",
        "mod",
        "Prop",
        "return",
        "Set",
        "then",
        "Type",
        "using",
        "where",
        "with",
        "Abort",
        "About",
        "Add",
        "Admit",
        "Admitted",
        "All",
        "Arguments",
        "Assumptions",
        "Axiom",
        "Back",
        "BackTo",
        "Backtrack",
        "Bind",
        "Blacklist",
        "Canonical",
        "Cd",
        "Check",
        "Class",
        "Classes",
        "Close",
        "Coercion",
        "Coercions",
        "CoFixpoint",
        "CoInductive",
        "Collection",
        "Combined",
        "Compute",
        "Conjecture",
        "Conjectures",
        "Constant",
        "constr",
        "Constraint",
        "Constructors",
        "Context",
        "Corollary",
        "CreateHintDb",
        "Cut",
        "Declare",
        "Defined",
        "Definition",
        "Delimit",
        "Dependencies",
        "Dependent",
        "Derive",
        "Drop",
        "eauto",
        "End",
        "Equality",
        "Eval",
        "Example",
        "Existential",
        "Existentials",
        "Existing",
        "Export",
        "exporting",
        "Extern",
        "Extract",
        "Extraction",
        "Fact",
        "Field",
        "Fields",
        "File",
        "Fixpoint",
        "Focus",
        "for",
        "From",
        "Function",
        "Functional",
        "Generalizable",
        "Global",
        "Goal",
        "Grab",
        "Grammar",
        "Graph",
        "Guarded",
        "Heap",
        "Hint",
        "HintDb",
        "Hints",
        "Hypotheses",
        "Hypothesis",
        "ident",
        "Identity",
        "If",
        "Immediate",
        "Implicit",
        "Import",
        "Include",
        "Inductive",
        "Infix",
        "Info",
        "Initial",
        "Inline",
        "Inspect",
        "Instance",
        "Instances",
        "Intro",
        "Intros",
        "Inversion",
        "Inversion_clear",
        "Language",
        "Left",
        "Lemma",
        "Let",
        "Libraries",
        "Library",
        "Load",
        "LoadPath",
        "Local",
        "Locate",
        "Ltac",
        "ML",
        "Mode",
        "Module",
        "Modules",
        "Monomorphic",
        "Morphism",
        "Next",
        "NoInline",
        "Notation",
        "Obligation",
        "Obligations",
        "Opaque",
        "Open",
        "Optimize",
        "Options",
        "Parameter",
        "Parameters",
        "Parametric",
        "Path",
        "Paths",
        "pattern",
        "Polymorphic",
        "Preterm",
        "Print",
        "Printing",
        "Program",
        "Projections",
        "Proof",
        "Proposition",
        "Pwd",
        "Qed",
        "Quit",
        "Rec",
        "Record",
        "Recursive",
        "Redirect",
        "Relation",
        "Remark",
        "Remove",
        "Require",
        "Reserved",
        "Reset",
        "Resolve",
        "Restart",
        "Rewrite",
        "Right",
        "Ring",
        "Rings",
        "Save",
        "Scheme",
        "Scope",
        "Scopes",
        "Script",
        "Search",
        "SearchAbout",
        "SearchHead",
        "SearchPattern",
        "SearchRewrite",
        "Section",
        "Separate",
        "Set",
        "Setoid",
        "Show",
        "Solve",
        "Sorted",
        "Step",
        "Strategies",
        "Strategy",
        "Structure",
        "SubClass",
        "Table",
        "Tables",
        "Tactic",
        "Term",
        "Test",
        "Theorem",
        "Time",
        "Timeout",
        "Transparent",
        "Type",
        "Typeclasses",
        "Types",
        "Undelimit",
        "Undo",
        "Unfocus",
        "Unfocused",
        "Unfold",
        "Universe",
        "Universes",
        "Unset",
        "Unshelve",
        "using",
        "Variable",
        "Variables",
        "Variant",
        "Verbose",
        "Visibility",
        "where",
        "with"
      ],
      built_in: [
        "abstract",
        "absurd",
        "admit",
        "after",
        "apply",
        "as",
        "assert",
        "assumption",
        "at",
        "auto",
        "autorewrite",
        "autounfold",
        "before",
        "bottom",
        "btauto",
        "by",
        "case",
        "case_eq",
        "cbn",
        "cbv",
        "change",
        "classical_left",
        "classical_right",
        "clear",
        "clearbody",
        "cofix",
        "compare",
        "compute",
        "congruence",
        "constr_eq",
        "constructor",
        "contradict",
        "contradiction",
        "cut",
        "cutrewrite",
        "cycle",
        "decide",
        "decompose",
        "dependent",
        "destruct",
        "destruction",
        "dintuition",
        "discriminate",
        "discrR",
        "do",
        "double",
        "dtauto",
        "eapply",
        "eassumption",
        "eauto",
        "ecase",
        "econstructor",
        "edestruct",
        "ediscriminate",
        "eelim",
        "eexact",
        "eexists",
        "einduction",
        "einjection",
        "eleft",
        "elim",
        "elimtype",
        "enough",
        "equality",
        "erewrite",
        "eright",
        "esimplify_eq",
        "esplit",
        "evar",
        "exact",
        "exactly_once",
        "exfalso",
        "exists",
        "f_equal",
        "fail",
        "field",
        "field_simplify",
        "field_simplify_eq",
        "first",
        "firstorder",
        "fix",
        "fold",
        "fourier",
        "functional",
        "generalize",
        "generalizing",
        "gfail",
        "give_up",
        "has_evar",
        "hnf",
        "idtac",
        "in",
        "induction",
        "injection",
        "instantiate",
        "intro",
        "intro_pattern",
        "intros",
        "intuition",
        "inversion",
        "inversion_clear",
        "is_evar",
        "is_var",
        "lapply",
        "lazy",
        "left",
        "lia",
        "lra",
        "move",
        "native_compute",
        "nia",
        "nsatz",
        "omega",
        "once",
        "pattern",
        "pose",
        "progress",
        "proof",
        "psatz",
        "quote",
        "record",
        "red",
        "refine",
        "reflexivity",
        "remember",
        "rename",
        "repeat",
        "replace",
        "revert",
        "revgoals",
        "rewrite",
        "rewrite_strat",
        "right",
        "ring",
        "ring_simplify",
        "rtauto",
        "set",
        "setoid_reflexivity",
        "setoid_replace",
        "setoid_rewrite",
        "setoid_symmetry",
        "setoid_transitivity",
        "shelve",
        "shelve_unifiable",
        "simpl",
        "simple",
        "simplify_eq",
        "solve",
        "specialize",
        "split",
        "split_Rabs",
        "split_Rmult",
        "stepl",
        "stepr",
        "subst",
        "sum",
        "swap",
        "symmetry",
        "tactic",
        "tauto",
        "time",
        "timeout",
        "top",
        "transitivity",
        "trivial",
        "try",
        "tryif",
        "unfold",
        "unify",
        "until",
        "using",
        "vm_compute",
        "with"
      ]
    },
    contains: [
      t.QUOTE_STRING_MODE,
      t.COMMENT("\\(\\*", "\\*\\)"),
      t.C_NUMBER_MODE,
      {
        className: "type",
        excludeBegin: !0,
        begin: "\\|\\s*",
        end: "\\w+"
      },
      {
        // relevance booster
        begin: /[-=]>/
      }
    ]
  };
}
const Lne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: aj
}, Symbol.toStringTag, { value: "Module" }));
function ij(t) {
  return {
    name: "Caché Object Script",
    case_insensitive: !0,
    aliases: ["cls"],
    keywords: "property parameter class classmethod clientmethod extends as break catch close continue do d|0 else elseif for goto halt hang h|0 if job j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 tcommit throw trollback try tstart use view while write w|0 xecute x|0 zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit zsync ascii",
    contains: [
      {
        className: "number",
        begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)",
        relevance: 0
      },
      {
        className: "string",
        variants: [
          {
            begin: '"',
            end: '"',
            contains: [
              {
                // escaped
                begin: '""',
                relevance: 0
              }
            ]
          }
        ]
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "comment",
        begin: /;/,
        end: "$",
        relevance: 0
      },
      {
        // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)
        className: "built_in",
        begin: /(?:\$\$?|\.\.)\^?[a-zA-Z]+/
      },
      {
        // Macro command: quit $$$OK
        className: "built_in",
        begin: /\$\$\$[a-zA-Z]+/
      },
      {
        // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer
        className: "built_in",
        begin: /%[a-z]+(?:\.[a-z]+)*/
      },
      {
        // Global variable: set ^globalName = 12 write ^globalName
        className: "symbol",
        begin: /\^%?[a-zA-Z][\w]*/
      },
      {
        // Some control constructions: do ##class(Package.ClassName).Method(), ##super()
        className: "keyword",
        begin: /##class|##super|#define|#dim/
      },
      // sub-languages: are not fully supported by hljs by 11/15/2015
      // left for the future implementation.
      {
        begin: /&sql\(/,
        end: /\)/,
        excludeBegin: !0,
        excludeEnd: !0,
        subLanguage: "sql"
      },
      {
        begin: /&(js|jscript|javascript)</,
        end: />/,
        excludeBegin: !0,
        excludeEnd: !0,
        subLanguage: "javascript"
      },
      {
        // this brakes first and last tag, but this is the only way to embed a valid html
        begin: /&html<\s*</,
        end: />\s*>/,
        subLanguage: "xml"
      }
    ]
  };
}
const Pne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ij
}, Symbol.toStringTag, { value: "Module" }));
function oj(t) {
  const e = t.regex, r = t.COMMENT("//", "$", { contains: [{ begin: /\\\n/ }] }), n = "decltype\\(auto\\)", a = "[a-zA-Z_]\\w*::", o = "(?!struct)(" + n + "|" + e.optional(a) + "[a-zA-Z_]\\w*" + e.optional("<[^<>]+>") + ")", s = {
    className: "type",
    begin: "\\b[a-z\\d_]*_t\\b"
  }, u = {
    className: "string",
    variants: [
      {
        begin: '(u8?|U|L)?"',
        end: '"',
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: "(u8?|U|L)?'(" + "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)" + "|.)",
        end: "'",
        illegal: "."
      },
      t.END_SAME_AS_BEGIN({
        begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
        end: /\)([^()\\ ]{0,16})"/
      })
    ]
  }, c = {
    className: "number",
    variants: [
      // Floating-point literal.
      {
        begin: "[+-]?(?:(?:[0-9](?:'?[0-9])*\\.(?:[0-9](?:'?[0-9])*)?|\\.[0-9](?:'?[0-9])*)(?:[Ee][+-]?[0-9](?:'?[0-9])*)?|[0-9](?:'?[0-9])*[Ee][+-]?[0-9](?:'?[0-9])*|0[Xx](?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*(?:\\.(?:[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)?)?|\\.[0-9A-Fa-f](?:'?[0-9A-Fa-f])*)[Pp][+-]?[0-9](?:'?[0-9])*)(?:[Ff](?:16|32|64|128)?|(BF|bf)16|[Ll]|)"
      },
      // Integer literal.
      {
        begin: "[+-]?\\b(?:0[Bb][01](?:'?[01])*|0[Xx][0-9A-Fa-f](?:'?[0-9A-Fa-f])*|0(?:'?[0-7])*|[1-9](?:'?[0-9])*)(?:[Uu](?:LL?|ll?)|[Uu][Zz]?|(?:LL?|ll?)[Uu]?|[Zz][Uu]|)"
        // Note: there are user-defined literal suffixes too, but perhaps having the custom suffix not part of the
        // literal highlight actually makes it stand out more.
      }
    ],
    relevance: 0
  }, d = {
    className: "meta",
    begin: /#\s*[a-z]+\b/,
    end: /$/,
    keywords: { keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include" },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      t.inherit(u, { className: "string" }),
      {
        className: "string",
        begin: /<.*?>/
      },
      r,
      t.C_BLOCK_COMMENT_MODE
    ]
  }, p = {
    className: "title",
    begin: e.optional(a) + t.IDENT_RE,
    relevance: 0
  }, f = e.optional(a) + t.IDENT_RE + "\\s*\\(", h = [
    "alignas",
    "alignof",
    "and",
    "and_eq",
    "asm",
    "atomic_cancel",
    "atomic_commit",
    "atomic_noexcept",
    "auto",
    "bitand",
    "bitor",
    "break",
    "case",
    "catch",
    "class",
    "co_await",
    "co_return",
    "co_yield",
    "compl",
    "concept",
    "const_cast|10",
    "consteval",
    "constexpr",
    "constinit",
    "continue",
    "decltype",
    "default",
    "delete",
    "do",
    "dynamic_cast|10",
    "else",
    "enum",
    "explicit",
    "export",
    "extern",
    "false",
    "final",
    "for",
    "friend",
    "goto",
    "if",
    "import",
    "inline",
    "module",
    "mutable",
    "namespace",
    "new",
    "noexcept",
    "not",
    "not_eq",
    "nullptr",
    "operator",
    "or",
    "or_eq",
    "override",
    "private",
    "protected",
    "public",
    "reflexpr",
    "register",
    "reinterpret_cast|10",
    "requires",
    "return",
    "sizeof",
    "static_assert",
    "static_cast|10",
    "struct",
    "switch",
    "synchronized",
    "template",
    "this",
    "thread_local",
    "throw",
    "transaction_safe",
    "transaction_safe_dynamic",
    "true",
    "try",
    "typedef",
    "typeid",
    "typename",
    "union",
    "using",
    "virtual",
    "volatile",
    "while",
    "xor",
    "xor_eq"
  ], g = [
    "bool",
    "char",
    "char16_t",
    "char32_t",
    "char8_t",
    "double",
    "float",
    "int",
    "long",
    "short",
    "void",
    "wchar_t",
    "unsigned",
    "signed",
    "const",
    "static"
  ], v = [
    "any",
    "auto_ptr",
    "barrier",
    "binary_semaphore",
    "bitset",
    "complex",
    "condition_variable",
    "condition_variable_any",
    "counting_semaphore",
    "deque",
    "false_type",
    "flat_map",
    "flat_set",
    "future",
    "imaginary",
    "initializer_list",
    "istringstream",
    "jthread",
    "latch",
    "lock_guard",
    "multimap",
    "multiset",
    "mutex",
    "optional",
    "ostringstream",
    "packaged_task",
    "pair",
    "promise",
    "priority_queue",
    "queue",
    "recursive_mutex",
    "recursive_timed_mutex",
    "scoped_lock",
    "set",
    "shared_future",
    "shared_lock",
    "shared_mutex",
    "shared_timed_mutex",
    "shared_ptr",
    "stack",
    "string_view",
    "stringstream",
    "timed_mutex",
    "thread",
    "true_type",
    "tuple",
    "unique_lock",
    "unique_ptr",
    "unordered_map",
    "unordered_multimap",
    "unordered_multiset",
    "unordered_set",
    "variant",
    "vector",
    "weak_ptr",
    "wstring",
    "wstring_view"
  ], m = [
    "abort",
    "abs",
    "acos",
    "apply",
    "as_const",
    "asin",
    "atan",
    "atan2",
    "calloc",
    "ceil",
    "cerr",
    "cin",
    "clog",
    "cos",
    "cosh",
    "cout",
    "declval",
    "endl",
    "exchange",
    "exit",
    "exp",
    "fabs",
    "floor",
    "fmod",
    "forward",
    "fprintf",
    "fputs",
    "free",
    "frexp",
    "fscanf",
    "future",
    "invoke",
    "isalnum",
    "isalpha",
    "iscntrl",
    "isdigit",
    "isgraph",
    "islower",
    "isprint",
    "ispunct",
    "isspace",
    "isupper",
    "isxdigit",
    "labs",
    "launder",
    "ldexp",
    "log",
    "log10",
    "make_pair",
    "make_shared",
    "make_shared_for_overwrite",
    "make_tuple",
    "make_unique",
    "malloc",
    "memchr",
    "memcmp",
    "memcpy",
    "memset",
    "modf",
    "move",
    "pow",
    "printf",
    "putchar",
    "puts",
    "realloc",
    "scanf",
    "sin",
    "sinh",
    "snprintf",
    "sprintf",
    "sqrt",
    "sscanf",
    "std",
    "stderr",
    "stdin",
    "stdout",
    "strcat",
    "strchr",
    "strcmp",
    "strcpy",
    "strcspn",
    "strlen",
    "strncat",
    "strncmp",
    "strncpy",
    "strpbrk",
    "strrchr",
    "strspn",
    "strstr",
    "swap",
    "tan",
    "tanh",
    "terminate",
    "to_underlying",
    "tolower",
    "toupper",
    "vfprintf",
    "visit",
    "vprintf",
    "vsprintf"
  ], b = {
    type: g,
    keyword: h,
    literal: [
      "NULL",
      "false",
      "nullopt",
      "nullptr",
      "true"
    ],
    built_in: ["_Pragma"],
    _type_hints: v
  }, S = {
    className: "function.dispatch",
    relevance: 0,
    keywords: {
      // Only for relevance, not highlighting.
      _hint: m
    },
    begin: e.concat(
      /\b/,
      /(?!decltype)/,
      /(?!if)/,
      /(?!for)/,
      /(?!switch)/,
      /(?!while)/,
      t.IDENT_RE,
      e.lookahead(/(<[^<>]+>|)\s*\(/)
    )
  }, E = [
    S,
    d,
    s,
    r,
    t.C_BLOCK_COMMENT_MODE,
    c,
    u
  ], T = {
    // This mode covers expression context where we can't expect a function
    // definition and shouldn't highlight anything that looks like one:
    // `return some()`, `else if()`, `(x*sum(1, 2))`
    variants: [
      {
        begin: /=/,
        end: /;/
      },
      {
        begin: /\(/,
        end: /\)/
      },
      {
        beginKeywords: "new throw return else",
        end: /;/
      }
    ],
    keywords: b,
    contains: E.concat([
      {
        begin: /\(/,
        end: /\)/,
        keywords: b,
        contains: E.concat(["self"]),
        relevance: 0
      }
    ]),
    relevance: 0
  }, x = {
    className: "function",
    begin: "(" + o + "[\\*&\\s]+)+" + f,
    returnBegin: !0,
    end: /[{;=]/,
    excludeEnd: !0,
    keywords: b,
    illegal: /[^\w\s\*&:<>.]/,
    contains: [
      {
        // to prevent it from being confused as the function title
        begin: n,
        keywords: b,
        relevance: 0
      },
      {
        begin: f,
        returnBegin: !0,
        contains: [p],
        relevance: 0
      },
      // needed because we do not have look-behind on the below rule
      // to prevent it from grabbing the final : in a :: pair
      {
        begin: /::/,
        relevance: 0
      },
      // initializers
      {
        begin: /:/,
        endsWithParent: !0,
        contains: [
          u,
          c
        ]
      },
      // allow for multiple declarations, e.g.:
      // extern void f(int), g(char);
      {
        relevance: 0,
        match: /,/
      },
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        keywords: b,
        relevance: 0,
        contains: [
          r,
          t.C_BLOCK_COMMENT_MODE,
          u,
          c,
          s,
          // Count matching parentheses.
          {
            begin: /\(/,
            end: /\)/,
            keywords: b,
            relevance: 0,
            contains: [
              "self",
              r,
              t.C_BLOCK_COMMENT_MODE,
              u,
              c,
              s
            ]
          }
        ]
      },
      s,
      r,
      t.C_BLOCK_COMMENT_MODE,
      d
    ]
  };
  return {
    name: "C++",
    aliases: [
      "cc",
      "c++",
      "h++",
      "hpp",
      "hh",
      "hxx",
      "cxx"
    ],
    keywords: b,
    illegal: "</",
    classNameAliases: { "function.dispatch": "built_in" },
    contains: [].concat(
      T,
      x,
      S,
      E,
      [
        d,
        {
          // containers: ie, `vector <int> rooms (9);`
          begin: "\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function|flat_map|flat_set)\\s*<(?!<)",
          end: ">",
          keywords: b,
          contains: [
            "self",
            s
          ]
        },
        {
          begin: t.IDENT_RE + "::",
          keywords: b
        },
        {
          match: [
            // extra complexity to deal with `enum class` and `enum struct`
            /\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,
            /\s+/,
            /\w+/
          ],
          className: {
            1: "keyword",
            3: "title.class"
          }
        }
      ]
    )
  };
}
const kne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oj
}, Symbol.toStringTag, { value: "Module" }));
function sj(t) {
  const e = "primitive rsc_template", r = "group clone ms master location colocation order fencing_topology rsc_ticket acl_target acl_group user role tag xml";
  return {
    name: "crmsh",
    aliases: [
      "crm",
      "pcmk"
    ],
    case_insensitive: !0,
    keywords: {
      keyword: "params meta operations op rule attributes utilization" + " " + "read write deny defined not_defined in_range date spec in ref reference attribute type xpath version and or lt gt tag lte gte eq ne \\" + " " + "number string",
      literal: "Master Started Slave Stopped start promote demote stop monitor true false"
    },
    contains: [
      t.HASH_COMMENT_MODE,
      {
        beginKeywords: "node",
        starts: {
          end: "\\s*([\\w_-]+:)?",
          starts: {
            className: "title",
            end: "\\s*[\\$\\w_][\\w_-]*"
          }
        }
      },
      {
        beginKeywords: e,
        starts: {
          className: "title",
          end: "\\s*[\\$\\w_][\\w_-]*",
          starts: { end: "\\s*@?[\\w_][\\w_\\.:-]*" }
        }
      },
      {
        begin: "\\b(" + r.split(" ").join("|") + ")\\s+",
        keywords: r,
        starts: {
          className: "title",
          end: "[\\$\\w_][\\w_-]*"
        }
      },
      {
        beginKeywords: "property rsc_defaults op_defaults",
        starts: {
          className: "title",
          end: "\\s*([\\w_-]+:)?"
        }
      },
      t.QUOTE_STRING_MODE,
      {
        className: "meta",
        begin: "(ocf|systemd|service|lsb):[\\w_:-]+",
        relevance: 0
      },
      {
        className: "number",
        begin: "\\b\\d+(\\.\\d+)?(ms|s|h|m)?",
        relevance: 0
      },
      {
        className: "literal",
        begin: "[-]?(infinity|inf)",
        relevance: 0
      },
      {
        className: "attr",
        begin: /([A-Za-z$_#][\w_-]+)=/,
        relevance: 0
      },
      {
        className: "tag",
        begin: "</?",
        end: "/?>",
        relevance: 0
      }
    ]
  };
}
const Bne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: sj
}, Symbol.toStringTag, { value: "Module" }));
function lj(t) {
  const e = "(_?[ui](8|16|32|64|128))?", r = "(_?f(32|64))?", n = "[a-zA-Z_]\\w*[!?=]?", a = "[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\*\\*|\\[\\][=?]?", i = "[A-Za-z_]\\w*(::\\w+)*(\\?|!)?", o = {
    $pattern: n,
    keyword: "abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__",
    literal: "false nil true"
  }, s = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: o
  }, l = {
    // negative-look forward attemps to prevent false matches like:
    // @ident@ or $ident$ that might indicate this is not ruby at all
    className: "variable",
    begin: "(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"
  }, u = {
    className: "template-variable",
    variants: [
      {
        begin: "\\{\\{",
        end: "\\}\\}"
      },
      {
        begin: "\\{%",
        end: "%\\}"
      }
    ],
    keywords: o
  };
  function c(m, _) {
    const y = [
      {
        begin: m,
        end: _
      }
    ];
    return y[0].contains = y, y;
  }
  const d = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      s
    ],
    variants: [
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /"/,
        end: /"/
      },
      {
        begin: /`/,
        end: /`/
      },
      {
        begin: "%[Qwi]?\\(",
        end: "\\)",
        contains: c("\\(", "\\)")
      },
      {
        begin: "%[Qwi]?\\[",
        end: "\\]",
        contains: c("\\[", "\\]")
      },
      {
        begin: "%[Qwi]?\\{",
        end: /\}/,
        contains: c(/\{/, /\}/)
      },
      {
        begin: "%[Qwi]?<",
        end: ">",
        contains: c("<", ">")
      },
      {
        begin: "%[Qwi]?\\|",
        end: "\\|"
      },
      {
        begin: /<<-\w+$/,
        end: /^\s*\w+$/
      }
    ],
    relevance: 0
  }, p = {
    className: "string",
    variants: [
      {
        begin: "%q\\(",
        end: "\\)",
        contains: c("\\(", "\\)")
      },
      {
        begin: "%q\\[",
        end: "\\]",
        contains: c("\\[", "\\]")
      },
      {
        begin: "%q\\{",
        end: /\}/,
        contains: c(/\{/, /\}/)
      },
      {
        begin: "%q<",
        end: ">",
        contains: c("<", ">")
      },
      {
        begin: "%q\\|",
        end: "\\|"
      },
      {
        begin: /<<-'\w+'$/,
        end: /^\s*\w+$/
      }
    ],
    relevance: 0
  }, f = {
    begin: "(?!%\\})(" + t.RE_STARTERS_RE + "|\\n|\\b(case|if|select|unless|until|when|while)\\b)\\s*",
    keywords: "case if select unless until when while",
    contains: [
      {
        className: "regexp",
        contains: [
          t.BACKSLASH_ESCAPE,
          s
        ],
        variants: [
          {
            begin: "//[a-z]*",
            relevance: 0
          },
          {
            begin: "/(?!\\/)",
            end: "/[a-z]*"
          }
        ]
      }
    ],
    relevance: 0
  }, h = {
    className: "regexp",
    contains: [
      t.BACKSLASH_ESCAPE,
      s
    ],
    variants: [
      {
        begin: "%r\\(",
        end: "\\)",
        contains: c("\\(", "\\)")
      },
      {
        begin: "%r\\[",
        end: "\\]",
        contains: c("\\[", "\\]")
      },
      {
        begin: "%r\\{",
        end: /\}/,
        contains: c(/\{/, /\}/)
      },
      {
        begin: "%r<",
        end: ">",
        contains: c("<", ">")
      },
      {
        begin: "%r\\|",
        end: "\\|"
      }
    ],
    relevance: 0
  }, g = {
    className: "meta",
    begin: "@\\[",
    end: "\\]",
    contains: [t.inherit(t.QUOTE_STRING_MODE, { className: "string" })]
  }, v = [
    u,
    d,
    p,
    h,
    f,
    g,
    l,
    t.HASH_COMMENT_MODE,
    {
      className: "class",
      beginKeywords: "class module struct",
      end: "$|;",
      illegal: /=/,
      contains: [
        t.HASH_COMMENT_MODE,
        t.inherit(t.TITLE_MODE, { begin: i }),
        {
          // relevance booster for inheritance
          begin: "<"
        }
      ]
    },
    {
      className: "class",
      beginKeywords: "lib enum union",
      end: "$|;",
      illegal: /=/,
      contains: [
        t.HASH_COMMENT_MODE,
        t.inherit(t.TITLE_MODE, { begin: i })
      ]
    },
    {
      beginKeywords: "annotation",
      end: "$|;",
      illegal: /=/,
      contains: [
        t.HASH_COMMENT_MODE,
        t.inherit(t.TITLE_MODE, { begin: i })
      ],
      relevance: 2
    },
    {
      className: "function",
      beginKeywords: "def",
      end: /\B\b/,
      contains: [
        t.inherit(t.TITLE_MODE, {
          begin: a,
          endsParent: !0
        })
      ]
    },
    {
      className: "function",
      beginKeywords: "fun macro",
      end: /\B\b/,
      contains: [
        t.inherit(t.TITLE_MODE, {
          begin: a,
          endsParent: !0
        })
      ],
      relevance: 2
    },
    {
      className: "symbol",
      begin: t.UNDERSCORE_IDENT_RE + "(!|\\?)?:",
      relevance: 0
    },
    {
      className: "symbol",
      begin: ":",
      contains: [
        d,
        { begin: a }
      ],
      relevance: 0
    },
    {
      className: "number",
      variants: [
        { begin: "\\b0b([01_]+)" + e },
        { begin: "\\b0o([0-7_]+)" + e },
        { begin: "\\b0x([A-Fa-f0-9_]+)" + e },
        { begin: "\\b([1-9][0-9_]*[0-9]|[0-9])(\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?" + r + "(?!_)" },
        { begin: "\\b([1-9][0-9_]*|0)" + e }
      ],
      relevance: 0
    }
  ];
  return s.contains = v, u.contains = v.slice(1), {
    name: "Crystal",
    aliases: ["cr"],
    keywords: o,
    contains: v
  };
}
const Fne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lj
}, Symbol.toStringTag, { value: "Module" }));
function uj(t) {
  const e = [
    "bool",
    "byte",
    "char",
    "decimal",
    "delegate",
    "double",
    "dynamic",
    "enum",
    "float",
    "int",
    "long",
    "nint",
    "nuint",
    "object",
    "sbyte",
    "short",
    "string",
    "ulong",
    "uint",
    "ushort"
  ], r = [
    "public",
    "private",
    "protected",
    "static",
    "internal",
    "protected",
    "abstract",
    "async",
    "extern",
    "override",
    "unsafe",
    "virtual",
    "new",
    "sealed",
    "partial"
  ], n = [
    "default",
    "false",
    "null",
    "true"
  ], a = [
    "abstract",
    "as",
    "base",
    "break",
    "case",
    "catch",
    "class",
    "const",
    "continue",
    "do",
    "else",
    "event",
    "explicit",
    "extern",
    "finally",
    "fixed",
    "for",
    "foreach",
    "goto",
    "if",
    "implicit",
    "in",
    "interface",
    "internal",
    "is",
    "lock",
    "namespace",
    "new",
    "operator",
    "out",
    "override",
    "params",
    "private",
    "protected",
    "public",
    "readonly",
    "record",
    "ref",
    "return",
    "scoped",
    "sealed",
    "sizeof",
    "stackalloc",
    "static",
    "struct",
    "switch",
    "this",
    "throw",
    "try",
    "typeof",
    "unchecked",
    "unsafe",
    "using",
    "virtual",
    "void",
    "volatile",
    "while"
  ], i = [
    "add",
    "alias",
    "and",
    "ascending",
    "args",
    "async",
    "await",
    "by",
    "descending",
    "dynamic",
    "equals",
    "file",
    "from",
    "get",
    "global",
    "group",
    "init",
    "into",
    "join",
    "let",
    "nameof",
    "not",
    "notnull",
    "on",
    "or",
    "orderby",
    "partial",
    "record",
    "remove",
    "required",
    "scoped",
    "select",
    "set",
    "unmanaged",
    "value|0",
    "var",
    "when",
    "where",
    "with",
    "yield"
  ], o = {
    keyword: a.concat(i),
    built_in: e,
    literal: n
  }, s = t.inherit(t.TITLE_MODE, { begin: "[a-zA-Z](\\.?\\w)*" }), l = {
    className: "number",
    variants: [
      { begin: "\\b(0b[01']+)" },
      { begin: "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)" },
      { begin: "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)" }
    ],
    relevance: 0
  }, u = {
    className: "string",
    begin: /"""("*)(?!")(.|\n)*?"""\1/,
    relevance: 1
  }, c = {
    className: "string",
    begin: '@"',
    end: '"',
    contains: [{ begin: '""' }]
  }, d = t.inherit(c, { illegal: /\n/ }), p = {
    className: "subst",
    begin: /\{/,
    end: /\}/,
    keywords: o
  }, f = t.inherit(p, { illegal: /\n/ }), h = {
    className: "string",
    begin: /\$"/,
    end: '"',
    illegal: /\n/,
    contains: [
      { begin: /\{\{/ },
      { begin: /\}\}/ },
      t.BACKSLASH_ESCAPE,
      f
    ]
  }, g = {
    className: "string",
    begin: /\$@"/,
    end: '"',
    contains: [
      { begin: /\{\{/ },
      { begin: /\}\}/ },
      { begin: '""' },
      p
    ]
  }, v = t.inherit(g, {
    illegal: /\n/,
    contains: [
      { begin: /\{\{/ },
      { begin: /\}\}/ },
      { begin: '""' },
      f
    ]
  });
  p.contains = [
    g,
    h,
    c,
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    l,
    t.C_BLOCK_COMMENT_MODE
  ], f.contains = [
    v,
    h,
    d,
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    l,
    t.inherit(t.C_BLOCK_COMMENT_MODE, { illegal: /\n/ })
  ];
  const m = { variants: [
    u,
    g,
    h,
    c,
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE
  ] }, _ = {
    begin: "<",
    end: ">",
    contains: [
      { beginKeywords: "in out" },
      s
    ]
  }, y = t.IDENT_RE + "(<" + t.IDENT_RE + "(\\s*,\\s*" + t.IDENT_RE + ")*>)?(\\[\\])?", b = {
    // prevents expressions like `@class` from incorrect flagging
    // `class` as a keyword
    begin: "@" + t.IDENT_RE,
    relevance: 0
  };
  return {
    name: "C#",
    aliases: [
      "cs",
      "c#"
    ],
    keywords: o,
    illegal: /::/,
    contains: [
      t.COMMENT(
        "///",
        "$",
        {
          returnBegin: !0,
          contains: [
            {
              className: "doctag",
              variants: [
                {
                  begin: "///",
                  relevance: 0
                },
                { begin: "<!--|-->" },
                {
                  begin: "</?",
                  end: ">"
                }
              ]
            }
          ]
        }
      ),
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "meta",
        begin: "#",
        end: "$",
        keywords: { keyword: "if else elif endif define undef warning error line region endregion pragma checksum" }
      },
      m,
      l,
      {
        beginKeywords: "class interface",
        relevance: 0,
        end: /[{;=]/,
        illegal: /[^\s:,]/,
        contains: [
          { beginKeywords: "where class" },
          s,
          _,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        beginKeywords: "namespace",
        relevance: 0,
        end: /[{;=]/,
        illegal: /[^\s:]/,
        contains: [
          s,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        beginKeywords: "record",
        relevance: 0,
        end: /[{;=]/,
        illegal: /[^\s:]/,
        contains: [
          s,
          _,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        // [Attributes("")]
        className: "meta",
        begin: "^\\s*\\[(?=[\\w])",
        excludeBegin: !0,
        end: "\\]",
        excludeEnd: !0,
        contains: [
          {
            className: "string",
            begin: /"/,
            end: /"/
          }
        ]
      },
      {
        // Expression keywords prevent 'keyword Name(...)' from being
        // recognized as a function definition
        beginKeywords: "new return throw await else",
        relevance: 0
      },
      {
        className: "function",
        begin: "(" + y + "\\s+)+" + t.IDENT_RE + "\\s*(<[^=]+>\\s*)?\\(",
        returnBegin: !0,
        end: /\s*[{;=]/,
        excludeEnd: !0,
        keywords: o,
        contains: [
          // prevents these from being highlighted `title`
          {
            beginKeywords: r.join(" "),
            relevance: 0
          },
          {
            begin: t.IDENT_RE + "\\s*(<[^=]+>\\s*)?\\(",
            returnBegin: !0,
            contains: [
              t.TITLE_MODE,
              _
            ],
            relevance: 0
          },
          { match: /\(\)/ },
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            excludeBegin: !0,
            excludeEnd: !0,
            keywords: o,
            relevance: 0,
            contains: [
              m,
              l,
              t.C_BLOCK_COMMENT_MODE
            ]
          },
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      b
    ]
  };
}
const Gne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: uj
}, Symbol.toStringTag, { value: "Module" }));
function cj(t) {
  return {
    name: "CSP",
    case_insensitive: !1,
    keywords: {
      $pattern: "[a-zA-Z][a-zA-Z0-9_-]*",
      keyword: [
        "base-uri",
        "child-src",
        "connect-src",
        "default-src",
        "font-src",
        "form-action",
        "frame-ancestors",
        "frame-src",
        "img-src",
        "manifest-src",
        "media-src",
        "object-src",
        "plugin-types",
        "report-uri",
        "sandbox",
        "script-src",
        "style-src",
        "trusted-types",
        "unsafe-hashes",
        "worker-src"
      ]
    },
    contains: [
      {
        className: "string",
        begin: "'",
        end: "'"
      },
      {
        className: "attribute",
        begin: "^Content",
        end: ":",
        excludeEnd: !0
      }
    ]
  };
}
const Une = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: cj
}, Symbol.toStringTag, { value: "Module" })), dj = (t) => ({
  IMPORTANT: {
    scope: "meta",
    begin: "!important"
  },
  BLOCK_COMMENT: t.C_BLOCK_COMMENT_MODE,
  HEXCOLOR: {
    scope: "number",
    begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
  },
  FUNCTION_DISPATCH: {
    className: "built_in",
    begin: /[\w-]+(?=\()/
  },
  ATTRIBUTE_SELECTOR_MODE: {
    scope: "selector-attr",
    begin: /\[/,
    end: /\]/,
    illegal: "$",
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  },
  CSS_NUMBER_MODE: {
    scope: "number",
    begin: t.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
    relevance: 0
  },
  CSS_VARIABLE: {
    className: "attr",
    begin: /--[A-Za-z_][A-Za-z0-9_-]*/
  }
}), pj = [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "audio",
  "b",
  "blockquote",
  "body",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "dd",
  "del",
  "details",
  "dfn",
  "div",
  "dl",
  "dt",
  "em",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "header",
  "hgroup",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "mark",
  "menu",
  "nav",
  "object",
  "ol",
  "optgroup",
  "option",
  "p",
  "picture",
  "q",
  "quote",
  "samp",
  "section",
  "select",
  "source",
  "span",
  "strong",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "tr",
  "ul",
  "var",
  "video"
], fj = [
  "defs",
  "g",
  "marker",
  "mask",
  "pattern",
  "svg",
  "switch",
  "symbol",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feFlood",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMorphology",
  "feOffset",
  "feSpecularLighting",
  "feTile",
  "feTurbulence",
  "linearGradient",
  "radialGradient",
  "stop",
  "circle",
  "ellipse",
  "image",
  "line",
  "path",
  "polygon",
  "polyline",
  "rect",
  "text",
  "use",
  "textPath",
  "tspan",
  "foreignObject",
  "clipPath"
], hj = [
  ...pj,
  ...fj
], gj = [
  "any-hover",
  "any-pointer",
  "aspect-ratio",
  "color",
  "color-gamut",
  "color-index",
  "device-aspect-ratio",
  "device-height",
  "device-width",
  "display-mode",
  "forced-colors",
  "grid",
  "height",
  "hover",
  "inverted-colors",
  "monochrome",
  "orientation",
  "overflow-block",
  "overflow-inline",
  "pointer",
  "prefers-color-scheme",
  "prefers-contrast",
  "prefers-reduced-motion",
  "prefers-reduced-transparency",
  "resolution",
  "scan",
  "scripting",
  "update",
  "width",
  // TODO: find a better solution?
  "min-width",
  "max-width",
  "min-height",
  "max-height"
].sort().reverse(), vj = [
  "active",
  "any-link",
  "blank",
  "checked",
  "current",
  "default",
  "defined",
  "dir",
  // dir()
  "disabled",
  "drop",
  "empty",
  "enabled",
  "first",
  "first-child",
  "first-of-type",
  "fullscreen",
  "future",
  "focus",
  "focus-visible",
  "focus-within",
  "has",
  // has()
  "host",
  // host or host()
  "host-context",
  // host-context()
  "hover",
  "indeterminate",
  "in-range",
  "invalid",
  "is",
  // is()
  "lang",
  // lang()
  "last-child",
  "last-of-type",
  "left",
  "link",
  "local-link",
  "not",
  // not()
  "nth-child",
  // nth-child()
  "nth-col",
  // nth-col()
  "nth-last-child",
  // nth-last-child()
  "nth-last-col",
  // nth-last-col()
  "nth-last-of-type",
  //nth-last-of-type()
  "nth-of-type",
  //nth-of-type()
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "past",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "target",
  "target-within",
  "user-invalid",
  "valid",
  "visited",
  "where"
  // where()
].sort().reverse(), mj = [
  "after",
  "backdrop",
  "before",
  "cue",
  "cue-region",
  "first-letter",
  "first-line",
  "grammar-error",
  "marker",
  "part",
  "placeholder",
  "selection",
  "slotted",
  "spelling-error"
].sort().reverse(), _j = [
  "accent-color",
  "align-content",
  "align-items",
  "align-self",
  "alignment-baseline",
  "all",
  "anchor-name",
  "animation",
  "animation-composition",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-range",
  "animation-range-end",
  "animation-range-start",
  "animation-timeline",
  "animation-timing-function",
  "appearance",
  "aspect-ratio",
  "backdrop-filter",
  "backface-visibility",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-position-x",
  "background-position-y",
  "background-repeat",
  "background-size",
  "baseline-shift",
  "block-size",
  "border",
  "border-block",
  "border-block-color",
  "border-block-end",
  "border-block-end-color",
  "border-block-end-style",
  "border-block-end-width",
  "border-block-start",
  "border-block-start-color",
  "border-block-start-style",
  "border-block-start-width",
  "border-block-style",
  "border-block-width",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-end-end-radius",
  "border-end-start-radius",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-inline",
  "border-inline-color",
  "border-inline-end",
  "border-inline-end-color",
  "border-inline-end-style",
  "border-inline-end-width",
  "border-inline-start",
  "border-inline-start-color",
  "border-inline-start-style",
  "border-inline-start-width",
  "border-inline-style",
  "border-inline-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-start-end-radius",
  "border-start-start-radius",
  "border-style",
  "border-top",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width",
  "bottom",
  "box-align",
  "box-decoration-break",
  "box-direction",
  "box-flex",
  "box-flex-group",
  "box-lines",
  "box-ordinal-group",
  "box-orient",
  "box-pack",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation",
  "color-interpolation-filters",
  "color-profile",
  "color-rendering",
  "color-scheme",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "contain",
  "contain-intrinsic-block-size",
  "contain-intrinsic-height",
  "contain-intrinsic-inline-size",
  "contain-intrinsic-size",
  "contain-intrinsic-width",
  "container",
  "container-name",
  "container-type",
  "content",
  "content-visibility",
  "counter-increment",
  "counter-reset",
  "counter-set",
  "cue",
  "cue-after",
  "cue-before",
  "cursor",
  "cx",
  "cy",
  "direction",
  "display",
  "dominant-baseline",
  "empty-cells",
  "enable-background",
  "field-sizing",
  "fill",
  "fill-opacity",
  "fill-rule",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "flood-color",
  "flood-opacity",
  "flow",
  "font",
  "font-display",
  "font-family",
  "font-feature-settings",
  "font-kerning",
  "font-language-override",
  "font-optical-sizing",
  "font-palette",
  "font-size",
  "font-size-adjust",
  "font-smooth",
  "font-smoothing",
  "font-stretch",
  "font-style",
  "font-synthesis",
  "font-synthesis-position",
  "font-synthesis-small-caps",
  "font-synthesis-style",
  "font-synthesis-weight",
  "font-variant",
  "font-variant-alternates",
  "font-variant-caps",
  "font-variant-east-asian",
  "font-variant-emoji",
  "font-variant-ligatures",
  "font-variant-numeric",
  "font-variant-position",
  "font-variation-settings",
  "font-weight",
  "forced-color-adjust",
  "gap",
  "glyph-orientation-horizontal",
  "glyph-orientation-vertical",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "hanging-punctuation",
  "height",
  "hyphenate-character",
  "hyphenate-limit-chars",
  "hyphens",
  "icon",
  "image-orientation",
  "image-rendering",
  "image-resolution",
  "ime-mode",
  "initial-letter",
  "initial-letter-align",
  "inline-size",
  "inset",
  "inset-area",
  "inset-block",
  "inset-block-end",
  "inset-block-start",
  "inset-inline",
  "inset-inline-end",
  "inset-inline-start",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "kerning",
  "left",
  "letter-spacing",
  "lighting-color",
  "line-break",
  "line-height",
  "line-height-step",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-block",
  "margin-block-end",
  "margin-block-start",
  "margin-bottom",
  "margin-inline",
  "margin-inline-end",
  "margin-inline-start",
  "margin-left",
  "margin-right",
  "margin-top",
  "margin-trim",
  "marker",
  "marker-end",
  "marker-mid",
  "marker-start",
  "marks",
  "mask",
  "mask-border",
  "mask-border-mode",
  "mask-border-outset",
  "mask-border-repeat",
  "mask-border-slice",
  "mask-border-source",
  "mask-border-width",
  "mask-clip",
  "mask-composite",
  "mask-image",
  "mask-mode",
  "mask-origin",
  "mask-position",
  "mask-repeat",
  "mask-size",
  "mask-type",
  "masonry-auto-flow",
  "math-depth",
  "math-shift",
  "math-style",
  "max-block-size",
  "max-height",
  "max-inline-size",
  "max-width",
  "min-block-size",
  "min-height",
  "min-inline-size",
  "min-width",
  "mix-blend-mode",
  "nav-down",
  "nav-index",
  "nav-left",
  "nav-right",
  "nav-up",
  "none",
  "normal",
  "object-fit",
  "object-position",
  "offset",
  "offset-anchor",
  "offset-distance",
  "offset-path",
  "offset-position",
  "offset-rotate",
  "opacity",
  "order",
  "orphans",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-anchor",
  "overflow-block",
  "overflow-clip-margin",
  "overflow-inline",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "overlay",
  "overscroll-behavior",
  "overscroll-behavior-block",
  "overscroll-behavior-inline",
  "overscroll-behavior-x",
  "overscroll-behavior-y",
  "padding",
  "padding-block",
  "padding-block-end",
  "padding-block-start",
  "padding-bottom",
  "padding-inline",
  "padding-inline-end",
  "padding-inline-start",
  "padding-left",
  "padding-right",
  "padding-top",
  "page",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "paint-order",
  "pause",
  "pause-after",
  "pause-before",
  "perspective",
  "perspective-origin",
  "place-content",
  "place-items",
  "place-self",
  "pointer-events",
  "position",
  "position-anchor",
  "position-visibility",
  "print-color-adjust",
  "quotes",
  "r",
  "resize",
  "rest",
  "rest-after",
  "rest-before",
  "right",
  "rotate",
  "row-gap",
  "ruby-align",
  "ruby-position",
  "scale",
  "scroll-behavior",
  "scroll-margin",
  "scroll-margin-block",
  "scroll-margin-block-end",
  "scroll-margin-block-start",
  "scroll-margin-bottom",
  "scroll-margin-inline",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding",
  "scroll-padding-block",
  "scroll-padding-block-end",
  "scroll-padding-block-start",
  "scroll-padding-bottom",
  "scroll-padding-inline",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "scroll-timeline",
  "scroll-timeline-axis",
  "scroll-timeline-name",
  "scrollbar-color",
  "scrollbar-gutter",
  "scrollbar-width",
  "shape-image-threshold",
  "shape-margin",
  "shape-outside",
  "shape-rendering",
  "speak",
  "speak-as",
  "src",
  // @font-face
  "stop-color",
  "stop-opacity",
  "stroke",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "tab-size",
  "table-layout",
  "text-align",
  "text-align-all",
  "text-align-last",
  "text-anchor",
  "text-combine-upright",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-skip",
  "text-decoration-skip-ink",
  "text-decoration-style",
  "text-decoration-thickness",
  "text-emphasis",
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-rendering",
  "text-shadow",
  "text-size-adjust",
  "text-transform",
  "text-underline-offset",
  "text-underline-position",
  "text-wrap",
  "text-wrap-mode",
  "text-wrap-style",
  "timeline-scope",
  "top",
  "touch-action",
  "transform",
  "transform-box",
  "transform-origin",
  "transform-style",
  "transition",
  "transition-behavior",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "translate",
  "unicode-bidi",
  "user-modify",
  "user-select",
  "vector-effect",
  "vertical-align",
  "view-timeline",
  "view-timeline-axis",
  "view-timeline-inset",
  "view-timeline-name",
  "view-transition-name",
  "visibility",
  "voice-balance",
  "voice-duration",
  "voice-family",
  "voice-pitch",
  "voice-range",
  "voice-rate",
  "voice-stress",
  "voice-volume",
  "white-space",
  "white-space-collapse",
  "widows",
  "width",
  "will-change",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "x",
  "y",
  "z-index",
  "zoom"
].sort().reverse();
function yj(t) {
  const e = t.regex, r = dj(t), n = { begin: /-(webkit|moz|ms|o)-(?=[a-z])/ }, a = "and or not only", i = /@-?\w[\w]*(-\w+)*/, o = "[a-zA-Z-][a-zA-Z0-9_-]*", s = [
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE
  ];
  return {
    name: "CSS",
    case_insensitive: !0,
    illegal: /[=|'\$]/,
    keywords: { keyframePosition: "from to" },
    classNameAliases: {
      // for visual continuity with `tag {}` and because we
      // don't have a great class for this?
      keyframePosition: "selector-tag"
    },
    contains: [
      r.BLOCK_COMMENT,
      n,
      // to recognize keyframe 40% etc which are outside the scope of our
      // attribute value mode
      r.CSS_NUMBER_MODE,
      {
        className: "selector-id",
        begin: /#[A-Za-z0-9_-]+/,
        relevance: 0
      },
      {
        className: "selector-class",
        begin: "\\." + o,
        relevance: 0
      },
      r.ATTRIBUTE_SELECTOR_MODE,
      {
        className: "selector-pseudo",
        variants: [
          { begin: ":(" + vj.join("|") + ")" },
          { begin: ":(:)?(" + mj.join("|") + ")" }
        ]
      },
      // we may actually need this (12/2020)
      // { // pseudo-selector params
      //   begin: /\(/,
      //   end: /\)/,
      //   contains: [ hljs.CSS_NUMBER_MODE ]
      // },
      r.CSS_VARIABLE,
      {
        className: "attribute",
        begin: "\\b(" + _j.join("|") + ")\\b"
      },
      // attribute values
      {
        begin: /:/,
        end: /[;}{]/,
        contains: [
          r.BLOCK_COMMENT,
          r.HEXCOLOR,
          r.IMPORTANT,
          r.CSS_NUMBER_MODE,
          ...s,
          // needed to highlight these as strings and to avoid issues with
          // illegal characters that might be inside urls that would tigger the
          // languages illegal stack
          {
            begin: /(url|data-uri)\(/,
            end: /\)/,
            relevance: 0,
            // from keywords
            keywords: { built_in: "url data-uri" },
            contains: [
              ...s,
              {
                className: "string",
                // any character other than `)` as in `url()` will be the start
                // of a string, which ends with `)` (from the parent mode)
                begin: /[^)]/,
                endsWithParent: !0,
                excludeEnd: !0
              }
            ]
          },
          r.FUNCTION_DISPATCH
        ]
      },
      {
        begin: e.lookahead(/@/),
        end: "[{;]",
        relevance: 0,
        illegal: /:/,
        // break on Less variables @var: ...
        contains: [
          {
            className: "keyword",
            begin: i
          },
          {
            begin: /\s/,
            endsWithParent: !0,
            excludeEnd: !0,
            relevance: 0,
            keywords: {
              $pattern: /[a-z-]+/,
              keyword: a,
              attribute: gj.join(" ")
            },
            contains: [
              {
                begin: /[a-z-]+(?=:)/,
                className: "attribute"
              },
              ...s,
              r.CSS_NUMBER_MODE
            ]
          }
        ]
      },
      {
        className: "selector-tag",
        begin: "\\b(" + hj.join("|") + ")\\b"
      }
    ]
  };
}
const zne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: yj
}, Symbol.toStringTag, { value: "Module" }));
function bj(t) {
  const e = {
    $pattern: t.UNDERSCORE_IDENT_RE,
    keyword: "abstract alias align asm assert auto body break byte case cast catch class const continue debug default delete deprecated do else enum export extern final finally for foreach foreach_reverse|10 goto if immutable import in inout int interface invariant is lazy macro mixin module new nothrow out override package pragma private protected public pure ref return scope shared static struct super switch synchronized template this throw try typedef typeid typeof union unittest version void volatile while with __FILE__ __LINE__ __gshared|10 __thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",
    built_in: "bool cdouble cent cfloat char creal dchar delegate double dstring float function idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar wstring",
    literal: "false null true"
  }, r = "(0|[1-9][\\d_]*)", n = "(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)", a = "0[bB][01_]+", i = "([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)", o = "0[xX]" + i, s = "([eE][+-]?" + n + ")", l = "(" + n + "(\\.\\d*|" + s + ")|\\d+\\." + n + "|\\." + r + s + "?)", u = "(0[xX](" + i + "\\." + i + "|\\.?" + i + ")[pP][+-]?" + n + ")", c = "(" + r + "|" + a + "|" + o + ")", d = "(" + u + "|" + l + ")", p = `\\\\(['"\\?\\\\abfnrtv]|u[\\dA-Fa-f]{4}|[0-7]{1,3}|x[\\dA-Fa-f]{2}|U[\\dA-Fa-f]{8})|&[a-zA-Z\\d]{2,};`, f = {
    className: "number",
    begin: "\\b" + c + "(L|u|U|Lu|LU|uL|UL)?",
    relevance: 0
  }, h = {
    className: "number",
    begin: "\\b(" + d + "([fF]|L|i|[fF]i|Li)?|" + c + "(i|[fF]i|Li))",
    relevance: 0
  }, g = {
    className: "string",
    begin: "'(" + p + "|.)",
    end: "'",
    illegal: "."
  }, m = {
    className: "string",
    begin: '"',
    contains: [{
      begin: p,
      relevance: 0
    }],
    end: '"[cwd]?'
  }, _ = {
    className: "string",
    begin: '[rq]"',
    end: '"[cwd]?',
    relevance: 5
  }, y = {
    className: "string",
    begin: "`",
    end: "`[cwd]?"
  }, b = {
    className: "string",
    begin: 'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',
    relevance: 10
  }, S = {
    className: "string",
    begin: 'q"\\{',
    end: '\\}"'
  }, E = {
    className: "meta",
    begin: "^#!",
    end: "$",
    relevance: 5
  }, T = {
    className: "meta",
    begin: "#(line)",
    end: "$",
    relevance: 5
  }, x = {
    className: "keyword",
    begin: "@[a-zA-Z_][a-zA-Z_\\d]*"
  }, C = t.COMMENT(
    "\\/\\+",
    "\\+\\/",
    {
      contains: ["self"],
      relevance: 10
    }
  );
  return {
    name: "D",
    keywords: e,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      C,
      b,
      m,
      _,
      y,
      S,
      h,
      f,
      g,
      E,
      T,
      x
    ]
  };
}
const Vne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bj
}, Symbol.toStringTag, { value: "Module" }));
function Sj(t) {
  const e = {
    className: "subst",
    variants: [{ begin: "\\$[A-Za-z0-9_]+" }]
  }, r = {
    className: "subst",
    variants: [
      {
        begin: /\$\{/,
        end: /\}/
      }
    ],
    keywords: "true false null this is new super"
  }, n = {
    className: "number",
    relevance: 0,
    variants: [
      { match: /\b[0-9][0-9_]*(\.[0-9][0-9_]*)?([eE][+-]?[0-9][0-9_]*)?\b/ },
      { match: /\b0[xX][0-9A-Fa-f][0-9A-Fa-f_]*\b/ }
    ]
  }, a = {
    className: "string",
    variants: [
      {
        begin: "r'''",
        end: "'''"
      },
      {
        begin: 'r"""',
        end: '"""'
      },
      {
        begin: "r'",
        end: "'",
        illegal: "\\n"
      },
      {
        begin: 'r"',
        end: '"',
        illegal: "\\n"
      },
      {
        begin: "'''",
        end: "'''",
        contains: [
          t.BACKSLASH_ESCAPE,
          e,
          r
        ]
      },
      {
        begin: '"""',
        end: '"""',
        contains: [
          t.BACKSLASH_ESCAPE,
          e,
          r
        ]
      },
      {
        begin: "'",
        end: "'",
        illegal: "\\n",
        contains: [
          t.BACKSLASH_ESCAPE,
          e,
          r
        ]
      },
      {
        begin: '"',
        end: '"',
        illegal: "\\n",
        contains: [
          t.BACKSLASH_ESCAPE,
          e,
          r
        ]
      }
    ]
  };
  r.contains = [
    n,
    a
  ];
  const i = [
    // dart:core
    "Comparable",
    "DateTime",
    "Duration",
    "Function",
    "Iterable",
    "Iterator",
    "List",
    "Map",
    "Match",
    "Object",
    "Pattern",
    "RegExp",
    "Set",
    "Stopwatch",
    "String",
    "StringBuffer",
    "StringSink",
    "Symbol",
    "Type",
    "Uri",
    "bool",
    "double",
    "int",
    "num",
    // dart:html
    "Element",
    "ElementList"
  ], o = i.map((u) => `${u}?`);
  return {
    name: "Dart",
    keywords: {
      keyword: [
        "abstract",
        "as",
        "assert",
        "async",
        "await",
        "base",
        "break",
        "case",
        "catch",
        "class",
        "const",
        "continue",
        "covariant",
        "default",
        "deferred",
        "do",
        "dynamic",
        "else",
        "enum",
        "export",
        "extends",
        "extension",
        "external",
        "factory",
        "false",
        "final",
        "finally",
        "for",
        "Function",
        "get",
        "hide",
        "if",
        "implements",
        "import",
        "in",
        "interface",
        "is",
        "late",
        "library",
        "mixin",
        "new",
        "null",
        "on",
        "operator",
        "part",
        "required",
        "rethrow",
        "return",
        "sealed",
        "set",
        "show",
        "static",
        "super",
        "switch",
        "sync",
        "this",
        "throw",
        "true",
        "try",
        "typedef",
        "var",
        "void",
        "when",
        "while",
        "with",
        "yield"
      ],
      built_in: i.concat(o).concat([
        // dart:core
        "Never",
        "Null",
        "dynamic",
        "print",
        // dart:html
        "document",
        "querySelector",
        "querySelectorAll",
        "window"
      ]),
      $pattern: /[A-Za-z][A-Za-z0-9_]*\??/
    },
    contains: [
      a,
      t.COMMENT(
        /\/\*\*(?!\/)/,
        /\*\//,
        {
          subLanguage: "markdown",
          relevance: 0
        }
      ),
      t.COMMENT(
        /\/{3,} ?/,
        /$/,
        { contains: [
          {
            subLanguage: "markdown",
            begin: ".",
            end: "$",
            relevance: 0
          }
        ] }
      ),
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "class",
        beginKeywords: "class interface",
        end: /\{/,
        excludeEnd: !0,
        contains: [
          { beginKeywords: "extends implements" },
          t.UNDERSCORE_TITLE_MODE
        ]
      },
      n,
      {
        className: "meta",
        begin: "@[A-Za-z]+"
      },
      {
        begin: "=>"
        // No markup, just a relevance booster
      }
    ]
  };
}
const $ne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Sj
}, Symbol.toStringTag, { value: "Module" }));
function Ej(t) {
  const e = [
    "exports",
    "register",
    "file",
    "shl",
    "array",
    "record",
    "property",
    "for",
    "mod",
    "while",
    "set",
    "ally",
    "label",
    "uses",
    "raise",
    "not",
    "stored",
    "class",
    "safecall",
    "var",
    "interface",
    "or",
    "private",
    "static",
    "exit",
    "index",
    "inherited",
    "to",
    "else",
    "stdcall",
    "override",
    "shr",
    "asm",
    "far",
    "resourcestring",
    "finalization",
    "packed",
    "virtual",
    "out",
    "and",
    "protected",
    "library",
    "do",
    "xorwrite",
    "goto",
    "near",
    "function",
    "end",
    "div",
    "overload",
    "object",
    "unit",
    "begin",
    "string",
    "on",
    "inline",
    "repeat",
    "until",
    "destructor",
    "write",
    "message",
    "program",
    "with",
    "read",
    "initialization",
    "except",
    "default",
    "nil",
    "if",
    "case",
    "cdecl",
    "in",
    "downto",
    "threadvar",
    "of",
    "try",
    "pascal",
    "const",
    "external",
    "constructor",
    "type",
    "public",
    "then",
    "implementation",
    "finally",
    "published",
    "procedure",
    "absolute",
    "reintroduce",
    "operator",
    "as",
    "is",
    "abstract",
    "alias",
    "assembler",
    "bitpacked",
    "break",
    "continue",
    "cppdecl",
    "cvar",
    "enumerator",
    "experimental",
    "platform",
    "deprecated",
    "unimplemented",
    "dynamic",
    "export",
    "far16",
    "forward",
    "generic",
    "helper",
    "implements",
    "interrupt",
    "iochecks",
    "local",
    "name",
    "nodefault",
    "noreturn",
    "nostackframe",
    "oldfpccall",
    "otherwise",
    "saveregisters",
    "softfloat",
    "specialize",
    "strict",
    "unaligned",
    "varargs"
  ], r = [
    t.C_LINE_COMMENT_MODE,
    t.COMMENT(/\{/, /\}/, { relevance: 0 }),
    t.COMMENT(/\(\*/, /\*\)/, { relevance: 10 })
  ], n = {
    className: "meta",
    variants: [
      {
        begin: /\{\$/,
        end: /\}/
      },
      {
        begin: /\(\*\$/,
        end: /\*\)/
      }
    ]
  }, a = {
    className: "string",
    begin: /'/,
    end: /'/,
    contains: [{ begin: /''/ }]
  }, i = {
    className: "number",
    relevance: 0,
    // Source: https://www.freepascal.org/docs-html/ref/refse6.html
    variants: [
      {
        // Regular numbers, e.g., 123, 123.456.
        match: /\b\d[\d_]*(\.\d[\d_]*)?/
      },
      {
        // Hexadecimal notation, e.g., $7F.
        match: /\$[\dA-Fa-f_]+/
      },
      {
        // Hexadecimal literal with no digits
        match: /\$/,
        relevance: 0
      },
      {
        // Octal notation, e.g., &42.
        match: /&[0-7][0-7_]*/
      },
      {
        // Binary notation, e.g., %1010.
        match: /%[01_]+/
      },
      {
        // Binary literal with no digits
        match: /%/,
        relevance: 0
      }
    ]
  }, o = {
    className: "string",
    variants: [
      { match: /#\d[\d_]*/ },
      { match: /#\$[\dA-Fa-f][\dA-Fa-f_]*/ },
      { match: /#&[0-7][0-7_]*/ },
      { match: /#%[01][01_]*/ }
    ]
  }, s = {
    begin: t.IDENT_RE + "\\s*=\\s*class\\s*\\(",
    returnBegin: !0,
    contains: [t.TITLE_MODE]
  }, l = {
    className: "function",
    beginKeywords: "function constructor destructor procedure",
    end: /[:;]/,
    keywords: "function constructor|10 destructor|10 procedure|10",
    contains: [
      t.TITLE_MODE,
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        keywords: e,
        contains: [
          a,
          o,
          n
        ].concat(r)
      },
      n
    ].concat(r)
  };
  return {
    name: "Delphi",
    aliases: [
      "dpr",
      "dfm",
      "pas",
      "pascal"
    ],
    case_insensitive: !0,
    keywords: e,
    illegal: /"|\$[G-Zg-z]|\/\*|<\/|\|/,
    contains: [
      a,
      o,
      i,
      s,
      l,
      n
    ].concat(r)
  };
}
const Hne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ej
}, Symbol.toStringTag, { value: "Module" }));
function Tj(t) {
  const e = t.regex;
  return {
    name: "Diff",
    aliases: ["patch"],
    contains: [
      {
        className: "meta",
        relevance: 10,
        match: e.either(
          /^@@ +-\d+,\d+ +\+\d+,\d+ +@@/,
          /^\*\*\* +\d+,\d+ +\*\*\*\*$/,
          /^--- +\d+,\d+ +----$/
        )
      },
      {
        className: "comment",
        variants: [
          {
            begin: e.either(
              /Index: /,
              /^index/,
              /={3,}/,
              /^-{3}/,
              /^\*{3} /,
              /^\+{3}/,
              /^diff --git/
            ),
            end: /$/
          },
          { match: /^\*{15}$/ }
        ]
      },
      {
        className: "addition",
        begin: /^\+/,
        end: /$/
      },
      {
        className: "deletion",
        begin: /^-/,
        end: /$/
      },
      {
        className: "addition",
        begin: /^!/,
        end: /$/
      }
    ]
  };
}
const Wne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Tj
}, Symbol.toStringTag, { value: "Module" }));
function xj(t) {
  const e = {
    begin: /\|[A-Za-z]+:?/,
    keywords: { name: "truncatewords removetags linebreaksbr yesno get_digit timesince random striptags filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort dictsortreversed default_if_none pluralize lower join center default truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize localtime utc timezone" },
    contains: [
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE
    ]
  };
  return {
    name: "Django",
    aliases: ["jinja"],
    case_insensitive: !0,
    subLanguage: "xml",
    contains: [
      t.COMMENT(/\{%\s*comment\s*%\}/, /\{%\s*endcomment\s*%\}/),
      t.COMMENT(/\{#/, /#\}/),
      {
        className: "template-tag",
        begin: /\{%/,
        end: /%\}/,
        contains: [
          {
            className: "name",
            begin: /\w+/,
            keywords: { name: "comment endcomment load templatetag ifchanged endifchanged if endif firstof for endfor ifnotequal endifnotequal widthratio extends include spaceless endspaceless regroup ifequal endifequal ssi now with cycle url filter endfilter debug block endblock else autoescape endautoescape csrf_token empty elif endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix plural get_current_language language get_available_languages get_current_language_bidi get_language_info get_language_info_list localize endlocalize localtime endlocaltime timezone endtimezone get_current_timezone verbatim" },
            starts: {
              endsWithParent: !0,
              keywords: "in by as",
              contains: [e],
              relevance: 0
            }
          }
        ]
      },
      {
        className: "template-variable",
        begin: /\{\{/,
        end: /\}\}/,
        contains: [e]
      }
    ]
  };
}
const qne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xj
}, Symbol.toStringTag, { value: "Module" }));
function Cj(t) {
  return {
    name: "DNS Zone",
    aliases: [
      "bind",
      "zone"
    ],
    keywords: [
      "IN",
      "A",
      "AAAA",
      "AFSDB",
      "APL",
      "CAA",
      "CDNSKEY",
      "CDS",
      "CERT",
      "CNAME",
      "DHCID",
      "DLV",
      "DNAME",
      "DNSKEY",
      "DS",
      "HIP",
      "IPSECKEY",
      "KEY",
      "KX",
      "LOC",
      "MX",
      "NAPTR",
      "NS",
      "NSEC",
      "NSEC3",
      "NSEC3PARAM",
      "PTR",
      "RRSIG",
      "RP",
      "SIG",
      "SOA",
      "SRV",
      "SSHFP",
      "TA",
      "TKEY",
      "TLSA",
      "TSIG",
      "TXT"
    ],
    contains: [
      t.COMMENT(";", "$", { relevance: 0 }),
      {
        className: "meta",
        begin: /^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/
      },
      // IPv6
      {
        className: "number",
        begin: "((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b"
      },
      // IPv4
      {
        className: "number",
        begin: "((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b"
      },
      t.inherit(t.NUMBER_MODE, { begin: /\b\d+[dhwm]?/ })
    ]
  };
}
const Yne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Cj
}, Symbol.toStringTag, { value: "Module" }));
function Aj(t) {
  return {
    name: "Dockerfile",
    aliases: ["docker"],
    case_insensitive: !0,
    keywords: [
      "from",
      "maintainer",
      "expose",
      "env",
      "arg",
      "user",
      "onbuild",
      "stopsignal"
    ],
    contains: [
      t.HASH_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE,
      {
        beginKeywords: "run cmd entrypoint volume add copy workdir label healthcheck shell",
        starts: {
          end: /[^\\]$/,
          subLanguage: "bash"
        }
      }
    ],
    illegal: "</"
  };
}
const Kne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Aj
}, Symbol.toStringTag, { value: "Module" }));
function wj(t) {
  const e = t.COMMENT(
    /^\s*@?rem\b/,
    /$/,
    { relevance: 10 }
  );
  return {
    name: "Batch file (DOS)",
    aliases: [
      "bat",
      "cmd"
    ],
    case_insensitive: !0,
    illegal: /\/\*/,
    keywords: {
      keyword: [
        "if",
        "else",
        "goto",
        "for",
        "in",
        "do",
        "call",
        "exit",
        "not",
        "exist",
        "errorlevel",
        "defined",
        "equ",
        "neq",
        "lss",
        "leq",
        "gtr",
        "geq"
      ],
      built_in: [
        "prn",
        "nul",
        "lpt3",
        "lpt2",
        "lpt1",
        "con",
        "com4",
        "com3",
        "com2",
        "com1",
        "aux",
        "shift",
        "cd",
        "dir",
        "echo",
        "setlocal",
        "endlocal",
        "set",
        "pause",
        "copy",
        "append",
        "assoc",
        "at",
        "attrib",
        "break",
        "cacls",
        "cd",
        "chcp",
        "chdir",
        "chkdsk",
        "chkntfs",
        "cls",
        "cmd",
        "color",
        "comp",
        "compact",
        "convert",
        "date",
        "dir",
        "diskcomp",
        "diskcopy",
        "doskey",
        "erase",
        "fs",
        "find",
        "findstr",
        "format",
        "ftype",
        "graftabl",
        "help",
        "keyb",
        "label",
        "md",
        "mkdir",
        "mode",
        "more",
        "move",
        "path",
        "pause",
        "print",
        "popd",
        "pushd",
        "promt",
        "rd",
        "recover",
        "rem",
        "rename",
        "replace",
        "restore",
        "rmdir",
        "shift",
        "sort",
        "start",
        "subst",
        "time",
        "title",
        "tree",
        "type",
        "ver",
        "verify",
        "vol",
        // winutils
        "ping",
        "net",
        "ipconfig",
        "taskkill",
        "xcopy",
        "ren",
        "del"
      ]
    },
    contains: [
      {
        className: "variable",
        begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/
      },
      {
        className: "function",
        begin: {
          begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)"
        }.begin,
        end: "goto:eof",
        contains: [
          t.inherit(t.TITLE_MODE, { begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*" }),
          e
        ]
      },
      {
        className: "number",
        begin: "\\b\\d+",
        relevance: 0
      },
      e
    ]
  };
}
const Zne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: wj
}, Symbol.toStringTag, { value: "Module" }));
function Dj(t) {
  return {
    keywords: "dsconfig",
    contains: [
      {
        className: "keyword",
        begin: "^dsconfig",
        end: /\s/,
        excludeEnd: !0,
        relevance: 10
      },
      {
        className: "built_in",
        begin: /(list|create|get|set|delete)-(\w+)/,
        end: /\s/,
        excludeEnd: !0,
        illegal: "!@#$%^&*()",
        relevance: 10
      },
      {
        className: "built_in",
        begin: /--(\w+)/,
        end: /\s/,
        excludeEnd: !0
      },
      {
        className: "string",
        begin: /"/,
        end: /"/
      },
      {
        className: "string",
        begin: /'/,
        end: /'/
      },
      {
        className: "string",
        begin: /[\w\-?]+:\w+/,
        end: /\W/,
        relevance: 0
      },
      {
        className: "string",
        begin: /\w+(\-\w+)*/,
        end: /(?=\W)/,
        relevance: 0
      },
      t.HASH_COMMENT_MODE
    ]
  };
}
const Xne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Dj
}, Symbol.toStringTag, { value: "Module" }));
function Mj(t) {
  const e = {
    className: "string",
    variants: [
      t.inherit(t.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?"' }),
      {
        begin: '(u8?|U)?R"',
        end: '"',
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: "'\\\\?.",
        end: "'",
        illegal: "."
      }
    ]
  }, r = {
    className: "number",
    variants: [
      { begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)" },
      { begin: t.C_NUMBER_RE }
    ],
    relevance: 0
  }, n = {
    className: "meta",
    begin: "#",
    end: "$",
    keywords: { keyword: "if else elif endif define undef ifdef ifndef" },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      {
        beginKeywords: "include",
        end: "$",
        keywords: { keyword: "include" },
        contains: [
          t.inherit(e, { className: "string" }),
          {
            className: "string",
            begin: "<",
            end: ">",
            illegal: "\\n"
          }
        ]
      },
      e,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ]
  }, a = {
    className: "variable",
    begin: /&[a-z\d_]*\b/
  }, i = {
    className: "keyword",
    begin: "/[a-z][a-z\\d-]*/"
  }, o = {
    className: "symbol",
    begin: "^\\s*[a-zA-Z_][a-zA-Z\\d_]*:"
  }, s = {
    className: "params",
    relevance: 0,
    begin: "<",
    end: ">",
    contains: [
      r,
      a
    ]
  }, l = {
    className: "title.class",
    begin: /[a-zA-Z_][a-zA-Z\d_@-]*(?=\s\{)/,
    relevance: 0.2
  }, u = {
    className: "title.class",
    begin: /^\/(?=\s*\{)/,
    relevance: 10
  }, c = {
    match: /[a-z][a-z-,]+(?=;)/,
    relevance: 0,
    scope: "attr"
  }, d = {
    relevance: 0,
    match: [
      /[a-z][a-z-,]+/,
      /\s*/,
      /=/
    ],
    scope: {
      1: "attr",
      3: "operator"
    }
  }, p = {
    scope: "punctuation",
    relevance: 0,
    // `};` combined is just to avoid tons of useless punctuation nodes
    match: /\};|[;{}]/
  };
  return {
    name: "Device Tree",
    contains: [
      u,
      a,
      i,
      o,
      l,
      d,
      c,
      s,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      r,
      e,
      n,
      p,
      {
        begin: t.IDENT_RE + "::",
        keywords: ""
      }
    ]
  };
}
const Qne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Mj
}, Symbol.toStringTag, { value: "Module" }));
function Ij(t) {
  return {
    name: "Dust",
    aliases: ["dst"],
    case_insensitive: !0,
    subLanguage: "xml",
    contains: [
      {
        className: "template-tag",
        begin: /\{[#\/]/,
        end: /\}/,
        illegal: /;/,
        contains: [
          {
            className: "name",
            begin: /[a-zA-Z\.-]+/,
            starts: {
              endsWithParent: !0,
              relevance: 0,
              contains: [t.QUOTE_STRING_MODE]
            }
          }
        ]
      },
      {
        className: "template-variable",
        begin: /\{/,
        end: /\}/,
        illegal: /;/,
        keywords: "if eq ne lt lte gt gte select default math sep"
      }
    ]
  };
}
const jne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ij
}, Symbol.toStringTag, { value: "Module" }));
function Nj(t) {
  const e = t.COMMENT(/\(\*/, /\*\)/), r = {
    className: "attribute",
    begin: /^[ ]*[a-zA-Z]+([\s_-]+[a-zA-Z]+)*/
  }, a = {
    begin: /=/,
    end: /[.;]/,
    contains: [
      e,
      {
        className: "meta",
        begin: /\?.*\?/
      },
      {
        // terminals
        className: "string",
        variants: [
          t.APOS_STRING_MODE,
          t.QUOTE_STRING_MODE,
          {
            begin: "`",
            end: "`"
          }
        ]
      }
    ]
  };
  return {
    name: "Extended Backus-Naur Form",
    illegal: /\S/,
    contains: [
      e,
      r,
      a
    ]
  };
}
const Jne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Nj
}, Symbol.toStringTag, { value: "Module" }));
function Rj(t) {
  const e = t.regex, r = "[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?", n = "[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?", o = {
    $pattern: r,
    keyword: [
      "after",
      "alias",
      "and",
      "case",
      "catch",
      "cond",
      "defstruct",
      "defguard",
      "do",
      "else",
      "end",
      "fn",
      "for",
      "if",
      "import",
      "in",
      "not",
      "or",
      "quote",
      "raise",
      "receive",
      "require",
      "reraise",
      "rescue",
      "try",
      "unless",
      "unquote",
      "unquote_splicing",
      "use",
      "when",
      "with|0"
    ],
    literal: [
      "false",
      "nil",
      "true"
    ]
  }, s = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: o
  }, l = {
    className: "number",
    begin: "(\\b0o[0-7_]+)|(\\b0b[01_]+)|(\\b0x[0-9a-fA-F_]+)|(-?\\b[0-9][0-9_]*(\\.[0-9_]+([eE][-+]?[0-9]+)?)?)",
    relevance: 0
  }, c = {
    match: /\\[\s\S]/,
    scope: "char.escape",
    relevance: 0
  }, d = `[/|([{<"']`, p = [
    {
      begin: /"/,
      end: /"/
    },
    {
      begin: /'/,
      end: /'/
    },
    {
      begin: /\//,
      end: /\//
    },
    {
      begin: /\|/,
      end: /\|/
    },
    {
      begin: /\(/,
      end: /\)/
    },
    {
      begin: /\[/,
      end: /\]/
    },
    {
      begin: /\{/,
      end: /\}/
    },
    {
      begin: /</,
      end: />/
    }
  ], f = (S) => ({
    scope: "char.escape",
    begin: e.concat(/\\/, S),
    relevance: 0
  }), h = {
    className: "string",
    begin: "~[a-z](?=" + d + ")",
    contains: p.map((S) => t.inherit(
      S,
      { contains: [
        f(S.end),
        c,
        s
      ] }
    ))
  }, g = {
    className: "string",
    begin: "~[A-Z](?=" + d + ")",
    contains: p.map((S) => t.inherit(
      S,
      { contains: [f(S.end)] }
    ))
  }, v = {
    className: "regex",
    variants: [
      {
        begin: "~r(?=" + d + ")",
        contains: p.map((S) => t.inherit(
          S,
          {
            end: e.concat(S.end, /[uismxfU]{0,7}/),
            contains: [
              f(S.end),
              c,
              s
            ]
          }
        ))
      },
      {
        begin: "~R(?=" + d + ")",
        contains: p.map(
          (S) => t.inherit(
            S,
            {
              end: e.concat(S.end, /[uismxfU]{0,7}/),
              contains: [f(S.end)]
            }
          )
        )
      }
    ]
  }, m = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      s
    ],
    variants: [
      {
        begin: /"""/,
        end: /"""/
      },
      {
        begin: /'''/,
        end: /'''/
      },
      {
        begin: /~S"""/,
        end: /"""/,
        contains: []
        // override default
      },
      {
        begin: /~S"/,
        end: /"/,
        contains: []
        // override default
      },
      {
        begin: /~S'''/,
        end: /'''/,
        contains: []
        // override default
      },
      {
        begin: /~S'/,
        end: /'/,
        contains: []
        // override default
      },
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /"/,
        end: /"/
      }
    ]
  }, _ = {
    className: "function",
    beginKeywords: "def defp defmacro defmacrop",
    end: /\B\b/,
    // the mode is ended by the title
    contains: [
      t.inherit(t.TITLE_MODE, {
        begin: r,
        endsParent: !0
      })
    ]
  }, y = t.inherit(_, {
    className: "class",
    beginKeywords: "defimpl defmodule defprotocol defrecord",
    end: /\bdo\b|$|;/
  }), b = [
    m,
    v,
    g,
    h,
    t.HASH_COMMENT_MODE,
    y,
    _,
    { begin: "::" },
    {
      className: "symbol",
      begin: ":(?![\\s:])",
      contains: [
        m,
        { begin: n }
      ],
      relevance: 0
    },
    {
      className: "symbol",
      begin: r + ":(?!:)",
      relevance: 0
    },
    {
      // Usage of a module, struct, etc.
      className: "title.class",
      begin: /(\b[A-Z][a-zA-Z0-9_]+)/,
      relevance: 0
    },
    l,
    {
      className: "variable",
      begin: "(\\$\\W)|((\\$|@@?)(\\w+))"
    }
    // -> has been removed, capnproto always uses this grammar construct
  ];
  return s.contains = b, {
    name: "Elixir",
    aliases: [
      "ex",
      "exs"
    ],
    keywords: o,
    contains: b
  };
}
const eae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Rj
}, Symbol.toStringTag, { value: "Module" }));
function Oj(t) {
  const e = { variants: [
    t.COMMENT("--", "$"),
    t.COMMENT(
      /\{-/,
      /-\}/,
      { contains: ["self"] }
    )
  ] }, r = {
    className: "type",
    begin: "\\b[A-Z][\\w']*",
    // TODO: other constructors (built-in, infix).
    relevance: 0
  }, n = {
    begin: "\\(",
    end: "\\)",
    illegal: '"',
    contains: [
      {
        className: "type",
        begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
      },
      e
    ]
  }, a = {
    begin: /\{/,
    end: /\}/,
    contains: n.contains
  }, i = {
    className: "string",
    begin: "'\\\\?.",
    end: "'",
    illegal: "."
  };
  return {
    name: "Elm",
    keywords: [
      "let",
      "in",
      "if",
      "then",
      "else",
      "case",
      "of",
      "where",
      "module",
      "import",
      "exposing",
      "type",
      "alias",
      "as",
      "infix",
      "infixl",
      "infixr",
      "port",
      "effect",
      "command",
      "subscription"
    ],
    contains: [
      // Top-level constructions.
      {
        beginKeywords: "port effect module",
        end: "exposing",
        keywords: "port effect module where command subscription exposing",
        contains: [
          n,
          e
        ],
        illegal: "\\W\\.|;"
      },
      {
        begin: "import",
        end: "$",
        keywords: "import as exposing",
        contains: [
          n,
          e
        ],
        illegal: "\\W\\.|;"
      },
      {
        begin: "type",
        end: "$",
        keywords: "type alias",
        contains: [
          r,
          n,
          a,
          e
        ]
      },
      {
        beginKeywords: "infix infixl infixr",
        end: "$",
        contains: [
          t.C_NUMBER_MODE,
          e
        ]
      },
      {
        begin: "port",
        end: "$",
        keywords: "port",
        contains: [e]
      },
      // Literals and names.
      i,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      r,
      t.inherit(t.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),
      e,
      {
        // No markup, relevance booster
        begin: "->|<-"
      }
    ],
    illegal: /;/
  };
}
const tae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Oj
}, Symbol.toStringTag, { value: "Module" }));
function Lj(t) {
  return {
    name: "ERB",
    subLanguage: "xml",
    contains: [
      t.COMMENT("<%#", "%>"),
      {
        begin: "<%[%=-]?",
        end: "[%-]?%>",
        subLanguage: "ruby",
        excludeBegin: !0,
        excludeEnd: !0
      }
    ]
  };
}
const rae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Lj
}, Symbol.toStringTag, { value: "Module" }));
function Pj(t) {
  const e = "[a-z'][a-zA-Z0-9_']*", r = "(" + e + ":" + e + "|" + e + ")", n = {
    keyword: "after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if let not of orelse|10 query receive rem try when xor maybe else",
    literal: "false true"
  }, a = t.COMMENT("%", "$"), i = {
    className: "number",
    begin: "\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",
    relevance: 0
  }, o = { begin: "fun\\s+" + e + "/\\d+" }, s = {
    begin: r + "\\(",
    end: "\\)",
    returnBegin: !0,
    relevance: 0,
    contains: [
      {
        begin: r,
        relevance: 0
      },
      {
        begin: "\\(",
        end: "\\)",
        endsWithParent: !0,
        returnEnd: !0,
        relevance: 0
        // "contains" defined later
      }
    ]
  }, l = {
    begin: /\{/,
    end: /\}/,
    relevance: 0
    // "contains" defined later
  }, u = {
    begin: "\\b_([A-Z][A-Za-z0-9_]*)?",
    relevance: 0
  }, c = {
    begin: "[A-Z][a-zA-Z0-9_]*",
    relevance: 0
  }, d = {
    begin: "#" + t.UNDERSCORE_IDENT_RE,
    relevance: 0,
    returnBegin: !0,
    contains: [
      {
        begin: "#" + t.UNDERSCORE_IDENT_RE,
        relevance: 0
      },
      {
        begin: /\{/,
        end: /\}/,
        relevance: 0
        // "contains" defined later
      }
    ]
  }, p = {
    scope: "string",
    match: /\$(\\([^0-9]|[0-9]{1,3}|)|.)/
  }, f = {
    scope: "string",
    match: /"""("*)(?!")[\s\S]*?"""\1/
  }, h = {
    scope: "string",
    contains: [t.BACKSLASH_ESCAPE],
    variants: [
      { match: /~\w?"""("*)(?!")[\s\S]*?"""\1/ },
      { begin: /~\w?\(/, end: /\)/ },
      { begin: /~\w?\[/, end: /\]/ },
      { begin: /~\w?{/, end: /}/ },
      { begin: /~\w?</, end: />/ },
      { begin: /~\w?\//, end: /\// },
      { begin: /~\w?\|/, end: /\|/ },
      { begin: /~\w?'/, end: /'/ },
      { begin: /~\w?"/, end: /"/ },
      { begin: /~\w?`/, end: /`/ },
      { begin: /~\w?#/, end: /#/ }
    ]
  }, g = {
    beginKeywords: "fun receive if try case maybe",
    end: "end",
    keywords: n
  };
  g.contains = [
    a,
    o,
    t.inherit(t.APOS_STRING_MODE, { className: "" }),
    g,
    s,
    h,
    f,
    t.QUOTE_STRING_MODE,
    i,
    l,
    u,
    c,
    d,
    p
  ];
  const v = [
    a,
    o,
    g,
    s,
    h,
    f,
    t.QUOTE_STRING_MODE,
    i,
    l,
    u,
    c,
    d,
    p
  ];
  s.contains[1].contains = v, l.contains = v, d.contains[1].contains = v;
  const m = [
    "-module",
    "-record",
    "-undef",
    "-export",
    "-ifdef",
    "-ifndef",
    "-author",
    "-copyright",
    "-doc",
    "-moduledoc",
    "-vsn",
    "-import",
    "-include",
    "-include_lib",
    "-compile",
    "-define",
    "-else",
    "-endif",
    "-file",
    "-behaviour",
    "-behavior",
    "-spec",
    "-on_load",
    "-nifs"
  ], _ = {
    className: "params",
    begin: "\\(",
    end: "\\)",
    contains: v
  };
  return {
    name: "Erlang",
    aliases: ["erl"],
    keywords: n,
    illegal: "(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))",
    contains: [
      {
        className: "function",
        begin: "^" + e + "\\s*\\(",
        end: "->",
        returnBegin: !0,
        illegal: "\\(|#|//|/\\*|\\\\|:|;",
        contains: [
          _,
          t.inherit(t.TITLE_MODE, { begin: e })
        ],
        starts: {
          end: ";|\\.",
          keywords: n,
          contains: v
        }
      },
      a,
      {
        begin: "^-",
        end: "\\.",
        relevance: 0,
        excludeEnd: !0,
        returnBegin: !0,
        keywords: {
          $pattern: "-" + t.IDENT_RE,
          keyword: m.map((y) => `${y}|1.5`).join(" ")
        },
        contains: [
          _,
          h,
          f,
          t.QUOTE_STRING_MODE
        ]
      },
      i,
      h,
      f,
      t.QUOTE_STRING_MODE,
      d,
      u,
      c,
      l,
      p,
      { begin: /\.$/ }
      // relevance booster
    ]
  };
}
const nae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Pj
}, Symbol.toStringTag, { value: "Module" }));
function kj(t) {
  const e = t.regex;
  return {
    name: "Erlang REPL",
    keywords: {
      built_in: "spawn spawn_link self",
      keyword: "after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse|10 query receive rem try when xor"
    },
    contains: [
      {
        className: "meta.prompt",
        begin: "^[0-9]+> ",
        relevance: 10
      },
      t.COMMENT("%", "$"),
      {
        className: "number",
        begin: "\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",
        relevance: 0
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      { begin: e.concat(
        /\?(::)?/,
        /([A-Z]\w*)/,
        // at least one identifier
        /((::)[A-Z]\w*)*/
        // perhaps more
      ) },
      { begin: "->" },
      { begin: "ok" },
      { begin: "!" },
      {
        begin: "(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",
        relevance: 0
      },
      {
        begin: "[A-Z][a-zA-Z0-9_']*",
        relevance: 0
      }
    ]
  };
}
const aae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kj
}, Symbol.toStringTag, { value: "Module" }));
function Bj(t) {
  return {
    name: "Excel formulae",
    aliases: [
      "xlsx",
      "xls"
    ],
    case_insensitive: !0,
    keywords: {
      $pattern: /[a-zA-Z][\w\.]*/,
      built_in: [
        "ABS",
        "ACCRINT",
        "ACCRINTM",
        "ACOS",
        "ACOSH",
        "ACOT",
        "ACOTH",
        "AGGREGATE",
        "ADDRESS",
        "AMORDEGRC",
        "AMORLINC",
        "AND",
        "ARABIC",
        "AREAS",
        "ARRAYTOTEXT",
        "ASC",
        "ASIN",
        "ASINH",
        "ATAN",
        "ATAN2",
        "ATANH",
        "AVEDEV",
        "AVERAGE",
        "AVERAGEA",
        "AVERAGEIF",
        "AVERAGEIFS",
        "BAHTTEXT",
        "BASE",
        "BESSELI",
        "BESSELJ",
        "BESSELK",
        "BESSELY",
        "BETADIST",
        "BETA.DIST",
        "BETAINV",
        "BETA.INV",
        "BIN2DEC",
        "BIN2HEX",
        "BIN2OCT",
        "BINOMDIST",
        "BINOM.DIST",
        "BINOM.DIST.RANGE",
        "BINOM.INV",
        "BITAND",
        "BITLSHIFT",
        "BITOR",
        "BITRSHIFT",
        "BITXOR",
        "BYCOL",
        "BYROW",
        "CALL",
        "CEILING",
        "CEILING.MATH",
        "CEILING.PRECISE",
        "CELL",
        "CHAR",
        "CHIDIST",
        "CHIINV",
        "CHITEST",
        "CHISQ.DIST",
        "CHISQ.DIST.RT",
        "CHISQ.INV",
        "CHISQ.INV.RT",
        "CHISQ.TEST",
        "CHOOSE",
        "CHOOSECOLS",
        "CHOOSEROWS",
        "CLEAN",
        "CODE",
        "COLUMN",
        "COLUMNS",
        "COMBIN",
        "COMBINA",
        "COMPLEX",
        "CONCAT",
        "CONCATENATE",
        "CONFIDENCE",
        "CONFIDENCE.NORM",
        "CONFIDENCE.T",
        "CONVERT",
        "CORREL",
        "COS",
        "COSH",
        "COT",
        "COTH",
        "COUNT",
        "COUNTA",
        "COUNTBLANK",
        "COUNTIF",
        "COUNTIFS",
        "COUPDAYBS",
        "COUPDAYS",
        "COUPDAYSNC",
        "COUPNCD",
        "COUPNUM",
        "COUPPCD",
        "COVAR",
        "COVARIANCE.P",
        "COVARIANCE.S",
        "CRITBINOM",
        "CSC",
        "CSCH",
        "CUBEKPIMEMBER",
        "CUBEMEMBER",
        "CUBEMEMBERPROPERTY",
        "CUBERANKEDMEMBER",
        "CUBESET",
        "CUBESETCOUNT",
        "CUBEVALUE",
        "CUMIPMT",
        "CUMPRINC",
        "DATE",
        "DATEDIF",
        "DATEVALUE",
        "DAVERAGE",
        "DAY",
        "DAYS",
        "DAYS360",
        "DB",
        "DBCS",
        "DCOUNT",
        "DCOUNTA",
        "DDB",
        "DEC2BIN",
        "DEC2HEX",
        "DEC2OCT",
        "DECIMAL",
        "DEGREES",
        "DELTA",
        "DEVSQ",
        "DGET",
        "DISC",
        "DMAX",
        "DMIN",
        "DOLLAR",
        "DOLLARDE",
        "DOLLARFR",
        "DPRODUCT",
        "DROP",
        "DSTDEV",
        "DSTDEVP",
        "DSUM",
        "DURATION",
        "DVAR",
        "DVARP",
        "EDATE",
        "EFFECT",
        "ENCODEURL",
        "EOMONTH",
        "ERF",
        "ERF.PRECISE",
        "ERFC",
        "ERFC.PRECISE",
        "ERROR.TYPE",
        "EUROCONVERT",
        "EVEN",
        "EXACT",
        "EXP",
        "EXPAND",
        "EXPON.DIST",
        "EXPONDIST",
        "FACT",
        "FACTDOUBLE",
        "FALSE",
        "F.DIST",
        "FDIST",
        "F.DIST.RT",
        "FILTER",
        "FILTERXML",
        "FIND",
        "FINDB",
        "F.INV",
        "F.INV.RT",
        "FINV",
        "FISHER",
        "FISHERINV",
        "FIXED",
        "FLOOR",
        "FLOOR.MATH",
        "FLOOR.PRECISE",
        "FORECAST",
        "FORECAST.ETS",
        "FORECAST.ETS.CONFINT",
        "FORECAST.ETS.SEASONALITY",
        "FORECAST.ETS.STAT",
        "FORECAST.LINEAR",
        "FORMULATEXT",
        "FREQUENCY",
        "F.TEST",
        "FTEST",
        "FV",
        "FVSCHEDULE",
        "GAMMA",
        "GAMMA.DIST",
        "GAMMADIST",
        "GAMMA.INV",
        "GAMMAINV",
        "GAMMALN",
        "GAMMALN.PRECISE",
        "GAUSS",
        "GCD",
        "GEOMEAN",
        "GESTEP",
        "GETPIVOTDATA",
        "GROWTH",
        "HARMEAN",
        "HEX2BIN",
        "HEX2DEC",
        "HEX2OCT",
        "HLOOKUP",
        "HOUR",
        "HSTACK",
        "HYPERLINK",
        "HYPGEOM.DIST",
        "HYPGEOMDIST",
        "IF",
        "IFERROR",
        "IFNA",
        "IFS",
        "IMABS",
        "IMAGE",
        "IMAGINARY",
        "IMARGUMENT",
        "IMCONJUGATE",
        "IMCOS",
        "IMCOSH",
        "IMCOT",
        "IMCSC",
        "IMCSCH",
        "IMDIV",
        "IMEXP",
        "IMLN",
        "IMLOG10",
        "IMLOG2",
        "IMPOWER",
        "IMPRODUCT",
        "IMREAL",
        "IMSEC",
        "IMSECH",
        "IMSIN",
        "IMSINH",
        "IMSQRT",
        "IMSUB",
        "IMSUM",
        "IMTAN",
        "INDEX",
        "INDIRECT",
        "INFO",
        "INT",
        "INTERCEPT",
        "INTRATE",
        "IPMT",
        "IRR",
        "ISBLANK",
        "ISERR",
        "ISERROR",
        "ISEVEN",
        "ISFORMULA",
        "ISLOGICAL",
        "ISNA",
        "ISNONTEXT",
        "ISNUMBER",
        "ISODD",
        "ISOMITTED",
        "ISREF",
        "ISTEXT",
        "ISO.CEILING",
        "ISOWEEKNUM",
        "ISPMT",
        "JIS",
        "KURT",
        "LAMBDA",
        "LARGE",
        "LCM",
        "LEFT",
        "LEFTB",
        "LEN",
        "LENB",
        "LET",
        "LINEST",
        "LN",
        "LOG",
        "LOG10",
        "LOGEST",
        "LOGINV",
        "LOGNORM.DIST",
        "LOGNORMDIST",
        "LOGNORM.INV",
        "LOOKUP",
        "LOWER",
        "MAKEARRAY",
        "MAP",
        "MATCH",
        "MAX",
        "MAXA",
        "MAXIFS",
        "MDETERM",
        "MDURATION",
        "MEDIAN",
        "MID",
        "MIDB",
        "MIN",
        "MINIFS",
        "MINA",
        "MINUTE",
        "MINVERSE",
        "MIRR",
        "MMULT",
        "MOD",
        "MODE",
        "MODE.MULT",
        "MODE.SNGL",
        "MONTH",
        "MROUND",
        "MULTINOMIAL",
        "MUNIT",
        "N",
        "NA",
        "NEGBINOM.DIST",
        "NEGBINOMDIST",
        "NETWORKDAYS",
        "NETWORKDAYS.INTL",
        "NOMINAL",
        "NORM.DIST",
        "NORMDIST",
        "NORMINV",
        "NORM.INV",
        "NORM.S.DIST",
        "NORMSDIST",
        "NORM.S.INV",
        "NORMSINV",
        "NOT",
        "NOW",
        "NPER",
        "NPV",
        "NUMBERVALUE",
        "OCT2BIN",
        "OCT2DEC",
        "OCT2HEX",
        "ODD",
        "ODDFPRICE",
        "ODDFYIELD",
        "ODDLPRICE",
        "ODDLYIELD",
        "OFFSET",
        "OR",
        "PDURATION",
        "PEARSON",
        "PERCENTILE.EXC",
        "PERCENTILE.INC",
        "PERCENTILE",
        "PERCENTRANK.EXC",
        "PERCENTRANK.INC",
        "PERCENTRANK",
        "PERMUT",
        "PERMUTATIONA",
        "PHI",
        "PHONETIC",
        "PI",
        "PMT",
        "POISSON.DIST",
        "POISSON",
        "POWER",
        "PPMT",
        "PRICE",
        "PRICEDISC",
        "PRICEMAT",
        "PROB",
        "PRODUCT",
        "PROPER",
        "PV",
        "QUARTILE",
        "QUARTILE.EXC",
        "QUARTILE.INC",
        "QUOTIENT",
        "RADIANS",
        "RAND",
        "RANDARRAY",
        "RANDBETWEEN",
        "RANK.AVG",
        "RANK.EQ",
        "RANK",
        "RATE",
        "RECEIVED",
        "REDUCE",
        "REGISTER.ID",
        "REPLACE",
        "REPLACEB",
        "REPT",
        "RIGHT",
        "RIGHTB",
        "ROMAN",
        "ROUND",
        "ROUNDDOWN",
        "ROUNDUP",
        "ROW",
        "ROWS",
        "RRI",
        "RSQ",
        "RTD",
        "SCAN",
        "SEARCH",
        "SEARCHB",
        "SEC",
        "SECH",
        "SECOND",
        "SEQUENCE",
        "SERIESSUM",
        "SHEET",
        "SHEETS",
        "SIGN",
        "SIN",
        "SINH",
        "SKEW",
        "SKEW.P",
        "SLN",
        "SLOPE",
        "SMALL",
        "SORT",
        "SORTBY",
        "SQRT",
        "SQRTPI",
        "SQL.REQUEST",
        "STANDARDIZE",
        "STOCKHISTORY",
        "STDEV",
        "STDEV.P",
        "STDEV.S",
        "STDEVA",
        "STDEVP",
        "STDEVPA",
        "STEYX",
        "SUBSTITUTE",
        "SUBTOTAL",
        "SUM",
        "SUMIF",
        "SUMIFS",
        "SUMPRODUCT",
        "SUMSQ",
        "SUMX2MY2",
        "SUMX2PY2",
        "SUMXMY2",
        "SWITCH",
        "SYD",
        "T",
        "TAN",
        "TANH",
        "TAKE",
        "TBILLEQ",
        "TBILLPRICE",
        "TBILLYIELD",
        "T.DIST",
        "T.DIST.2T",
        "T.DIST.RT",
        "TDIST",
        "TEXT",
        "TEXTAFTER",
        "TEXTBEFORE",
        "TEXTJOIN",
        "TEXTSPLIT",
        "TIME",
        "TIMEVALUE",
        "T.INV",
        "T.INV.2T",
        "TINV",
        "TOCOL",
        "TOROW",
        "TODAY",
        "TRANSPOSE",
        "TREND",
        "TRIM",
        "TRIMMEAN",
        "TRUE",
        "TRUNC",
        "T.TEST",
        "TTEST",
        "TYPE",
        "UNICHAR",
        "UNICODE",
        "UNIQUE",
        "UPPER",
        "VALUE",
        "VALUETOTEXT",
        "VAR",
        "VAR.P",
        "VAR.S",
        "VARA",
        "VARP",
        "VARPA",
        "VDB",
        "VLOOKUP",
        "VSTACK",
        "WEBSERVICE",
        "WEEKDAY",
        "WEEKNUM",
        "WEIBULL",
        "WEIBULL.DIST",
        "WORKDAY",
        "WORKDAY.INTL",
        "WRAPCOLS",
        "WRAPROWS",
        "XIRR",
        "XLOOKUP",
        "XMATCH",
        "XNPV",
        "XOR",
        "YEAR",
        "YEARFRAC",
        "YIELD",
        "YIELDDISC",
        "YIELDMAT",
        "Z.TEST",
        "ZTEST"
      ]
    },
    contains: [
      {
        /* matches a beginning equal sign found in Excel formula examples */
        begin: /^=/,
        end: /[^=]/,
        returnEnd: !0,
        illegal: /=/,
        /* only allow single equal sign at front of line */
        relevance: 10
      },
      /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */
      {
        /* matches a reference to a single cell */
        className: "symbol",
        begin: /\b[A-Z]{1,2}\d+\b/,
        end: /[^\d]/,
        excludeEnd: !0,
        relevance: 0
      },
      {
        /* matches a reference to a range of cells */
        className: "symbol",
        begin: /[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,
        relevance: 0
      },
      t.BACKSLASH_ESCAPE,
      t.QUOTE_STRING_MODE,
      {
        className: "number",
        begin: t.NUMBER_RE + "(%)?",
        relevance: 0
      },
      /* Excel formula comments are done by putting the comment in a function call to N() */
      t.COMMENT(
        /\bN\(/,
        /\)/,
        {
          excludeBegin: !0,
          excludeEnd: !0,
          illegal: /\n/
        }
      )
    ]
  };
}
const iae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Bj
}, Symbol.toStringTag, { value: "Module" }));
function Fj(t) {
  return {
    name: "FIX",
    contains: [
      {
        begin: /[^\u2401\u0001]+/,
        end: /[\u2401\u0001]/,
        excludeEnd: !0,
        returnBegin: !0,
        returnEnd: !1,
        contains: [
          {
            begin: /([^\u2401\u0001=]+)/,
            end: /=([^\u2401\u0001=]+)/,
            returnEnd: !0,
            returnBegin: !1,
            className: "attr"
          },
          {
            begin: /=/,
            end: /([\u2401\u0001])/,
            excludeEnd: !0,
            excludeBegin: !0,
            className: "string"
          }
        ]
      }
    ],
    case_insensitive: !0
  };
}
const oae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Fj
}, Symbol.toStringTag, { value: "Module" }));
function Gj(t) {
  const e = {
    className: "string",
    begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
  }, r = {
    className: "string",
    variants: [
      {
        begin: '"',
        end: '"'
      }
    ]
  }, a = {
    className: "function",
    beginKeywords: "def",
    end: /[:={\[(\n;]/,
    excludeEnd: !0,
    contains: [{
      className: "title",
      relevance: 0,
      begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/
    }]
  };
  return {
    name: "Flix",
    keywords: {
      keyword: [
        "case",
        "class",
        "def",
        "else",
        "enum",
        "if",
        "impl",
        "import",
        "in",
        "lat",
        "rel",
        "index",
        "let",
        "match",
        "namespace",
        "switch",
        "type",
        "yield",
        "with"
      ],
      literal: [
        "true",
        "false"
      ]
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      e,
      r,
      a,
      t.C_NUMBER_MODE
    ]
  };
}
const sae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gj
}, Symbol.toStringTag, { value: "Module" }));
function Uj(t) {
  const e = t.regex, r = {
    className: "params",
    begin: "\\(",
    end: "\\)"
  }, n = { variants: [
    t.COMMENT("!", "$", { relevance: 0 }),
    // allow FORTRAN 77 style comments
    t.COMMENT("^C[ ]", "$", { relevance: 0 }),
    t.COMMENT("^C$", "$", { relevance: 0 })
  ] }, a = /(_[a-z_\d]+)?/, i = /([de][+-]?\d+)?/, o = {
    className: "number",
    variants: [
      { begin: e.concat(/\b\d+/, /\.(\d*)/, i, a) },
      { begin: e.concat(/\b\d+/, i, a) },
      { begin: e.concat(/\.\d+/, i, a) }
    ],
    relevance: 0
  }, s = {
    className: "function",
    beginKeywords: "subroutine function program",
    illegal: "[${=\\n]",
    contains: [
      t.UNDERSCORE_TITLE_MODE,
      r
    ]
  }, l = {
    className: "string",
    relevance: 0,
    variants: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  };
  return {
    name: "Fortran",
    case_insensitive: !0,
    aliases: [
      "f90",
      "f95"
    ],
    keywords: {
      $pattern: /\b[a-z][a-z0-9_]+\b|\.[a-z][a-z0-9_]+\./,
      keyword: [
        "kind",
        "do",
        "concurrent",
        "local",
        "shared",
        "while",
        "private",
        "call",
        "intrinsic",
        "where",
        "elsewhere",
        "type",
        "endtype",
        "endmodule",
        "endselect",
        "endinterface",
        "end",
        "enddo",
        "endif",
        "if",
        "forall",
        "endforall",
        "only",
        "contains",
        "default",
        "return",
        "stop",
        "then",
        "block",
        "endblock",
        "endassociate",
        "public",
        "subroutine|10",
        "function",
        "program",
        ".and.",
        ".or.",
        ".not.",
        ".le.",
        ".eq.",
        ".ge.",
        ".gt.",
        ".lt.",
        "goto",
        "save",
        "else",
        "use",
        "module",
        "select",
        "case",
        "access",
        "blank",
        "direct",
        "exist",
        "file",
        "fmt",
        "form",
        "formatted",
        "iostat",
        "name",
        "named",
        "nextrec",
        "number",
        "opened",
        "rec",
        "recl",
        "sequential",
        "status",
        "unformatted",
        "unit",
        "continue",
        "format",
        "pause",
        "cycle",
        "exit",
        "c_null_char",
        "c_alert",
        "c_backspace",
        "c_form_feed",
        "flush",
        "wait",
        "decimal",
        "round",
        "iomsg",
        "synchronous",
        "nopass",
        "non_overridable",
        "pass",
        "protected",
        "volatile",
        "abstract",
        "extends",
        "import",
        "non_intrinsic",
        "value",
        "deferred",
        "generic",
        "final",
        "enumerator",
        "class",
        "associate",
        "bind",
        "enum",
        "c_int",
        "c_short",
        "c_long",
        "c_long_long",
        "c_signed_char",
        "c_size_t",
        "c_int8_t",
        "c_int16_t",
        "c_int32_t",
        "c_int64_t",
        "c_int_least8_t",
        "c_int_least16_t",
        "c_int_least32_t",
        "c_int_least64_t",
        "c_int_fast8_t",
        "c_int_fast16_t",
        "c_int_fast32_t",
        "c_int_fast64_t",
        "c_intmax_t",
        "C_intptr_t",
        "c_float",
        "c_double",
        "c_long_double",
        "c_float_complex",
        "c_double_complex",
        "c_long_double_complex",
        "c_bool",
        "c_char",
        "c_null_ptr",
        "c_null_funptr",
        "c_new_line",
        "c_carriage_return",
        "c_horizontal_tab",
        "c_vertical_tab",
        "iso_c_binding",
        "c_loc",
        "c_funloc",
        "c_associated",
        "c_f_pointer",
        "c_ptr",
        "c_funptr",
        "iso_fortran_env",
        "character_storage_size",
        "error_unit",
        "file_storage_size",
        "input_unit",
        "iostat_end",
        "iostat_eor",
        "numeric_storage_size",
        "output_unit",
        "c_f_procpointer",
        "ieee_arithmetic",
        "ieee_support_underflow_control",
        "ieee_get_underflow_mode",
        "ieee_set_underflow_mode",
        "newunit",
        "contiguous",
        "recursive",
        "pad",
        "position",
        "action",
        "delim",
        "readwrite",
        "eor",
        "advance",
        "nml",
        "interface",
        "procedure",
        "namelist",
        "include",
        "sequence",
        "elemental",
        "pure",
        "impure",
        "integer",
        "real",
        "character",
        "complex",
        "logical",
        "codimension",
        "dimension",
        "allocatable|10",
        "parameter",
        "external",
        "implicit|10",
        "none",
        "double",
        "precision",
        "assign",
        "intent",
        "optional",
        "pointer",
        "target",
        "in",
        "out",
        "common",
        "equivalence",
        "data"
      ],
      literal: [
        ".False.",
        ".True."
      ],
      built_in: [
        "alog",
        "alog10",
        "amax0",
        "amax1",
        "amin0",
        "amin1",
        "amod",
        "cabs",
        "ccos",
        "cexp",
        "clog",
        "csin",
        "csqrt",
        "dabs",
        "dacos",
        "dasin",
        "datan",
        "datan2",
        "dcos",
        "dcosh",
        "ddim",
        "dexp",
        "dint",
        "dlog",
        "dlog10",
        "dmax1",
        "dmin1",
        "dmod",
        "dnint",
        "dsign",
        "dsin",
        "dsinh",
        "dsqrt",
        "dtan",
        "dtanh",
        "float",
        "iabs",
        "idim",
        "idint",
        "idnint",
        "ifix",
        "isign",
        "max0",
        "max1",
        "min0",
        "min1",
        "sngl",
        "algama",
        "cdabs",
        "cdcos",
        "cdexp",
        "cdlog",
        "cdsin",
        "cdsqrt",
        "cqabs",
        "cqcos",
        "cqexp",
        "cqlog",
        "cqsin",
        "cqsqrt",
        "dcmplx",
        "dconjg",
        "derf",
        "derfc",
        "dfloat",
        "dgamma",
        "dimag",
        "dlgama",
        "iqint",
        "qabs",
        "qacos",
        "qasin",
        "qatan",
        "qatan2",
        "qcmplx",
        "qconjg",
        "qcos",
        "qcosh",
        "qdim",
        "qerf",
        "qerfc",
        "qexp",
        "qgamma",
        "qimag",
        "qlgama",
        "qlog",
        "qlog10",
        "qmax1",
        "qmin1",
        "qmod",
        "qnint",
        "qsign",
        "qsin",
        "qsinh",
        "qsqrt",
        "qtan",
        "qtanh",
        "abs",
        "acos",
        "aimag",
        "aint",
        "anint",
        "asin",
        "atan",
        "atan2",
        "char",
        "cmplx",
        "conjg",
        "cos",
        "cosh",
        "exp",
        "ichar",
        "index",
        "int",
        "log",
        "log10",
        "max",
        "min",
        "nint",
        "sign",
        "sin",
        "sinh",
        "sqrt",
        "tan",
        "tanh",
        "print",
        "write",
        "dim",
        "lge",
        "lgt",
        "lle",
        "llt",
        "mod",
        "nullify",
        "allocate",
        "deallocate",
        "adjustl",
        "adjustr",
        "all",
        "allocated",
        "any",
        "associated",
        "bit_size",
        "btest",
        "ceiling",
        "count",
        "cshift",
        "date_and_time",
        "digits",
        "dot_product",
        "eoshift",
        "epsilon",
        "exponent",
        "floor",
        "fraction",
        "huge",
        "iand",
        "ibclr",
        "ibits",
        "ibset",
        "ieor",
        "ior",
        "ishft",
        "ishftc",
        "lbound",
        "len_trim",
        "matmul",
        "maxexponent",
        "maxloc",
        "maxval",
        "merge",
        "minexponent",
        "minloc",
        "minval",
        "modulo",
        "mvbits",
        "nearest",
        "pack",
        "present",
        "product",
        "radix",
        "random_number",
        "random_seed",
        "range",
        "repeat",
        "reshape",
        "rrspacing",
        "scale",
        "scan",
        "selected_int_kind",
        "selected_real_kind",
        "set_exponent",
        "shape",
        "size",
        "spacing",
        "spread",
        "sum",
        "system_clock",
        "tiny",
        "transpose",
        "trim",
        "ubound",
        "unpack",
        "verify",
        "achar",
        "iachar",
        "transfer",
        "dble",
        "entry",
        "dprod",
        "cpu_time",
        "command_argument_count",
        "get_command",
        "get_command_argument",
        "get_environment_variable",
        "is_iostat_end",
        "ieee_arithmetic",
        "ieee_support_underflow_control",
        "ieee_get_underflow_mode",
        "ieee_set_underflow_mode",
        "is_iostat_eor",
        "move_alloc",
        "new_line",
        "selected_char_kind",
        "same_type_as",
        "extends_type_of",
        "acosh",
        "asinh",
        "atanh",
        "bessel_j0",
        "bessel_j1",
        "bessel_jn",
        "bessel_y0",
        "bessel_y1",
        "bessel_yn",
        "erf",
        "erfc",
        "erfc_scaled",
        "gamma",
        "log_gamma",
        "hypot",
        "norm2",
        "atomic_define",
        "atomic_ref",
        "execute_command_line",
        "leadz",
        "trailz",
        "storage_size",
        "merge_bits",
        "bge",
        "bgt",
        "ble",
        "blt",
        "dshiftl",
        "dshiftr",
        "findloc",
        "iall",
        "iany",
        "iparity",
        "image_index",
        "lcobound",
        "ucobound",
        "maskl",
        "maskr",
        "num_images",
        "parity",
        "popcnt",
        "poppar",
        "shifta",
        "shiftl",
        "shiftr",
        "this_image",
        "sync",
        "change",
        "team",
        "co_broadcast",
        "co_max",
        "co_min",
        "co_sum",
        "co_reduce"
      ]
    },
    illegal: /\/\*/,
    contains: [
      l,
      s,
      // allow `C = value` for assignments so they aren't misdetected
      // as Fortran 77 style comments
      {
        begin: /^C\s*=(?!=)/,
        relevance: 0
      },
      n,
      o
    ]
  };
}
const lae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Uj
}, Symbol.toStringTag, { value: "Module" }));
function zj(t) {
  return new RegExp(t.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"), "m");
}
function QO(t) {
  return t ? typeof t == "string" ? t : t.source : null;
}
function bl(t) {
  return qr("(?=", t, ")");
}
function qr(...t) {
  return t.map((r) => QO(r)).join("");
}
function Vj(t) {
  const e = t[t.length - 1];
  return typeof e == "object" && e.constructor === Object ? (t.splice(t.length - 1, 1), e) : {};
}
function Mi(...t) {
  return "(" + (Vj(t).capture ? "" : "?:") + t.map((n) => QO(n)).join("|") + ")";
}
function $j(t) {
  const e = [
    "abstract",
    "and",
    "as",
    "assert",
    "base",
    "begin",
    "class",
    "default",
    "delegate",
    "do",
    "done",
    "downcast",
    "downto",
    "elif",
    "else",
    "end",
    "exception",
    "extern",
    // "false", // literal
    "finally",
    "fixed",
    "for",
    "fun",
    "function",
    "global",
    "if",
    "in",
    "inherit",
    "inline",
    "interface",
    "internal",
    "lazy",
    "let",
    "match",
    "member",
    "module",
    "mutable",
    "namespace",
    "new",
    // "not", // built_in
    // "null", // literal
    "of",
    "open",
    "or",
    "override",
    "private",
    "public",
    "rec",
    "return",
    "static",
    "struct",
    "then",
    "to",
    // "true", // literal
    "try",
    "type",
    "upcast",
    "use",
    "val",
    "void",
    "when",
    "while",
    "with",
    "yield"
  ], r = {
    // monad builder keywords (matches before non-bang keywords)
    scope: "keyword",
    match: /\b(yield|return|let|do|match|use)!/
  }, n = [
    "if",
    "else",
    "endif",
    "line",
    "nowarn",
    "light",
    "r",
    "i",
    "I",
    "load",
    "time",
    "help",
    "quit"
  ], a = [
    "true",
    "false",
    "null",
    "Some",
    "None",
    "Ok",
    "Error",
    "infinity",
    "infinityf",
    "nan",
    "nanf"
  ], i = [
    "__LINE__",
    "__SOURCE_DIRECTORY__",
    "__SOURCE_FILE__"
  ], o = [
    // basic types
    "bool",
    "byte",
    "sbyte",
    "int8",
    "int16",
    "int32",
    "uint8",
    "uint16",
    "uint32",
    "int",
    "uint",
    "int64",
    "uint64",
    "nativeint",
    "unativeint",
    "decimal",
    "float",
    "double",
    "float32",
    "single",
    "char",
    "string",
    "unit",
    "bigint",
    // other native types or lowercase aliases
    "option",
    "voption",
    "list",
    "array",
    "seq",
    "byref",
    "exn",
    "inref",
    "nativeptr",
    "obj",
    "outref",
    "voidptr",
    // other important FSharp types
    "Result"
  ], l = {
    keyword: e,
    literal: a,
    built_in: [
      // Somewhat arbitrary list of builtin functions and values.
      // Most of them are declared in Microsoft.FSharp.Core
      // I tried to stay relevant by adding only the most idiomatic
      // and most used symbols that are not already declared as types.
      "not",
      "ref",
      "raise",
      "reraise",
      "dict",
      "readOnlyDict",
      "set",
      "get",
      "enum",
      "sizeof",
      "typeof",
      "typedefof",
      "nameof",
      "nullArg",
      "invalidArg",
      "invalidOp",
      "id",
      "fst",
      "snd",
      "ignore",
      "lock",
      "using",
      "box",
      "unbox",
      "tryUnbox",
      "printf",
      "printfn",
      "sprintf",
      "eprintf",
      "eprintfn",
      "fprintf",
      "fprintfn",
      "failwith",
      "failwithf"
    ],
    "variable.constant": i
  }, c = {
    variants: [
      t.COMMENT(/\(\*(?!\))/, /\*\)/, {
        contains: ["self"]
      }),
      t.C_LINE_COMMENT_MODE
    ]
  }, d = /[a-zA-Z_](\w|')*/, p = {
    scope: "variable",
    begin: /``/,
    end: /``/
  }, f = /\B('|\^)/, h = {
    scope: "symbol",
    variants: [
      // the type name is a quoted identifier:
      { match: qr(f, /``.*?``/) },
      // the type name is a normal identifier (we don't use IDENTIFIER_RE because there cannot be another apostrophe here):
      { match: qr(f, t.UNDERSCORE_IDENT_RE) }
    ],
    relevance: 0
  }, g = function({ includeEqual: L }) {
    let F;
    L ? F = "!%&*+-/<=>@^|~?" : F = "!%&*+-/<>@^|~?";
    const U = Array.from(F), z = qr("[", ...U.map(zj), "]"), H = Mi(z, /\./), Z = qr(H, bl(H)), ee = Mi(
      qr(Z, H, "*"),
      // Matches at least 2 chars operators
      qr(z, "+")
      // Matches at least one char operators
    );
    return {
      scope: "operator",
      match: Mi(
        // symbolic operators:
        ee,
        // other symbolic keywords:
        // Type casting and conversion operators:
        /:\?>/,
        /:\?/,
        /:>/,
        /:=/,
        // Reference cell assignment
        /::?/,
        // : or ::
        /\$/
      ),
      // A single $ can be used as an operator
      relevance: 0
    };
  }, v = g({ includeEqual: !0 }), m = g({ includeEqual: !1 }), _ = function(L, F) {
    return {
      begin: qr(
        // a type annotation is a
        L,
        // should be a colon or the 'of' keyword
        bl(
          // that has to be followed by
          qr(
            /\s*/,
            // optional space
            Mi(
              // then either of:
              /\w/,
              // word
              /'/,
              // generic type name
              /\^/,
              // generic type name
              /#/,
              // flexible type name
              /``/,
              // quoted type name
              /\(/,
              // parens type expression
              /{\|/
              // anonymous type annotation
            )
          )
        )
      ),
      beginScope: F,
      // BUG: because ending with \n is necessary for some cases, multi-line type annotations are not properly supported.
      // Examples where \n is required at the end:
      // - abstract member definitions in classes: abstract Property : int * string
      // - return type annotations: let f f' = f' () : returnTypeAnnotation
      // - record fields definitions: { A : int \n B : string }
      end: bl(
        Mi(
          /\n/,
          /=/
        )
      ),
      relevance: 0,
      // we need the known types, and we need the type constraint keywords and literals. e.g.: when 'a : null
      keywords: t.inherit(l, { type: o }),
      contains: [
        c,
        h,
        t.inherit(p, { scope: null }),
        // match to avoid strange patterns inside that may break the parsing
        m
      ]
    };
  }, y = _(/:/, "operator"), b = _(/\bof\b/, "keyword"), S = {
    begin: [
      /(^|\s+)/,
      // prevents matching the following: `match s.stype with`
      /type/,
      /\s+/,
      d
    ],
    beginScope: {
      2: "keyword",
      4: "title.class"
    },
    end: bl(/\(|=|$/),
    keywords: l,
    // match keywords in type constraints. e.g.: when 'a : null
    contains: [
      c,
      t.inherit(p, { scope: null }),
      // match to avoid strange patterns inside that may break the parsing
      h,
      {
        // For visual consistency, highlight type brackets as operators.
        scope: "operator",
        match: /<|>/
      },
      y
      // generic types can have constraints, which are type annotations. e.g. type MyType<'T when 'T : delegate<obj * string>> =
    ]
  }, E = {
    // computation expressions:
    scope: "computation-expression",
    // BUG: might conflict with record deconstruction. e.g. let f { Name = name } = name // will highlight f
    match: /\b[_a-z]\w*(?=\s*\{)/
  }, T = {
    // preprocessor directives and fsi commands:
    begin: [
      /^\s*/,
      qr(/#/, Mi(...n)),
      /\b/
    ],
    beginScope: { 2: "meta" },
    end: bl(/\s|$/)
  }, x = {
    variants: [
      t.BINARY_NUMBER_MODE,
      t.C_NUMBER_MODE
    ]
  }, C = {
    scope: "string",
    begin: /"/,
    end: /"/,
    contains: [
      t.BACKSLASH_ESCAPE
    ]
  }, A = {
    scope: "string",
    begin: /@"/,
    end: /"/,
    contains: [
      {
        match: /""/
        // escaped "
      },
      t.BACKSLASH_ESCAPE
    ]
  }, D = {
    scope: "string",
    begin: /"""/,
    end: /"""/,
    relevance: 2
  }, M = {
    scope: "subst",
    begin: /\{/,
    end: /\}/,
    keywords: l
  }, I = {
    scope: "string",
    begin: /\$"/,
    end: /"/,
    contains: [
      {
        match: /\{\{/
        // escaped {
      },
      {
        match: /\}\}/
        // escaped }
      },
      t.BACKSLASH_ESCAPE,
      M
    ]
  }, N = {
    scope: "string",
    begin: /(\$@|@\$)"/,
    end: /"/,
    contains: [
      {
        match: /\{\{/
        // escaped {
      },
      {
        match: /\}\}/
        // escaped }
      },
      {
        match: /""/
      },
      t.BACKSLASH_ESCAPE,
      M
    ]
  }, R = {
    scope: "string",
    begin: /\$"""/,
    end: /"""/,
    contains: [
      {
        match: /\{\{/
        // escaped {
      },
      {
        match: /\}\}/
        // escaped }
      },
      M
    ],
    relevance: 2
  }, O = {
    scope: "string",
    match: qr(
      /'/,
      Mi(
        /[^\\']/,
        // either a single non escaped char...
        /\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8})/
        // ...or an escape sequence
      ),
      /'/
    )
  };
  return M.contains = [
    N,
    I,
    A,
    C,
    O,
    r,
    c,
    p,
    y,
    E,
    T,
    x,
    h,
    v
  ], {
    name: "F#",
    aliases: [
      "fs",
      "f#"
    ],
    keywords: l,
    illegal: /\/\*/,
    classNameAliases: {
      "computation-expression": "keyword"
    },
    contains: [
      r,
      {
        variants: [
          R,
          N,
          I,
          D,
          A,
          C,
          O
        ]
      },
      c,
      p,
      S,
      {
        // e.g. [<Attributes("")>] or [<``module``: MyCustomAttributeThatWorksOnModules>]
        // or [<Sealed; NoEquality; NoComparison; CompiledName("FSharpAsync`1")>]
        scope: "meta",
        begin: /\[</,
        end: />\]/,
        relevance: 2,
        contains: [
          p,
          // can contain any constant value
          D,
          A,
          C,
          O,
          x
        ]
      },
      b,
      y,
      E,
      T,
      x,
      h,
      v
    ]
  };
}
const uae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $j
}, Symbol.toStringTag, { value: "Module" }));
function Hj(t) {
  const e = t.regex, r = {
    keyword: "abort acronym acronyms alias all and assign binary card diag display else eq file files for free ge gt if integer le loop lt maximizing minimizing model models ne negative no not option options or ord positive prod put putpage puttl repeat sameas semicont semiint smax smin solve sos1 sos2 sum system table then until using while xor yes",
    literal: "eps inf na",
    built_in: "abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power randBinomial randLinear randTriangle round rPower sigmoid sign signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion handleCollect handleDelete handleStatus handleSubmit heapFree heapLimit heapSize jobHandle jobKill jobStatus jobTerminate licenseLevel licenseStatus maxExecError sleep timeClose timeComp timeElapsed timeExec timeStart"
  }, n = {
    className: "params",
    begin: /\(/,
    end: /\)/,
    excludeBegin: !0,
    excludeEnd: !0
  }, a = {
    className: "symbol",
    variants: [
      { begin: /=[lgenxc]=/ },
      { begin: /\$/ }
    ]
  }, i = {
    // One-line quoted comment string
    className: "comment",
    variants: [
      {
        begin: "'",
        end: "'"
      },
      {
        begin: '"',
        end: '"'
      }
    ],
    illegal: "\\n",
    contains: [t.BACKSLASH_ESCAPE]
  }, o = {
    begin: "/",
    end: "/",
    keywords: r,
    contains: [
      i,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      t.C_NUMBER_MODE
    ]
  }, s = /[a-z0-9&#*=?@\\><:,()$[\]_.{}!+%^-]+/, l = {
    // Parameter/set/variable description text
    begin: /[a-z][a-z0-9_]*(\([a-z0-9_, ]*\))?[ \t]+/,
    excludeBegin: !0,
    end: "$",
    endsWithParent: !0,
    contains: [
      i,
      o,
      {
        className: "comment",
        // one comment word, then possibly more
        begin: e.concat(
          s,
          // [ ] because \s would be too broad (matching newlines)
          e.anyNumberOfTimes(e.concat(/[ ]+/, s))
        ),
        relevance: 0
      }
    ]
  };
  return {
    name: "GAMS",
    aliases: ["gms"],
    case_insensitive: !0,
    keywords: r,
    contains: [
      t.COMMENT(/^\$ontext/, /^\$offtext/),
      {
        className: "meta",
        begin: "^\\$[a-z0-9]+",
        end: "$",
        returnBegin: !0,
        contains: [
          {
            className: "keyword",
            begin: "^\\$[a-z0-9]+"
          }
        ]
      },
      t.COMMENT("^\\*", "$"),
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      // Declarations
      {
        beginKeywords: "set sets parameter parameters variable variables scalar scalars equation equations",
        end: ";",
        contains: [
          t.COMMENT("^\\*", "$"),
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE,
          t.QUOTE_STRING_MODE,
          t.APOS_STRING_MODE,
          o,
          l
        ]
      },
      {
        // table environment
        beginKeywords: "table",
        end: ";",
        returnBegin: !0,
        contains: [
          {
            // table header row
            beginKeywords: "table",
            end: "$",
            contains: [l]
          },
          t.COMMENT("^\\*", "$"),
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE,
          t.QUOTE_STRING_MODE,
          t.APOS_STRING_MODE,
          t.C_NUMBER_MODE
          // Table does not contain DESCTEXT or ASSIGNMENT
        ]
      },
      // Function definitions
      {
        className: "function",
        begin: /^[a-z][a-z0-9_,\-+' ()$]+\.{2}/,
        returnBegin: !0,
        contains: [
          {
            // Function title
            className: "title",
            begin: /^[a-z0-9_]+/
          },
          n,
          a
        ]
      },
      t.C_NUMBER_MODE,
      a
    ]
  };
}
const cae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Hj
}, Symbol.toStringTag, { value: "Module" }));
function Wj(t) {
  const e = {
    keyword: "bool break call callexe checkinterrupt clear clearg closeall cls comlog compile continue create debug declare delete disable dlibrary dllcall do dos ed edit else elseif enable end endfor endif endp endo errorlog errorlogat expr external fn for format goto gosub graph if keyword let lib library line load loadarray loadexe loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow matrix msym ndpclex new open output outwidth plot plotsym pop prcsn print printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen scroll setarray show sparse stop string struct system trace trap threadfor threadendfor threadbegin threadjoin threadstat threadend until use while winprint ne ge le gt lt and xor or not eq eqv",
    built_in: "abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin sylvester strtrim",
    literal: "DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES DB_TRANSACTIONS DB_UNICODE DB_VIEWS __STDIN __STDOUT __STDERR __FILE_DIR"
  }, r = t.COMMENT("@", "@"), n = {
    className: "meta",
    begin: "#",
    end: "$",
    keywords: { keyword: "define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline" },
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      {
        beginKeywords: "include",
        end: "$",
        keywords: { keyword: "include" },
        contains: [
          {
            className: "string",
            begin: '"',
            end: '"',
            illegal: "\\n"
          }
        ]
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      r
    ]
  }, a = {
    begin: /\bstruct\s+/,
    end: /\s/,
    keywords: "struct",
    contains: [
      {
        className: "type",
        begin: t.UNDERSCORE_IDENT_RE,
        relevance: 0
      }
    ]
  }, i = [
    {
      className: "params",
      begin: /\(/,
      end: /\)/,
      excludeBegin: !0,
      excludeEnd: !0,
      endsWithParent: !0,
      relevance: 0,
      contains: [
        {
          // dots
          className: "literal",
          begin: /\.\.\./
        },
        t.C_NUMBER_MODE,
        t.C_BLOCK_COMMENT_MODE,
        r,
        a
      ]
    }
  ], o = {
    className: "title",
    begin: t.UNDERSCORE_IDENT_RE,
    relevance: 0
  }, s = function(p, f, h) {
    const g = t.inherit(
      {
        className: "function",
        beginKeywords: p,
        end: f,
        excludeEnd: !0,
        contains: [].concat(i)
      },
      {}
    );
    return g.contains.push(o), g.contains.push(t.C_NUMBER_MODE), g.contains.push(t.C_BLOCK_COMMENT_MODE), g.contains.push(r), g;
  }, l = {
    // these are explicitly named internal function calls
    className: "built_in",
    begin: "\\b(" + e.built_in.split(" ").join("|") + ")\\b"
  }, u = {
    className: "string",
    begin: '"',
    end: '"',
    contains: [t.BACKSLASH_ESCAPE],
    relevance: 0
  }, c = {
    // className: "fn_ref",
    begin: t.UNDERSCORE_IDENT_RE + "\\s*\\(",
    returnBegin: !0,
    keywords: e,
    relevance: 0,
    contains: [
      { beginKeywords: e.keyword },
      l,
      {
        // ambiguously named function calls get a relevance of 0
        className: "built_in",
        begin: t.UNDERSCORE_IDENT_RE,
        relevance: 0
      }
    ]
  }, d = {
    // className: "fn_ref_params",
    begin: /\(/,
    end: /\)/,
    relevance: 0,
    keywords: {
      built_in: e.built_in,
      literal: e.literal
    },
    contains: [
      t.C_NUMBER_MODE,
      t.C_BLOCK_COMMENT_MODE,
      r,
      l,
      c,
      u,
      "self"
    ]
  };
  return c.contains.push(d), {
    name: "GAUSS",
    aliases: ["gss"],
    case_insensitive: !0,
    // language is case-insensitive
    keywords: e,
    illegal: /(\{[%#]|[%#]\}| <- )/,
    contains: [
      t.C_NUMBER_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      r,
      u,
      n,
      {
        className: "keyword",
        begin: /\bexternal (matrix|string|array|sparse matrix|struct|proc|keyword|fn)/
      },
      s("proc keyword", ";"),
      s("fn", "="),
      {
        beginKeywords: "for threadfor",
        end: /;/,
        // end: /\(/,
        relevance: 0,
        contains: [
          t.C_BLOCK_COMMENT_MODE,
          r,
          d
        ]
      },
      {
        // custom method guard
        // excludes method names from keyword processing
        variants: [
          { begin: t.UNDERSCORE_IDENT_RE + "\\." + t.UNDERSCORE_IDENT_RE },
          { begin: t.UNDERSCORE_IDENT_RE + "\\s*=" }
        ],
        relevance: 0
      },
      c,
      a
    ]
  };
}
const dae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Wj
}, Symbol.toStringTag, { value: "Module" }));
function qj(t) {
  const e = t.regex, r = {
    $pattern: /[A-Z]+|%/,
    keyword: [
      // conditions
      "THEN",
      "ELSE",
      "ENDIF",
      "IF",
      // controls
      "GOTO",
      "DO",
      "WHILE",
      "WH",
      "END",
      "CALL",
      // scoping
      "SUB",
      "ENDSUB",
      // comparisons
      "EQ",
      "NE",
      "LT",
      "GT",
      "LE",
      "GE",
      "AND",
      "OR",
      "XOR",
      // start/end of program
      "%"
    ],
    built_in: [
      "ATAN",
      "ABS",
      "ACOS",
      "ASIN",
      "COS",
      "EXP",
      "FIX",
      "FUP",
      "ROUND",
      "LN",
      "SIN",
      "SQRT",
      "TAN",
      "EXISTS"
    ]
  }, n = /\b/;
  function a(f, h) {
    if (f.index === 0)
      return;
    const g = f.input[f.index - 1];
    g >= "0" && g <= "9" || g !== "_" && h.ignoreMatch();
  }
  const i = /[+-]?((\.\d+)|(\d+)(\.\d*)?)/, o = /[GM]\s*\d+(\.\d+)?/, s = /T\s*\d+/, l = /O\s*\d+/, u = /O<.+>/, c = /[ABCUVWXYZ]\s*/, d = /[FHIJKPQRS]\s*/, p = [
    // comments
    t.COMMENT(/\(/, /\)/),
    t.COMMENT(/;/, /$/),
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    t.C_NUMBER_MODE,
    // gcodes
    {
      scope: "title.function",
      variants: [
        // G General functions: G0, G5.1, G5.2, …
        // M Misc functions: M0, M55.6, M199, …
        { match: e.concat(n, o) },
        {
          begin: o,
          "on:begin": a
        },
        // T Tools
        { match: e.concat(n, s) },
        {
          begin: s,
          "on:begin": a
        }
      ]
    },
    {
      scope: "symbol",
      variants: [
        // O Subroutine ID: O100, O110, …
        { match: e.concat(n, l) },
        {
          begin: l,
          "on:begin": a
        },
        // O Subroutine name: O<some>, …
        { match: e.concat(n, u) },
        {
          begin: u,
          "on:begin": a
        },
        // Checksum at end of line: *71, *199, …
        { match: /\*\s*\d+\s*$/ }
      ]
    },
    {
      scope: "operator",
      // N Line number: N1, N2, N1020, …
      match: /^N\s*\d+/
    },
    {
      scope: "variable",
      match: /-?#\s*\d+/
    },
    {
      scope: "property",
      // Physical axes,
      variants: [
        { match: e.concat(n, c, i) },
        {
          begin: e.concat(c, i),
          "on:begin": a
        }
      ]
    },
    {
      scope: "params",
      // Different types of parameters
      variants: [
        { match: e.concat(n, d, i) },
        {
          begin: e.concat(d, i),
          "on:begin": a
        }
      ]
    }
  ];
  return {
    name: "G-code (ISO 6983)",
    aliases: ["nc"],
    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.
    // However, most prefer all uppercase and uppercase is customary.
    case_insensitive: !0,
    // TODO: post v12 with the use of look-behind this can be enabled
    disableAutodetect: !0,
    keywords: r,
    contains: p
  };
}
const pae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qj
}, Symbol.toStringTag, { value: "Module" }));
function Yj(t) {
  return {
    name: "Gherkin",
    aliases: ["feature"],
    keywords: "Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When",
    contains: [
      {
        className: "symbol",
        begin: "\\*",
        relevance: 0
      },
      {
        className: "meta",
        begin: "@[^@\\s]+"
      },
      {
        begin: "\\|",
        end: "\\|\\w*$",
        contains: [
          {
            className: "string",
            begin: "[^|]+"
          }
        ]
      },
      {
        className: "variable",
        begin: "<",
        end: ">"
      },
      t.HASH_COMMENT_MODE,
      {
        className: "string",
        begin: '"""',
        end: '"""'
      },
      t.QUOTE_STRING_MODE
    ]
  };
}
const fae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Yj
}, Symbol.toStringTag, { value: "Module" }));
function Kj(t) {
  return {
    name: "GLSL",
    keywords: {
      keyword: (
        // Statements
        "break continue discard do else for if return while switch case default attribute binding buffer ccw centroid centroid varying coherent column_major const cw depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip triangles triangles_adjacency uniform varying vertices volatile writeonly"
      ),
      type: "atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void",
      built_in: (
        // Constants
        "gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow"
      ),
      literal: "true false"
    },
    illegal: '"',
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.C_NUMBER_MODE,
      {
        className: "meta",
        begin: "#",
        end: "$"
      }
    ]
  };
}
const hae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Kj
}, Symbol.toStringTag, { value: "Module" }));
function Zj(t) {
  return {
    name: "GML",
    case_insensitive: !1,
    // language is case-insensitive
    keywords: {
      keyword: [
        "#endregion",
        "#macro",
        "#region",
        "and",
        "begin",
        "break",
        "case",
        "constructor",
        "continue",
        "default",
        "delete",
        "div",
        "do",
        "else",
        "end",
        "enum",
        "exit",
        "for",
        "function",
        "globalvar",
        "if",
        "mod",
        "new",
        "not",
        "or",
        "repeat",
        "return",
        "static",
        "switch",
        "then",
        "until",
        "var",
        "while",
        "with",
        "xor"
      ],
      built_in: [
        "abs",
        "alarm_get",
        "alarm_set",
        "angle_difference",
        "animcurve_channel_evaluate",
        "animcurve_channel_new",
        "animcurve_create",
        "animcurve_destroy",
        "animcurve_exists",
        "animcurve_get",
        "animcurve_get_channel",
        "animcurve_get_channel_index",
        "animcurve_point_new",
        "ansi_char",
        "application_get_position",
        "application_surface_draw_enable",
        "application_surface_enable",
        "application_surface_is_enabled",
        "arccos",
        "arcsin",
        "arctan",
        "arctan2",
        "array_all",
        "array_any",
        "array_concat",
        "array_contains",
        "array_contains_ext",
        "array_copy",
        "array_copy_while",
        "array_create",
        "array_create_ext",
        "array_delete",
        "array_equals",
        "array_filter",
        "array_filter_ext",
        "array_find_index",
        "array_first",
        "array_foreach",
        "array_get",
        "array_get_index",
        "array_insert",
        "array_intersection",
        "array_last",
        "array_length",
        "array_map",
        "array_map_ext",
        "array_pop",
        "array_push",
        "array_reduce",
        "array_resize",
        "array_reverse",
        "array_reverse_ext",
        "array_set",
        "array_shuffle",
        "array_shuffle_ext",
        "array_sort",
        "array_union",
        "array_unique",
        "array_unique_ext",
        "asset_add_tags",
        "asset_clear_tags",
        "asset_get_ids",
        "asset_get_index",
        "asset_get_tags",
        "asset_get_type",
        "asset_has_any_tag",
        "asset_has_tags",
        "asset_remove_tags",
        "audio_bus_clear_emitters",
        "audio_bus_create",
        "audio_bus_get_emitters",
        "audio_channel_num",
        "audio_create_buffer_sound",
        "audio_create_play_queue",
        "audio_create_stream",
        "audio_create_sync_group",
        "audio_debug",
        "audio_destroy_stream",
        "audio_destroy_sync_group",
        "audio_effect_create",
        "audio_emitter_bus",
        "audio_emitter_create",
        "audio_emitter_exists",
        "audio_emitter_falloff",
        "audio_emitter_free",
        "audio_emitter_gain",
        "audio_emitter_get_bus",
        "audio_emitter_get_gain",
        "audio_emitter_get_listener_mask",
        "audio_emitter_get_pitch",
        "audio_emitter_get_vx",
        "audio_emitter_get_vy",
        "audio_emitter_get_vz",
        "audio_emitter_get_x",
        "audio_emitter_get_y",
        "audio_emitter_get_z",
        "audio_emitter_pitch",
        "audio_emitter_position",
        "audio_emitter_set_listener_mask",
        "audio_emitter_velocity",
        "audio_exists",
        "audio_falloff_set_model",
        "audio_free_buffer_sound",
        "audio_free_play_queue",
        "audio_get_listener_count",
        "audio_get_listener_info",
        "audio_get_listener_mask",
        "audio_get_master_gain",
        "audio_get_name",
        "audio_get_recorder_count",
        "audio_get_recorder_info",
        "audio_get_type",
        "audio_group_get_assets",
        "audio_group_get_gain",
        "audio_group_is_loaded",
        "audio_group_load",
        "audio_group_load_progress",
        "audio_group_name",
        "audio_group_set_gain",
        "audio_group_stop_all",
        "audio_group_unload",
        "audio_is_paused",
        "audio_is_playing",
        "audio_listener_get_data",
        "audio_listener_orientation",
        "audio_listener_position",
        "audio_listener_set_orientation",
        "audio_listener_set_position",
        "audio_listener_set_velocity",
        "audio_listener_velocity",
        "audio_master_gain",
        "audio_pause_all",
        "audio_pause_sound",
        "audio_pause_sync_group",
        "audio_play_in_sync_group",
        "audio_play_sound",
        "audio_play_sound_at",
        "audio_play_sound_ext",
        "audio_play_sound_on",
        "audio_queue_sound",
        "audio_resume_all",
        "audio_resume_sound",
        "audio_resume_sync_group",
        "audio_set_listener_mask",
        "audio_set_master_gain",
        "audio_sound_gain",
        "audio_sound_get_audio_group",
        "audio_sound_get_gain",
        "audio_sound_get_listener_mask",
        "audio_sound_get_loop",
        "audio_sound_get_loop_end",
        "audio_sound_get_loop_start",
        "audio_sound_get_pitch",
        "audio_sound_get_track_position",
        "audio_sound_is_playable",
        "audio_sound_length",
        "audio_sound_loop",
        "audio_sound_loop_end",
        "audio_sound_loop_start",
        "audio_sound_pitch",
        "audio_sound_set_listener_mask",
        "audio_sound_set_track_position",
        "audio_start_recording",
        "audio_start_sync_group",
        "audio_stop_all",
        "audio_stop_recording",
        "audio_stop_sound",
        "audio_stop_sync_group",
        "audio_sync_group_debug",
        "audio_sync_group_get_track_pos",
        "audio_sync_group_is_paused",
        "audio_sync_group_is_playing",
        "audio_system_is_available",
        "audio_system_is_initialised",
        "base64_decode",
        "base64_encode",
        "bool",
        "browser_input_capture",
        "buffer_async_group_begin",
        "buffer_async_group_end",
        "buffer_async_group_option",
        "buffer_base64_decode",
        "buffer_base64_decode_ext",
        "buffer_base64_encode",
        "buffer_compress",
        "buffer_copy",
        "buffer_copy_from_vertex_buffer",
        "buffer_copy_stride",
        "buffer_crc32",
        "buffer_create",
        "buffer_create_from_vertex_buffer",
        "buffer_create_from_vertex_buffer_ext",
        "buffer_decompress",
        "buffer_delete",
        "buffer_exists",
        "buffer_fill",
        "buffer_get_address",
        "buffer_get_alignment",
        "buffer_get_size",
        "buffer_get_surface",
        "buffer_get_type",
        "buffer_load",
        "buffer_load_async",
        "buffer_load_ext",
        "buffer_load_partial",
        "buffer_md5",
        "buffer_peek",
        "buffer_poke",
        "buffer_read",
        "buffer_resize",
        "buffer_save",
        "buffer_save_async",
        "buffer_save_ext",
        "buffer_seek",
        "buffer_set_surface",
        "buffer_set_used_size",
        "buffer_sha1",
        "buffer_sizeof",
        "buffer_tell",
        "buffer_write",
        "call_cancel",
        "call_later",
        "camera_apply",
        "camera_copy_transforms",
        "camera_create",
        "camera_create_view",
        "camera_destroy",
        "camera_get_active",
        "camera_get_begin_script",
        "camera_get_default",
        "camera_get_end_script",
        "camera_get_proj_mat",
        "camera_get_update_script",
        "camera_get_view_angle",
        "camera_get_view_border_x",
        "camera_get_view_border_y",
        "camera_get_view_height",
        "camera_get_view_mat",
        "camera_get_view_speed_x",
        "camera_get_view_speed_y",
        "camera_get_view_target",
        "camera_get_view_width",
        "camera_get_view_x",
        "camera_get_view_y",
        "camera_set_begin_script",
        "camera_set_default",
        "camera_set_end_script",
        "camera_set_proj_mat",
        "camera_set_update_script",
        "camera_set_view_angle",
        "camera_set_view_border",
        "camera_set_view_mat",
        "camera_set_view_pos",
        "camera_set_view_size",
        "camera_set_view_speed",
        "camera_set_view_target",
        "ceil",
        "choose",
        "chr",
        "clamp",
        "clickable_add",
        "clickable_add_ext",
        "clickable_change",
        "clickable_change_ext",
        "clickable_delete",
        "clickable_exists",
        "clickable_set_style",
        "clipboard_get_text",
        "clipboard_has_text",
        "clipboard_set_text",
        "cloud_file_save",
        "cloud_string_save",
        "cloud_synchronise",
        "code_is_compiled",
        "collision_circle",
        "collision_circle_list",
        "collision_ellipse",
        "collision_ellipse_list",
        "collision_line",
        "collision_line_list",
        "collision_point",
        "collision_point_list",
        "collision_rectangle",
        "collision_rectangle_list",
        "color_get_blue",
        "color_get_green",
        "color_get_hue",
        "color_get_red",
        "color_get_saturation",
        "color_get_value",
        "colour_get_blue",
        "colour_get_green",
        "colour_get_hue",
        "colour_get_red",
        "colour_get_saturation",
        "colour_get_value",
        "cos",
        "darccos",
        "darcsin",
        "darctan",
        "darctan2",
        "date_compare_date",
        "date_compare_datetime",
        "date_compare_time",
        "date_create_datetime",
        "date_current_datetime",
        "date_date_of",
        "date_date_string",
        "date_datetime_string",
        "date_day_span",
        "date_days_in_month",
        "date_days_in_year",
        "date_get_day",
        "date_get_day_of_year",
        "date_get_hour",
        "date_get_hour_of_year",
        "date_get_minute",
        "date_get_minute_of_year",
        "date_get_month",
        "date_get_second",
        "date_get_second_of_year",
        "date_get_timezone",
        "date_get_week",
        "date_get_weekday",
        "date_get_year",
        "date_hour_span",
        "date_inc_day",
        "date_inc_hour",
        "date_inc_minute",
        "date_inc_month",
        "date_inc_second",
        "date_inc_week",
        "date_inc_year",
        "date_is_today",
        "date_leap_year",
        "date_minute_span",
        "date_month_span",
        "date_second_span",
        "date_set_timezone",
        "date_time_of",
        "date_time_string",
        "date_valid_datetime",
        "date_week_span",
        "date_year_span",
        "db_to_lin",
        "dbg_add_font_glyphs",
        "dbg_button",
        "dbg_checkbox",
        "dbg_color",
        "dbg_colour",
        "dbg_drop_down",
        "dbg_same_line",
        "dbg_section",
        "dbg_section_delete",
        "dbg_section_exists",
        "dbg_slider",
        "dbg_slider_int",
        "dbg_sprite",
        "dbg_text",
        "dbg_text_input",
        "dbg_view",
        "dbg_view_delete",
        "dbg_view_exists",
        "dbg_watch",
        "dcos",
        "debug_event",
        "debug_get_callstack",
        "degtorad",
        "device_get_tilt_x",
        "device_get_tilt_y",
        "device_get_tilt_z",
        "device_is_keypad_open",
        "device_mouse_check_button",
        "device_mouse_check_button_pressed",
        "device_mouse_check_button_released",
        "device_mouse_dbclick_enable",
        "device_mouse_raw_x",
        "device_mouse_raw_y",
        "device_mouse_x",
        "device_mouse_x_to_gui",
        "device_mouse_y",
        "device_mouse_y_to_gui",
        "directory_create",
        "directory_destroy",
        "directory_exists",
        "display_get_dpi_x",
        "display_get_dpi_y",
        "display_get_frequency",
        "display_get_gui_height",
        "display_get_gui_width",
        "display_get_height",
        "display_get_orientation",
        "display_get_sleep_margin",
        "display_get_timing_method",
        "display_get_width",
        "display_mouse_get_x",
        "display_mouse_get_y",
        "display_mouse_set",
        "display_reset",
        "display_set_gui_maximise",
        "display_set_gui_maximize",
        "display_set_gui_size",
        "display_set_sleep_margin",
        "display_set_timing_method",
        "display_set_ui_visibility",
        "distance_to_object",
        "distance_to_point",
        "dot_product",
        "dot_product_3d",
        "dot_product_3d_normalised",
        "dot_product_3d_normalized",
        "dot_product_normalised",
        "dot_product_normalized",
        "draw_arrow",
        "draw_button",
        "draw_circle",
        "draw_circle_color",
        "draw_circle_colour",
        "draw_clear",
        "draw_clear_alpha",
        "draw_ellipse",
        "draw_ellipse_color",
        "draw_ellipse_colour",
        "draw_enable_drawevent",
        "draw_enable_skeleton_blendmodes",
        "draw_enable_swf_aa",
        "draw_flush",
        "draw_get_alpha",
        "draw_get_color",
        "draw_get_colour",
        "draw_get_enable_skeleton_blendmodes",
        "draw_get_font",
        "draw_get_halign",
        "draw_get_lighting",
        "draw_get_swf_aa_level",
        "draw_get_valign",
        "draw_getpixel",
        "draw_getpixel_ext",
        "draw_healthbar",
        "draw_highscore",
        "draw_light_define_ambient",
        "draw_light_define_direction",
        "draw_light_define_point",
        "draw_light_enable",
        "draw_light_get",
        "draw_light_get_ambient",
        "draw_line",
        "draw_line_color",
        "draw_line_colour",
        "draw_line_width",
        "draw_line_width_color",
        "draw_line_width_colour",
        "draw_path",
        "draw_point",
        "draw_point_color",
        "draw_point_colour",
        "draw_primitive_begin",
        "draw_primitive_begin_texture",
        "draw_primitive_end",
        "draw_rectangle",
        "draw_rectangle_color",
        "draw_rectangle_colour",
        "draw_roundrect",
        "draw_roundrect_color",
        "draw_roundrect_color_ext",
        "draw_roundrect_colour",
        "draw_roundrect_colour_ext",
        "draw_roundrect_ext",
        "draw_self",
        "draw_set_alpha",
        "draw_set_circle_precision",
        "draw_set_color",
        "draw_set_colour",
        "draw_set_font",
        "draw_set_halign",
        "draw_set_lighting",
        "draw_set_swf_aa_level",
        "draw_set_valign",
        "draw_skeleton",
        "draw_skeleton_collision",
        "draw_skeleton_instance",
        "draw_skeleton_time",
        "draw_sprite",
        "draw_sprite_ext",
        "draw_sprite_general",
        "draw_sprite_part",
        "draw_sprite_part_ext",
        "draw_sprite_pos",
        "draw_sprite_stretched",
        "draw_sprite_stretched_ext",
        "draw_sprite_tiled",
        "draw_sprite_tiled_ext",
        "draw_surface",
        "draw_surface_ext",
        "draw_surface_general",
        "draw_surface_part",
        "draw_surface_part_ext",
        "draw_surface_stretched",
        "draw_surface_stretched_ext",
        "draw_surface_tiled",
        "draw_surface_tiled_ext",
        "draw_text",
        "draw_text_color",
        "draw_text_colour",
        "draw_text_ext",
        "draw_text_ext_color",
        "draw_text_ext_colour",
        "draw_text_ext_transformed",
        "draw_text_ext_transformed_color",
        "draw_text_ext_transformed_colour",
        "draw_text_transformed",
        "draw_text_transformed_color",
        "draw_text_transformed_colour",
        "draw_texture_flush",
        "draw_tile",
        "draw_tilemap",
        "draw_triangle",
        "draw_triangle_color",
        "draw_triangle_colour",
        "draw_vertex",
        "draw_vertex_color",
        "draw_vertex_colour",
        "draw_vertex_texture",
        "draw_vertex_texture_color",
        "draw_vertex_texture_colour",
        "ds_exists",
        "ds_grid_add",
        "ds_grid_add_disk",
        "ds_grid_add_grid_region",
        "ds_grid_add_region",
        "ds_grid_clear",
        "ds_grid_copy",
        "ds_grid_create",
        "ds_grid_destroy",
        "ds_grid_get",
        "ds_grid_get_disk_max",
        "ds_grid_get_disk_mean",
        "ds_grid_get_disk_min",
        "ds_grid_get_disk_sum",
        "ds_grid_get_max",
        "ds_grid_get_mean",
        "ds_grid_get_min",
        "ds_grid_get_sum",
        "ds_grid_height",
        "ds_grid_multiply",
        "ds_grid_multiply_disk",
        "ds_grid_multiply_grid_region",
        "ds_grid_multiply_region",
        "ds_grid_read",
        "ds_grid_resize",
        "ds_grid_set",
        "ds_grid_set_disk",
        "ds_grid_set_grid_region",
        "ds_grid_set_region",
        "ds_grid_shuffle",
        "ds_grid_sort",
        "ds_grid_to_mp_grid",
        "ds_grid_value_disk_exists",
        "ds_grid_value_disk_x",
        "ds_grid_value_disk_y",
        "ds_grid_value_exists",
        "ds_grid_value_x",
        "ds_grid_value_y",
        "ds_grid_width",
        "ds_grid_write",
        "ds_list_add",
        "ds_list_clear",
        "ds_list_copy",
        "ds_list_create",
        "ds_list_delete",
        "ds_list_destroy",
        "ds_list_empty",
        "ds_list_find_index",
        "ds_list_find_value",
        "ds_list_insert",
        "ds_list_is_list",
        "ds_list_is_map",
        "ds_list_mark_as_list",
        "ds_list_mark_as_map",
        "ds_list_read",
        "ds_list_replace",
        "ds_list_set",
        "ds_list_shuffle",
        "ds_list_size",
        "ds_list_sort",
        "ds_list_write",
        "ds_map_add",
        "ds_map_add_list",
        "ds_map_add_map",
        "ds_map_clear",
        "ds_map_copy",
        "ds_map_create",
        "ds_map_delete",
        "ds_map_destroy",
        "ds_map_empty",
        "ds_map_exists",
        "ds_map_find_first",
        "ds_map_find_last",
        "ds_map_find_next",
        "ds_map_find_previous",
        "ds_map_find_value",
        "ds_map_is_list",
        "ds_map_is_map",
        "ds_map_keys_to_array",
        "ds_map_read",
        "ds_map_replace",
        "ds_map_replace_list",
        "ds_map_replace_map",
        "ds_map_secure_load",
        "ds_map_secure_load_buffer",
        "ds_map_secure_save",
        "ds_map_secure_save_buffer",
        "ds_map_set",
        "ds_map_size",
        "ds_map_values_to_array",
        "ds_map_write",
        "ds_priority_add",
        "ds_priority_change_priority",
        "ds_priority_clear",
        "ds_priority_copy",
        "ds_priority_create",
        "ds_priority_delete_max",
        "ds_priority_delete_min",
        "ds_priority_delete_value",
        "ds_priority_destroy",
        "ds_priority_empty",
        "ds_priority_find_max",
        "ds_priority_find_min",
        "ds_priority_find_priority",
        "ds_priority_read",
        "ds_priority_size",
        "ds_priority_write",
        "ds_queue_clear",
        "ds_queue_copy",
        "ds_queue_create",
        "ds_queue_dequeue",
        "ds_queue_destroy",
        "ds_queue_empty",
        "ds_queue_enqueue",
        "ds_queue_head",
        "ds_queue_read",
        "ds_queue_size",
        "ds_queue_tail",
        "ds_queue_write",
        "ds_set_precision",
        "ds_stack_clear",
        "ds_stack_copy",
        "ds_stack_create",
        "ds_stack_destroy",
        "ds_stack_empty",
        "ds_stack_pop",
        "ds_stack_push",
        "ds_stack_read",
        "ds_stack_size",
        "ds_stack_top",
        "ds_stack_write",
        "dsin",
        "dtan",
        "effect_clear",
        "effect_create_above",
        "effect_create_below",
        "effect_create_depth",
        "effect_create_layer",
        "environment_get_variable",
        "event_inherited",
        "event_perform",
        "event_perform_async",
        "event_perform_object",
        "event_user",
        "exception_unhandled_handler",
        "exp",
        "extension_exists",
        "extension_get_option_count",
        "extension_get_option_names",
        "extension_get_option_value",
        "extension_get_options",
        "extension_get_version",
        "external_call",
        "external_define",
        "external_free",
        "file_attributes",
        "file_bin_close",
        "file_bin_open",
        "file_bin_position",
        "file_bin_read_byte",
        "file_bin_rewrite",
        "file_bin_seek",
        "file_bin_size",
        "file_bin_write_byte",
        "file_copy",
        "file_delete",
        "file_exists",
        "file_find_close",
        "file_find_first",
        "file_find_next",
        "file_rename",
        "file_text_close",
        "file_text_eof",
        "file_text_eoln",
        "file_text_open_append",
        "file_text_open_from_string",
        "file_text_open_read",
        "file_text_open_write",
        "file_text_read_real",
        "file_text_read_string",
        "file_text_readln",
        "file_text_write_real",
        "file_text_write_string",
        "file_text_writeln",
        "filename_change_ext",
        "filename_dir",
        "filename_drive",
        "filename_ext",
        "filename_name",
        "filename_path",
        "floor",
        "font_add",
        "font_add_enable_aa",
        "font_add_get_enable_aa",
        "font_add_sprite",
        "font_add_sprite_ext",
        "font_cache_glyph",
        "font_delete",
        "font_enable_effects",
        "font_enable_sdf",
        "font_exists",
        "font_get_bold",
        "font_get_first",
        "font_get_fontname",
        "font_get_info",
        "font_get_italic",
        "font_get_last",
        "font_get_name",
        "font_get_sdf_enabled",
        "font_get_sdf_spread",
        "font_get_size",
        "font_get_texture",
        "font_get_uvs",
        "font_replace_sprite",
        "font_replace_sprite_ext",
        "font_sdf_spread",
        "font_set_cache_size",
        "frac",
        "fx_create",
        "fx_get_name",
        "fx_get_parameter",
        "fx_get_parameter_names",
        "fx_get_parameters",
        "fx_get_single_layer",
        "fx_set_parameter",
        "fx_set_parameters",
        "fx_set_single_layer",
        "game_change",
        "game_end",
        "game_get_speed",
        "game_load",
        "game_load_buffer",
        "game_restart",
        "game_save",
        "game_save_buffer",
        "game_set_speed",
        "gamepad_axis_count",
        "gamepad_axis_value",
        "gamepad_button_check",
        "gamepad_button_check_pressed",
        "gamepad_button_check_released",
        "gamepad_button_count",
        "gamepad_button_value",
        "gamepad_get_axis_deadzone",
        "gamepad_get_button_threshold",
        "gamepad_get_description",
        "gamepad_get_device_count",
        "gamepad_get_guid",
        "gamepad_get_mapping",
        "gamepad_get_option",
        "gamepad_hat_count",
        "gamepad_hat_value",
        "gamepad_is_connected",
        "gamepad_is_supported",
        "gamepad_remove_mapping",
        "gamepad_set_axis_deadzone",
        "gamepad_set_button_threshold",
        "gamepad_set_color",
        "gamepad_set_colour",
        "gamepad_set_option",
        "gamepad_set_vibration",
        "gamepad_test_mapping",
        "gc_collect",
        "gc_enable",
        "gc_get_stats",
        "gc_get_target_frame_time",
        "gc_is_enabled",
        "gc_target_frame_time",
        "gesture_double_tap_distance",
        "gesture_double_tap_time",
        "gesture_drag_distance",
        "gesture_drag_time",
        "gesture_flick_speed",
        "gesture_get_double_tap_distance",
        "gesture_get_double_tap_time",
        "gesture_get_drag_distance",
        "gesture_get_drag_time",
        "gesture_get_flick_speed",
        "gesture_get_pinch_angle_away",
        "gesture_get_pinch_angle_towards",
        "gesture_get_pinch_distance",
        "gesture_get_rotate_angle",
        "gesture_get_rotate_time",
        "gesture_get_tap_count",
        "gesture_pinch_angle_away",
        "gesture_pinch_angle_towards",
        "gesture_pinch_distance",
        "gesture_rotate_angle",
        "gesture_rotate_time",
        "gesture_tap_count",
        "get_integer",
        "get_integer_async",
        "get_login_async",
        "get_open_filename",
        "get_open_filename_ext",
        "get_save_filename",
        "get_save_filename_ext",
        "get_string",
        "get_string_async",
        "get_timer",
        "gif_add_surface",
        "gif_open",
        "gif_save",
        "gif_save_buffer",
        "gml_pragma",
        "gml_release_mode",
        "gpu_get_alphatestenable",
        "gpu_get_alphatestref",
        "gpu_get_blendenable",
        "gpu_get_blendmode",
        "gpu_get_blendmode_dest",
        "gpu_get_blendmode_destalpha",
        "gpu_get_blendmode_ext",
        "gpu_get_blendmode_ext_sepalpha",
        "gpu_get_blendmode_src",
        "gpu_get_blendmode_srcalpha",
        "gpu_get_colorwriteenable",
        "gpu_get_colourwriteenable",
        "gpu_get_cullmode",
        "gpu_get_depth",
        "gpu_get_fog",
        "gpu_get_state",
        "gpu_get_tex_filter",
        "gpu_get_tex_filter_ext",
        "gpu_get_tex_max_aniso",
        "gpu_get_tex_max_aniso_ext",
        "gpu_get_tex_max_mip",
        "gpu_get_tex_max_mip_ext",
        "gpu_get_tex_min_mip",
        "gpu_get_tex_min_mip_ext",
        "gpu_get_tex_mip_bias",
        "gpu_get_tex_mip_bias_ext",
        "gpu_get_tex_mip_enable",
        "gpu_get_tex_mip_enable_ext",
        "gpu_get_tex_mip_filter",
        "gpu_get_tex_mip_filter_ext",
        "gpu_get_tex_repeat",
        "gpu_get_tex_repeat_ext",
        "gpu_get_texfilter",
        "gpu_get_texfilter_ext",
        "gpu_get_texrepeat",
        "gpu_get_texrepeat_ext",
        "gpu_get_zfunc",
        "gpu_get_ztestenable",
        "gpu_get_zwriteenable",
        "gpu_pop_state",
        "gpu_push_state",
        "gpu_set_alphatestenable",
        "gpu_set_alphatestref",
        "gpu_set_blendenable",
        "gpu_set_blendmode",
        "gpu_set_blendmode_ext",
        "gpu_set_blendmode_ext_sepalpha",
        "gpu_set_colorwriteenable",
        "gpu_set_colourwriteenable",
        "gpu_set_cullmode",
        "gpu_set_depth",
        "gpu_set_fog",
        "gpu_set_state",
        "gpu_set_tex_filter",
        "gpu_set_tex_filter_ext",
        "gpu_set_tex_max_aniso",
        "gpu_set_tex_max_aniso_ext",
        "gpu_set_tex_max_mip",
        "gpu_set_tex_max_mip_ext",
        "gpu_set_tex_min_mip",
        "gpu_set_tex_min_mip_ext",
        "gpu_set_tex_mip_bias",
        "gpu_set_tex_mip_bias_ext",
        "gpu_set_tex_mip_enable",
        "gpu_set_tex_mip_enable_ext",
        "gpu_set_tex_mip_filter",
        "gpu_set_tex_mip_filter_ext",
        "gpu_set_tex_repeat",
        "gpu_set_tex_repeat_ext",
        "gpu_set_texfilter",
        "gpu_set_texfilter_ext",
        "gpu_set_texrepeat",
        "gpu_set_texrepeat_ext",
        "gpu_set_zfunc",
        "gpu_set_ztestenable",
        "gpu_set_zwriteenable",
        "handle_parse",
        "highscore_add",
        "highscore_clear",
        "highscore_name",
        "highscore_value",
        "http_get",
        "http_get_file",
        "http_get_request_crossorigin",
        "http_post_string",
        "http_request",
        "http_set_request_crossorigin",
        "iap_acquire",
        "iap_activate",
        "iap_consume",
        "iap_enumerate_products",
        "iap_product_details",
        "iap_purchase_details",
        "iap_restore_all",
        "iap_status",
        "ini_close",
        "ini_key_delete",
        "ini_key_exists",
        "ini_open",
        "ini_open_from_string",
        "ini_read_real",
        "ini_read_string",
        "ini_section_delete",
        "ini_section_exists",
        "ini_write_real",
        "ini_write_string",
        "instance_activate_all",
        "instance_activate_layer",
        "instance_activate_object",
        "instance_activate_region",
        "instance_change",
        "instance_copy",
        "instance_create_depth",
        "instance_create_layer",
        "instance_deactivate_all",
        "instance_deactivate_layer",
        "instance_deactivate_object",
        "instance_deactivate_region",
        "instance_destroy",
        "instance_exists",
        "instance_find",
        "instance_furthest",
        "instance_id_get",
        "instance_nearest",
        "instance_number",
        "instance_place",
        "instance_place_list",
        "instance_position",
        "instance_position_list",
        "instanceof",
        "int64",
        "io_clear",
        "irandom",
        "irandom_range",
        "is_array",
        "is_bool",
        "is_callable",
        "is_debug_overlay_open",
        "is_handle",
        "is_infinity",
        "is_instanceof",
        "is_int32",
        "is_int64",
        "is_keyboard_used_debug_overlay",
        "is_method",
        "is_mouse_over_debug_overlay",
        "is_nan",
        "is_numeric",
        "is_ptr",
        "is_real",
        "is_string",
        "is_struct",
        "is_undefined",
        "json_decode",
        "json_encode",
        "json_parse",
        "json_stringify",
        "keyboard_check",
        "keyboard_check_direct",
        "keyboard_check_pressed",
        "keyboard_check_released",
        "keyboard_clear",
        "keyboard_get_map",
        "keyboard_get_numlock",
        "keyboard_key_press",
        "keyboard_key_release",
        "keyboard_set_map",
        "keyboard_set_numlock",
        "keyboard_unset_map",
        "keyboard_virtual_height",
        "keyboard_virtual_hide",
        "keyboard_virtual_show",
        "keyboard_virtual_status",
        "layer_add_instance",
        "layer_background_alpha",
        "layer_background_blend",
        "layer_background_change",
        "layer_background_create",
        "layer_background_destroy",
        "layer_background_exists",
        "layer_background_get_alpha",
        "layer_background_get_blend",
        "layer_background_get_htiled",
        "layer_background_get_id",
        "layer_background_get_index",
        "layer_background_get_speed",
        "layer_background_get_sprite",
        "layer_background_get_stretch",
        "layer_background_get_visible",
        "layer_background_get_vtiled",
        "layer_background_get_xscale",
        "layer_background_get_yscale",
        "layer_background_htiled",
        "layer_background_index",
        "layer_background_speed",
        "layer_background_sprite",
        "layer_background_stretch",
        "layer_background_visible",
        "layer_background_vtiled",
        "layer_background_xscale",
        "layer_background_yscale",
        "layer_clear_fx",
        "layer_create",
        "layer_depth",
        "layer_destroy",
        "layer_destroy_instances",
        "layer_element_move",
        "layer_enable_fx",
        "layer_exists",
        "layer_force_draw_depth",
        "layer_fx_is_enabled",
        "layer_get_all",
        "layer_get_all_elements",
        "layer_get_depth",
        "layer_get_element_layer",
        "layer_get_element_type",
        "layer_get_forced_depth",
        "layer_get_fx",
        "layer_get_hspeed",
        "layer_get_id",
        "layer_get_id_at_depth",
        "layer_get_name",
        "layer_get_script_begin",
        "layer_get_script_end",
        "layer_get_shader",
        "layer_get_target_room",
        "layer_get_visible",
        "layer_get_vspeed",
        "layer_get_x",
        "layer_get_y",
        "layer_has_instance",
        "layer_hspeed",
        "layer_instance_get_instance",
        "layer_is_draw_depth_forced",
        "layer_reset_target_room",
        "layer_script_begin",
        "layer_script_end",
        "layer_sequence_angle",
        "layer_sequence_create",
        "layer_sequence_destroy",
        "layer_sequence_exists",
        "layer_sequence_get_angle",
        "layer_sequence_get_headdir",
        "layer_sequence_get_headpos",
        "layer_sequence_get_instance",
        "layer_sequence_get_length",
        "layer_sequence_get_sequence",
        "layer_sequence_get_speedscale",
        "layer_sequence_get_x",
        "layer_sequence_get_xscale",
        "layer_sequence_get_y",
        "layer_sequence_get_yscale",
        "layer_sequence_headdir",
        "layer_sequence_headpos",
        "layer_sequence_is_finished",
        "layer_sequence_is_paused",
        "layer_sequence_pause",
        "layer_sequence_play",
        "layer_sequence_speedscale",
        "layer_sequence_x",
        "layer_sequence_xscale",
        "layer_sequence_y",
        "layer_sequence_yscale",
        "layer_set_fx",
        "layer_set_target_room",
        "layer_set_visible",
        "layer_shader",
        "layer_sprite_alpha",
        "layer_sprite_angle",
        "layer_sprite_blend",
        "layer_sprite_change",
        "layer_sprite_create",
        "layer_sprite_destroy",
        "layer_sprite_exists",
        "layer_sprite_get_alpha",
        "layer_sprite_get_angle",
        "layer_sprite_get_blend",
        "layer_sprite_get_id",
        "layer_sprite_get_index",
        "layer_sprite_get_speed",
        "layer_sprite_get_sprite",
        "layer_sprite_get_x",
        "layer_sprite_get_xscale",
        "layer_sprite_get_y",
        "layer_sprite_get_yscale",
        "layer_sprite_index",
        "layer_sprite_speed",
        "layer_sprite_x",
        "layer_sprite_xscale",
        "layer_sprite_y",
        "layer_sprite_yscale",
        "layer_tile_alpha",
        "layer_tile_blend",
        "layer_tile_change",
        "layer_tile_create",
        "layer_tile_destroy",
        "layer_tile_exists",
        "layer_tile_get_alpha",
        "layer_tile_get_blend",
        "layer_tile_get_region",
        "layer_tile_get_sprite",
        "layer_tile_get_visible",
        "layer_tile_get_x",
        "layer_tile_get_xscale",
        "layer_tile_get_y",
        "layer_tile_get_yscale",
        "layer_tile_region",
        "layer_tile_visible",
        "layer_tile_x",
        "layer_tile_xscale",
        "layer_tile_y",
        "layer_tile_yscale",
        "layer_tilemap_create",
        "layer_tilemap_destroy",
        "layer_tilemap_exists",
        "layer_tilemap_get_id",
        "layer_vspeed",
        "layer_x",
        "layer_y",
        "lengthdir_x",
        "lengthdir_y",
        "lerp",
        "lin_to_db",
        "ln",
        "load_csv",
        "log10",
        "log2",
        "logn",
        "make_color_hsv",
        "make_color_rgb",
        "make_colour_hsv",
        "make_colour_rgb",
        "math_get_epsilon",
        "math_set_epsilon",
        "matrix_build",
        "matrix_build_identity",
        "matrix_build_lookat",
        "matrix_build_projection_ortho",
        "matrix_build_projection_perspective",
        "matrix_build_projection_perspective_fov",
        "matrix_get",
        "matrix_multiply",
        "matrix_set",
        "matrix_stack_clear",
        "matrix_stack_is_empty",
        "matrix_stack_pop",
        "matrix_stack_push",
        "matrix_stack_set",
        "matrix_stack_top",
        "matrix_transform_vertex",
        "max",
        "md5_file",
        "md5_string_unicode",
        "md5_string_utf8",
        "mean",
        "median",
        "merge_color",
        "merge_colour",
        "method",
        "method_call",
        "method_get_index",
        "method_get_self",
        "min",
        "motion_add",
        "motion_set",
        "mouse_check_button",
        "mouse_check_button_pressed",
        "mouse_check_button_released",
        "mouse_clear",
        "mouse_wheel_down",
        "mouse_wheel_up",
        "move_and_collide",
        "move_bounce_all",
        "move_bounce_solid",
        "move_contact_all",
        "move_contact_solid",
        "move_outside_all",
        "move_outside_solid",
        "move_random",
        "move_snap",
        "move_towards_point",
        "move_wrap",
        "mp_grid_add_cell",
        "mp_grid_add_instances",
        "mp_grid_add_rectangle",
        "mp_grid_clear_all",
        "mp_grid_clear_cell",
        "mp_grid_clear_rectangle",
        "mp_grid_create",
        "mp_grid_destroy",
        "mp_grid_draw",
        "mp_grid_get_cell",
        "mp_grid_path",
        "mp_grid_to_ds_grid",
        "mp_linear_path",
        "mp_linear_path_object",
        "mp_linear_step",
        "mp_linear_step_object",
        "mp_potential_path",
        "mp_potential_path_object",
        "mp_potential_settings",
        "mp_potential_step",
        "mp_potential_step_object",
        "nameof",
        "network_connect",
        "network_connect_async",
        "network_connect_raw",
        "network_connect_raw_async",
        "network_create_server",
        "network_create_server_raw",
        "network_create_socket",
        "network_create_socket_ext",
        "network_destroy",
        "network_resolve",
        "network_send_broadcast",
        "network_send_packet",
        "network_send_raw",
        "network_send_udp",
        "network_send_udp_raw",
        "network_set_config",
        "network_set_timeout",
        "object_exists",
        "object_get_mask",
        "object_get_name",
        "object_get_parent",
        "object_get_persistent",
        "object_get_physics",
        "object_get_solid",
        "object_get_sprite",
        "object_get_visible",
        "object_is_ancestor",
        "object_set_mask",
        "object_set_persistent",
        "object_set_solid",
        "object_set_sprite",
        "object_set_visible",
        "ord",
        "os_check_permission",
        "os_get_config",
        "os_get_info",
        "os_get_language",
        "os_get_region",
        "os_is_network_connected",
        "os_is_paused",
        "os_lock_orientation",
        "os_powersave_enable",
        "os_request_permission",
        "os_set_orientation_lock",
        "parameter_count",
        "parameter_string",
        "part_emitter_burst",
        "part_emitter_clear",
        "part_emitter_create",
        "part_emitter_delay",
        "part_emitter_destroy",
        "part_emitter_destroy_all",
        "part_emitter_enable",
        "part_emitter_exists",
        "part_emitter_interval",
        "part_emitter_region",
        "part_emitter_relative",
        "part_emitter_stream",
        "part_particles_burst",
        "part_particles_clear",
        "part_particles_count",
        "part_particles_create",
        "part_particles_create_color",
        "part_particles_create_colour",
        "part_system_angle",
        "part_system_automatic_draw",
        "part_system_automatic_update",
        "part_system_clear",
        "part_system_color",
        "part_system_colour",
        "part_system_create",
        "part_system_create_layer",
        "part_system_depth",
        "part_system_destroy",
        "part_system_draw_order",
        "part_system_drawit",
        "part_system_exists",
        "part_system_get_info",
        "part_system_get_layer",
        "part_system_global_space",
        "part_system_layer",
        "part_system_position",
        "part_system_update",
        "part_type_alpha1",
        "part_type_alpha2",
        "part_type_alpha3",
        "part_type_blend",
        "part_type_clear",
        "part_type_color1",
        "part_type_color2",
        "part_type_color3",
        "part_type_color_hsv",
        "part_type_color_mix",
        "part_type_color_rgb",
        "part_type_colour1",
        "part_type_colour2",
        "part_type_colour3",
        "part_type_colour_hsv",
        "part_type_colour_mix",
        "part_type_colour_rgb",
        "part_type_create",
        "part_type_death",
        "part_type_destroy",
        "part_type_direction",
        "part_type_exists",
        "part_type_gravity",
        "part_type_life",
        "part_type_orientation",
        "part_type_scale",
        "part_type_shape",
        "part_type_size",
        "part_type_size_x",
        "part_type_size_y",
        "part_type_speed",
        "part_type_sprite",
        "part_type_step",
        "part_type_subimage",
        "particle_exists",
        "particle_get_info",
        "path_add",
        "path_add_point",
        "path_append",
        "path_assign",
        "path_change_point",
        "path_clear_points",
        "path_delete",
        "path_delete_point",
        "path_duplicate",
        "path_end",
        "path_exists",
        "path_flip",
        "path_get_closed",
        "path_get_kind",
        "path_get_length",
        "path_get_name",
        "path_get_number",
        "path_get_point_speed",
        "path_get_point_x",
        "path_get_point_y",
        "path_get_precision",
        "path_get_speed",
        "path_get_x",
        "path_get_y",
        "path_insert_point",
        "path_mirror",
        "path_rescale",
        "path_reverse",
        "path_rotate",
        "path_set_closed",
        "path_set_kind",
        "path_set_precision",
        "path_shift",
        "path_start",
        "physics_apply_angular_impulse",
        "physics_apply_force",
        "physics_apply_impulse",
        "physics_apply_local_force",
        "physics_apply_local_impulse",
        "physics_apply_torque",
        "physics_draw_debug",
        "physics_fixture_add_point",
        "physics_fixture_bind",
        "physics_fixture_bind_ext",
        "physics_fixture_create",
        "physics_fixture_delete",
        "physics_fixture_set_angular_damping",
        "physics_fixture_set_awake",
        "physics_fixture_set_box_shape",
        "physics_fixture_set_chain_shape",
        "physics_fixture_set_circle_shape",
        "physics_fixture_set_collision_group",
        "physics_fixture_set_density",
        "physics_fixture_set_edge_shape",
        "physics_fixture_set_friction",
        "physics_fixture_set_kinematic",
        "physics_fixture_set_linear_damping",
        "physics_fixture_set_polygon_shape",
        "physics_fixture_set_restitution",
        "physics_fixture_set_sensor",
        "physics_get_density",
        "physics_get_friction",
        "physics_get_restitution",
        "physics_joint_delete",
        "physics_joint_distance_create",
        "physics_joint_enable_motor",
        "physics_joint_friction_create",
        "physics_joint_gear_create",
        "physics_joint_get_value",
        "physics_joint_prismatic_create",
        "physics_joint_pulley_create",
        "physics_joint_revolute_create",
        "physics_joint_rope_create",
        "physics_joint_set_value",
        "physics_joint_weld_create",
        "physics_joint_wheel_create",
        "physics_mass_properties",
        "physics_particle_count",
        "physics_particle_create",
        "physics_particle_delete",
        "physics_particle_delete_region_box",
        "physics_particle_delete_region_circle",
        "physics_particle_delete_region_poly",
        "physics_particle_draw",
        "physics_particle_draw_ext",
        "physics_particle_get_damping",
        "physics_particle_get_data",
        "physics_particle_get_data_particle",
        "physics_particle_get_density",
        "physics_particle_get_gravity_scale",
        "physics_particle_get_group_flags",
        "physics_particle_get_max_count",
        "physics_particle_get_radius",
        "physics_particle_group_add_point",
        "physics_particle_group_begin",
        "physics_particle_group_box",
        "physics_particle_group_circle",
        "physics_particle_group_count",
        "physics_particle_group_delete",
        "physics_particle_group_end",
        "physics_particle_group_get_ang_vel",
        "physics_particle_group_get_angle",
        "physics_particle_group_get_centre_x",
        "physics_particle_group_get_centre_y",
        "physics_particle_group_get_data",
        "physics_particle_group_get_inertia",
        "physics_particle_group_get_mass",
        "physics_particle_group_get_vel_x",
        "physics_particle_group_get_vel_y",
        "physics_particle_group_get_x",
        "physics_particle_group_get_y",
        "physics_particle_group_join",
        "physics_particle_group_polygon",
        "physics_particle_set_category_flags",
        "physics_particle_set_damping",
        "physics_particle_set_density",
        "physics_particle_set_flags",
        "physics_particle_set_gravity_scale",
        "physics_particle_set_group_flags",
        "physics_particle_set_max_count",
        "physics_particle_set_radius",
        "physics_pause_enable",
        "physics_remove_fixture",
        "physics_set_density",
        "physics_set_friction",
        "physics_set_restitution",
        "physics_test_overlap",
        "physics_world_create",
        "physics_world_draw_debug",
        "physics_world_gravity",
        "physics_world_update_iterations",
        "physics_world_update_speed",
        "place_empty",
        "place_free",
        "place_meeting",
        "place_snapped",
        "point_direction",
        "point_distance",
        "point_distance_3d",
        "point_in_circle",
        "point_in_rectangle",
        "point_in_triangle",
        "position_change",
        "position_destroy",
        "position_empty",
        "position_meeting",
        "power",
        "ptr",
        "radtodeg",
        "random",
        "random_get_seed",
        "random_range",
        "random_set_seed",
        "randomise",
        "randomize",
        "real",
        "rectangle_in_circle",
        "rectangle_in_rectangle",
        "rectangle_in_triangle",
        "ref_create",
        "rollback_chat",
        "rollback_create_game",
        "rollback_define_extra_network_latency",
        "rollback_define_input",
        "rollback_define_input_frame_delay",
        "rollback_define_mock_input",
        "rollback_define_player",
        "rollback_display_events",
        "rollback_get_info",
        "rollback_get_input",
        "rollback_get_player_prefs",
        "rollback_join_game",
        "rollback_leave_game",
        "rollback_set_player_prefs",
        "rollback_start_game",
        "rollback_sync_on_frame",
        "rollback_use_late_join",
        "rollback_use_manual_start",
        "rollback_use_player_prefs",
        "rollback_use_random_input",
        "room_add",
        "room_assign",
        "room_duplicate",
        "room_exists",
        "room_get_camera",
        "room_get_info",
        "room_get_name",
        "room_get_viewport",
        "room_goto",
        "room_goto_next",
        "room_goto_previous",
        "room_instance_add",
        "room_instance_clear",
        "room_next",
        "room_previous",
        "room_restart",
        "room_set_camera",
        "room_set_height",
        "room_set_persistent",
        "room_set_view_enabled",
        "room_set_viewport",
        "room_set_width",
        "round",
        "scheduler_resolution_get",
        "scheduler_resolution_set",
        "screen_save",
        "screen_save_part",
        "script_execute",
        "script_execute_ext",
        "script_exists",
        "script_get_name",
        "sequence_create",
        "sequence_destroy",
        "sequence_exists",
        "sequence_get",
        "sequence_get_objects",
        "sequence_instance_override_object",
        "sequence_keyframe_new",
        "sequence_keyframedata_new",
        "sequence_track_new",
        "sha1_file",
        "sha1_string_unicode",
        "sha1_string_utf8",
        "shader_current",
        "shader_enable_corner_id",
        "shader_get_name",
        "shader_get_sampler_index",
        "shader_get_uniform",
        "shader_is_compiled",
        "shader_reset",
        "shader_set",
        "shader_set_uniform_f",
        "shader_set_uniform_f_array",
        "shader_set_uniform_f_buffer",
        "shader_set_uniform_i",
        "shader_set_uniform_i_array",
        "shader_set_uniform_matrix",
        "shader_set_uniform_matrix_array",
        "shaders_are_supported",
        "shop_leave_rating",
        "show_debug_message",
        "show_debug_message_ext",
        "show_debug_overlay",
        "show_error",
        "show_message",
        "show_message_async",
        "show_question",
        "show_question_async",
        "sign",
        "sin",
        "skeleton_animation_clear",
        "skeleton_animation_get",
        "skeleton_animation_get_duration",
        "skeleton_animation_get_event_frames",
        "skeleton_animation_get_ext",
        "skeleton_animation_get_frame",
        "skeleton_animation_get_frames",
        "skeleton_animation_get_position",
        "skeleton_animation_is_finished",
        "skeleton_animation_is_looping",
        "skeleton_animation_list",
        "skeleton_animation_mix",
        "skeleton_animation_set",
        "skeleton_animation_set_ext",
        "skeleton_animation_set_frame",
        "skeleton_animation_set_position",
        "skeleton_attachment_create",
        "skeleton_attachment_create_color",
        "skeleton_attachment_create_colour",
        "skeleton_attachment_destroy",
        "skeleton_attachment_exists",
        "skeleton_attachment_get",
        "skeleton_attachment_replace",
        "skeleton_attachment_replace_color",
        "skeleton_attachment_replace_colour",
        "skeleton_attachment_set",
        "skeleton_bone_data_get",
        "skeleton_bone_data_set",
        "skeleton_bone_list",
        "skeleton_bone_state_get",
        "skeleton_bone_state_set",
        "skeleton_collision_draw_set",
        "skeleton_find_slot",
        "skeleton_get_bounds",
        "skeleton_get_minmax",
        "skeleton_get_num_bounds",
        "skeleton_skin_create",
        "skeleton_skin_get",
        "skeleton_skin_list",
        "skeleton_skin_set",
        "skeleton_slot_alpha_get",
        "skeleton_slot_color_get",
        "skeleton_slot_color_set",
        "skeleton_slot_colour_get",
        "skeleton_slot_colour_set",
        "skeleton_slot_data",
        "skeleton_slot_data_instance",
        "skeleton_slot_list",
        "sprite_add",
        "sprite_add_ext",
        "sprite_add_from_surface",
        "sprite_assign",
        "sprite_collision_mask",
        "sprite_create_from_surface",
        "sprite_delete",
        "sprite_duplicate",
        "sprite_exists",
        "sprite_flush",
        "sprite_flush_multi",
        "sprite_get_bbox_bottom",
        "sprite_get_bbox_left",
        "sprite_get_bbox_mode",
        "sprite_get_bbox_right",
        "sprite_get_bbox_top",
        "sprite_get_height",
        "sprite_get_info",
        "sprite_get_name",
        "sprite_get_nineslice",
        "sprite_get_number",
        "sprite_get_speed",
        "sprite_get_speed_type",
        "sprite_get_texture",
        "sprite_get_tpe",
        "sprite_get_uvs",
        "sprite_get_width",
        "sprite_get_xoffset",
        "sprite_get_yoffset",
        "sprite_merge",
        "sprite_nineslice_create",
        "sprite_prefetch",
        "sprite_prefetch_multi",
        "sprite_replace",
        "sprite_save",
        "sprite_save_strip",
        "sprite_set_alpha_from_sprite",
        "sprite_set_bbox",
        "sprite_set_bbox_mode",
        "sprite_set_cache_size",
        "sprite_set_cache_size_ext",
        "sprite_set_nineslice",
        "sprite_set_offset",
        "sprite_set_speed",
        "sqr",
        "sqrt",
        "static_get",
        "static_set",
        "string",
        "string_byte_at",
        "string_byte_length",
        "string_char_at",
        "string_concat",
        "string_concat_ext",
        "string_copy",
        "string_count",
        "string_delete",
        "string_digits",
        "string_ends_with",
        "string_ext",
        "string_foreach",
        "string_format",
        "string_hash_to_newline",
        "string_height",
        "string_height_ext",
        "string_insert",
        "string_join",
        "string_join_ext",
        "string_last_pos",
        "string_last_pos_ext",
        "string_length",
        "string_letters",
        "string_lettersdigits",
        "string_lower",
        "string_ord_at",
        "string_pos",
        "string_pos_ext",
        "string_repeat",
        "string_replace",
        "string_replace_all",
        "string_set_byte_at",
        "string_split",
        "string_split_ext",
        "string_starts_with",
        "string_trim",
        "string_trim_end",
        "string_trim_start",
        "string_upper",
        "string_width",
        "string_width_ext",
        "struct_exists",
        "struct_foreach",
        "struct_get",
        "struct_get_from_hash",
        "struct_get_names",
        "struct_names_count",
        "struct_remove",
        "struct_set",
        "struct_set_from_hash",
        "surface_copy",
        "surface_copy_part",
        "surface_create",
        "surface_create_ext",
        "surface_depth_disable",
        "surface_exists",
        "surface_format_is_supported",
        "surface_free",
        "surface_get_depth_disable",
        "surface_get_format",
        "surface_get_height",
        "surface_get_target",
        "surface_get_target_ext",
        "surface_get_texture",
        "surface_get_width",
        "surface_getpixel",
        "surface_getpixel_ext",
        "surface_reset_target",
        "surface_resize",
        "surface_save",
        "surface_save_part",
        "surface_set_target",
        "surface_set_target_ext",
        "tag_get_asset_ids",
        "tag_get_assets",
        "tan",
        "texture_debug_messages",
        "texture_flush",
        "texture_get_height",
        "texture_get_texel_height",
        "texture_get_texel_width",
        "texture_get_uvs",
        "texture_get_width",
        "texture_global_scale",
        "texture_is_ready",
        "texture_prefetch",
        "texture_set_stage",
        "texturegroup_get_fonts",
        "texturegroup_get_names",
        "texturegroup_get_sprites",
        "texturegroup_get_status",
        "texturegroup_get_textures",
        "texturegroup_get_tilesets",
        "texturegroup_load",
        "texturegroup_set_mode",
        "texturegroup_unload",
        "tile_get_empty",
        "tile_get_flip",
        "tile_get_index",
        "tile_get_mirror",
        "tile_get_rotate",
        "tile_set_empty",
        "tile_set_flip",
        "tile_set_index",
        "tile_set_mirror",
        "tile_set_rotate",
        "tilemap_clear",
        "tilemap_get",
        "tilemap_get_at_pixel",
        "tilemap_get_cell_x_at_pixel",
        "tilemap_get_cell_y_at_pixel",
        "tilemap_get_frame",
        "tilemap_get_global_mask",
        "tilemap_get_height",
        "tilemap_get_mask",
        "tilemap_get_tile_height",
        "tilemap_get_tile_width",
        "tilemap_get_tileset",
        "tilemap_get_width",
        "tilemap_get_x",
        "tilemap_get_y",
        "tilemap_set",
        "tilemap_set_at_pixel",
        "tilemap_set_global_mask",
        "tilemap_set_height",
        "tilemap_set_mask",
        "tilemap_set_width",
        "tilemap_tileset",
        "tilemap_x",
        "tilemap_y",
        "tileset_get_info",
        "tileset_get_name",
        "tileset_get_texture",
        "tileset_get_uvs",
        "time_bpm_to_seconds",
        "time_seconds_to_bpm",
        "time_source_create",
        "time_source_destroy",
        "time_source_exists",
        "time_source_get_children",
        "time_source_get_parent",
        "time_source_get_period",
        "time_source_get_reps_completed",
        "time_source_get_reps_remaining",
        "time_source_get_state",
        "time_source_get_time_remaining",
        "time_source_get_units",
        "time_source_pause",
        "time_source_reconfigure",
        "time_source_reset",
        "time_source_resume",
        "time_source_start",
        "time_source_stop",
        "timeline_add",
        "timeline_clear",
        "timeline_delete",
        "timeline_exists",
        "timeline_get_name",
        "timeline_max_moment",
        "timeline_moment_add_script",
        "timeline_moment_clear",
        "timeline_size",
        "typeof",
        "url_get_domain",
        "url_open",
        "url_open_ext",
        "url_open_full",
        "uwp_device_touchscreen_available",
        "uwp_livetile_badge_clear",
        "uwp_livetile_badge_notification",
        "uwp_livetile_notification_begin",
        "uwp_livetile_notification_end",
        "uwp_livetile_notification_expiry",
        "uwp_livetile_notification_image_add",
        "uwp_livetile_notification_secondary_begin",
        "uwp_livetile_notification_tag",
        "uwp_livetile_notification_template_add",
        "uwp_livetile_notification_text_add",
        "uwp_livetile_queue_enable",
        "uwp_livetile_tile_clear",
        "uwp_secondarytile_badge_clear",
        "uwp_secondarytile_badge_notification",
        "uwp_secondarytile_delete",
        "uwp_secondarytile_pin",
        "uwp_secondarytile_tile_clear",
        "variable_clone",
        "variable_get_hash",
        "variable_global_exists",
        "variable_global_get",
        "variable_global_set",
        "variable_instance_exists",
        "variable_instance_get",
        "variable_instance_get_names",
        "variable_instance_names_count",
        "variable_instance_set",
        "variable_struct_exists",
        "variable_struct_get",
        "variable_struct_get_names",
        "variable_struct_names_count",
        "variable_struct_remove",
        "variable_struct_set",
        "vertex_argb",
        "vertex_begin",
        "vertex_color",
        "vertex_colour",
        "vertex_create_buffer",
        "vertex_create_buffer_ext",
        "vertex_create_buffer_from_buffer",
        "vertex_create_buffer_from_buffer_ext",
        "vertex_delete_buffer",
        "vertex_end",
        "vertex_float1",
        "vertex_float2",
        "vertex_float3",
        "vertex_float4",
        "vertex_format_add_color",
        "vertex_format_add_colour",
        "vertex_format_add_custom",
        "vertex_format_add_normal",
        "vertex_format_add_position",
        "vertex_format_add_position_3d",
        "vertex_format_add_texcoord",
        "vertex_format_begin",
        "vertex_format_delete",
        "vertex_format_end",
        "vertex_format_get_info",
        "vertex_freeze",
        "vertex_get_buffer_size",
        "vertex_get_number",
        "vertex_normal",
        "vertex_position",
        "vertex_position_3d",
        "vertex_submit",
        "vertex_submit_ext",
        "vertex_texcoord",
        "vertex_ubyte4",
        "vertex_update_buffer_from_buffer",
        "vertex_update_buffer_from_vertex",
        "video_close",
        "video_draw",
        "video_enable_loop",
        "video_get_duration",
        "video_get_format",
        "video_get_position",
        "video_get_status",
        "video_get_volume",
        "video_is_looping",
        "video_open",
        "video_pause",
        "video_resume",
        "video_seek_to",
        "video_set_volume",
        "view_get_camera",
        "view_get_hport",
        "view_get_surface_id",
        "view_get_visible",
        "view_get_wport",
        "view_get_xport",
        "view_get_yport",
        "view_set_camera",
        "view_set_hport",
        "view_set_surface_id",
        "view_set_visible",
        "view_set_wport",
        "view_set_xport",
        "view_set_yport",
        "virtual_key_add",
        "virtual_key_delete",
        "virtual_key_hide",
        "virtual_key_show",
        "wallpaper_set_config",
        "wallpaper_set_subscriptions",
        "weak_ref_alive",
        "weak_ref_any_alive",
        "weak_ref_create",
        "window_center",
        "window_device",
        "window_enable_borderless_fullscreen",
        "window_get_borderless_fullscreen",
        "window_get_caption",
        "window_get_color",
        "window_get_colour",
        "window_get_cursor",
        "window_get_fullscreen",
        "window_get_height",
        "window_get_showborder",
        "window_get_visible_rects",
        "window_get_width",
        "window_get_x",
        "window_get_y",
        "window_handle",
        "window_has_focus",
        "window_mouse_get_delta_x",
        "window_mouse_get_delta_y",
        "window_mouse_get_locked",
        "window_mouse_get_x",
        "window_mouse_get_y",
        "window_mouse_set",
        "window_mouse_set_locked",
        "window_set_caption",
        "window_set_color",
        "window_set_colour",
        "window_set_cursor",
        "window_set_fullscreen",
        "window_set_max_height",
        "window_set_max_width",
        "window_set_min_height",
        "window_set_min_width",
        "window_set_position",
        "window_set_rectangle",
        "window_set_showborder",
        "window_set_size",
        "window_view_mouse_get_x",
        "window_view_mouse_get_y",
        "window_views_mouse_get_x",
        "window_views_mouse_get_y",
        "winphone_tile_background_color",
        "winphone_tile_background_colour",
        "zip_add_file",
        "zip_create",
        "zip_save",
        "zip_unzip",
        "zip_unzip_async"
      ],
      symbol: [
        "AudioEffect",
        "AudioEffectType",
        "AudioLFOType",
        "GM_build_date",
        "GM_build_type",
        "GM_is_sandboxed",
        "GM_project_filename",
        "GM_runtime_version",
        "GM_version",
        "NaN",
        "_GMFILE_",
        "_GMFUNCTION_",
        "_GMLINE_",
        "alignmentH",
        "alignmentV",
        "all",
        "animcurvetype_bezier",
        "animcurvetype_catmullrom",
        "animcurvetype_linear",
        "asset_animationcurve",
        "asset_font",
        "asset_object",
        "asset_path",
        "asset_room",
        "asset_script",
        "asset_sequence",
        "asset_shader",
        "asset_sound",
        "asset_sprite",
        "asset_tiles",
        "asset_timeline",
        "asset_unknown",
        "audio_3D",
        "audio_bus_main",
        "audio_falloff_exponent_distance",
        "audio_falloff_exponent_distance_clamped",
        "audio_falloff_exponent_distance_scaled",
        "audio_falloff_inverse_distance",
        "audio_falloff_inverse_distance_clamped",
        "audio_falloff_inverse_distance_scaled",
        "audio_falloff_linear_distance",
        "audio_falloff_linear_distance_clamped",
        "audio_falloff_none",
        "audio_mono",
        "audio_stereo",
        "bboxkind_diamond",
        "bboxkind_ellipse",
        "bboxkind_precise",
        "bboxkind_rectangular",
        "bboxmode_automatic",
        "bboxmode_fullimage",
        "bboxmode_manual",
        "bm_add",
        "bm_dest_alpha",
        "bm_dest_color",
        "bm_dest_colour",
        "bm_inv_dest_alpha",
        "bm_inv_dest_color",
        "bm_inv_dest_colour",
        "bm_inv_src_alpha",
        "bm_inv_src_color",
        "bm_inv_src_colour",
        "bm_max",
        "bm_normal",
        "bm_one",
        "bm_src_alpha",
        "bm_src_alpha_sat",
        "bm_src_color",
        "bm_src_colour",
        "bm_subtract",
        "bm_zero",
        "browser_chrome",
        "browser_edge",
        "browser_firefox",
        "browser_ie",
        "browser_ie_mobile",
        "browser_not_a_browser",
        "browser_opera",
        "browser_safari",
        "browser_safari_mobile",
        "browser_tizen",
        "browser_unknown",
        "browser_windows_store",
        "buffer_bool",
        "buffer_f16",
        "buffer_f32",
        "buffer_f64",
        "buffer_fast",
        "buffer_fixed",
        "buffer_grow",
        "buffer_s16",
        "buffer_s32",
        "buffer_s8",
        "buffer_seek_end",
        "buffer_seek_relative",
        "buffer_seek_start",
        "buffer_string",
        "buffer_text",
        "buffer_u16",
        "buffer_u32",
        "buffer_u64",
        "buffer_u8",
        "buffer_vbuffer",
        "buffer_wrap",
        "c_aqua",
        "c_black",
        "c_blue",
        "c_dkgray",
        "c_dkgrey",
        "c_fuchsia",
        "c_gray",
        "c_green",
        "c_grey",
        "c_lime",
        "c_ltgray",
        "c_ltgrey",
        "c_maroon",
        "c_navy",
        "c_olive",
        "c_orange",
        "c_purple",
        "c_red",
        "c_silver",
        "c_teal",
        "c_white",
        "c_yellow",
        "cache_directory",
        "characterSpacing",
        "cmpfunc_always",
        "cmpfunc_equal",
        "cmpfunc_greater",
        "cmpfunc_greaterequal",
        "cmpfunc_less",
        "cmpfunc_lessequal",
        "cmpfunc_never",
        "cmpfunc_notequal",
        "coreColor",
        "coreColour",
        "cr_appstart",
        "cr_arrow",
        "cr_beam",
        "cr_cross",
        "cr_default",
        "cr_drag",
        "cr_handpoint",
        "cr_hourglass",
        "cr_none",
        "cr_size_all",
        "cr_size_nesw",
        "cr_size_ns",
        "cr_size_nwse",
        "cr_size_we",
        "cr_uparrow",
        "cull_clockwise",
        "cull_counterclockwise",
        "cull_noculling",
        "device_emulator",
        "device_ios_ipad",
        "device_ios_ipad_retina",
        "device_ios_iphone",
        "device_ios_iphone5",
        "device_ios_iphone6",
        "device_ios_iphone6plus",
        "device_ios_iphone_retina",
        "device_ios_unknown",
        "device_tablet",
        "display_landscape",
        "display_landscape_flipped",
        "display_portrait",
        "display_portrait_flipped",
        "dll_cdecl",
        "dll_stdcall",
        "dropShadowEnabled",
        "dropShadowEnabled",
        "ds_type_grid",
        "ds_type_list",
        "ds_type_map",
        "ds_type_priority",
        "ds_type_queue",
        "ds_type_stack",
        "ef_cloud",
        "ef_ellipse",
        "ef_explosion",
        "ef_firework",
        "ef_flare",
        "ef_rain",
        "ef_ring",
        "ef_smoke",
        "ef_smokeup",
        "ef_snow",
        "ef_spark",
        "ef_star",
        "effectsEnabled",
        "effectsEnabled",
        "ev_alarm",
        "ev_animation_end",
        "ev_animation_event",
        "ev_animation_update",
        "ev_async_audio_playback",
        "ev_async_audio_playback_ended",
        "ev_async_audio_recording",
        "ev_async_dialog",
        "ev_async_push_notification",
        "ev_async_save_load",
        "ev_async_save_load",
        "ev_async_social",
        "ev_async_system_event",
        "ev_async_web",
        "ev_async_web_cloud",
        "ev_async_web_iap",
        "ev_async_web_image_load",
        "ev_async_web_networking",
        "ev_async_web_steam",
        "ev_audio_playback",
        "ev_audio_playback_ended",
        "ev_audio_recording",
        "ev_boundary",
        "ev_boundary_view0",
        "ev_boundary_view1",
        "ev_boundary_view2",
        "ev_boundary_view3",
        "ev_boundary_view4",
        "ev_boundary_view5",
        "ev_boundary_view6",
        "ev_boundary_view7",
        "ev_broadcast_message",
        "ev_cleanup",
        "ev_collision",
        "ev_create",
        "ev_destroy",
        "ev_dialog_async",
        "ev_draw",
        "ev_draw_begin",
        "ev_draw_end",
        "ev_draw_normal",
        "ev_draw_post",
        "ev_draw_pre",
        "ev_end_of_path",
        "ev_game_end",
        "ev_game_start",
        "ev_gesture",
        "ev_gesture_double_tap",
        "ev_gesture_drag_end",
        "ev_gesture_drag_start",
        "ev_gesture_dragging",
        "ev_gesture_flick",
        "ev_gesture_pinch_end",
        "ev_gesture_pinch_in",
        "ev_gesture_pinch_out",
        "ev_gesture_pinch_start",
        "ev_gesture_rotate_end",
        "ev_gesture_rotate_start",
        "ev_gesture_rotating",
        "ev_gesture_tap",
        "ev_global_gesture_double_tap",
        "ev_global_gesture_drag_end",
        "ev_global_gesture_drag_start",
        "ev_global_gesture_dragging",
        "ev_global_gesture_flick",
        "ev_global_gesture_pinch_end",
        "ev_global_gesture_pinch_in",
        "ev_global_gesture_pinch_out",
        "ev_global_gesture_pinch_start",
        "ev_global_gesture_rotate_end",
        "ev_global_gesture_rotate_start",
        "ev_global_gesture_rotating",
        "ev_global_gesture_tap",
        "ev_global_left_button",
        "ev_global_left_press",
        "ev_global_left_release",
        "ev_global_middle_button",
        "ev_global_middle_press",
        "ev_global_middle_release",
        "ev_global_right_button",
        "ev_global_right_press",
        "ev_global_right_release",
        "ev_gui",
        "ev_gui_begin",
        "ev_gui_end",
        "ev_joystick1_button1",
        "ev_joystick1_button2",
        "ev_joystick1_button3",
        "ev_joystick1_button4",
        "ev_joystick1_button5",
        "ev_joystick1_button6",
        "ev_joystick1_button7",
        "ev_joystick1_button8",
        "ev_joystick1_down",
        "ev_joystick1_left",
        "ev_joystick1_right",
        "ev_joystick1_up",
        "ev_joystick2_button1",
        "ev_joystick2_button2",
        "ev_joystick2_button3",
        "ev_joystick2_button4",
        "ev_joystick2_button5",
        "ev_joystick2_button6",
        "ev_joystick2_button7",
        "ev_joystick2_button8",
        "ev_joystick2_down",
        "ev_joystick2_left",
        "ev_joystick2_right",
        "ev_joystick2_up",
        "ev_keyboard",
        "ev_keypress",
        "ev_keyrelease",
        "ev_left_button",
        "ev_left_press",
        "ev_left_release",
        "ev_middle_button",
        "ev_middle_press",
        "ev_middle_release",
        "ev_mouse",
        "ev_mouse_enter",
        "ev_mouse_leave",
        "ev_mouse_wheel_down",
        "ev_mouse_wheel_up",
        "ev_no_button",
        "ev_no_more_health",
        "ev_no_more_lives",
        "ev_other",
        "ev_outside",
        "ev_outside_view0",
        "ev_outside_view1",
        "ev_outside_view2",
        "ev_outside_view3",
        "ev_outside_view4",
        "ev_outside_view5",
        "ev_outside_view6",
        "ev_outside_view7",
        "ev_pre_create",
        "ev_push_notification",
        "ev_right_button",
        "ev_right_press",
        "ev_right_release",
        "ev_room_end",
        "ev_room_start",
        "ev_social",
        "ev_step",
        "ev_step_begin",
        "ev_step_end",
        "ev_step_normal",
        "ev_system_event",
        "ev_trigger",
        "ev_user0",
        "ev_user1",
        "ev_user10",
        "ev_user11",
        "ev_user12",
        "ev_user13",
        "ev_user14",
        "ev_user15",
        "ev_user2",
        "ev_user3",
        "ev_user4",
        "ev_user5",
        "ev_user6",
        "ev_user7",
        "ev_user8",
        "ev_user9",
        "ev_web_async",
        "ev_web_cloud",
        "ev_web_iap",
        "ev_web_image_load",
        "ev_web_networking",
        "ev_web_sound_load",
        "ev_web_steam",
        "fa_archive",
        "fa_bottom",
        "fa_center",
        "fa_directory",
        "fa_hidden",
        "fa_left",
        "fa_middle",
        "fa_none",
        "fa_readonly",
        "fa_right",
        "fa_sysfile",
        "fa_top",
        "fa_volumeid",
        "false",
        "frameSizeX",
        "frameSizeY",
        "gamespeed_fps",
        "gamespeed_microseconds",
        "global",
        "glowColor",
        "glowColour",
        "glowEnabled",
        "glowEnabled",
        "glowEnd",
        "glowStart",
        "gp_axis_acceleration_x",
        "gp_axis_acceleration_y",
        "gp_axis_acceleration_z",
        "gp_axis_angular_velocity_x",
        "gp_axis_angular_velocity_y",
        "gp_axis_angular_velocity_z",
        "gp_axis_orientation_w",
        "gp_axis_orientation_x",
        "gp_axis_orientation_y",
        "gp_axis_orientation_z",
        "gp_axislh",
        "gp_axislv",
        "gp_axisrh",
        "gp_axisrv",
        "gp_face1",
        "gp_face2",
        "gp_face3",
        "gp_face4",
        "gp_padd",
        "gp_padl",
        "gp_padr",
        "gp_padu",
        "gp_select",
        "gp_shoulderl",
        "gp_shoulderlb",
        "gp_shoulderr",
        "gp_shoulderrb",
        "gp_start",
        "gp_stickl",
        "gp_stickr",
        "iap_available",
        "iap_canceled",
        "iap_ev_consume",
        "iap_ev_product",
        "iap_ev_purchase",
        "iap_ev_restore",
        "iap_ev_storeload",
        "iap_failed",
        "iap_purchased",
        "iap_refunded",
        "iap_status_available",
        "iap_status_loading",
        "iap_status_processing",
        "iap_status_restoring",
        "iap_status_unavailable",
        "iap_status_uninitialised",
        "iap_storeload_failed",
        "iap_storeload_ok",
        "iap_unavailable",
        "infinity",
        "kbv_autocapitalize_characters",
        "kbv_autocapitalize_none",
        "kbv_autocapitalize_sentences",
        "kbv_autocapitalize_words",
        "kbv_returnkey_continue",
        "kbv_returnkey_default",
        "kbv_returnkey_done",
        "kbv_returnkey_emergency",
        "kbv_returnkey_go",
        "kbv_returnkey_google",
        "kbv_returnkey_join",
        "kbv_returnkey_next",
        "kbv_returnkey_route",
        "kbv_returnkey_search",
        "kbv_returnkey_send",
        "kbv_returnkey_yahoo",
        "kbv_type_ascii",
        "kbv_type_default",
        "kbv_type_email",
        "kbv_type_numbers",
        "kbv_type_phone",
        "kbv_type_phone_name",
        "kbv_type_url",
        "layerelementtype_background",
        "layerelementtype_instance",
        "layerelementtype_oldtilemap",
        "layerelementtype_particlesystem",
        "layerelementtype_sequence",
        "layerelementtype_sprite",
        "layerelementtype_tile",
        "layerelementtype_tilemap",
        "layerelementtype_undefined",
        "leaderboard_type_number",
        "leaderboard_type_time_mins_secs",
        "lighttype_dir",
        "lighttype_point",
        "lineSpacing",
        "m_axisx",
        "m_axisx_gui",
        "m_axisy",
        "m_axisy_gui",
        "m_scroll_down",
        "m_scroll_up",
        "matrix_projection",
        "matrix_view",
        "matrix_world",
        "mb_any",
        "mb_left",
        "mb_middle",
        "mb_none",
        "mb_right",
        "mb_side1",
        "mb_side2",
        "mip_markedonly",
        "mip_off",
        "mip_on",
        "network_config_avoid_time_wait",
        "network_config_connect_timeout",
        "network_config_disable_multicast",
        "network_config_disable_reliable_udp",
        "network_config_enable_multicast",
        "network_config_enable_reliable_udp",
        "network_config_use_non_blocking_socket",
        "network_config_websocket_protocol",
        "network_connect_active",
        "network_connect_blocking",
        "network_connect_nonblocking",
        "network_connect_none",
        "network_connect_passive",
        "network_send_binary",
        "network_send_text",
        "network_socket_bluetooth",
        "network_socket_tcp",
        "network_socket_udp",
        "network_socket_ws",
        "network_socket_wss",
        "network_type_connect",
        "network_type_data",
        "network_type_disconnect",
        "network_type_down",
        "network_type_non_blocking_connect",
        "network_type_up",
        "network_type_up_failed",
        "nineslice_blank",
        "nineslice_bottom",
        "nineslice_center",
        "nineslice_centre",
        "nineslice_hide",
        "nineslice_left",
        "nineslice_mirror",
        "nineslice_repeat",
        "nineslice_right",
        "nineslice_stretch",
        "nineslice_top",
        "noone",
        "of_challenge_lose",
        "of_challenge_tie",
        "of_challenge_win",
        "os_android",
        "os_gdk",
        "os_gxgames",
        "os_ios",
        "os_linux",
        "os_macosx",
        "os_operagx",
        "os_permission_denied",
        "os_permission_denied_dont_request",
        "os_permission_granted",
        "os_ps3",
        "os_ps4",
        "os_ps5",
        "os_psvita",
        "os_switch",
        "os_tvos",
        "os_unknown",
        "os_uwp",
        "os_win8native",
        "os_windows",
        "os_winphone",
        "os_xboxone",
        "os_xboxseriesxs",
        "other",
        "outlineColor",
        "outlineColour",
        "outlineDist",
        "outlineEnabled",
        "outlineEnabled",
        "paragraphSpacing",
        "path_action_continue",
        "path_action_restart",
        "path_action_reverse",
        "path_action_stop",
        "phy_debug_render_aabb",
        "phy_debug_render_collision_pairs",
        "phy_debug_render_coms",
        "phy_debug_render_core_shapes",
        "phy_debug_render_joints",
        "phy_debug_render_obb",
        "phy_debug_render_shapes",
        "phy_joint_anchor_1_x",
        "phy_joint_anchor_1_y",
        "phy_joint_anchor_2_x",
        "phy_joint_anchor_2_y",
        "phy_joint_angle",
        "phy_joint_angle_limits",
        "phy_joint_damping_ratio",
        "phy_joint_frequency",
        "phy_joint_length_1",
        "phy_joint_length_2",
        "phy_joint_lower_angle_limit",
        "phy_joint_max_force",
        "phy_joint_max_length",
        "phy_joint_max_motor_force",
        "phy_joint_max_motor_torque",
        "phy_joint_max_torque",
        "phy_joint_motor_force",
        "phy_joint_motor_speed",
        "phy_joint_motor_torque",
        "phy_joint_reaction_force_x",
        "phy_joint_reaction_force_y",
        "phy_joint_reaction_torque",
        "phy_joint_speed",
        "phy_joint_translation",
        "phy_joint_upper_angle_limit",
        "phy_particle_data_flag_category",
        "phy_particle_data_flag_color",
        "phy_particle_data_flag_colour",
        "phy_particle_data_flag_position",
        "phy_particle_data_flag_typeflags",
        "phy_particle_data_flag_velocity",
        "phy_particle_flag_colormixing",
        "phy_particle_flag_colourmixing",
        "phy_particle_flag_elastic",
        "phy_particle_flag_powder",
        "phy_particle_flag_spring",
        "phy_particle_flag_tensile",
        "phy_particle_flag_viscous",
        "phy_particle_flag_wall",
        "phy_particle_flag_water",
        "phy_particle_flag_zombie",
        "phy_particle_group_flag_rigid",
        "phy_particle_group_flag_solid",
        "pi",
        "pointer_invalid",
        "pointer_null",
        "pr_linelist",
        "pr_linestrip",
        "pr_pointlist",
        "pr_trianglefan",
        "pr_trianglelist",
        "pr_trianglestrip",
        "ps_distr_gaussian",
        "ps_distr_invgaussian",
        "ps_distr_linear",
        "ps_mode_burst",
        "ps_mode_stream",
        "ps_shape_diamond",
        "ps_shape_ellipse",
        "ps_shape_line",
        "ps_shape_rectangle",
        "pt_shape_circle",
        "pt_shape_cloud",
        "pt_shape_disk",
        "pt_shape_explosion",
        "pt_shape_flare",
        "pt_shape_line",
        "pt_shape_pixel",
        "pt_shape_ring",
        "pt_shape_smoke",
        "pt_shape_snow",
        "pt_shape_spark",
        "pt_shape_sphere",
        "pt_shape_square",
        "pt_shape_star",
        "rollback_chat_message",
        "rollback_connect_error",
        "rollback_connect_info",
        "rollback_connected_to_peer",
        "rollback_connection_rejected",
        "rollback_disconnected_from_peer",
        "rollback_end_game",
        "rollback_game_full",
        "rollback_game_info",
        "rollback_game_interrupted",
        "rollback_game_resumed",
        "rollback_high_latency",
        "rollback_player_prefs",
        "rollback_protocol_rejected",
        "rollback_synchronized_with_peer",
        "rollback_synchronizing_with_peer",
        "self",
        "seqaudiokey_loop",
        "seqaudiokey_oneshot",
        "seqdir_left",
        "seqdir_right",
        "seqinterpolation_assign",
        "seqinterpolation_lerp",
        "seqplay_loop",
        "seqplay_oneshot",
        "seqplay_pingpong",
        "seqtextkey_bottom",
        "seqtextkey_center",
        "seqtextkey_justify",
        "seqtextkey_left",
        "seqtextkey_middle",
        "seqtextkey_right",
        "seqtextkey_top",
        "seqtracktype_audio",
        "seqtracktype_bool",
        "seqtracktype_clipmask",
        "seqtracktype_clipmask_mask",
        "seqtracktype_clipmask_subject",
        "seqtracktype_color",
        "seqtracktype_colour",
        "seqtracktype_empty",
        "seqtracktype_graphic",
        "seqtracktype_group",
        "seqtracktype_instance",
        "seqtracktype_message",
        "seqtracktype_moment",
        "seqtracktype_particlesystem",
        "seqtracktype_real",
        "seqtracktype_sequence",
        "seqtracktype_spriteframes",
        "seqtracktype_string",
        "seqtracktype_text",
        "shadowColor",
        "shadowColour",
        "shadowOffsetX",
        "shadowOffsetY",
        "shadowSoftness",
        "sprite_add_ext_error_cancelled",
        "sprite_add_ext_error_decompressfailed",
        "sprite_add_ext_error_loadfailed",
        "sprite_add_ext_error_setupfailed",
        "sprite_add_ext_error_spritenotfound",
        "sprite_add_ext_error_unknown",
        "spritespeed_framespergameframe",
        "spritespeed_framespersecond",
        "surface_r16float",
        "surface_r32float",
        "surface_r8unorm",
        "surface_rg8unorm",
        "surface_rgba16float",
        "surface_rgba32float",
        "surface_rgba4unorm",
        "surface_rgba8unorm",
        "texturegroup_status_fetched",
        "texturegroup_status_loaded",
        "texturegroup_status_loading",
        "texturegroup_status_unloaded",
        "tf_anisotropic",
        "tf_linear",
        "tf_point",
        "thickness",
        "tile_flip",
        "tile_index_mask",
        "tile_mirror",
        "tile_rotate",
        "time_source_expire_after",
        "time_source_expire_nearest",
        "time_source_game",
        "time_source_global",
        "time_source_state_active",
        "time_source_state_initial",
        "time_source_state_paused",
        "time_source_state_stopped",
        "time_source_units_frames",
        "time_source_units_seconds",
        "timezone_local",
        "timezone_utc",
        "tm_countvsyncs",
        "tm_sleep",
        "tm_systemtiming",
        "true",
        "ty_real",
        "ty_string",
        "undefined",
        "vertex_type_color",
        "vertex_type_colour",
        "vertex_type_float1",
        "vertex_type_float2",
        "vertex_type_float3",
        "vertex_type_float4",
        "vertex_type_ubyte4",
        "vertex_usage_binormal",
        "vertex_usage_blendindices",
        "vertex_usage_blendweight",
        "vertex_usage_color",
        "vertex_usage_colour",
        "vertex_usage_depth",
        "vertex_usage_fog",
        "vertex_usage_normal",
        "vertex_usage_position",
        "vertex_usage_psize",
        "vertex_usage_sample",
        "vertex_usage_tangent",
        "vertex_usage_texcoord",
        "video_format_rgba",
        "video_format_yuv",
        "video_status_closed",
        "video_status_paused",
        "video_status_playing",
        "video_status_preparing",
        "vk_add",
        "vk_alt",
        "vk_anykey",
        "vk_backspace",
        "vk_control",
        "vk_decimal",
        "vk_delete",
        "vk_divide",
        "vk_down",
        "vk_end",
        "vk_enter",
        "vk_escape",
        "vk_f1",
        "vk_f10",
        "vk_f11",
        "vk_f12",
        "vk_f2",
        "vk_f3",
        "vk_f4",
        "vk_f5",
        "vk_f6",
        "vk_f7",
        "vk_f8",
        "vk_f9",
        "vk_home",
        "vk_insert",
        "vk_lalt",
        "vk_lcontrol",
        "vk_left",
        "vk_lshift",
        "vk_multiply",
        "vk_nokey",
        "vk_numpad0",
        "vk_numpad1",
        "vk_numpad2",
        "vk_numpad3",
        "vk_numpad4",
        "vk_numpad5",
        "vk_numpad6",
        "vk_numpad7",
        "vk_numpad8",
        "vk_numpad9",
        "vk_pagedown",
        "vk_pageup",
        "vk_pause",
        "vk_printscreen",
        "vk_ralt",
        "vk_rcontrol",
        "vk_return",
        "vk_right",
        "vk_rshift",
        "vk_shift",
        "vk_space",
        "vk_subtract",
        "vk_tab",
        "vk_up",
        "wallpaper_config",
        "wallpaper_subscription_data",
        "wrap"
      ],
      "variable.language": [
        "alarm",
        "application_surface",
        "argument",
        "argument0",
        "argument1",
        "argument2",
        "argument3",
        "argument4",
        "argument5",
        "argument6",
        "argument7",
        "argument8",
        "argument9",
        "argument10",
        "argument11",
        "argument12",
        "argument13",
        "argument14",
        "argument15",
        "argument_count",
        "async_load",
        "background_color",
        "background_colour",
        "background_showcolor",
        "background_showcolour",
        "bbox_bottom",
        "bbox_left",
        "bbox_right",
        "bbox_top",
        "browser_height",
        "browser_width",
        "colour?ColourTrack",
        "current_day",
        "current_hour",
        "current_minute",
        "current_month",
        "current_second",
        "current_time",
        "current_weekday",
        "current_year",
        "cursor_sprite",
        "debug_mode",
        "delta_time",
        "depth",
        "direction",
        "display_aa",
        "drawn_by_sequence",
        "event_action",
        "event_data",
        "event_number",
        "event_object",
        "event_type",
        "font_texture_page_size",
        "fps",
        "fps_real",
        "friction",
        "game_display_name",
        "game_id",
        "game_project_name",
        "game_save_id",
        "gravity",
        "gravity_direction",
        "health",
        "hspeed",
        "iap_data",
        "id",
        "image_alpha",
        "image_angle",
        "image_blend",
        "image_index",
        "image_number",
        "image_speed",
        "image_xscale",
        "image_yscale",
        "in_collision_tree",
        "in_sequence",
        "instance_count",
        "instance_id",
        "keyboard_key",
        "keyboard_lastchar",
        "keyboard_lastkey",
        "keyboard_string",
        "layer",
        "lives",
        "longMessage",
        "managed",
        "mask_index",
        "message",
        "mouse_button",
        "mouse_lastbutton",
        "mouse_x",
        "mouse_y",
        "object_index",
        "os_browser",
        "os_device",
        "os_type",
        "os_version",
        "path_endaction",
        "path_index",
        "path_orientation",
        "path_position",
        "path_positionprevious",
        "path_scale",
        "path_speed",
        "persistent",
        "phy_active",
        "phy_angular_damping",
        "phy_angular_velocity",
        "phy_bullet",
        "phy_col_normal_x",
        "phy_col_normal_y",
        "phy_collision_points",
        "phy_collision_x",
        "phy_collision_y",
        "phy_com_x",
        "phy_com_y",
        "phy_dynamic",
        "phy_fixed_rotation",
        "phy_inertia",
        "phy_kinematic",
        "phy_linear_damping",
        "phy_linear_velocity_x",
        "phy_linear_velocity_y",
        "phy_mass",
        "phy_position_x",
        "phy_position_xprevious",
        "phy_position_y",
        "phy_position_yprevious",
        "phy_rotation",
        "phy_sleeping",
        "phy_speed",
        "phy_speed_x",
        "phy_speed_y",
        "player_avatar_sprite",
        "player_avatar_url",
        "player_id",
        "player_local",
        "player_type",
        "player_user_id",
        "program_directory",
        "rollback_api_server",
        "rollback_confirmed_frame",
        "rollback_current_frame",
        "rollback_event_id",
        "rollback_event_param",
        "rollback_game_running",
        "room",
        "room_first",
        "room_height",
        "room_last",
        "room_persistent",
        "room_speed",
        "room_width",
        "score",
        "script",
        "sequence_instance",
        "solid",
        "speed",
        "sprite_height",
        "sprite_index",
        "sprite_width",
        "sprite_xoffset",
        "sprite_yoffset",
        "stacktrace",
        "temp_directory",
        "timeline_index",
        "timeline_loop",
        "timeline_position",
        "timeline_running",
        "timeline_speed",
        "view_camera",
        "view_current",
        "view_enabled",
        "view_hport",
        "view_surface_id",
        "view_visible",
        "view_wport",
        "view_xport",
        "view_yport",
        "visible",
        "vspeed",
        "webgl_enabled",
        "working_directory",
        "x",
        "xprevious",
        "xstart",
        "y",
        "yprevious",
        "ystart"
      ]
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE
    ]
  };
}
const gae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zj
}, Symbol.toStringTag, { value: "Module" }));
function Xj(t) {
  const i = {
    keyword: [
      "break",
      "case",
      "chan",
      "const",
      "continue",
      "default",
      "defer",
      "else",
      "fallthrough",
      "for",
      "func",
      "go",
      "goto",
      "if",
      "import",
      "interface",
      "map",
      "package",
      "range",
      "return",
      "select",
      "struct",
      "switch",
      "type",
      "var"
    ],
    type: [
      "bool",
      "byte",
      "complex64",
      "complex128",
      "error",
      "float32",
      "float64",
      "int8",
      "int16",
      "int32",
      "int64",
      "string",
      "uint8",
      "uint16",
      "uint32",
      "uint64",
      "int",
      "uint",
      "uintptr",
      "rune"
    ],
    literal: [
      "true",
      "false",
      "iota",
      "nil"
    ],
    built_in: [
      "append",
      "cap",
      "close",
      "complex",
      "copy",
      "imag",
      "len",
      "make",
      "new",
      "panic",
      "print",
      "println",
      "real",
      "recover",
      "delete"
    ]
  };
  return {
    name: "Go",
    aliases: ["golang"],
    keywords: i,
    illegal: "</",
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "string",
        variants: [
          t.QUOTE_STRING_MODE,
          t.APOS_STRING_MODE,
          {
            begin: "`",
            end: "`"
          }
        ]
      },
      {
        className: "number",
        variants: [
          {
            match: /-?\b0[xX]\.[a-fA-F0-9](_?[a-fA-F0-9])*[pP][+-]?\d(_?\d)*i?/,
            // hex without a present digit before . (making a digit afterwards required)
            relevance: 0
          },
          {
            match: /-?\b0[xX](_?[a-fA-F0-9])+((\.([a-fA-F0-9](_?[a-fA-F0-9])*)?)?[pP][+-]?\d(_?\d)*)?i?/,
            // hex with a present digit before . (making a digit afterwards optional)
            relevance: 0
          },
          {
            match: /-?\b0[oO](_?[0-7])*i?/,
            // leading 0o octal
            relevance: 0
          },
          {
            match: /-?\.\d(_?\d)*([eE][+-]?\d(_?\d)*)?i?/,
            // decimal without a present digit before . (making a digit afterwards required)
            relevance: 0
          },
          {
            match: /-?\b\d(_?\d)*(\.(\d(_?\d)*)?)?([eE][+-]?\d(_?\d)*)?i?/,
            // decimal with a present digit before . (making a digit afterwards optional)
            relevance: 0
          }
        ]
      },
      {
        begin: /:=/
        // relevance booster
      },
      {
        className: "function",
        beginKeywords: "func",
        end: "\\s*(\\{|$)",
        excludeEnd: !0,
        contains: [
          t.TITLE_MODE,
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            endsParent: !0,
            keywords: i,
            illegal: /["']/
          }
        ]
      }
    ]
  };
}
const vae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Xj
}, Symbol.toStringTag, { value: "Module" }));
function Qj(t) {
  return {
    name: "Golo",
    keywords: {
      keyword: [
        "println",
        "readln",
        "print",
        "import",
        "module",
        "function",
        "local",
        "return",
        "let",
        "var",
        "while",
        "for",
        "foreach",
        "times",
        "in",
        "case",
        "when",
        "match",
        "with",
        "break",
        "continue",
        "augment",
        "augmentation",
        "each",
        "find",
        "filter",
        "reduce",
        "if",
        "then",
        "else",
        "otherwise",
        "try",
        "catch",
        "finally",
        "raise",
        "throw",
        "orIfNull",
        "DynamicObject|10",
        "DynamicVariable",
        "struct",
        "Observable",
        "map",
        "set",
        "vector",
        "list",
        "array"
      ],
      literal: [
        "true",
        "false",
        "null"
      ]
    },
    contains: [
      t.HASH_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        className: "meta",
        begin: "@[A-Za-z]+"
      }
    ]
  };
}
const mae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Qj
}, Symbol.toStringTag, { value: "Module" }));
function jj(t) {
  return {
    name: "Gradle",
    case_insensitive: !0,
    keywords: [
      "task",
      "project",
      "allprojects",
      "subprojects",
      "artifacts",
      "buildscript",
      "configurations",
      "dependencies",
      "repositories",
      "sourceSets",
      "description",
      "delete",
      "from",
      "into",
      "include",
      "exclude",
      "source",
      "classpath",
      "destinationDir",
      "includes",
      "options",
      "sourceCompatibility",
      "targetCompatibility",
      "group",
      "flatDir",
      "doLast",
      "doFirst",
      "flatten",
      "todir",
      "fromdir",
      "ant",
      "def",
      "abstract",
      "break",
      "case",
      "catch",
      "continue",
      "default",
      "do",
      "else",
      "extends",
      "final",
      "finally",
      "for",
      "if",
      "implements",
      "instanceof",
      "native",
      "new",
      "private",
      "protected",
      "public",
      "return",
      "static",
      "switch",
      "synchronized",
      "throw",
      "throws",
      "transient",
      "try",
      "volatile",
      "while",
      "strictfp",
      "package",
      "import",
      "false",
      "null",
      "super",
      "this",
      "true",
      "antlrtask",
      "checkstyle",
      "codenarc",
      "copy",
      "boolean",
      "byte",
      "char",
      "class",
      "double",
      "float",
      "int",
      "interface",
      "long",
      "short",
      "void",
      "compile",
      "runTime",
      "file",
      "fileTree",
      "abs",
      "any",
      "append",
      "asList",
      "asWritable",
      "call",
      "collect",
      "compareTo",
      "count",
      "div",
      "dump",
      "each",
      "eachByte",
      "eachFile",
      "eachLine",
      "every",
      "find",
      "findAll",
      "flatten",
      "getAt",
      "getErr",
      "getIn",
      "getOut",
      "getText",
      "grep",
      "immutable",
      "inject",
      "inspect",
      "intersect",
      "invokeMethods",
      "isCase",
      "join",
      "leftShift",
      "minus",
      "multiply",
      "newInputStream",
      "newOutputStream",
      "newPrintWriter",
      "newReader",
      "newWriter",
      "next",
      "plus",
      "pop",
      "power",
      "previous",
      "print",
      "println",
      "push",
      "putAt",
      "read",
      "readBytes",
      "readLines",
      "reverse",
      "reverseEach",
      "round",
      "size",
      "sort",
      "splitEachLine",
      "step",
      "subMap",
      "times",
      "toInteger",
      "toList",
      "tokenize",
      "upto",
      "waitForOrKill",
      "withPrintWriter",
      "withReader",
      "withStream",
      "withWriter",
      "withWriterAppend",
      "write",
      "writeLine"
    ],
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE,
      t.REGEXP_MODE
    ]
  };
}
const _ae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: jj
}, Symbol.toStringTag, { value: "Module" }));
function Mv(t, e = {}) {
  return e.variants = t, e;
}
function Jj(t) {
  const e = t.regex, r = "[A-Za-z0-9_$]+", n = Mv([
    t.C_LINE_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE,
    t.COMMENT(
      "/\\*\\*",
      "\\*/",
      {
        relevance: 0,
        contains: [
          {
            // eat up @'s in emails to prevent them to be recognized as doctags
            begin: /\w+@/,
            relevance: 0
          },
          {
            className: "doctag",
            begin: "@[A-Za-z]+"
          }
        ]
      }
    )
  ]), a = {
    className: "regexp",
    begin: /~?\/[^\/\n]+\//,
    contains: [t.BACKSLASH_ESCAPE]
  }, i = Mv([
    t.BINARY_NUMBER_MODE,
    t.C_NUMBER_MODE
  ]), o = Mv(
    [
      {
        begin: /"""/,
        end: /"""/
      },
      {
        begin: /'''/,
        end: /'''/
      },
      {
        begin: "\\$/",
        end: "/\\$",
        relevance: 10
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ],
    { className: "string" }
  ), s = {
    match: [
      /(class|interface|trait|enum|record|extends|implements)/,
      /\s+/,
      t.UNDERSCORE_IDENT_RE
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  };
  return {
    name: "Groovy",
    keywords: {
      "variable.language": "this super",
      literal: "true false null",
      type: [
        "byte",
        "short",
        "char",
        "int",
        "long",
        "boolean",
        "float",
        "double",
        "void"
      ],
      keyword: [
        // groovy specific keywords
        "def",
        "as",
        "in",
        "assert",
        "trait",
        // common keywords with Java
        "abstract",
        "static",
        "volatile",
        "transient",
        "public",
        "private",
        "protected",
        "synchronized",
        "final",
        "class",
        "interface",
        "enum",
        "if",
        "else",
        "for",
        "while",
        "switch",
        "case",
        "break",
        "default",
        "continue",
        "throw",
        "throws",
        "try",
        "catch",
        "finally",
        "implements",
        "extends",
        "new",
        "import",
        "package",
        "return",
        "instanceof",
        "var"
      ]
    },
    contains: [
      t.SHEBANG({
        binary: "groovy",
        relevance: 10
      }),
      n,
      o,
      a,
      i,
      s,
      {
        className: "meta",
        begin: "@[A-Za-z]+",
        relevance: 0
      },
      {
        // highlight map keys and named parameters as attrs
        className: "attr",
        begin: r + "[ 	]*:",
        relevance: 0
      },
      {
        // catch middle element of the ternary operator
        // to avoid highlight it as a label, named parameter, or map key
        begin: /\?/,
        end: /:/,
        relevance: 0,
        contains: [
          n,
          o,
          a,
          i,
          "self"
        ]
      },
      {
        // highlight labeled statements
        className: "symbol",
        begin: "^[ 	]*" + e.lookahead(r + ":"),
        excludeBegin: !0,
        end: r + ":",
        relevance: 0
      }
    ],
    illegal: /#|<\//
  };
}
const yae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Jj
}, Symbol.toStringTag, { value: "Module" }));
function eJ(t) {
  return {
    name: "HAML",
    case_insensitive: !0,
    contains: [
      {
        className: "meta",
        begin: "^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$",
        relevance: 10
      },
      // FIXME these comments should be allowed to span indented lines
      t.COMMENT(
        "^\\s*(!=#|=#|-#|/).*$",
        null,
        { relevance: 0 }
      ),
      {
        begin: "^\\s*(-|=|!=)(?!#)",
        end: /$/,
        subLanguage: "ruby",
        excludeBegin: !0,
        excludeEnd: !0
      },
      {
        className: "tag",
        begin: "^\\s*%",
        contains: [
          {
            className: "selector-tag",
            begin: "\\w+"
          },
          {
            className: "selector-id",
            begin: "#[\\w-]+"
          },
          {
            className: "selector-class",
            begin: "\\.[\\w-]+"
          },
          {
            begin: /\{\s*/,
            end: /\s*\}/,
            contains: [
              {
                begin: ":\\w+\\s*=>",
                end: ",\\s+",
                returnBegin: !0,
                endsWithParent: !0,
                contains: [
                  {
                    className: "attr",
                    begin: ":\\w+"
                  },
                  t.APOS_STRING_MODE,
                  t.QUOTE_STRING_MODE,
                  {
                    begin: "\\w+",
                    relevance: 0
                  }
                ]
              }
            ]
          },
          {
            begin: "\\(\\s*",
            end: "\\s*\\)",
            excludeEnd: !0,
            contains: [
              {
                begin: "\\w+\\s*=",
                end: "\\s+",
                returnBegin: !0,
                endsWithParent: !0,
                contains: [
                  {
                    className: "attr",
                    begin: "\\w+",
                    relevance: 0
                  },
                  t.APOS_STRING_MODE,
                  t.QUOTE_STRING_MODE,
                  {
                    begin: "\\w+",
                    relevance: 0
                  }
                ]
              }
            ]
          }
        ]
      },
      { begin: "^\\s*[=~]\\s*" },
      {
        begin: /#\{/,
        end: /\}/,
        subLanguage: "ruby",
        excludeBegin: !0,
        excludeEnd: !0
      }
    ]
  };
}
const bae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: eJ
}, Symbol.toStringTag, { value: "Module" }));
function tJ(t) {
  const e = t.regex, r = {
    $pattern: /[\w.\/]+/,
    built_in: [
      "action",
      "bindattr",
      "collection",
      "component",
      "concat",
      "debugger",
      "each",
      "each-in",
      "get",
      "hash",
      "if",
      "in",
      "input",
      "link-to",
      "loc",
      "log",
      "lookup",
      "mut",
      "outlet",
      "partial",
      "query-params",
      "render",
      "template",
      "textarea",
      "unbound",
      "unless",
      "view",
      "with",
      "yield"
    ]
  }, n = {
    $pattern: /[\w.\/]+/,
    literal: [
      "true",
      "false",
      "undefined",
      "null"
    ]
  }, a = /""|"[^"]+"/, i = /''|'[^']+'/, o = /\[\]|\[[^\]]+\]/, s = /[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/, l = /(\.|\/)/, u = e.either(
    a,
    i,
    o,
    s
  ), c = e.concat(
    e.optional(/\.|\.\/|\//),
    // relative or absolute path
    u,
    e.anyNumberOfTimes(e.concat(
      l,
      u
    ))
  ), d = e.concat(
    "(",
    o,
    "|",
    s,
    ")(?==)"
  ), p = { begin: c }, f = t.inherit(p, { keywords: n }), h = {
    begin: /\(/,
    end: /\)/
    // the "contains" is added below when all necessary sub-modes are defined
  }, g = {
    // fka "attribute-assignment", parameters of the form 'key=value'
    className: "attr",
    begin: d,
    relevance: 0,
    starts: {
      begin: /=/,
      end: /=/,
      starts: { contains: [
        t.NUMBER_MODE,
        t.QUOTE_STRING_MODE,
        t.APOS_STRING_MODE,
        f,
        h
      ] }
    }
  }, v = {
    // parameters of the form '{{#with x as | y |}}...{{/with}}'
    begin: /as\s+\|/,
    keywords: { keyword: "as" },
    end: /\|/,
    contains: [
      {
        // define sub-mode in order to prevent highlighting of block-parameter named "as"
        begin: /\w+/
      }
    ]
  }, m = {
    contains: [
      t.NUMBER_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      v,
      g,
      f,
      h
    ],
    returnEnd: !0
    // the property "end" is defined through inheritance when the mode is used. If depends
    // on the surrounding mode, but "endsWithParent" does not work here (i.e. it includes the
    // end-token of the surrounding mode)
  }, _ = t.inherit(p, {
    className: "name",
    keywords: r,
    starts: t.inherit(m, { end: /\)/ })
  });
  h.contains = [_];
  const y = t.inherit(p, {
    keywords: r,
    className: "name",
    starts: t.inherit(m, { end: /\}\}/ })
  }), b = t.inherit(p, {
    keywords: r,
    className: "name"
  }), S = t.inherit(p, {
    className: "name",
    keywords: r,
    starts: t.inherit(m, { end: /\}\}/ })
  });
  return {
    name: "Handlebars",
    aliases: [
      "hbs",
      "html.hbs",
      "html.handlebars",
      "htmlbars"
    ],
    case_insensitive: !0,
    subLanguage: "xml",
    contains: [
      {
        begin: /\\\{\{/,
        skip: !0
      },
      {
        begin: /\\\\(?=\{\{)/,
        skip: !0
      },
      t.COMMENT(/\{\{!--/, /--\}\}/),
      t.COMMENT(/\{\{!/, /\}\}/),
      {
        // open raw block "{{{{raw}}}} content not evaluated {{{{/raw}}}}"
        className: "template-tag",
        begin: /\{\{\{\{(?!\/)/,
        end: /\}\}\}\}/,
        contains: [y],
        starts: {
          end: /\{\{\{\{\//,
          returnEnd: !0,
          subLanguage: "xml"
        }
      },
      {
        // close raw block
        className: "template-tag",
        begin: /\{\{\{\{\//,
        end: /\}\}\}\}/,
        contains: [b]
      },
      {
        // open block statement
        className: "template-tag",
        begin: /\{\{#/,
        end: /\}\}/,
        contains: [y]
      },
      {
        className: "template-tag",
        begin: /\{\{(?=else\}\})/,
        end: /\}\}/,
        keywords: "else"
      },
      {
        className: "template-tag",
        begin: /\{\{(?=else if)/,
        end: /\}\}/,
        keywords: "else if"
      },
      {
        // closing block statement
        className: "template-tag",
        begin: /\{\{\//,
        end: /\}\}/,
        contains: [b]
      },
      {
        // template variable or helper-call that is NOT html-escaped
        className: "template-variable",
        begin: /\{\{\{/,
        end: /\}\}\}/,
        contains: [S]
      },
      {
        // template variable or helper-call that is html-escaped
        className: "template-variable",
        begin: /\{\{/,
        end: /\}\}/,
        contains: [S]
      }
    ]
  };
}
const Sae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: tJ
}, Symbol.toStringTag, { value: "Module" }));
function rJ(t) {
  const e = "([0-9]_*)+", r = "([0-9a-fA-F]_*)+", n = "([01]_*)+", a = "([0-7]_*)+", l = "([!#$%&*+.\\/<=>?@\\\\^~-]|(?!([(),;\\[\\]`|{}]|[_:\"']))(\\p{S}|\\p{P}))", u = { variants: [
    // Double dash forms a valid comment only if it's not part of legal lexeme.
    // See: Haskell 98 report: https://www.haskell.org/onlinereport/lexemes.html
    //
    // The commented code does the job, but we can't use negative lookbehind,
    // due to poor support by Safari browser.
    // > hljs.COMMENT(`(?<!${symbol})--+(?!${symbol})`, '$'),
    // So instead, we'll add a no-markup rule before the COMMENT rule in the rules list
    // to match the problematic infix operators that contain double dash.
    t.COMMENT("--+", "$"),
    t.COMMENT(
      /\{-/,
      /-\}/,
      { contains: ["self"] }
    )
  ] }, c = {
    className: "meta",
    begin: /\{-#/,
    end: /#-\}/
  }, d = {
    className: "meta",
    begin: "^#",
    end: "$"
  }, p = {
    className: "type",
    begin: "\\b[A-Z][\\w']*",
    // TODO: other constructors (build-in, infix).
    relevance: 0
  }, f = {
    begin: "\\(",
    end: "\\)",
    illegal: '"',
    contains: [
      c,
      d,
      {
        className: "type",
        begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
      },
      t.inherit(t.TITLE_MODE, { begin: "[_a-z][\\w']*" }),
      u
    ]
  }, h = {
    begin: /\{/,
    end: /\}/,
    contains: f.contains
  }, g = {
    className: "number",
    relevance: 0,
    variants: [
      // decimal floating-point-literal (subsumes decimal-literal)
      { match: `\\b(${e})(\\.(${e}))?([eE][+-]?(${e}))?\\b` },
      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)
      { match: `\\b0[xX]_*(${r})(\\.(${r}))?([pP][+-]?(${e}))?\\b` },
      // octal-literal
      { match: `\\b0[oO](${a})\\b` },
      // binary-literal
      { match: `\\b0[bB](${n})\\b` }
    ]
  };
  return {
    name: "Haskell",
    aliases: ["hs"],
    keywords: "let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec",
    unicodeRegex: !0,
    contains: [
      // Top-level constructions.
      {
        beginKeywords: "module",
        end: "where",
        keywords: "module where",
        contains: [
          f,
          u
        ],
        illegal: "\\W\\.|;"
      },
      {
        begin: "\\bimport\\b",
        end: "$",
        keywords: "import qualified as hiding",
        contains: [
          f,
          u
        ],
        illegal: "\\W\\.|;"
      },
      {
        className: "class",
        begin: "^(\\s*)?(class|instance)\\b",
        end: "where",
        keywords: "class family instance where",
        contains: [
          p,
          f,
          u
        ]
      },
      {
        className: "class",
        begin: "\\b(data|(new)?type)\\b",
        end: "$",
        keywords: "data family type newtype deriving",
        contains: [
          c,
          p,
          f,
          h,
          u
        ]
      },
      {
        beginKeywords: "default",
        end: "$",
        contains: [
          p,
          f,
          u
        ]
      },
      {
        beginKeywords: "infix infixl infixr",
        end: "$",
        contains: [
          t.C_NUMBER_MODE,
          u
        ]
      },
      {
        begin: "\\bforeign\\b",
        end: "$",
        keywords: "foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe",
        contains: [
          p,
          t.QUOTE_STRING_MODE,
          u
        ]
      },
      {
        className: "meta",
        begin: "#!\\/usr\\/bin\\/env runhaskell",
        end: "$"
      },
      // "Whitespaces".
      c,
      d,
      // Literals and names.
      // Single characters.
      {
        scope: "string",
        begin: /'(?=\\?.')/,
        end: /'/,
        contains: [
          {
            scope: "char.escape",
            match: /\\./
          }
        ]
      },
      t.QUOTE_STRING_MODE,
      g,
      p,
      t.inherit(t.TITLE_MODE, { begin: "^[_a-z][\\w']*" }),
      // No markup, prevents infix operators from being recognized as comments.
      { begin: `(?!-)${l}--+|--+(?!-)${l}` },
      u,
      {
        // No markup, relevance booster
        begin: "->|<-"
      }
    ]
  };
}
const Eae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: rJ
}, Symbol.toStringTag, { value: "Module" }));
function nJ(t) {
  const e = "[a-zA-Z_$][a-zA-Z0-9_$]*", r = /(-?)(\b0[xX][a-fA-F0-9_]+|(\b\d+(\.[\d_]*)?|\.[\d_]+)(([eE][-+]?\d+)|i32|u32|i64|f64)?)/;
  return {
    name: "Haxe",
    aliases: ["hx"],
    keywords: {
      keyword: "abstract break case cast catch continue default do dynamic else enum extern final for function here if import in inline is macro never new override package private get set public return static super switch this throw trace try typedef untyped using var while " + "Int Float String Bool Dynamic Void Array ",
      built_in: "trace this",
      literal: "true false null _"
    },
    contains: [
      {
        className: "string",
        // interpolate-able strings
        begin: "'",
        end: "'",
        contains: [
          t.BACKSLASH_ESCAPE,
          {
            className: "subst",
            // interpolation
            begin: /\$\{/,
            end: /\}/
          },
          {
            className: "subst",
            // interpolation
            begin: /\$/,
            end: /\W\}/
          }
        ]
      },
      t.QUOTE_STRING_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "number",
        begin: r,
        relevance: 0
      },
      {
        className: "variable",
        begin: "\\$" + e
      },
      {
        className: "meta",
        // compiler meta
        begin: /@:?/,
        end: /\(|$/,
        excludeEnd: !0
      },
      {
        className: "meta",
        // compiler conditionals
        begin: "#",
        end: "$",
        keywords: { keyword: "if else elseif end error" }
      },
      {
        className: "type",
        // function types
        begin: /:[ \t]*/,
        end: /[^A-Za-z0-9_ \t\->]/,
        excludeBegin: !0,
        excludeEnd: !0,
        relevance: 0
      },
      {
        className: "type",
        // types
        begin: /:[ \t]*/,
        end: /\W/,
        excludeBegin: !0,
        excludeEnd: !0
      },
      {
        className: "type",
        // instantiation
        beginKeywords: "new",
        end: /\W/,
        excludeBegin: !0,
        excludeEnd: !0
      },
      {
        className: "title.class",
        // enums
        beginKeywords: "enum",
        end: /\{/,
        contains: [t.TITLE_MODE]
      },
      {
        className: "title.class",
        // abstracts
        begin: "\\babstract\\b(?=\\s*" + t.IDENT_RE + "\\s*\\()",
        end: /[\{$]/,
        contains: [
          {
            className: "type",
            begin: /\(/,
            end: /\)/,
            excludeBegin: !0,
            excludeEnd: !0
          },
          {
            className: "type",
            begin: /from +/,
            end: /\W/,
            excludeBegin: !0,
            excludeEnd: !0
          },
          {
            className: "type",
            begin: /to +/,
            end: /\W/,
            excludeBegin: !0,
            excludeEnd: !0
          },
          t.TITLE_MODE
        ],
        keywords: { keyword: "abstract from to" }
      },
      {
        className: "title.class",
        // classes
        begin: /\b(class|interface) +/,
        end: /[\{$]/,
        excludeEnd: !0,
        keywords: "class interface",
        contains: [
          {
            className: "keyword",
            begin: /\b(extends|implements) +/,
            keywords: "extends implements",
            contains: [
              {
                className: "type",
                begin: t.IDENT_RE,
                relevance: 0
              }
            ]
          },
          t.TITLE_MODE
        ]
      },
      {
        className: "title.function",
        beginKeywords: "function",
        end: /\(/,
        excludeEnd: !0,
        illegal: /\S/,
        contains: [t.TITLE_MODE]
      }
    ],
    illegal: /<\//
  };
}
const Tae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: nJ
}, Symbol.toStringTag, { value: "Module" }));
function aJ(t) {
  return {
    name: "HSP",
    case_insensitive: !0,
    keywords: {
      $pattern: /[\w._]+/,
      keyword: "goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop"
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      {
        // multi-line string
        className: "string",
        begin: /\{"/,
        end: /"\}/,
        contains: [t.BACKSLASH_ESCAPE]
      },
      t.COMMENT(";", "$", { relevance: 0 }),
      {
        // pre-processor
        className: "meta",
        begin: "#",
        end: "$",
        keywords: { keyword: "addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib" },
        contains: [
          t.inherit(t.QUOTE_STRING_MODE, { className: "string" }),
          t.NUMBER_MODE,
          t.C_NUMBER_MODE,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        // label
        className: "symbol",
        begin: "^\\*(\\w+|@)"
      },
      t.NUMBER_MODE,
      t.C_NUMBER_MODE
    ]
  };
}
const xae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: aJ
}, Symbol.toStringTag, { value: "Module" }));
function iJ(t) {
  const e = t.regex, r = "HTTP/([32]|1\\.[01])", n = /[A-Za-z][A-Za-z0-9-]*/, a = {
    className: "attribute",
    begin: e.concat("^", n, "(?=\\:\\s)"),
    starts: { contains: [
      {
        className: "punctuation",
        begin: /: /,
        relevance: 0,
        starts: {
          end: "$",
          relevance: 0
        }
      }
    ] }
  }, i = [
    a,
    {
      begin: "\\n\\n",
      starts: {
        subLanguage: [],
        endsWithParent: !0
      }
    }
  ];
  return {
    name: "HTTP",
    aliases: ["https"],
    illegal: /\S/,
    contains: [
      // response
      {
        begin: "^(?=" + r + " \\d{3})",
        end: /$/,
        contains: [
          {
            className: "meta",
            begin: r
          },
          {
            className: "number",
            begin: "\\b\\d{3}\\b"
          }
        ],
        starts: {
          end: /\b\B/,
          illegal: /\S/,
          contains: i
        }
      },
      // request
      {
        begin: "(?=^[A-Z]+ (.*?) " + r + "$)",
        end: /$/,
        contains: [
          {
            className: "string",
            begin: " ",
            end: " ",
            excludeBegin: !0,
            excludeEnd: !0
          },
          {
            className: "meta",
            begin: r
          },
          {
            className: "keyword",
            begin: "[A-Z]+"
          }
        ],
        starts: {
          end: /\b\B/,
          illegal: /\S/,
          contains: i
        }
      },
      // to allow headers to work even without a preamble
      t.inherit(a, { relevance: 0 })
    ]
  };
}
const Cae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: iJ
}, Symbol.toStringTag, { value: "Module" }));
function oJ(t) {
  const e = "a-zA-Z_\\-!.?+*=<>&#'", r = "[" + e + "][" + e + "0-9/;:]*", n = {
    $pattern: r,
    built_in: (
      // keywords
      "!= % %= & &= * ** **= *= *map + += , --build-class-- --import-- -= . / // //= /= < << <<= <= = > >= >> >>= @ @= ^ ^= abs accumulate all and any ap-compose ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast callable calling-module-name car case cdr chain chr coll? combinations compile compress cond cons cons? continue count curry cut cycle dec def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first flatten float? fn fnc fnr for for* format fraction genexpr gensym get getattr global globals group-by hasattr hash hex id identity if if* if-not if-python2 import in inc input instance? integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass iter iterable? iterate iterator? keyword keyword? lambda last len let lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all map max merge-with method-decorator min multi-decorator multicombinations name neg? next none? nonlocal not not-in not? nth numeric? oct odd? open or ord partition permutations pos? post-route postwalk pow prewalk print product profile/calls profile/cpu put-route quasiquote quote raise range read read-str recursive-replace reduce remove repeat repeatedly repr require rest round route route-with-methods rwm second seq set-comp setattr setv some sorted string string? sum switch symbol? take take-nth take-while tee try unless unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms xi xor yield yield-from zero? zip zip-longest | |= ~"
    )
  }, a = "[-+]?\\d+(\\.\\d+)?", i = {
    begin: r,
    relevance: 0
  }, o = {
    className: "number",
    begin: a,
    relevance: 0
  }, s = t.inherit(t.QUOTE_STRING_MODE, { illegal: null }), l = t.COMMENT(
    ";",
    "$",
    { relevance: 0 }
  ), u = {
    className: "literal",
    begin: /\b([Tt]rue|[Ff]alse|nil|None)\b/
  }, c = {
    begin: "[\\[\\{]",
    end: "[\\]\\}]",
    relevance: 0
  }, d = {
    className: "comment",
    begin: "\\^" + r
  }, p = t.COMMENT("\\^\\{", "\\}"), f = {
    className: "symbol",
    begin: "[:]{1,2}" + r
  }, h = {
    begin: "\\(",
    end: "\\)"
  }, g = {
    endsWithParent: !0,
    relevance: 0
  }, v = {
    className: "name",
    relevance: 0,
    keywords: n,
    begin: r,
    starts: g
  }, m = [
    h,
    s,
    d,
    p,
    l,
    f,
    c,
    o,
    u,
    i
  ];
  return h.contains = [
    t.COMMENT("comment", ""),
    v,
    g
  ], g.contains = m, c.contains = m, {
    name: "Hy",
    aliases: ["hylang"],
    illegal: /\S/,
    contains: [
      t.SHEBANG(),
      h,
      s,
      d,
      p,
      l,
      f,
      c,
      o,
      u
    ]
  };
}
const Aae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oJ
}, Symbol.toStringTag, { value: "Module" }));
function sJ(t) {
  const e = "\\[", r = "\\]";
  return {
    name: "Inform 7",
    aliases: ["i7"],
    case_insensitive: !0,
    keywords: {
      // Some keywords more or less unique to I7, for relevance.
      keyword: (
        // kind:
        "thing room person man woman animal container supporter backdrop door scenery open closed locked inside gender is are say understand kind of rule"
      )
    },
    contains: [
      {
        className: "string",
        begin: '"',
        end: '"',
        relevance: 0,
        contains: [
          {
            className: "subst",
            begin: e,
            end: r
          }
        ]
      },
      {
        className: "section",
        begin: /^(Volume|Book|Part|Chapter|Section|Table)\b/,
        end: "$"
      },
      {
        // Rule definition
        // This is here for relevance.
        begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b/,
        end: ":",
        contains: [
          {
            // Rule name
            begin: "\\(This",
            end: "\\)"
          }
        ]
      },
      {
        className: "comment",
        begin: e,
        end: r,
        contains: ["self"]
      }
    ]
  };
}
const wae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: sJ
}, Symbol.toStringTag, { value: "Module" }));
function lJ(t) {
  const e = t.regex, r = {
    className: "number",
    relevance: 0,
    variants: [
      { begin: /([+-]+)?[\d]+_[\d_]+/ },
      { begin: t.NUMBER_RE }
    ]
  }, n = t.COMMENT();
  n.variants = [
    {
      begin: /;/,
      end: /$/
    },
    {
      begin: /#/,
      end: /$/
    }
  ];
  const a = {
    className: "variable",
    variants: [
      { begin: /\$[\w\d"][\w\d_]*/ },
      { begin: /\$\{(.*?)\}/ }
    ]
  }, i = {
    className: "literal",
    begin: /\bon|off|true|false|yes|no\b/
  }, o = {
    className: "string",
    contains: [t.BACKSLASH_ESCAPE],
    variants: [
      {
        begin: "'''",
        end: "'''",
        relevance: 10
      },
      {
        begin: '"""',
        end: '"""',
        relevance: 10
      },
      {
        begin: '"',
        end: '"'
      },
      {
        begin: "'",
        end: "'"
      }
    ]
  }, s = {
    begin: /\[/,
    end: /\]/,
    contains: [
      n,
      i,
      a,
      o,
      r,
      "self"
    ],
    relevance: 0
  }, l = /[A-Za-z0-9_-]+/, u = /"(\\"|[^"])*"/, c = /'[^']*'/, d = e.either(
    l,
    u,
    c
  ), p = e.concat(
    d,
    "(\\s*\\.\\s*",
    d,
    ")*",
    e.lookahead(/\s*=\s*[^#\s]/)
  );
  return {
    name: "TOML, also INI",
    aliases: ["toml"],
    case_insensitive: !0,
    illegal: /\S/,
    contains: [
      n,
      {
        className: "section",
        begin: /\[+/,
        end: /\]+/
      },
      {
        begin: p,
        className: "attr",
        starts: {
          end: /$/,
          contains: [
            n,
            s,
            i,
            a,
            o,
            r
          ]
        }
      }
    ]
  };
}
const Dae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lJ
}, Symbol.toStringTag, { value: "Module" }));
function uJ(t) {
  const e = t.regex, r = {
    className: "params",
    begin: "\\(",
    end: "\\)"
  }, n = /(_[a-z_\d]+)?/, a = /([de][+-]?\d+)?/, i = {
    className: "number",
    variants: [
      { begin: e.concat(/\b\d+/, /\.(\d*)/, a, n) },
      { begin: e.concat(/\b\d+/, a, n) },
      { begin: e.concat(/\.\d+/, a, n) }
    ],
    relevance: 0
  };
  return {
    name: "IRPF90",
    case_insensitive: !0,
    keywords: {
      literal: ".False. .True.",
      keyword: "kind do while private call intrinsic where elsewhere type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. goto save else use module select case access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit continue format pause cycle exit c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg synchronous nopass non_overridable pass protected volatile abstract extends import non_intrinsic value deferred generic final enumerator class associate bind enum c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure integer real character complex logical dimension allocatable|10 parameter external implicit|10 none double precision assign intent optional pointer target in out common equivalence data begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read",
      built_in: "alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr num_images parity popcnt poppar shifta shiftl shiftr this_image IRP_ALIGN irp_here"
    },
    illegal: /\/\*/,
    contains: [
      t.inherit(t.APOS_STRING_MODE, {
        className: "string",
        relevance: 0
      }),
      t.inherit(t.QUOTE_STRING_MODE, {
        className: "string",
        relevance: 0
      }),
      {
        className: "function",
        beginKeywords: "subroutine function program",
        illegal: "[${=\\n]",
        contains: [
          t.UNDERSCORE_TITLE_MODE,
          r
        ]
      },
      t.COMMENT("!", "$", { relevance: 0 }),
      t.COMMENT("begin_doc", "end_doc", { relevance: 10 }),
      i
    ]
  };
}
const Mae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: uJ
}, Symbol.toStringTag, { value: "Module" }));
var Jo = "[0-9](_*[0-9])*", md = `\\.(${Jo})`, _d = "[0-9a-fA-F](_*[0-9a-fA-F])*", FA = {
  className: "number",
  variants: [
    // DecimalFloatingPointLiteral
    // including ExponentPart
    { begin: `(\\b(${Jo})((${md})|\\.)?|(${md}))[eE][+-]?(${Jo})[fFdD]?\\b` },
    // excluding ExponentPart
    { begin: `\\b(${Jo})((${md})[fFdD]?\\b|\\.([fFdD]\\b)?)` },
    { begin: `(${md})[fFdD]?\\b` },
    { begin: `\\b(${Jo})[fFdD]\\b` },
    // HexadecimalFloatingPointLiteral
    { begin: `\\b0[xX]((${_d})\\.?|(${_d})?\\.(${_d}))[pP][+-]?(${Jo})[fFdD]?\\b` },
    // DecimalIntegerLiteral
    { begin: "\\b(0|[1-9](_*[0-9])*)[lL]?\\b" },
    // HexIntegerLiteral
    { begin: `\\b0[xX](${_d})[lL]?\\b` },
    // OctalIntegerLiteral
    { begin: "\\b0(_*[0-7])*[lL]?\\b" },
    // BinaryIntegerLiteral
    { begin: "\\b0[bB][01](_*[01])*[lL]?\\b" }
  ],
  relevance: 0
};
function jO(t, e, r) {
  return r === -1 ? "" : t.replace(e, (n) => jO(t, e, r - 1));
}
function cJ(t) {
  const e = t.regex, r = "[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*", n = r + jO("(?:<" + r + "~~~(?:\\s*,\\s*" + r + "~~~)*>)?", /~~~/g, 2), l = {
    keyword: [
      "synchronized",
      "abstract",
      "private",
      "var",
      "static",
      "if",
      "const ",
      "for",
      "while",
      "strictfp",
      "finally",
      "protected",
      "import",
      "native",
      "final",
      "void",
      "enum",
      "else",
      "break",
      "transient",
      "catch",
      "instanceof",
      "volatile",
      "case",
      "assert",
      "package",
      "default",
      "public",
      "try",
      "switch",
      "continue",
      "throws",
      "protected",
      "public",
      "private",
      "module",
      "requires",
      "exports",
      "do",
      "sealed",
      "yield",
      "permits",
      "goto",
      "when"
    ],
    literal: [
      "false",
      "true",
      "null"
    ],
    type: [
      "char",
      "boolean",
      "long",
      "float",
      "int",
      "byte",
      "short",
      "double"
    ],
    built_in: [
      "super",
      "this"
    ]
  }, u = {
    className: "meta",
    begin: "@" + r,
    contains: [
      {
        begin: /\(/,
        end: /\)/,
        contains: ["self"]
        // allow nested () inside our annotation
      }
    ]
  }, c = {
    className: "params",
    begin: /\(/,
    end: /\)/,
    keywords: l,
    relevance: 0,
    contains: [t.C_BLOCK_COMMENT_MODE],
    endsParent: !0
  };
  return {
    name: "Java",
    aliases: ["jsp"],
    keywords: l,
    illegal: /<\/|#/,
    contains: [
      t.COMMENT(
        "/\\*\\*",
        "\\*/",
        {
          relevance: 0,
          contains: [
            {
              // eat up @'s in emails to prevent them to be recognized as doctags
              begin: /\w+@/,
              relevance: 0
            },
            {
              className: "doctag",
              begin: "@[A-Za-z]+"
            }
          ]
        }
      ),
      // relevance boost
      {
        begin: /import java\.[a-z]+\./,
        keywords: "import",
        relevance: 2
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        begin: /"""/,
        end: /"""/,
        className: "string",
        contains: [t.BACKSLASH_ESCAPE]
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        match: [
          /\b(?:class|interface|enum|extends|implements|new)/,
          /\s+/,
          r
        ],
        className: {
          1: "keyword",
          3: "title.class"
        }
      },
      {
        // Exceptions for hyphenated keywords
        match: /non-sealed/,
        scope: "keyword"
      },
      {
        begin: [
          e.concat(/(?!else)/, r),
          /\s+/,
          r,
          /\s+/,
          /=(?!=)/
        ],
        className: {
          1: "type",
          3: "variable",
          5: "operator"
        }
      },
      {
        begin: [
          /record/,
          /\s+/,
          r
        ],
        className: {
          1: "keyword",
          3: "title.class"
        },
        contains: [
          c,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        // Expression keywords prevent 'keyword Name(...)' from being
        // recognized as a function definition
        beginKeywords: "new throw return else",
        relevance: 0
      },
      {
        begin: [
          "(?:" + n + "\\s+)",
          t.UNDERSCORE_IDENT_RE,
          /\s*(?=\()/
        ],
        className: { 2: "title.function" },
        keywords: l,
        contains: [
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            keywords: l,
            relevance: 0,
            contains: [
              u,
              t.APOS_STRING_MODE,
              t.QUOTE_STRING_MODE,
              FA,
              t.C_BLOCK_COMMENT_MODE
            ]
          },
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      FA,
      u
    ]
  };
}
const Iae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: cJ
}, Symbol.toStringTag, { value: "Module" })), GA = "[A-Za-z$_][0-9A-Za-z$_]*", dJ = [
  "as",
  // for exports
  "in",
  "of",
  "if",
  "for",
  "while",
  "finally",
  "var",
  "new",
  "function",
  "do",
  "return",
  "void",
  "else",
  "break",
  "catch",
  "instanceof",
  "with",
  "throw",
  "case",
  "default",
  "try",
  "switch",
  "continue",
  "typeof",
  "delete",
  "let",
  "yield",
  "const",
  "class",
  // JS handles these with a special rule
  // "get",
  // "set",
  "debugger",
  "async",
  "await",
  "static",
  "import",
  "from",
  "export",
  "extends",
  // It's reached stage 3, which is "recommended for implementation":
  "using"
], pJ = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
], JO = [
  // Fundamental objects
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  // numbers and dates
  "Math",
  "Date",
  "Number",
  "BigInt",
  // text
  "String",
  "RegExp",
  // Indexed collections
  "Array",
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Int32Array",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  // Keyed collections
  "Set",
  "Map",
  "WeakSet",
  "WeakMap",
  // Structured data
  "ArrayBuffer",
  "SharedArrayBuffer",
  "Atomics",
  "DataView",
  "JSON",
  // Control abstraction objects
  "Promise",
  "Generator",
  "GeneratorFunction",
  "AsyncFunction",
  // Reflection
  "Reflect",
  "Proxy",
  // Internationalization
  "Intl",
  // WebAssembly
  "WebAssembly"
], eL = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
], tL = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
], fJ = [
  "arguments",
  "this",
  "super",
  "console",
  "window",
  "document",
  "localStorage",
  "sessionStorage",
  "module",
  "global"
  // Node.js
], hJ = [].concat(
  tL,
  JO,
  eL
);
function gJ(t) {
  const e = t.regex, r = (L, { after: F }) => {
    const U = "</" + L[0].slice(1);
    return L.input.indexOf(U, F) !== -1;
  }, n = GA, a = {
    begin: "<>",
    end: "</>"
  }, i = /<[A-Za-z0-9\\._:-]+\s*\/>/, o = {
    begin: /<[A-Za-z0-9\\._:-]+/,
    end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
    /**
     * @param {RegExpMatchArray} match
     * @param {CallbackResponse} response
     */
    isTrulyOpeningTag: (L, F) => {
      const U = L[0].length + L.index, z = L.input[U];
      if (
        // HTML should not include another raw `<` inside a tag
        // nested type?
        // `<Array<Array<number>>`, etc.
        z === "<" || // the , gives away that this is not HTML
        // `<T, A extends keyof T, V>`
        z === ","
      ) {
        F.ignoreMatch();
        return;
      }
      z === ">" && (r(L, { after: U }) || F.ignoreMatch());
      let H;
      const Z = L.input.substring(U);
      if (H = Z.match(/^\s*=/)) {
        F.ignoreMatch();
        return;
      }
      if ((H = Z.match(/^\s+extends\s+/)) && H.index === 0) {
        F.ignoreMatch();
        return;
      }
    }
  }, s = {
    $pattern: GA,
    keyword: dJ,
    literal: pJ,
    built_in: hJ,
    "variable.language": fJ
  }, l = "[0-9](_?[0-9])*", u = `\\.(${l})`, c = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*", d = {
    className: "number",
    variants: [
      // DecimalLiteral
      { begin: `(\\b(${c})((${u})|\\.)?|(${u}))[eE][+-]?(${l})\\b` },
      { begin: `\\b(${c})\\b((${u})\\b|\\.)?|(${u})\\b` },
      // DecimalBigIntegerLiteral
      { begin: "\\b(0|[1-9](_?[0-9])*)n\\b" },
      // NonDecimalIntegerLiteral
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*n?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*n?\\b" },
      // LegacyOctalIntegerLiteral (does not include underscore separators)
      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals
      { begin: "\\b0[0-7]+n?\\b" }
    ],
    relevance: 0
  }, p = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: s,
    contains: []
    // defined later
  }, f = {
    begin: ".?html`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "xml"
    }
  }, h = {
    begin: ".?css`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "css"
    }
  }, g = {
    begin: ".?gql`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "graphql"
    }
  }, v = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [
      t.BACKSLASH_ESCAPE,
      p
    ]
  }, _ = {
    className: "comment",
    variants: [
      t.COMMENT(
        /\/\*\*(?!\/)/,
        "\\*/",
        {
          relevance: 0,
          contains: [
            {
              begin: "(?=@[A-Za-z]+)",
              relevance: 0,
              contains: [
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                },
                {
                  className: "type",
                  begin: "\\{",
                  end: "\\}",
                  excludeEnd: !0,
                  excludeBegin: !0,
                  relevance: 0
                },
                {
                  className: "variable",
                  begin: n + "(?=\\s*(-)|$)",
                  endsParent: !0,
                  relevance: 0
                },
                // eat spaces (not newlines) so we can find
                // types or variables
                {
                  begin: /(?=[^\n])\s/,
                  relevance: 0
                }
              ]
            }
          ]
        }
      ),
      t.C_BLOCK_COMMENT_MODE,
      t.C_LINE_COMMENT_MODE
    ]
  }, y = [
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    f,
    h,
    g,
    v,
    // Skip numbers when they are part of a variable name
    { match: /\$\d+/ },
    d
    // This is intentional:
    // See https://github.com/highlightjs/highlight.js/issues/3288
    // hljs.REGEXP_MODE
  ];
  p.contains = y.concat({
    // we need to pair up {} inside our subst to prevent
    // it from ending too early by matching another }
    begin: /\{/,
    end: /\}/,
    keywords: s,
    contains: [
      "self"
    ].concat(y)
  });
  const b = [].concat(_, p.contains), S = b.concat([
    // eat recursive parens in sub expressions
    {
      begin: /(\s*)\(/,
      end: /\)/,
      keywords: s,
      contains: ["self"].concat(b)
    }
  ]), E = {
    className: "params",
    // convert this to negative lookbehind in v12
    begin: /(\s*)\(/,
    // to match the parms with
    end: /\)/,
    excludeBegin: !0,
    excludeEnd: !0,
    keywords: s,
    contains: S
  }, T = {
    variants: [
      // class Car extends vehicle
      {
        match: [
          /class/,
          /\s+/,
          n,
          /\s+/,
          /extends/,
          /\s+/,
          e.concat(n, "(", e.concat(/\./, n), ")*")
        ],
        scope: {
          1: "keyword",
          3: "title.class",
          5: "keyword",
          7: "title.class.inherited"
        }
      },
      // class Car
      {
        match: [
          /class/,
          /\s+/,
          n
        ],
        scope: {
          1: "keyword",
          3: "title.class"
        }
      }
    ]
  }, x = {
    relevance: 0,
    match: e.either(
      // Hard coded exceptions
      /\bJSON/,
      // Float32Array, OutT
      /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,
      // CSSFactory, CSSFactoryT
      /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,
      // FPs, FPsT
      /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/
      // P
      // single letters are not highlighted
      // BLAH
      // this will be flagged as a UPPER_CASE_CONSTANT instead
    ),
    className: "title.class",
    keywords: {
      _: [
        // se we still get relevance credit for JS library classes
        ...JO,
        ...eL
      ]
    }
  }, C = {
    label: "use_strict",
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use (strict|asm)['"]/
  }, A = {
    variants: [
      {
        match: [
          /function/,
          /\s+/,
          n,
          /(?=\s*\()/
        ]
      },
      // anonymous function
      {
        match: [
          /function/,
          /\s*(?=\()/
        ]
      }
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    label: "func.def",
    contains: [E],
    illegal: /%/
  }, D = {
    relevance: 0,
    match: /\b[A-Z][A-Z_0-9]+\b/,
    className: "variable.constant"
  };
  function M(L) {
    return e.concat("(?!", L.join("|"), ")");
  }
  const I = {
    match: e.concat(
      /\b/,
      M([
        ...tL,
        "super",
        "import"
      ].map((L) => `${L}\\s*\\(`)),
      n,
      e.lookahead(/\s*\(/)
    ),
    className: "title.function",
    relevance: 0
  }, N = {
    begin: e.concat(/\./, e.lookahead(
      e.concat(n, /(?![0-9A-Za-z$_(])/)
    )),
    end: n,
    excludeBegin: !0,
    keywords: "prototype",
    className: "property",
    relevance: 0
  }, R = {
    match: [
      /get|set/,
      /\s+/,
      n,
      /(?=\()/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      {
        // eat to avoid empty params
        begin: /\(\)/
      },
      E
    ]
  }, O = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + t.UNDERSCORE_IDENT_RE + ")\\s*=>", B = {
    match: [
      /const|var|let/,
      /\s+/,
      n,
      /\s*/,
      /=\s*/,
      /(async\s*)?/,
      // async is optional
      e.lookahead(O)
    ],
    keywords: "async",
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      E
    ]
  };
  return {
    name: "JavaScript",
    aliases: ["js", "jsx", "mjs", "cjs"],
    keywords: s,
    // this will be extended by TypeScript
    exports: { PARAMS_CONTAINS: S, CLASS_REFERENCE: x },
    illegal: /#(?![$_A-z])/,
    contains: [
      t.SHEBANG({
        label: "shebang",
        binary: "node",
        relevance: 5
      }),
      C,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      f,
      h,
      g,
      v,
      _,
      // Skip numbers when they are part of a variable name
      { match: /\$\d+/ },
      d,
      x,
      {
        scope: "attr",
        match: n + e.lookahead(":"),
        relevance: 0
      },
      B,
      {
        // "value" container
        begin: "(" + t.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        relevance: 0,
        contains: [
          _,
          t.REGEXP_MODE,
          {
            className: "function",
            // we have to count the parens to make sure we actually have the
            // correct bounding ( ) before the =>.  There could be any number of
            // sub-expressions inside also surrounded by parens.
            begin: O,
            returnBegin: !0,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  {
                    begin: t.UNDERSCORE_IDENT_RE,
                    relevance: 0
                  },
                  {
                    className: null,
                    begin: /\(\s*\)/,
                    skip: !0
                  },
                  {
                    begin: /(\s*)\(/,
                    end: /\)/,
                    excludeBegin: !0,
                    excludeEnd: !0,
                    keywords: s,
                    contains: S
                  }
                ]
              }
            ]
          },
          {
            // could be a comma delimited list of params to a function call
            begin: /,/,
            relevance: 0
          },
          {
            match: /\s+/,
            relevance: 0
          },
          {
            // JSX
            variants: [
              { begin: a.begin, end: a.end },
              { match: i },
              {
                begin: o.begin,
                // we carefully check the opening tag to see if it truly
                // is a tag and not a false positive
                "on:begin": o.isTrulyOpeningTag,
                end: o.end
              }
            ],
            subLanguage: "xml",
            contains: [
              {
                begin: o.begin,
                end: o.end,
                skip: !0,
                contains: ["self"]
              }
            ]
          }
        ]
      },
      A,
      {
        // prevent this from getting swallowed up by function
        // since they appear "function like"
        beginKeywords: "while if switch catch for"
      },
      {
        // we have to count the parens to make sure we actually have the correct
        // bounding ( ).  There could be any number of sub-expressions inside
        // also surrounded by parens.
        begin: "\\b(?!function)" + t.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
        // end parens
        returnBegin: !0,
        label: "func.def",
        contains: [
          E,
          t.inherit(t.TITLE_MODE, { begin: n, className: "title.function" })
        ]
      },
      // catch ... so it won't trigger the property rule below
      {
        match: /\.\.\./,
        relevance: 0
      },
      N,
      // hack: prevents detection of keywords in some circumstances
      // .keyword()
      // $keyword = x
      {
        match: "\\$" + n,
        relevance: 0
      },
      {
        match: [/\bconstructor(?=\s*\()/],
        className: { 1: "title.function" },
        contains: [E]
      },
      I,
      D,
      T,
      R,
      {
        match: /\$[(.]/
        // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
      }
    ]
  };
}
const Nae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: gJ
}, Symbol.toStringTag, { value: "Module" }));
function vJ(t) {
  const r = {
    className: "params",
    begin: /\(/,
    end: /\)/,
    contains: [{
      begin: /[\w-]+ *=/,
      returnBegin: !0,
      relevance: 0,
      contains: [
        {
          className: "attr",
          begin: /[\w-]+/
        }
      ]
    }],
    relevance: 0
  }, n = {
    className: "function",
    begin: /:[\w\-.]+/,
    relevance: 0
  }, a = {
    className: "string",
    begin: /\B([\/.])[\w\-.\/=]+/
  }, i = {
    className: "params",
    begin: /--[\w\-=\/]+/
  };
  return {
    name: "JBoss CLI",
    aliases: ["wildfly-cli"],
    keywords: {
      $pattern: "[a-z-]+",
      keyword: "alias batch cd clear command connect connection-factory connection-info data-source deploy deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias undeploy unset version xa-data-source",
      // module
      literal: "true false"
    },
    contains: [
      t.HASH_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      i,
      n,
      a,
      r
    ]
  };
}
const Rae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: vJ
}, Symbol.toStringTag, { value: "Module" }));
function mJ(t) {
  const e = {
    className: "attr",
    begin: /"(\\.|[^\\"\r\n])*"(?=\s*:)/,
    relevance: 1.01
  }, r = {
    match: /[{}[\],:]/,
    className: "punctuation",
    relevance: 0
  }, n = [
    "true",
    "false",
    "null"
  ], a = {
    scope: "literal",
    beginKeywords: n.join(" ")
  };
  return {
    name: "JSON",
    aliases: ["jsonc"],
    keywords: {
      literal: n
    },
    contains: [
      e,
      r,
      t.QUOTE_STRING_MODE,
      a,
      t.C_NUMBER_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ],
    illegal: "\\S"
  };
}
const Oae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: mJ
}, Symbol.toStringTag, { value: "Module" }));
function _J(t) {
  const e = "[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*", i = {
    $pattern: e,
    keyword: [
      "baremodule",
      "begin",
      "break",
      "catch",
      "ccall",
      "const",
      "continue",
      "do",
      "else",
      "elseif",
      "end",
      "export",
      "false",
      "finally",
      "for",
      "function",
      "global",
      "if",
      "import",
      "in",
      "isa",
      "let",
      "local",
      "macro",
      "module",
      "quote",
      "return",
      "true",
      "try",
      "using",
      "where",
      "while"
    ],
    literal: [
      "ARGS",
      "C_NULL",
      "DEPOT_PATH",
      "ENDIAN_BOM",
      "ENV",
      "Inf",
      "Inf16",
      "Inf32",
      "Inf64",
      "InsertionSort",
      "LOAD_PATH",
      "MergeSort",
      "NaN",
      "NaN16",
      "NaN32",
      "NaN64",
      "PROGRAM_FILE",
      "QuickSort",
      "RoundDown",
      "RoundFromZero",
      "RoundNearest",
      "RoundNearestTiesAway",
      "RoundNearestTiesUp",
      "RoundToZero",
      "RoundUp",
      "VERSION|0",
      "devnull",
      "false",
      "im",
      "missing",
      "nothing",
      "pi",
      "stderr",
      "stdin",
      "stdout",
      "true",
      "undef",
      "π",
      "ℯ"
    ],
    built_in: [
      "AbstractArray",
      "AbstractChannel",
      "AbstractChar",
      "AbstractDict",
      "AbstractDisplay",
      "AbstractFloat",
      "AbstractIrrational",
      "AbstractMatrix",
      "AbstractRange",
      "AbstractSet",
      "AbstractString",
      "AbstractUnitRange",
      "AbstractVecOrMat",
      "AbstractVector",
      "Any",
      "ArgumentError",
      "Array",
      "AssertionError",
      "BigFloat",
      "BigInt",
      "BitArray",
      "BitMatrix",
      "BitSet",
      "BitVector",
      "Bool",
      "BoundsError",
      "CapturedException",
      "CartesianIndex",
      "CartesianIndices",
      "Cchar",
      "Cdouble",
      "Cfloat",
      "Channel",
      "Char",
      "Cint",
      "Cintmax_t",
      "Clong",
      "Clonglong",
      "Cmd",
      "Colon",
      "Complex",
      "ComplexF16",
      "ComplexF32",
      "ComplexF64",
      "CompositeException",
      "Condition",
      "Cptrdiff_t",
      "Cshort",
      "Csize_t",
      "Cssize_t",
      "Cstring",
      "Cuchar",
      "Cuint",
      "Cuintmax_t",
      "Culong",
      "Culonglong",
      "Cushort",
      "Cvoid",
      "Cwchar_t",
      "Cwstring",
      "DataType",
      "DenseArray",
      "DenseMatrix",
      "DenseVecOrMat",
      "DenseVector",
      "Dict",
      "DimensionMismatch",
      "Dims",
      "DivideError",
      "DomainError",
      "EOFError",
      "Enum",
      "ErrorException",
      "Exception",
      "ExponentialBackOff",
      "Expr",
      "Float16",
      "Float32",
      "Float64",
      "Function",
      "GlobalRef",
      "HTML",
      "IO",
      "IOBuffer",
      "IOContext",
      "IOStream",
      "IdDict",
      "IndexCartesian",
      "IndexLinear",
      "IndexStyle",
      "InexactError",
      "InitError",
      "Int",
      "Int128",
      "Int16",
      "Int32",
      "Int64",
      "Int8",
      "Integer",
      "InterruptException",
      "InvalidStateException",
      "Irrational",
      "KeyError",
      "LinRange",
      "LineNumberNode",
      "LinearIndices",
      "LoadError",
      "MIME",
      "Matrix",
      "Method",
      "MethodError",
      "Missing",
      "MissingException",
      "Module",
      "NTuple",
      "NamedTuple",
      "Nothing",
      "Number",
      "OrdinalRange",
      "OutOfMemoryError",
      "OverflowError",
      "Pair",
      "PartialQuickSort",
      "PermutedDimsArray",
      "Pipe",
      "ProcessFailedException",
      "Ptr",
      "QuoteNode",
      "Rational",
      "RawFD",
      "ReadOnlyMemoryError",
      "Real",
      "ReentrantLock",
      "Ref",
      "Regex",
      "RegexMatch",
      "RoundingMode",
      "SegmentationFault",
      "Set",
      "Signed",
      "Some",
      "StackOverflowError",
      "StepRange",
      "StepRangeLen",
      "StridedArray",
      "StridedMatrix",
      "StridedVecOrMat",
      "StridedVector",
      "String",
      "StringIndexError",
      "SubArray",
      "SubString",
      "SubstitutionString",
      "Symbol",
      "SystemError",
      "Task",
      "TaskFailedException",
      "Text",
      "TextDisplay",
      "Timer",
      "Tuple",
      "Type",
      "TypeError",
      "TypeVar",
      "UInt",
      "UInt128",
      "UInt16",
      "UInt32",
      "UInt64",
      "UInt8",
      "UndefInitializer",
      "UndefKeywordError",
      "UndefRefError",
      "UndefVarError",
      "Union",
      "UnionAll",
      "UnitRange",
      "Unsigned",
      "Val",
      "Vararg",
      "VecElement",
      "VecOrMat",
      "Vector",
      "VersionNumber",
      "WeakKeyDict",
      "WeakRef"
    ]
  }, o = {
    keywords: i,
    illegal: /<\//
  }, s = {
    className: "number",
    // supported numeric literals:
    //  * binary literal (e.g. 0x10)
    //  * octal literal (e.g. 0o76543210)
    //  * hexadecimal literal (e.g. 0xfedcba876543210)
    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)
    //  * decimal literal (e.g. 9876543210, 100_000_000)
    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)
    begin: /(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,
    relevance: 0
  }, l = {
    className: "string",
    begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
  }, u = {
    className: "subst",
    begin: /\$\(/,
    end: /\)/,
    keywords: i
  }, c = {
    className: "variable",
    begin: "\\$" + e
  }, d = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      u,
      c
    ],
    variants: [
      {
        begin: /\w*"""/,
        end: /"""\w*/,
        relevance: 10
      },
      {
        begin: /\w*"/,
        end: /"\w*/
      }
    ]
  }, p = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      u,
      c
    ],
    begin: "`",
    end: "`"
  }, f = {
    className: "meta",
    begin: "@" + e
  }, h = {
    className: "comment",
    variants: [
      {
        begin: "#=",
        end: "=#",
        relevance: 10
      },
      {
        begin: "#",
        end: "$"
      }
    ]
  };
  return o.name = "Julia", o.contains = [
    s,
    l,
    d,
    p,
    f,
    h,
    t.HASH_COMMENT_MODE,
    {
      className: "keyword",
      begin: "\\b(((abstract|primitive)\\s+)type|(mutable\\s+)?struct)\\b"
    },
    { begin: /<:/ }
    // relevance booster
  ], u.contains = o.contains, o;
}
const Lae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _J
}, Symbol.toStringTag, { value: "Module" }));
function yJ(t) {
  return {
    name: "Julia REPL",
    contains: [
      {
        className: "meta.prompt",
        begin: /^julia>/,
        relevance: 10,
        starts: {
          // end the highlighting if we are on a new line and the line does not have at
          // least six spaces in the beginning
          end: /^(?![ ]{6})/,
          subLanguage: "julia"
        }
      }
    ],
    // jldoctest Markdown blocks are used in the Julia manual and package docs indicate
    // code snippets that should be verified when the documentation is built. They can be
    // either REPL-like or script-like, but are usually REPL-like and therefore we apply
    // julia-repl highlighting to them. More information can be found in Documenter's
    // manual: https://juliadocs.github.io/Documenter.jl/latest/man/doctests.html
    aliases: ["jldoctest"]
  };
}
const Pae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: yJ
}, Symbol.toStringTag, { value: "Module" }));
var es = "[0-9](_*[0-9])*", yd = `\\.(${es})`, bd = "[0-9a-fA-F](_*[0-9a-fA-F])*", bJ = {
  className: "number",
  variants: [
    // DecimalFloatingPointLiteral
    // including ExponentPart
    { begin: `(\\b(${es})((${yd})|\\.)?|(${yd}))[eE][+-]?(${es})[fFdD]?\\b` },
    // excluding ExponentPart
    { begin: `\\b(${es})((${yd})[fFdD]?\\b|\\.([fFdD]\\b)?)` },
    { begin: `(${yd})[fFdD]?\\b` },
    { begin: `\\b(${es})[fFdD]\\b` },
    // HexadecimalFloatingPointLiteral
    { begin: `\\b0[xX]((${bd})\\.?|(${bd})?\\.(${bd}))[pP][+-]?(${es})[fFdD]?\\b` },
    // DecimalIntegerLiteral
    { begin: "\\b(0|[1-9](_*[0-9])*)[lL]?\\b" },
    // HexIntegerLiteral
    { begin: `\\b0[xX](${bd})[lL]?\\b` },
    // OctalIntegerLiteral
    { begin: "\\b0(_*[0-7])*[lL]?\\b" },
    // BinaryIntegerLiteral
    { begin: "\\b0[bB][01](_*[01])*[lL]?\\b" }
  ],
  relevance: 0
};
function SJ(t) {
  const e = {
    keyword: "abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",
    built_in: "Byte Short Char Int Long Boolean Float Double Void Unit Nothing",
    literal: "true false null"
  }, r = {
    className: "keyword",
    begin: /\b(break|continue|return|this)\b/,
    starts: { contains: [
      {
        className: "symbol",
        begin: /@\w+/
      }
    ] }
  }, n = {
    className: "symbol",
    begin: t.UNDERSCORE_IDENT_RE + "@"
  }, a = {
    className: "subst",
    begin: /\$\{/,
    end: /\}/,
    contains: [t.C_NUMBER_MODE]
  }, i = {
    className: "variable",
    begin: "\\$" + t.UNDERSCORE_IDENT_RE
  }, o = {
    className: "string",
    variants: [
      {
        begin: '"""',
        end: '"""(?=[^"])',
        contains: [
          i,
          a
        ]
      },
      // Can't use built-in modes easily, as we want to use STRING in the meta
      // context as 'meta-string' and there's no syntax to remove explicitly set
      // classNames in built-in modes.
      {
        begin: "'",
        end: "'",
        illegal: /\n/,
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: '"',
        end: '"',
        illegal: /\n/,
        contains: [
          t.BACKSLASH_ESCAPE,
          i,
          a
        ]
      }
    ]
  };
  a.contains.push(o);
  const s = {
    className: "meta",
    begin: "@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*" + t.UNDERSCORE_IDENT_RE + ")?"
  }, l = {
    className: "meta",
    begin: "@" + t.UNDERSCORE_IDENT_RE,
    contains: [
      {
        begin: /\(/,
        end: /\)/,
        contains: [
          t.inherit(o, { className: "string" }),
          "self"
        ]
      }
    ]
  }, u = bJ, c = t.COMMENT(
    "/\\*",
    "\\*/",
    { contains: [t.C_BLOCK_COMMENT_MODE] }
  ), d = { variants: [
    {
      className: "type",
      begin: t.UNDERSCORE_IDENT_RE
    },
    {
      begin: /\(/,
      end: /\)/,
      contains: []
      // defined later
    }
  ] }, p = d;
  return p.variants[1].contains = [d], d.variants[1].contains = [p], {
    name: "Kotlin",
    aliases: [
      "kt",
      "kts"
    ],
    keywords: e,
    contains: [
      t.COMMENT(
        "/\\*\\*",
        "\\*/",
        {
          relevance: 0,
          contains: [
            {
              className: "doctag",
              begin: "@[A-Za-z]+"
            }
          ]
        }
      ),
      t.C_LINE_COMMENT_MODE,
      c,
      r,
      n,
      s,
      l,
      {
        className: "function",
        beginKeywords: "fun",
        end: "[(]|$",
        returnBegin: !0,
        excludeEnd: !0,
        keywords: e,
        relevance: 5,
        contains: [
          {
            begin: t.UNDERSCORE_IDENT_RE + "\\s*\\(",
            returnBegin: !0,
            relevance: 0,
            contains: [t.UNDERSCORE_TITLE_MODE]
          },
          {
            className: "type",
            begin: /</,
            end: />/,
            keywords: "reified",
            relevance: 0
          },
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            endsParent: !0,
            keywords: e,
            relevance: 0,
            contains: [
              {
                begin: /:/,
                end: /[=,\/]/,
                endsWithParent: !0,
                contains: [
                  d,
                  t.C_LINE_COMMENT_MODE,
                  c
                ],
                relevance: 0
              },
              t.C_LINE_COMMENT_MODE,
              c,
              s,
              l,
              o,
              t.C_NUMBER_MODE
            ]
          },
          c
        ]
      },
      {
        begin: [
          /class|interface|trait/,
          /\s+/,
          t.UNDERSCORE_IDENT_RE
        ],
        beginScope: {
          3: "title.class"
        },
        keywords: "class interface trait",
        end: /[:\{(]|$/,
        excludeEnd: !0,
        illegal: "extends implements",
        contains: [
          { beginKeywords: "public protected internal private constructor" },
          t.UNDERSCORE_TITLE_MODE,
          {
            className: "type",
            begin: /</,
            end: />/,
            excludeBegin: !0,
            excludeEnd: !0,
            relevance: 0
          },
          {
            className: "type",
            begin: /[,:]\s*/,
            end: /[<\(,){\s]|$/,
            excludeBegin: !0,
            returnEnd: !0
          },
          s,
          l
        ]
      },
      o,
      {
        className: "meta",
        begin: "^#!/usr/bin/env",
        end: "$",
        illegal: `
`
      },
      u
    ]
  };
}
const kae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SJ
}, Symbol.toStringTag, { value: "Module" }));
function EJ(t) {
  const e = "[a-zA-Z_][\\w.]*", r = "<\\?(lasso(script)?|=)", n = "\\]|\\?>", a = {
    $pattern: e + "|&[lg]t;",
    literal: "true false none minimal full all void and or not bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft",
    built_in: "array date decimal duration integer map pair string tag xml null boolean bytes keyword list locale queue set stack staticarray local var variable global data self inherited currentcapture givenblock",
    keyword: "cache database_names database_schemanames database_tablenames define_tag define_type email_batch encode_set html_comment handle handle_error header if inline iterate ljax_target link link_currentaction link_currentgroup link_currentrecord link_detail link_firstgroup link_firstrecord link_lastgroup link_lastrecord link_nextgroup link_nextrecord link_prevgroup link_prevrecord log loop namespace_using output_none portal private protect records referer referrer repeating resultset rows search_args search_arguments select sort_args sort_arguments thread_atomic value_list while abort case else fail_if fail_ifnot fail if_empty if_false if_null if_true loop_abort loop_continue loop_count params params_up return return_value run_children soap_definetag soap_lastrequest soap_lastresponse tag_name ascending average by define descending do equals frozen group handle_failure import in into join let match max min on order parent protected provide public require returnhome skip split_thread sum take thread to trait type where with yield yieldhome"
  }, i = t.COMMENT(
    "<!--",
    "-->",
    { relevance: 0 }
  ), o = {
    className: "meta",
    begin: "\\[noprocess\\]",
    starts: {
      end: "\\[/noprocess\\]",
      returnEnd: !0,
      contains: [i]
    }
  }, s = {
    className: "meta",
    begin: "\\[/noprocess|" + r
  }, l = {
    className: "symbol",
    begin: "'" + e + "'"
  }, u = [
    t.C_LINE_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE,
    t.inherit(t.C_NUMBER_MODE, { begin: t.C_NUMBER_RE + "|(-?infinity|NaN)\\b" }),
    t.inherit(t.APOS_STRING_MODE, { illegal: null }),
    t.inherit(t.QUOTE_STRING_MODE, { illegal: null }),
    {
      className: "string",
      begin: "`",
      end: "`"
    },
    {
      // variables
      variants: [
        { begin: "[#$]" + e },
        {
          begin: "#",
          end: "\\d+",
          illegal: "\\W"
        }
      ]
    },
    {
      className: "type",
      begin: "::\\s*",
      end: e,
      illegal: "\\W"
    },
    {
      className: "params",
      variants: [
        {
          begin: "-(?!infinity)" + e,
          relevance: 0
        },
        { begin: "(\\.\\.\\.)" }
      ]
    },
    {
      begin: /(->|\.)\s*/,
      relevance: 0,
      contains: [l]
    },
    {
      className: "class",
      beginKeywords: "define",
      returnEnd: !0,
      end: "\\(|=>",
      contains: [t.inherit(t.TITLE_MODE, { begin: e + "(=(?!>))?|[-+*/%](?!>)" })]
    }
  ];
  return {
    name: "Lasso",
    aliases: [
      "ls",
      "lassoscript"
    ],
    case_insensitive: !0,
    keywords: a,
    contains: [
      {
        className: "meta",
        begin: n,
        relevance: 0,
        starts: {
          // markup
          end: "\\[|" + r,
          returnEnd: !0,
          relevance: 0,
          contains: [i]
        }
      },
      o,
      s,
      {
        className: "meta",
        begin: "\\[no_square_brackets",
        starts: {
          end: "\\[/no_square_brackets\\]",
          // not implemented in the language
          keywords: a,
          contains: [
            {
              className: "meta",
              begin: n,
              relevance: 0,
              starts: {
                end: "\\[noprocess\\]|" + r,
                returnEnd: !0,
                contains: [i]
              }
            },
            o,
            s
          ].concat(u)
        }
      },
      {
        className: "meta",
        begin: "\\[",
        relevance: 0
      },
      {
        className: "meta",
        begin: "^#!",
        end: "lasso9$",
        relevance: 10
      }
    ].concat(u)
  };
}
const Bae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: EJ
}, Symbol.toStringTag, { value: "Module" }));
function TJ(t) {
  const r = t.regex.either(...[
    "(?:NeedsTeXFormat|RequirePackage|GetIdInfo)",
    "Provides(?:Expl)?(?:Package|Class|File)",
    "(?:DeclareOption|ProcessOptions)",
    "(?:documentclass|usepackage|input|include)",
    "makeat(?:letter|other)",
    "ExplSyntax(?:On|Off)",
    "(?:new|renew|provide)?command",
    "(?:re)newenvironment",
    "(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand",
    "(?:New|Renew|Provide|Declare)DocumentEnvironment",
    "(?:(?:e|g|x)?def|let)",
    "(?:begin|end)",
    "(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)",
    "caption",
    "(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)",
    "(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)",
    "(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)",
    "(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)",
    "(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)",
    "(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)"
  ].map((A) => A + "(?![a-zA-Z@:_])")), n = new RegExp([
    // A function \module_function_name:signature or \__module_function_name:signature,
    // where both module and function_name need at least two characters and
    // function_name may contain single underscores.
    "(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*",
    // A variable \scope_module_and_name_type or \scope__module_ane_name_type,
    // where scope is one of l, g or c, type needs at least two characters
    // and module_and_name may contain single underscores.
    "[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}",
    // A quark \q_the_name or \q__the_name or
    // scan mark \s_the_name or \s__vthe_name,
    // where variable_name needs at least two characters and
    // may contain single underscores.
    "[qs]__?[a-zA-Z](?:_?[a-zA-Z])+",
    // Other LaTeX3 macro names that are not covered by the three rules above.
    "use(?:_i)?:[a-zA-Z]*",
    "(?:else|fi|or):",
    "(?:if|cs|exp):w",
    "(?:hbox|vbox):n",
    "::[a-zA-Z]_unbraced",
    "::[a-zA-Z:]"
  ].map((A) => A + "(?![a-zA-Z:_])").join("|")), a = [
    { begin: /[a-zA-Z@]+/ },
    // control word
    { begin: /[^a-zA-Z@]?/ }
    // control symbol
  ], i = [
    { begin: /\^{6}[0-9a-f]{6}/ },
    { begin: /\^{5}[0-9a-f]{5}/ },
    { begin: /\^{4}[0-9a-f]{4}/ },
    { begin: /\^{3}[0-9a-f]{3}/ },
    { begin: /\^{2}[0-9a-f]{2}/ },
    { begin: /\^{2}[\u0000-\u007f]/ }
  ], o = {
    className: "keyword",
    begin: /\\/,
    relevance: 0,
    contains: [
      {
        endsParent: !0,
        begin: r
      },
      {
        endsParent: !0,
        begin: n
      },
      {
        endsParent: !0,
        variants: i
      },
      {
        endsParent: !0,
        relevance: 0,
        variants: a
      }
    ]
  }, s = {
    className: "params",
    relevance: 0,
    begin: /#+\d?/
  }, l = {
    // relevance: 1
    variants: i
  }, u = {
    className: "built_in",
    relevance: 0,
    begin: /[$&^_]/
  }, c = {
    className: "meta",
    begin: /% ?!(T[eE]X|tex|BIB|bib)/,
    end: "$",
    relevance: 10
  }, d = t.COMMENT(
    "%",
    "$",
    { relevance: 0 }
  ), p = [
    o,
    s,
    l,
    u,
    c,
    d
  ], f = {
    begin: /\{/,
    end: /\}/,
    relevance: 0,
    contains: [
      "self",
      ...p
    ]
  }, h = t.inherit(
    f,
    {
      relevance: 0,
      endsParent: !0,
      contains: [
        f,
        ...p
      ]
    }
  ), g = {
    begin: /\[/,
    end: /\]/,
    endsParent: !0,
    relevance: 0,
    contains: [
      f,
      ...p
    ]
  }, v = {
    begin: /\s+/,
    relevance: 0
  }, m = [h], _ = [g], y = function(A, D) {
    return {
      contains: [v],
      starts: {
        relevance: 0,
        contains: A,
        starts: D
      }
    };
  }, b = function(A, D) {
    return {
      begin: "\\\\" + A + "(?![a-zA-Z@:_])",
      keywords: {
        $pattern: /\\[a-zA-Z]+/,
        keyword: "\\" + A
      },
      relevance: 0,
      contains: [v],
      starts: D
    };
  }, S = function(A, D) {
    return t.inherit(
      {
        begin: "\\\\begin(?=[ 	]*(\\r?\\n[ 	]*)?\\{" + A + "\\})",
        keywords: {
          $pattern: /\\[a-zA-Z]+/,
          keyword: "\\begin"
        },
        relevance: 0
      },
      y(m, D)
    );
  }, E = (A = "string") => t.END_SAME_AS_BEGIN({
    className: A,
    begin: /(.|\r?\n)/,
    end: /(.|\r?\n)/,
    excludeBegin: !0,
    excludeEnd: !0,
    endsParent: !0
  }), T = function(A) {
    return {
      className: "string",
      end: "(?=\\\\end\\{" + A + "\\})"
    };
  }, x = (A = "string") => ({
    relevance: 0,
    begin: /\{/,
    starts: {
      endsParent: !0,
      contains: [
        {
          className: A,
          end: /(?=\})/,
          endsParent: !0,
          contains: [
            {
              begin: /\{/,
              end: /\}/,
              relevance: 0,
              contains: ["self"]
            }
          ]
        }
      ]
    }
  }), C = [
    ...[
      "verb",
      "lstinline"
    ].map((A) => b(A, { contains: [E()] })),
    b("mint", y(m, { contains: [E()] })),
    b("mintinline", y(m, { contains: [
      x(),
      E()
    ] })),
    b("url", { contains: [
      x("link"),
      x("link")
    ] }),
    b("hyperref", { contains: [x("link")] }),
    b("href", y(_, { contains: [x("link")] })),
    ...[].concat(...[
      "",
      "\\*"
    ].map((A) => [
      S("verbatim" + A, T("verbatim" + A)),
      S("filecontents" + A, y(m, T("filecontents" + A))),
      ...[
        "",
        "B",
        "L"
      ].map(
        (D) => S(D + "Verbatim" + A, y(_, T(D + "Verbatim" + A)))
      )
    ])),
    S("minted", y(_, y(m, T("minted"))))
  ];
  return {
    name: "LaTeX",
    aliases: ["tex"],
    contains: [
      ...C,
      ...p
    ]
  };
}
const Fae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TJ
}, Symbol.toStringTag, { value: "Module" }));
function xJ(t) {
  return {
    name: "LDIF",
    contains: [
      {
        className: "attribute",
        match: "^dn(?=:)",
        relevance: 10
      },
      {
        className: "attribute",
        match: "^\\w+(?=:)"
      },
      {
        className: "literal",
        match: "^-"
      },
      t.HASH_COMMENT_MODE
    ]
  };
}
const Gae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xJ
}, Symbol.toStringTag, { value: "Module" }));
function CJ(t) {
  const e = /([A-Za-z_][A-Za-z_0-9]*)?/, n = {
    scope: "params",
    begin: /\(/,
    end: /\)(?=\:?)/,
    endsParent: !0,
    relevance: 7,
    contains: [
      {
        scope: "string",
        begin: '"',
        end: '"'
      },
      {
        scope: "keyword",
        match: [
          "true",
          "false",
          "in"
        ].join("|")
      },
      {
        scope: "variable",
        match: /[A-Za-z_][A-Za-z_0-9]*/
      },
      {
        scope: "operator",
        match: /\+|\-|\*|\/|\%|\=\=|\=|\!|\>|\<|\&\&|\|\|/
      }
    ]
  }, a = {
    match: [
      e,
      /(?=\()/
    ],
    scope: {
      1: "keyword"
    },
    contains: [n]
  };
  return n.contains.unshift(a), {
    name: "Leaf",
    contains: [
      // #ident():
      {
        match: [
          /#+/,
          e,
          /(?=\()/
        ],
        scope: {
          1: "punctuation",
          2: "keyword"
        },
        // will start up after the ending `)` match from line ~44
        // just to grab the trailing `:` if we can match it
        starts: {
          contains: [
            {
              match: /\:/,
              scope: "punctuation"
            }
          ]
        },
        contains: [
          n
        ]
      },
      // #ident or #ident:
      {
        match: [
          /#+/,
          e,
          /:?/
        ],
        scope: {
          1: "punctuation",
          2: "keyword",
          3: "punctuation"
        }
      }
    ]
  };
}
const Uae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CJ
}, Symbol.toStringTag, { value: "Module" })), AJ = (t) => ({
  IMPORTANT: {
    scope: "meta",
    begin: "!important"
  },
  BLOCK_COMMENT: t.C_BLOCK_COMMENT_MODE,
  HEXCOLOR: {
    scope: "number",
    begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
  },
  FUNCTION_DISPATCH: {
    className: "built_in",
    begin: /[\w-]+(?=\()/
  },
  ATTRIBUTE_SELECTOR_MODE: {
    scope: "selector-attr",
    begin: /\[/,
    end: /\]/,
    illegal: "$",
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  },
  CSS_NUMBER_MODE: {
    scope: "number",
    begin: t.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
    relevance: 0
  },
  CSS_VARIABLE: {
    className: "attr",
    begin: /--[A-Za-z_][A-Za-z0-9_-]*/
  }
}), wJ = [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "audio",
  "b",
  "blockquote",
  "body",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "dd",
  "del",
  "details",
  "dfn",
  "div",
  "dl",
  "dt",
  "em",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "header",
  "hgroup",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "mark",
  "menu",
  "nav",
  "object",
  "ol",
  "optgroup",
  "option",
  "p",
  "picture",
  "q",
  "quote",
  "samp",
  "section",
  "select",
  "source",
  "span",
  "strong",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "tr",
  "ul",
  "var",
  "video"
], DJ = [
  "defs",
  "g",
  "marker",
  "mask",
  "pattern",
  "svg",
  "switch",
  "symbol",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feFlood",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMorphology",
  "feOffset",
  "feSpecularLighting",
  "feTile",
  "feTurbulence",
  "linearGradient",
  "radialGradient",
  "stop",
  "circle",
  "ellipse",
  "image",
  "line",
  "path",
  "polygon",
  "polyline",
  "rect",
  "text",
  "use",
  "textPath",
  "tspan",
  "foreignObject",
  "clipPath"
], MJ = [
  ...wJ,
  ...DJ
], IJ = [
  "any-hover",
  "any-pointer",
  "aspect-ratio",
  "color",
  "color-gamut",
  "color-index",
  "device-aspect-ratio",
  "device-height",
  "device-width",
  "display-mode",
  "forced-colors",
  "grid",
  "height",
  "hover",
  "inverted-colors",
  "monochrome",
  "orientation",
  "overflow-block",
  "overflow-inline",
  "pointer",
  "prefers-color-scheme",
  "prefers-contrast",
  "prefers-reduced-motion",
  "prefers-reduced-transparency",
  "resolution",
  "scan",
  "scripting",
  "update",
  "width",
  // TODO: find a better solution?
  "min-width",
  "max-width",
  "min-height",
  "max-height"
].sort().reverse(), rL = [
  "active",
  "any-link",
  "blank",
  "checked",
  "current",
  "default",
  "defined",
  "dir",
  // dir()
  "disabled",
  "drop",
  "empty",
  "enabled",
  "first",
  "first-child",
  "first-of-type",
  "fullscreen",
  "future",
  "focus",
  "focus-visible",
  "focus-within",
  "has",
  // has()
  "host",
  // host or host()
  "host-context",
  // host-context()
  "hover",
  "indeterminate",
  "in-range",
  "invalid",
  "is",
  // is()
  "lang",
  // lang()
  "last-child",
  "last-of-type",
  "left",
  "link",
  "local-link",
  "not",
  // not()
  "nth-child",
  // nth-child()
  "nth-col",
  // nth-col()
  "nth-last-child",
  // nth-last-child()
  "nth-last-col",
  // nth-last-col()
  "nth-last-of-type",
  //nth-last-of-type()
  "nth-of-type",
  //nth-of-type()
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "past",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "target",
  "target-within",
  "user-invalid",
  "valid",
  "visited",
  "where"
  // where()
].sort().reverse(), nL = [
  "after",
  "backdrop",
  "before",
  "cue",
  "cue-region",
  "first-letter",
  "first-line",
  "grammar-error",
  "marker",
  "part",
  "placeholder",
  "selection",
  "slotted",
  "spelling-error"
].sort().reverse(), NJ = [
  "accent-color",
  "align-content",
  "align-items",
  "align-self",
  "alignment-baseline",
  "all",
  "anchor-name",
  "animation",
  "animation-composition",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-range",
  "animation-range-end",
  "animation-range-start",
  "animation-timeline",
  "animation-timing-function",
  "appearance",
  "aspect-ratio",
  "backdrop-filter",
  "backface-visibility",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-position-x",
  "background-position-y",
  "background-repeat",
  "background-size",
  "baseline-shift",
  "block-size",
  "border",
  "border-block",
  "border-block-color",
  "border-block-end",
  "border-block-end-color",
  "border-block-end-style",
  "border-block-end-width",
  "border-block-start",
  "border-block-start-color",
  "border-block-start-style",
  "border-block-start-width",
  "border-block-style",
  "border-block-width",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-end-end-radius",
  "border-end-start-radius",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-inline",
  "border-inline-color",
  "border-inline-end",
  "border-inline-end-color",
  "border-inline-end-style",
  "border-inline-end-width",
  "border-inline-start",
  "border-inline-start-color",
  "border-inline-start-style",
  "border-inline-start-width",
  "border-inline-style",
  "border-inline-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-start-end-radius",
  "border-start-start-radius",
  "border-style",
  "border-top",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width",
  "bottom",
  "box-align",
  "box-decoration-break",
  "box-direction",
  "box-flex",
  "box-flex-group",
  "box-lines",
  "box-ordinal-group",
  "box-orient",
  "box-pack",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation",
  "color-interpolation-filters",
  "color-profile",
  "color-rendering",
  "color-scheme",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "contain",
  "contain-intrinsic-block-size",
  "contain-intrinsic-height",
  "contain-intrinsic-inline-size",
  "contain-intrinsic-size",
  "contain-intrinsic-width",
  "container",
  "container-name",
  "container-type",
  "content",
  "content-visibility",
  "counter-increment",
  "counter-reset",
  "counter-set",
  "cue",
  "cue-after",
  "cue-before",
  "cursor",
  "cx",
  "cy",
  "direction",
  "display",
  "dominant-baseline",
  "empty-cells",
  "enable-background",
  "field-sizing",
  "fill",
  "fill-opacity",
  "fill-rule",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "flood-color",
  "flood-opacity",
  "flow",
  "font",
  "font-display",
  "font-family",
  "font-feature-settings",
  "font-kerning",
  "font-language-override",
  "font-optical-sizing",
  "font-palette",
  "font-size",
  "font-size-adjust",
  "font-smooth",
  "font-smoothing",
  "font-stretch",
  "font-style",
  "font-synthesis",
  "font-synthesis-position",
  "font-synthesis-small-caps",
  "font-synthesis-style",
  "font-synthesis-weight",
  "font-variant",
  "font-variant-alternates",
  "font-variant-caps",
  "font-variant-east-asian",
  "font-variant-emoji",
  "font-variant-ligatures",
  "font-variant-numeric",
  "font-variant-position",
  "font-variation-settings",
  "font-weight",
  "forced-color-adjust",
  "gap",
  "glyph-orientation-horizontal",
  "glyph-orientation-vertical",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "hanging-punctuation",
  "height",
  "hyphenate-character",
  "hyphenate-limit-chars",
  "hyphens",
  "icon",
  "image-orientation",
  "image-rendering",
  "image-resolution",
  "ime-mode",
  "initial-letter",
  "initial-letter-align",
  "inline-size",
  "inset",
  "inset-area",
  "inset-block",
  "inset-block-end",
  "inset-block-start",
  "inset-inline",
  "inset-inline-end",
  "inset-inline-start",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "kerning",
  "left",
  "letter-spacing",
  "lighting-color",
  "line-break",
  "line-height",
  "line-height-step",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-block",
  "margin-block-end",
  "margin-block-start",
  "margin-bottom",
  "margin-inline",
  "margin-inline-end",
  "margin-inline-start",
  "margin-left",
  "margin-right",
  "margin-top",
  "margin-trim",
  "marker",
  "marker-end",
  "marker-mid",
  "marker-start",
  "marks",
  "mask",
  "mask-border",
  "mask-border-mode",
  "mask-border-outset",
  "mask-border-repeat",
  "mask-border-slice",
  "mask-border-source",
  "mask-border-width",
  "mask-clip",
  "mask-composite",
  "mask-image",
  "mask-mode",
  "mask-origin",
  "mask-position",
  "mask-repeat",
  "mask-size",
  "mask-type",
  "masonry-auto-flow",
  "math-depth",
  "math-shift",
  "math-style",
  "max-block-size",
  "max-height",
  "max-inline-size",
  "max-width",
  "min-block-size",
  "min-height",
  "min-inline-size",
  "min-width",
  "mix-blend-mode",
  "nav-down",
  "nav-index",
  "nav-left",
  "nav-right",
  "nav-up",
  "none",
  "normal",
  "object-fit",
  "object-position",
  "offset",
  "offset-anchor",
  "offset-distance",
  "offset-path",
  "offset-position",
  "offset-rotate",
  "opacity",
  "order",
  "orphans",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-anchor",
  "overflow-block",
  "overflow-clip-margin",
  "overflow-inline",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "overlay",
  "overscroll-behavior",
  "overscroll-behavior-block",
  "overscroll-behavior-inline",
  "overscroll-behavior-x",
  "overscroll-behavior-y",
  "padding",
  "padding-block",
  "padding-block-end",
  "padding-block-start",
  "padding-bottom",
  "padding-inline",
  "padding-inline-end",
  "padding-inline-start",
  "padding-left",
  "padding-right",
  "padding-top",
  "page",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "paint-order",
  "pause",
  "pause-after",
  "pause-before",
  "perspective",
  "perspective-origin",
  "place-content",
  "place-items",
  "place-self",
  "pointer-events",
  "position",
  "position-anchor",
  "position-visibility",
  "print-color-adjust",
  "quotes",
  "r",
  "resize",
  "rest",
  "rest-after",
  "rest-before",
  "right",
  "rotate",
  "row-gap",
  "ruby-align",
  "ruby-position",
  "scale",
  "scroll-behavior",
  "scroll-margin",
  "scroll-margin-block",
  "scroll-margin-block-end",
  "scroll-margin-block-start",
  "scroll-margin-bottom",
  "scroll-margin-inline",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding",
  "scroll-padding-block",
  "scroll-padding-block-end",
  "scroll-padding-block-start",
  "scroll-padding-bottom",
  "scroll-padding-inline",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "scroll-timeline",
  "scroll-timeline-axis",
  "scroll-timeline-name",
  "scrollbar-color",
  "scrollbar-gutter",
  "scrollbar-width",
  "shape-image-threshold",
  "shape-margin",
  "shape-outside",
  "shape-rendering",
  "speak",
  "speak-as",
  "src",
  // @font-face
  "stop-color",
  "stop-opacity",
  "stroke",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "tab-size",
  "table-layout",
  "text-align",
  "text-align-all",
  "text-align-last",
  "text-anchor",
  "text-combine-upright",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-skip",
  "text-decoration-skip-ink",
  "text-decoration-style",
  "text-decoration-thickness",
  "text-emphasis",
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-rendering",
  "text-shadow",
  "text-size-adjust",
  "text-transform",
  "text-underline-offset",
  "text-underline-position",
  "text-wrap",
  "text-wrap-mode",
  "text-wrap-style",
  "timeline-scope",
  "top",
  "touch-action",
  "transform",
  "transform-box",
  "transform-origin",
  "transform-style",
  "transition",
  "transition-behavior",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "translate",
  "unicode-bidi",
  "user-modify",
  "user-select",
  "vector-effect",
  "vertical-align",
  "view-timeline",
  "view-timeline-axis",
  "view-timeline-inset",
  "view-timeline-name",
  "view-transition-name",
  "visibility",
  "voice-balance",
  "voice-duration",
  "voice-family",
  "voice-pitch",
  "voice-range",
  "voice-rate",
  "voice-stress",
  "voice-volume",
  "white-space",
  "white-space-collapse",
  "widows",
  "width",
  "will-change",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "x",
  "y",
  "z-index",
  "zoom"
].sort().reverse(), RJ = rL.concat(nL).sort().reverse();
function OJ(t) {
  const e = AJ(t), r = RJ, n = "and or not only", a = "[\\w-]+", i = "(" + a + "|@\\{" + a + "\\})", o = [], s = [], l = function(y) {
    return {
      // Less strings are not multiline (also include '~' for more consistent coloring of "escaped" strings)
      className: "string",
      begin: "~?" + y + ".*?" + y
    };
  }, u = function(y, b, S) {
    return {
      className: y,
      begin: b,
      relevance: S
    };
  }, c = {
    $pattern: /[a-z-]+/,
    keyword: n,
    attribute: IJ.join(" ")
  }, d = {
    // used only to properly balance nested parens inside mixin call, def. arg list
    begin: "\\(",
    end: "\\)",
    contains: s,
    keywords: c,
    relevance: 0
  };
  s.push(
    t.C_LINE_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE,
    l("'"),
    l('"'),
    e.CSS_NUMBER_MODE,
    // fixme: it does not include dot for numbers like .5em :(
    {
      begin: "(url|data-uri)\\(",
      starts: {
        className: "string",
        end: "[\\)\\n]",
        excludeEnd: !0
      }
    },
    e.HEXCOLOR,
    d,
    u("variable", "@@?" + a, 10),
    u("variable", "@\\{" + a + "\\}"),
    u("built_in", "~?`[^`]*?`"),
    // inline javascript (or whatever host language) *multiline* string
    {
      // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):
      className: "attribute",
      begin: a + "\\s*:",
      end: ":",
      returnBegin: !0,
      excludeEnd: !0
    },
    e.IMPORTANT,
    { beginKeywords: "and not" },
    e.FUNCTION_DISPATCH
  );
  const p = s.concat({
    begin: /\{/,
    end: /\}/,
    contains: o
  }), f = {
    beginKeywords: "when",
    endsWithParent: !0,
    contains: [{ beginKeywords: "and not" }].concat(s)
    // using this form to override VALUE’s 'function' match
  }, h = {
    begin: i + "\\s*:",
    returnBegin: !0,
    end: /[;}]/,
    relevance: 0,
    contains: [
      { begin: /-(webkit|moz|ms|o)-/ },
      e.CSS_VARIABLE,
      {
        className: "attribute",
        begin: "\\b(" + NJ.join("|") + ")\\b",
        end: /(?=:)/,
        starts: {
          endsWithParent: !0,
          illegal: "[<=$]",
          relevance: 0,
          contains: s
        }
      }
    ]
  }, g = {
    className: "keyword",
    begin: "@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",
    starts: {
      end: "[;{}]",
      keywords: c,
      returnEnd: !0,
      contains: s,
      relevance: 0
    }
  }, v = {
    className: "variable",
    variants: [
      // using more strict pattern for higher relevance to increase chances of Less detection.
      // this is *the only* Less specific statement used in most of the sources, so...
      // (we’ll still often loose to the css-parser unless there's '//' comment,
      // simply because 1 variable just can't beat 99 properties :)
      {
        begin: "@" + a + "\\s*:",
        relevance: 15
      },
      { begin: "@" + a }
    ],
    starts: {
      end: "[;}]",
      returnEnd: !0,
      contains: p
    }
  }, m = {
    // first parse unambiguous selectors (i.e. those not starting with tag)
    // then fall into the scary lookahead-discriminator variant.
    // this mode also handles mixin definitions and calls
    variants: [
      {
        begin: "[\\.#:&\\[>]",
        end: "[;{}]"
        // mixin calls end with ';'
      },
      {
        begin: i,
        end: /\{/
      }
    ],
    returnBegin: !0,
    returnEnd: !0,
    illegal: `[<='$"]`,
    relevance: 0,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      f,
      u("keyword", "all\\b"),
      u("variable", "@\\{" + a + "\\}"),
      // otherwise it’s identified as tag
      {
        begin: "\\b(" + MJ.join("|") + ")\\b",
        className: "selector-tag"
      },
      e.CSS_NUMBER_MODE,
      u("selector-tag", i, 0),
      u("selector-id", "#" + i),
      u("selector-class", "\\." + i, 0),
      u("selector-tag", "&", 0),
      e.ATTRIBUTE_SELECTOR_MODE,
      {
        className: "selector-pseudo",
        begin: ":(" + rL.join("|") + ")"
      },
      {
        className: "selector-pseudo",
        begin: ":(:)?(" + nL.join("|") + ")"
      },
      {
        begin: /\(/,
        end: /\)/,
        relevance: 0,
        contains: p
      },
      // argument list of parametric mixins
      { begin: "!important" },
      // eat !important after mixin call or it will be colored as tag
      e.FUNCTION_DISPATCH
    ]
  }, _ = {
    begin: a + `:(:)?(${r.join("|")})`,
    returnBegin: !0,
    contains: [m]
  };
  return o.push(
    t.C_LINE_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE,
    g,
    v,
    _,
    h,
    m,
    f,
    e.FUNCTION_DISPATCH
  ), {
    name: "Less",
    case_insensitive: !0,
    illegal: `[=>'/<($"]`,
    contains: o
  };
}
const zae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: OJ
}, Symbol.toStringTag, { value: "Module" }));
function LJ(t) {
  const e = "[a-zA-Z_\\-+\\*\\/<=>&#][a-zA-Z0-9_\\-+*\\/<=>&#!]*", r = "\\|[^]*?\\|", n = "(-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|-)?\\d+)?", a = {
    className: "literal",
    begin: "\\b(t{1}|nil)\\b"
  }, i = {
    className: "number",
    variants: [
      {
        begin: n,
        relevance: 0
      },
      { begin: "#(b|B)[0-1]+(/[0-1]+)?" },
      { begin: "#(o|O)[0-7]+(/[0-7]+)?" },
      { begin: "#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?" },
      {
        begin: "#(c|C)\\(" + n + " +" + n,
        end: "\\)"
      }
    ]
  }, o = t.inherit(t.QUOTE_STRING_MODE, { illegal: null }), s = t.COMMENT(
    ";",
    "$",
    { relevance: 0 }
  ), l = {
    begin: "\\*",
    end: "\\*"
  }, u = {
    className: "symbol",
    begin: "[:&]" + e
  }, c = {
    begin: e,
    relevance: 0
  }, d = { begin: r }, f = {
    contains: [
      i,
      o,
      l,
      u,
      {
        begin: "\\(",
        end: "\\)",
        contains: [
          "self",
          a,
          o,
          i,
          c
        ]
      },
      c
    ],
    variants: [
      {
        begin: "['`]\\(",
        end: "\\)"
      },
      {
        begin: "\\(quote ",
        end: "\\)",
        keywords: { name: "quote" }
      },
      { begin: "'" + r }
    ]
  }, h = { variants: [
    { begin: "'" + e },
    { begin: "#'" + e + "(::" + e + ")*" }
  ] }, g = {
    begin: "\\(\\s*",
    end: "\\)"
  }, v = {
    endsWithParent: !0,
    relevance: 0
  };
  return g.contains = [
    {
      className: "name",
      variants: [
        {
          begin: e,
          relevance: 0
        },
        { begin: r }
      ]
    },
    v
  ], v.contains = [
    f,
    h,
    g,
    a,
    i,
    o,
    s,
    l,
    u,
    d,
    c
  ], {
    name: "Lisp",
    illegal: /\S/,
    contains: [
      i,
      t.SHEBANG(),
      a,
      o,
      s,
      f,
      h,
      g,
      c
    ]
  };
}
const Vae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: LJ
}, Symbol.toStringTag, { value: "Module" }));
function PJ(t) {
  const e = {
    className: "variable",
    variants: [
      { begin: "\\b([gtps][A-Z]{1}[a-zA-Z0-9]*)(\\[.+\\])?(?:\\s*?)" },
      { begin: "\\$_[A-Z]+" }
    ],
    relevance: 0
  }, r = [
    t.C_BLOCK_COMMENT_MODE,
    t.HASH_COMMENT_MODE,
    t.COMMENT("--", "$"),
    t.COMMENT("[^:]//", "$")
  ], n = t.inherit(t.TITLE_MODE, { variants: [
    { begin: "\\b_*rig[A-Z][A-Za-z0-9_\\-]*" },
    { begin: "\\b_[a-z0-9\\-]+" }
  ] }), a = t.inherit(t.TITLE_MODE, { begin: "\\b([A-Za-z0-9_\\-]+)\\b" });
  return {
    name: "LiveCode",
    case_insensitive: !1,
    keywords: {
      keyword: "$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph after byte bytes english the until http forever descending using line real8 with seventh for stdout finally element word words fourth before black ninth sixth characters chars stderr uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat end repeat URL in try into switch to words https token binfile each tenth as ticks tick system real4 by dateItems without char character ascending eighth whole dateTime numeric short first ftp integer abbreviated abbr abbrev private case while if div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within contains ends with begins the keys of keys",
      literal: "SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five quote empty one true return cr linefeed right backslash null seven tab three two RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK",
      built_in: "put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress constantNames cos date dateFormat decompress difference directories diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge messageAuthenticationCode messageDigest millisec millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process combine constant convert create new alias folder directory decrypt delete variable word line folder directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback libURLSetDriver libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime libURLSetStatusCallback load extension loadedExtensions multiply socket prepare process post seek rel relative read from process rename replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop subtract symmetric union unload vectorDotProduct wait write"
    },
    contains: [
      e,
      {
        className: "keyword",
        begin: "\\bend\\sif\\b"
      },
      {
        className: "function",
        beginKeywords: "function",
        end: "$",
        contains: [
          e,
          a,
          t.APOS_STRING_MODE,
          t.QUOTE_STRING_MODE,
          t.BINARY_NUMBER_MODE,
          t.C_NUMBER_MODE,
          n
        ]
      },
      {
        className: "function",
        begin: "\\bend\\s+",
        end: "$",
        keywords: "end",
        contains: [
          a,
          n
        ],
        relevance: 0
      },
      {
        beginKeywords: "command on",
        end: "$",
        contains: [
          e,
          a,
          t.APOS_STRING_MODE,
          t.QUOTE_STRING_MODE,
          t.BINARY_NUMBER_MODE,
          t.C_NUMBER_MODE,
          n
        ]
      },
      {
        className: "meta",
        variants: [
          {
            begin: "<\\?(rev|lc|livecode)",
            relevance: 10
          },
          { begin: "<\\?" },
          { begin: "\\?>" }
        ]
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.BINARY_NUMBER_MODE,
      t.C_NUMBER_MODE,
      n
    ].concat(r),
    illegal: ";$|^\\[|^=|&|\\{"
  };
}
const $ae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PJ
}, Symbol.toStringTag, { value: "Module" })), kJ = [
  "as",
  // for exports
  "in",
  "of",
  "if",
  "for",
  "while",
  "finally",
  "var",
  "new",
  "function",
  "do",
  "return",
  "void",
  "else",
  "break",
  "catch",
  "instanceof",
  "with",
  "throw",
  "case",
  "default",
  "try",
  "switch",
  "continue",
  "typeof",
  "delete",
  "let",
  "yield",
  "const",
  "class",
  // JS handles these with a special rule
  // "get",
  // "set",
  "debugger",
  "async",
  "await",
  "static",
  "import",
  "from",
  "export",
  "extends",
  // It's reached stage 3, which is "recommended for implementation":
  "using"
], BJ = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
], FJ = [
  // Fundamental objects
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  // numbers and dates
  "Math",
  "Date",
  "Number",
  "BigInt",
  // text
  "String",
  "RegExp",
  // Indexed collections
  "Array",
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Int32Array",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  // Keyed collections
  "Set",
  "Map",
  "WeakSet",
  "WeakMap",
  // Structured data
  "ArrayBuffer",
  "SharedArrayBuffer",
  "Atomics",
  "DataView",
  "JSON",
  // Control abstraction objects
  "Promise",
  "Generator",
  "GeneratorFunction",
  "AsyncFunction",
  // Reflection
  "Reflect",
  "Proxy",
  // Internationalization
  "Intl",
  // WebAssembly
  "WebAssembly"
], GJ = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
], UJ = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
], zJ = [].concat(
  UJ,
  FJ,
  GJ
);
function VJ(t) {
  const e = [
    "npm",
    "print"
  ], r = [
    "yes",
    "no",
    "on",
    "off",
    "it",
    "that",
    "void"
  ], n = [
    "then",
    "unless",
    "until",
    "loop",
    "of",
    "by",
    "when",
    "and",
    "or",
    "is",
    "isnt",
    "not",
    "it",
    "that",
    "otherwise",
    "from",
    "to",
    "til",
    "fallthrough",
    "case",
    "enum",
    "native",
    "list",
    "map",
    "__hasProp",
    "__extends",
    "__slice",
    "__bind",
    "__indexOf"
  ], a = {
    keyword: kJ.concat(n),
    literal: BJ.concat(r),
    built_in: zJ.concat(e)
  }, i = "[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*", o = t.inherit(t.TITLE_MODE, { begin: i }), s = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: a
  }, l = {
    className: "subst",
    begin: /#[A-Za-z$_]/,
    end: /(?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,
    keywords: a
  }, u = [
    t.BINARY_NUMBER_MODE,
    {
      className: "number",
      begin: "(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",
      relevance: 0,
      starts: {
        end: "(\\s*/)?",
        relevance: 0
      }
      // a number tries to eat the following slash to prevent treating it as a regexp
    },
    {
      className: "string",
      variants: [
        {
          begin: /'''/,
          end: /'''/,
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /'/,
          end: /'/,
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /"""/,
          end: /"""/,
          contains: [
            t.BACKSLASH_ESCAPE,
            s,
            l
          ]
        },
        {
          begin: /"/,
          end: /"/,
          contains: [
            t.BACKSLASH_ESCAPE,
            s,
            l
          ]
        },
        {
          begin: /\\/,
          end: /(\s|$)/,
          excludeEnd: !0
        }
      ]
    },
    {
      className: "regexp",
      variants: [
        {
          begin: "//",
          end: "//[gim]*",
          contains: [
            s,
            t.HASH_COMMENT_MODE
          ]
        },
        {
          // regex can't start with space to parse x / 2 / 3 as two divisions
          // regex can't start with *, and it supports an "illegal" in the main mode
          begin: /\/(?![ *])(\\.|[^\\\n])*?\/[gim]*(?=\W)/
        }
      ]
    },
    { begin: "@" + i },
    {
      begin: "``",
      end: "``",
      excludeBegin: !0,
      excludeEnd: !0,
      subLanguage: "javascript"
    }
  ];
  s.contains = u;
  const c = {
    className: "params",
    begin: "\\(",
    returnBegin: !0,
    /* We need another contained nameless mode to not have every nested
    pair of parens to be called "params" */
    contains: [
      {
        begin: /\(/,
        end: /\)/,
        keywords: a,
        contains: ["self"].concat(u)
      }
    ]
  }, d = { begin: "(#=>|=>|\\|>>|-?->|!->)" }, p = {
    variants: [
      { match: [
        /class\s+/,
        i,
        /\s+extends\s+/,
        i
      ] },
      { match: [
        /class\s+/,
        i
      ] }
    ],
    scope: {
      2: "title.class",
      4: "title.class.inherited"
    },
    keywords: a
  };
  return {
    name: "LiveScript",
    aliases: ["ls"],
    keywords: a,
    illegal: /\/\*/,
    contains: u.concat([
      t.COMMENT("\\/\\*", "\\*\\/"),
      t.HASH_COMMENT_MODE,
      d,
      // relevance booster
      {
        className: "function",
        contains: [
          o,
          c
        ],
        returnBegin: !0,
        variants: [
          {
            begin: "(" + i + "\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B->\\*?",
            end: "->\\*?"
          },
          {
            begin: "(" + i + "\\s*(?:=|:=)\\s*)?!?(\\(.*\\)\\s*)?\\B[-~]{1,2}>\\*?",
            end: "[-~]{1,2}>\\*?"
          },
          {
            begin: "(" + i + "\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B!?[-~]{1,2}>\\*?",
            end: "!?[-~]{1,2}>\\*?"
          }
        ]
      },
      p,
      {
        begin: i + ":",
        end: ":",
        returnBegin: !0,
        returnEnd: !0,
        relevance: 0
      }
    ])
  };
}
const Hae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: VJ
}, Symbol.toStringTag, { value: "Module" }));
function $J(t) {
  const e = t.regex, r = /([-a-zA-Z$._][\w$.-]*)/, n = {
    className: "type",
    begin: /\bi\d+(?=\s|\b)/
  }, a = {
    className: "operator",
    relevance: 0,
    begin: /=/
  }, i = {
    className: "punctuation",
    relevance: 0,
    begin: /,/
  }, o = {
    className: "number",
    variants: [
      { begin: /[su]?0[xX][KMLHR]?[a-fA-F0-9]+/ },
      { begin: /[-+]?\d+(?:[.]\d+)?(?:[eE][-+]?\d+(?:[.]\d+)?)?/ }
    ],
    relevance: 0
  }, s = {
    className: "symbol",
    variants: [
      { begin: /^\s*[a-z]+:/ }
      // labels
    ],
    relevance: 0
  }, l = {
    className: "variable",
    variants: [
      { begin: e.concat(/%/, r) },
      { begin: /%\d+/ },
      { begin: /#\d+/ }
    ]
  }, u = {
    className: "title",
    variants: [
      { begin: e.concat(/@/, r) },
      { begin: /@\d+/ },
      { begin: e.concat(/!/, r) },
      { begin: e.concat(/!\d+/, r) },
      // https://llvm.org/docs/LangRef.html#namedmetadatastructure
      // obviously a single digit can also be used in this fashion
      { begin: /!\d+/ }
    ]
  };
  return {
    name: "LLVM IR",
    // TODO: split into different categories of keywords
    keywords: {
      keyword: "begin end true false declare define global constant private linker_private internal available_externally linkonce linkonce_odr weak weak_odr appending dllimport dllexport common default hidden protected extern_weak external thread_local zeroinitializer undef null to tail target triple datalayout volatile nuw nsw nnan ninf nsz arcp fast exact inbounds align addrspace section alias module asm sideeffect gc dbg linker_private_weak attributes blockaddress initialexec localdynamic localexec prefix unnamed_addr ccc fastcc coldcc x86_stdcallcc x86_fastcallcc arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device ptx_kernel intel_ocl_bicc msp430_intrcc spir_func spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc cc c signext zeroext inreg sret nounwind noreturn noalias nocapture byval nest readnone readonly inlinehint noinline alwaysinline optsize ssp sspreq noredzone noimplicitfloat naked builtin cold nobuiltin noduplicate nonlazybind optnone returns_twice sanitize_address sanitize_memory sanitize_thread sspstrong uwtable returned type opaque eq ne slt sgt sle sge ult ugt ule uge oeq one olt ogt ole oge ord uno ueq une x acq_rel acquire alignstack atomic catch cleanup filter inteldialect max min monotonic nand personality release seq_cst singlethread umax umin unordered xchg add fadd sub fsub mul fmul udiv sdiv fdiv urem srem frem shl lshr ashr and or xor icmp fcmp phi call trunc zext sext fptrunc fpext uitofp sitofp fptoui fptosi inttoptr ptrtoint bitcast addrspacecast select va_arg ret br switch invoke unwind unreachable indirectbr landingpad resume malloc alloca free load store getelementptr extractelement insertelement shufflevector getresult extractvalue insertvalue atomicrmw cmpxchg fence argmemonly",
      type: "void half bfloat float double fp128 x86_fp80 ppc_fp128 x86_amx x86_mmx ptr label token metadata opaque"
    },
    contains: [
      n,
      // this matches "empty comments"...
      // ...because it's far more likely this is a statement terminator in
      // another language than an actual comment
      t.COMMENT(/;\s*$/, null, { relevance: 0 }),
      t.COMMENT(/;/, /$/),
      {
        className: "string",
        begin: /"/,
        end: /"/,
        contains: [
          {
            className: "char.escape",
            match: /\\\d\d/
          }
        ]
      },
      u,
      i,
      a,
      l,
      s,
      o
    ]
  };
}
const Wae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $J
}, Symbol.toStringTag, { value: "Module" }));
function HJ(t) {
  const r = {
    className: "string",
    begin: '"',
    end: '"',
    contains: [{
      className: "subst",
      begin: /\\[tn"\\]/
    }]
  }, n = {
    className: "number",
    relevance: 0,
    begin: t.C_NUMBER_RE
  }, a = {
    className: "literal",
    variants: [
      { begin: "\\b(PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\b" },
      { begin: "\\b(XP_ERROR_(EXPERIENCES_DISABLED|EXPERIENCE_(DISABLED|SUSPENDED)|INVALID_(EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(FOUND|PERMITTED(_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(_OBJECT)?|(DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(_(BY_(LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(PARCEL(_OWNER)?|REGION)))?|CAMERA_(PITCH|DISTANCE|BEHINDNESS_(ANGLE|LAG)|(FOCUS|POSITION)(_(THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(ROOT|SET|ALL_(OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(IVE|_(ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(FWD|BACK|(ROT_)?(LEFT|RIGHT)|UP|DOWN|(ML_)?LBUTTON)|PERMISSION_(RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(_START)?|TELEPORT|MEDIA)|OBJECT_(CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_(ATTACHED|ON_REZ)|NAME|DESC|POS|PRIM_(COUNT|EQUIVALENCE)|RETURN_(PARCEL(_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP(_TAG)?|CREATOR|ATTACHED_(POINT|SLOTS_AVAILABLE)|RENDER_WEIGHT|(BODY_SHAPE|PATHFINDING)_TYPE|(RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(MEMORY|TIME))|TYPE_(INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(DEBUG|PUBLIC)_CHANNEL|ATTACH_(AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](SHOULDER|HAND|FOOT|EAR|EYE|[UL](ARM|LEG)|HIP)|(LEFT|RIGHT)_PEC|HUD_(CENTER_[12]|TOP_(RIGHT|CENTER|LEFT)|BOTTOM(_(RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(BASE|TIP)|[LR]WING|FACE_(JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(ONLINE|NAME|BORN|SIM_(POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(ON_FILE|USED)|REMOTE_DATA_(CHANNEL|REQUEST|REPLY)|PSYS_(PART_(BF_(ZERO|ONE(_MINUS_(DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(START|END)_(COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(RIBBON|WIND|INTERP_(COLOR|SCALE)|BOUNCE|FOLLOW_(SRC|VELOCITY)|TARGET_(POS|LINEAR)|EMISSIVE)_MASK)|SRC_(MAX_AGE|PATTERN|ANGLE_(BEGIN|END)|BURST_(RATE|PART_COUNT|RADIUS|SPEED_(MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(DROP|EXPLODE|ANGLE(_CONE(_EMPTY)?)?)))|VEHICLE_(REFERENCE_FRAME|TYPE_(NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(LINEAR|ANGULAR)_(FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(LINEAR|ANGULAR)_(DEFLECTION_(EFFICIENCY|TIMESCALE)|MOTOR_(DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(EFFICIENCY|TIMESCALE)|BANKING_(EFFICIENCY|MIX|TIMESCALE)|FLAG_(NO_DEFLECTION_UP|LIMIT_(ROLL_ONLY|MOTOR_UP)|HOVER_((WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(ALLOW_UNSIT|ALPHA_MODE(_(BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(_(BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(_(STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(NONE|LOW|MEDIUM|HIGH)|BUMP_(NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(DEFAULT|PLANAR)|SCRIPTED_SIT_ONLY|SCULPT_(TYPE_(SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(MIRROR|INVERT))|PHYSICS(_(SHAPE_(CONVEX|NONE|PRIM|TYPE)))?|(POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIT_TARGET|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(ALT_IMAGE_ENABLE|CONTROLS|(CURRENT|HOME)_URL|AUTO_(LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(WIDTH|HEIGHT)_PIXELS|WHITELIST(_ENABLE)?|PERMS_(INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(STANDARD|MINI)|PERM_(NONE|OWNER|GROUP|ANYONE)|MAX_(URL_LENGTH|WHITELIST_(SIZE|COUNT)|(WIDTH|HEIGHT)_PIXELS)))|MASK_(BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(MEDIA_COMMAND_(STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(ALLOW_(FLY|(GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(GROUP_)?OBJECTS)|USE_(ACCESS_(GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(GROUP|ALL)_OBJECT_ENTRY)|COUNT_(TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(HIDE|DEFAULT)|REGION_FLAG_(ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(METHOD|MIMETYPE|BODY_(MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|SIT_(INVALID_(AGENT|LINK_OBJECT)|NO(T_EXPERIENCE|_(ACCESS|EXPERIENCE_PERMISSION|SIT_TARGET)))|STRING_(TRIM(_(HEAD|TAIL))?)|CLICK_ACTION_(NONE|TOUCH|SIT|BUY|PAY|OPEN(_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(NONE|SCRIPT_MEMORY)|RC_(DATA_FLAGS|DETECT_PHANTOM|GET_(LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(TYPES|AGENTS|(NON)?PHYSICAL|LAND))|RCERR_(CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(ALLOWED_(AGENT|GROUP)_(ADD|REMOVE)|BANNED_AGENT_(ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(COMMAND|CMD_(PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(CMD_((SMOOTH_)?STOP|JUMP)|DESIRED_(TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(_([ABCD]|NONE))?|MAX_(DECEL|TURN_RADIUS|(ACCEL|SPEED)))|PURSUIT_(OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(EVADE_(HIDDEN|SPOTTED)|FAILURE_(DYNAMIC_PATHFINDING_DISABLED|INVALID_(GOAL|START)|NO_(NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(PARCEL_)?UNREACHABLE)|(GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(_(FAST|NONE|SLOW))?|CONTENT_TYPE_(ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(RADIUS|STATIC)|(PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b" },
      { begin: "\\b(FALSE|TRUE)\\b" },
      { begin: "\\b(ZERO_ROTATION)\\b" },
      { begin: "\\b(EOF|JSON_(ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(GRANTED|DENIED))\\b" },
      { begin: "\\b(ZERO_VECTOR|TOUCH_INVALID_(TEXCOORD|VECTOR))\\b" }
    ]
  }, i = {
    className: "built_in",
    begin: "\\b(ll(AgentInExperience|(Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(Details|ErrorMessage)|ReturnObjectsBy(ID|Owner)|Json(2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(Mag|Norm|Dist)|Rot(Between|2(Euler|Fwd|Left|Up))|(Euler|Axes)2Rot|Whisper|(Region|Owner)?Say|Shout|Listen(Control|Remove)?|Sensor(Repeat|Remove)?|Detected(Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|([GS]et)(AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(Scale|Offset|Rotate)Texture|(Rot)?Target(Remove)?|(Stop)?MoveToTarget|Apply(Rotational)?Impulse|Set(KeyframedMotion|ContentType|RegionPos|(Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(Queueing|Radius)|Vehicle(Type|(Float|Vector|Rotation)Param)|(Touch|Sit)?Text|Camera(Eye|At)Offset|PrimitiveParams|ClickAction|Link(Alpha|Color|PrimitiveParams(Fast)?|Texture(Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get((Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(PrimitiveParams|Number(OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(Details|PermMask|PrimCount)|Parcel(MaxPrims|Details|Prim(Count|Owners))|Attached(List)?|(SPMax|Free|Used)Memory|Region(Name|TimeDilation|FPS|Corner|AgentCount)|Root(Position|Rotation)|UnixTime|(Parcel|Region)Flags|(Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(Prims|NotecardLines|Sides)|Animation(List)?|(Camera|Local)(Pos|Rot)|Vel|Accel|Omega|Time(stamp|OfDay)|(Object|CenterOf)?Mass|MassMKS|Energy|Owner|(Owner)?Key|SunDirection|Texture(Offset|Scale|Rot)|Inventory(Number|Name|Key|Type|Creator|PermMask)|Permissions(Key)?|StartParameter|List(Length|EntryType)|Date|Agent(Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(Name|State))|(Get|Reset|GetAndReset)Time|PlaySound(Slave)?|LoopSound(Master|Slave)?|(Trigger|Stop|Preload)Sound|((Get|Delete)Sub|Insert)String|To(Upper|Lower)|Give(InventoryList|Money)|RezObject|(Stop)?LookAt|Sleep|CollisionFilter|(Take|Release)Controls|DetachFromAvatar|AttachToAvatar(Temp)?|InstantMessage|(GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(Length|Trim)|(Start|Stop)Animation|TargetOmega|Request(Experience)?Permissions|(Create|Break)Link|BreakAllLinks|(Give|Remove)Inventory|Water|PassTouches|Request(Agent|Inventory)Data|TeleportAgent(Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(Axis|Angle)|A(cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(CSV|Integer|Json|Float|String|Key|Vector|Rot|List(Strided)?)|DeleteSubList|List(Statistics|Sort|Randomize|(Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(Slope|Normal|Contour)|GroundRepel|(Set|Remove)VehicleFlags|SitOnLink|(AvatarOn)?(Link)?SitTarget|Script(Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(Integer|String)ToBase64|XorBase64|Log(10)?|Base64To(String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(Load|Release|(E|Une)scape)URL|ParcelMedia(CommandList|Query)|ModPow|MapDestination|(RemoveFrom|AddTo|Reset)Land(Pass|Ban)List|(Set|Clear)CameraParams|HTTP(Request|Response)|TextBox|DetectedTouch(UV|Face|Pos|(N|Bin)ormal|ST)|(MD5|SHA1|DumpList2)String|Request(Secure)?URL|Clear(Prim|Link)Media|(Link)?ParticleSystem|(Get|Request)(Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b"
  };
  return {
    name: "LSL (Linden Scripting Language)",
    illegal: ":",
    contains: [
      r,
      {
        className: "comment",
        variants: [
          t.COMMENT("//", "$"),
          t.COMMENT("/\\*", "\\*/")
        ],
        relevance: 0
      },
      n,
      {
        className: "section",
        variants: [
          { begin: "\\b(state|default)\\b" },
          { begin: "\\b(state_(entry|exit)|touch(_(start|end))?|(land_)?collision(_(start|end))?|timer|listen|(no_)?sensor|control|(not_)?at_(rot_)?target|money|email|experience_permissions(_denied)?|run_time_permissions|changed|attach|dataserver|moving_(start|end)|link_message|(on|object)_rez|remote_data|http_re(sponse|quest)|path_update|transaction_result)\\b" }
        ]
      },
      i,
      a,
      {
        className: "type",
        begin: "\\b(integer|float|string|key|vector|quaternion|rotation|list)\\b"
      }
    ]
  };
}
const qae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: HJ
}, Symbol.toStringTag, { value: "Module" }));
function WJ(t) {
  const e = "\\[=*\\[", r = "\\]=*\\]", n = {
    begin: e,
    end: r,
    contains: ["self"]
  }, a = [
    t.COMMENT("--(?!" + e + ")", "$"),
    t.COMMENT(
      "--" + e,
      r,
      {
        contains: [n],
        relevance: 10
      }
    )
  ];
  return {
    name: "Lua",
    aliases: ["pluto"],
    keywords: {
      $pattern: t.UNDERSCORE_IDENT_RE,
      literal: "true false nil",
      keyword: "and break do else elseif end for goto if in local not or repeat return then until while",
      built_in: (
        // Metatags and globals:
        "_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove"
      )
    },
    contains: a.concat([
      {
        className: "function",
        beginKeywords: "function",
        end: "\\)",
        contains: [
          t.inherit(t.TITLE_MODE, { begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*" }),
          {
            className: "params",
            begin: "\\(",
            endsWithParent: !0,
            contains: a
          }
        ].concat(a)
      },
      t.C_NUMBER_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: e,
        end: r,
        contains: [n],
        relevance: 5
      }
    ])
  };
}
const Yae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: WJ
}, Symbol.toStringTag, { value: "Module" }));
function qJ(t) {
  const e = {
    className: "variable",
    variants: [
      {
        begin: "\\$\\(" + t.UNDERSCORE_IDENT_RE + "\\)",
        contains: [t.BACKSLASH_ESCAPE]
      },
      { begin: /\$[@%<?\^\+\*]/ }
    ]
  }, r = {
    className: "string",
    begin: /"/,
    end: /"/,
    contains: [
      t.BACKSLASH_ESCAPE,
      e
    ]
  }, n = {
    className: "variable",
    begin: /\$\([\w-]+\s/,
    end: /\)/,
    keywords: { built_in: "subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value" },
    contains: [
      e,
      r
      // Added QUOTE_STRING as they can be a part of functions
    ]
  }, a = { begin: "^" + t.UNDERSCORE_IDENT_RE + "\\s*(?=[:+?]?=)" }, i = {
    className: "meta",
    begin: /^\.PHONY:/,
    end: /$/,
    keywords: {
      $pattern: /[\.\w]+/,
      keyword: ".PHONY"
    }
  }, o = {
    className: "section",
    begin: /^[^\s]+:/,
    end: /$/,
    contains: [e]
  };
  return {
    name: "Makefile",
    aliases: [
      "mk",
      "mak",
      "make"
    ],
    keywords: {
      $pattern: /[\w-]+/,
      keyword: "define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath"
    },
    contains: [
      t.HASH_COMMENT_MODE,
      e,
      r,
      n,
      a,
      i,
      o
    ]
  };
}
const Kae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qJ
}, Symbol.toStringTag, { value: "Module" }));
function YJ(t) {
  const e = t.regex, r = {
    begin: /<\/?[A-Za-z_]/,
    end: ">",
    subLanguage: "xml",
    relevance: 0
  }, n = {
    begin: "^[-\\*]{3,}",
    end: "$"
  }, a = {
    className: "code",
    variants: [
      // TODO: fix to allow these to work with sublanguage also
      { begin: "(`{3,})[^`](.|\\n)*?\\1`*[ ]*" },
      { begin: "(~{3,})[^~](.|\\n)*?\\1~*[ ]*" },
      // needed to allow markdown as a sublanguage to work
      {
        begin: "```",
        end: "```+[ ]*$"
      },
      {
        begin: "~~~",
        end: "~~~+[ ]*$"
      },
      { begin: "`.+?`" },
      {
        begin: "(?=^( {4}|\\t))",
        // use contains to gobble up multiple lines to allow the block to be whatever size
        // but only have a single open/close tag vs one per line
        contains: [
          {
            begin: "^( {4}|\\t)",
            end: "(\\n)$"
          }
        ],
        relevance: 0
      }
    ]
  }, i = {
    className: "bullet",
    begin: "^[ 	]*([*+-]|(\\d+\\.))(?=\\s+)",
    end: "\\s+",
    excludeEnd: !0
  }, o = {
    begin: /^\[[^\n]+\]:/,
    returnBegin: !0,
    contains: [
      {
        className: "symbol",
        begin: /\[/,
        end: /\]/,
        excludeBegin: !0,
        excludeEnd: !0
      },
      {
        className: "link",
        begin: /:\s*/,
        end: /$/,
        excludeBegin: !0
      }
    ]
  }, s = /[A-Za-z][A-Za-z0-9+.-]*/, l = {
    variants: [
      // too much like nested array access in so many languages
      // to have any real relevance
      {
        begin: /\[.+?\]\[.*?\]/,
        relevance: 0
      },
      // popular internet URLs
      {
        begin: /\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,
        relevance: 2
      },
      {
        begin: e.concat(/\[.+?\]\(/, s, /:\/\/.*?\)/),
        relevance: 2
      },
      // relative urls
      {
        begin: /\[.+?\]\([./?&#].*?\)/,
        relevance: 1
      },
      // whatever else, lower relevance (might not be a link at all)
      {
        begin: /\[.*?\]\(.*?\)/,
        relevance: 0
      }
    ],
    returnBegin: !0,
    contains: [
      {
        // empty strings for alt or link text
        match: /\[(?=\])/
      },
      {
        className: "string",
        relevance: 0,
        begin: "\\[",
        end: "\\]",
        excludeBegin: !0,
        returnEnd: !0
      },
      {
        className: "link",
        relevance: 0,
        begin: "\\]\\(",
        end: "\\)",
        excludeBegin: !0,
        excludeEnd: !0
      },
      {
        className: "symbol",
        relevance: 0,
        begin: "\\]\\[",
        end: "\\]",
        excludeBegin: !0,
        excludeEnd: !0
      }
    ]
  }, u = {
    className: "strong",
    contains: [],
    // defined later
    variants: [
      {
        begin: /_{2}(?!\s)/,
        end: /_{2}/
      },
      {
        begin: /\*{2}(?!\s)/,
        end: /\*{2}/
      }
    ]
  }, c = {
    className: "emphasis",
    contains: [],
    // defined later
    variants: [
      {
        begin: /\*(?![*\s])/,
        end: /\*/
      },
      {
        begin: /_(?![_\s])/,
        end: /_/,
        relevance: 0
      }
    ]
  }, d = t.inherit(u, { contains: [] }), p = t.inherit(c, { contains: [] });
  u.contains.push(p), c.contains.push(d);
  let f = [
    r,
    l
  ];
  return [
    u,
    c,
    d,
    p
  ].forEach((m) => {
    m.contains = m.contains.concat(f);
  }), f = f.concat(u, c), {
    name: "Markdown",
    aliases: [
      "md",
      "mkdown",
      "mkd"
    ],
    contains: [
      {
        className: "section",
        variants: [
          {
            begin: "^#{1,6}",
            end: "$",
            contains: f
          },
          {
            begin: "(?=^.+?\\n[=-]{2,}$)",
            contains: [
              { begin: "^[=-]*$" },
              {
                begin: "^",
                end: "\\n",
                contains: f
              }
            ]
          }
        ]
      },
      r,
      i,
      u,
      c,
      {
        className: "quote",
        begin: "^>\\s+",
        contains: f,
        end: "$"
      },
      a,
      n,
      l,
      o,
      {
        //https://spec.commonmark.org/0.31.2/#entity-references
        scope: "literal",
        match: /&([a-zA-Z0-9]+|#[0-9]{1,7}|#[Xx][0-9a-fA-F]{1,6});/
      }
    ]
  };
}
const Zae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: YJ
}, Symbol.toStringTag, { value: "Module" })), KJ = [
  "AASTriangle",
  "AbelianGroup",
  "Abort",
  "AbortKernels",
  "AbortProtect",
  "AbortScheduledTask",
  "Above",
  "Abs",
  "AbsArg",
  "AbsArgPlot",
  "Absolute",
  "AbsoluteCorrelation",
  "AbsoluteCorrelationFunction",
  "AbsoluteCurrentValue",
  "AbsoluteDashing",
  "AbsoluteFileName",
  "AbsoluteOptions",
  "AbsolutePointSize",
  "AbsoluteThickness",
  "AbsoluteTime",
  "AbsoluteTiming",
  "AcceptanceThreshold",
  "AccountingForm",
  "Accumulate",
  "Accuracy",
  "AccuracyGoal",
  "AcousticAbsorbingValue",
  "AcousticImpedanceValue",
  "AcousticNormalVelocityValue",
  "AcousticPDEComponent",
  "AcousticPressureCondition",
  "AcousticRadiationValue",
  "AcousticSoundHardValue",
  "AcousticSoundSoftCondition",
  "ActionDelay",
  "ActionMenu",
  "ActionMenuBox",
  "ActionMenuBoxOptions",
  "Activate",
  "Active",
  "ActiveClassification",
  "ActiveClassificationObject",
  "ActiveItem",
  "ActivePrediction",
  "ActivePredictionObject",
  "ActiveStyle",
  "AcyclicGraphQ",
  "AddOnHelpPath",
  "AddSides",
  "AddTo",
  "AddToSearchIndex",
  "AddUsers",
  "AdjacencyGraph",
  "AdjacencyList",
  "AdjacencyMatrix",
  "AdjacentMeshCells",
  "Adjugate",
  "AdjustmentBox",
  "AdjustmentBoxOptions",
  "AdjustTimeSeriesForecast",
  "AdministrativeDivisionData",
  "AffineHalfSpace",
  "AffineSpace",
  "AffineStateSpaceModel",
  "AffineTransform",
  "After",
  "AggregatedEntityClass",
  "AggregationLayer",
  "AircraftData",
  "AirportData",
  "AirPressureData",
  "AirSoundAttenuation",
  "AirTemperatureData",
  "AiryAi",
  "AiryAiPrime",
  "AiryAiZero",
  "AiryBi",
  "AiryBiPrime",
  "AiryBiZero",
  "AlgebraicIntegerQ",
  "AlgebraicNumber",
  "AlgebraicNumberDenominator",
  "AlgebraicNumberNorm",
  "AlgebraicNumberPolynomial",
  "AlgebraicNumberTrace",
  "AlgebraicRules",
  "AlgebraicRulesData",
  "Algebraics",
  "AlgebraicUnitQ",
  "Alignment",
  "AlignmentMarker",
  "AlignmentPoint",
  "All",
  "AllowAdultContent",
  "AllowChatServices",
  "AllowedCloudExtraParameters",
  "AllowedCloudParameterExtensions",
  "AllowedDimensions",
  "AllowedFrequencyRange",
  "AllowedHeads",
  "AllowGroupClose",
  "AllowIncomplete",
  "AllowInlineCells",
  "AllowKernelInitialization",
  "AllowLooseGrammar",
  "AllowReverseGroupClose",
  "AllowScriptLevelChange",
  "AllowVersionUpdate",
  "AllTrue",
  "Alphabet",
  "AlphabeticOrder",
  "AlphabeticSort",
  "AlphaChannel",
  "AlternateImage",
  "AlternatingFactorial",
  "AlternatingGroup",
  "AlternativeHypothesis",
  "Alternatives",
  "AltitudeMethod",
  "AmbientLight",
  "AmbiguityFunction",
  "AmbiguityList",
  "Analytic",
  "AnatomyData",
  "AnatomyForm",
  "AnatomyPlot3D",
  "AnatomySkinStyle",
  "AnatomyStyling",
  "AnchoredSearch",
  "And",
  "AndersonDarlingTest",
  "AngerJ",
  "AngleBisector",
  "AngleBracket",
  "AnglePath",
  "AnglePath3D",
  "AngleVector",
  "AngularGauge",
  "Animate",
  "AnimatedImage",
  "AnimationCycleOffset",
  "AnimationCycleRepetitions",
  "AnimationDirection",
  "AnimationDisplayTime",
  "AnimationRate",
  "AnimationRepetitions",
  "AnimationRunning",
  "AnimationRunTime",
  "AnimationTimeIndex",
  "AnimationVideo",
  "Animator",
  "AnimatorBox",
  "AnimatorBoxOptions",
  "AnimatorElements",
  "Annotate",
  "Annotation",
  "AnnotationDelete",
  "AnnotationKeys",
  "AnnotationRules",
  "AnnotationValue",
  "Annuity",
  "AnnuityDue",
  "Annulus",
  "AnomalyDetection",
  "AnomalyDetector",
  "AnomalyDetectorFunction",
  "Anonymous",
  "Antialiasing",
  "Antihermitian",
  "AntihermitianMatrixQ",
  "Antisymmetric",
  "AntisymmetricMatrixQ",
  "Antonyms",
  "AnyOrder",
  "AnySubset",
  "AnyTrue",
  "Apart",
  "ApartSquareFree",
  "APIFunction",
  "Appearance",
  "AppearanceElements",
  "AppearanceRules",
  "AppellF1",
  "Append",
  "AppendCheck",
  "AppendLayer",
  "AppendTo",
  "Application",
  "Apply",
  "ApplyReaction",
  "ApplySides",
  "ApplyTo",
  "ArcCos",
  "ArcCosh",
  "ArcCot",
  "ArcCoth",
  "ArcCsc",
  "ArcCsch",
  "ArcCurvature",
  "ARCHProcess",
  "ArcLength",
  "ArcSec",
  "ArcSech",
  "ArcSin",
  "ArcSinDistribution",
  "ArcSinh",
  "ArcTan",
  "ArcTanh",
  "Area",
  "Arg",
  "ArgMax",
  "ArgMin",
  "ArgumentCountQ",
  "ArgumentsOptions",
  "ARIMAProcess",
  "ArithmeticGeometricMean",
  "ARMAProcess",
  "Around",
  "AroundReplace",
  "ARProcess",
  "Array",
  "ArrayComponents",
  "ArrayDepth",
  "ArrayFilter",
  "ArrayFlatten",
  "ArrayMesh",
  "ArrayPad",
  "ArrayPlot",
  "ArrayPlot3D",
  "ArrayQ",
  "ArrayReduce",
  "ArrayResample",
  "ArrayReshape",
  "ArrayRules",
  "Arrays",
  "Arrow",
  "Arrow3DBox",
  "ArrowBox",
  "Arrowheads",
  "ASATriangle",
  "Ask",
  "AskAppend",
  "AskConfirm",
  "AskDisplay",
  "AskedQ",
  "AskedValue",
  "AskFunction",
  "AskState",
  "AskTemplateDisplay",
  "AspectRatio",
  "AspectRatioFixed",
  "Assert",
  "AssessmentFunction",
  "AssessmentResultObject",
  "AssociateTo",
  "Association",
  "AssociationFormat",
  "AssociationMap",
  "AssociationQ",
  "AssociationThread",
  "AssumeDeterministic",
  "Assuming",
  "Assumptions",
  "AstroAngularSeparation",
  "AstroBackground",
  "AstroCenter",
  "AstroDistance",
  "AstroGraphics",
  "AstroGridLines",
  "AstroGridLinesStyle",
  "AstronomicalData",
  "AstroPosition",
  "AstroProjection",
  "AstroRange",
  "AstroRangePadding",
  "AstroReferenceFrame",
  "AstroStyling",
  "AstroZoomLevel",
  "Asymptotic",
  "AsymptoticDSolveValue",
  "AsymptoticEqual",
  "AsymptoticEquivalent",
  "AsymptoticExpectation",
  "AsymptoticGreater",
  "AsymptoticGreaterEqual",
  "AsymptoticIntegrate",
  "AsymptoticLess",
  "AsymptoticLessEqual",
  "AsymptoticOutputTracker",
  "AsymptoticProbability",
  "AsymptoticProduct",
  "AsymptoticRSolveValue",
  "AsymptoticSolve",
  "AsymptoticSum",
  "Asynchronous",
  "AsynchronousTaskObject",
  "AsynchronousTasks",
  "Atom",
  "AtomCoordinates",
  "AtomCount",
  "AtomDiagramCoordinates",
  "AtomLabels",
  "AtomLabelStyle",
  "AtomList",
  "AtomQ",
  "AttachCell",
  "AttachedCell",
  "AttentionLayer",
  "Attributes",
  "Audio",
  "AudioAmplify",
  "AudioAnnotate",
  "AudioAnnotationLookup",
  "AudioBlockMap",
  "AudioCapture",
  "AudioChannelAssignment",
  "AudioChannelCombine",
  "AudioChannelMix",
  "AudioChannels",
  "AudioChannelSeparate",
  "AudioData",
  "AudioDelay",
  "AudioDelete",
  "AudioDevice",
  "AudioDistance",
  "AudioEncoding",
  "AudioFade",
  "AudioFrequencyShift",
  "AudioGenerator",
  "AudioIdentify",
  "AudioInputDevice",
  "AudioInsert",
  "AudioInstanceQ",
  "AudioIntervals",
  "AudioJoin",
  "AudioLabel",
  "AudioLength",
  "AudioLocalMeasurements",
  "AudioLooping",
  "AudioLoudness",
  "AudioMeasurements",
  "AudioNormalize",
  "AudioOutputDevice",
  "AudioOverlay",
  "AudioPad",
  "AudioPan",
  "AudioPartition",
  "AudioPause",
  "AudioPitchShift",
  "AudioPlay",
  "AudioPlot",
  "AudioQ",
  "AudioRecord",
  "AudioReplace",
  "AudioResample",
  "AudioReverb",
  "AudioReverse",
  "AudioSampleRate",
  "AudioSpectralMap",
  "AudioSpectralTransformation",
  "AudioSplit",
  "AudioStop",
  "AudioStream",
  "AudioStreams",
  "AudioTimeStretch",
  "AudioTrackApply",
  "AudioTrackSelection",
  "AudioTrim",
  "AudioType",
  "AugmentedPolyhedron",
  "AugmentedSymmetricPolynomial",
  "Authenticate",
  "Authentication",
  "AuthenticationDialog",
  "AutoAction",
  "Autocomplete",
  "AutocompletionFunction",
  "AutoCopy",
  "AutocorrelationTest",
  "AutoDelete",
  "AutoEvaluateEvents",
  "AutoGeneratedPackage",
  "AutoIndent",
  "AutoIndentSpacings",
  "AutoItalicWords",
  "AutoloadPath",
  "AutoMatch",
  "Automatic",
  "AutomaticImageSize",
  "AutoMultiplicationSymbol",
  "AutoNumberFormatting",
  "AutoOpenNotebooks",
  "AutoOpenPalettes",
  "AutoOperatorRenderings",
  "AutoQuoteCharacters",
  "AutoRefreshed",
  "AutoRemove",
  "AutorunSequencing",
  "AutoScaling",
  "AutoScroll",
  "AutoSpacing",
  "AutoStyleOptions",
  "AutoStyleWords",
  "AutoSubmitting",
  "Axes",
  "AxesEdge",
  "AxesLabel",
  "AxesOrigin",
  "AxesStyle",
  "AxiomaticTheory",
  "Axis",
  "Axis3DBox",
  "Axis3DBoxOptions",
  "AxisBox",
  "AxisBoxOptions",
  "AxisLabel",
  "AxisObject",
  "AxisStyle",
  "BabyMonsterGroupB",
  "Back",
  "BackFaceColor",
  "BackFaceGlowColor",
  "BackFaceOpacity",
  "BackFaceSpecularColor",
  "BackFaceSpecularExponent",
  "BackFaceSurfaceAppearance",
  "BackFaceTexture",
  "Background",
  "BackgroundAppearance",
  "BackgroundTasksSettings",
  "Backslash",
  "Backsubstitution",
  "Backward",
  "Ball",
  "Band",
  "BandpassFilter",
  "BandstopFilter",
  "BarabasiAlbertGraphDistribution",
  "BarChart",
  "BarChart3D",
  "BarcodeImage",
  "BarcodeRecognize",
  "BaringhausHenzeTest",
  "BarLegend",
  "BarlowProschanImportance",
  "BarnesG",
  "BarOrigin",
  "BarSpacing",
  "BartlettHannWindow",
  "BartlettWindow",
  "BaseDecode",
  "BaseEncode",
  "BaseForm",
  "Baseline",
  "BaselinePosition",
  "BaseStyle",
  "BasicRecurrentLayer",
  "BatchNormalizationLayer",
  "BatchSize",
  "BatesDistribution",
  "BattleLemarieWavelet",
  "BayesianMaximization",
  "BayesianMaximizationObject",
  "BayesianMinimization",
  "BayesianMinimizationObject",
  "Because",
  "BeckmannDistribution",
  "Beep",
  "Before",
  "Begin",
  "BeginDialogPacket",
  "BeginPackage",
  "BellB",
  "BellY",
  "Below",
  "BenfordDistribution",
  "BeniniDistribution",
  "BenktanderGibratDistribution",
  "BenktanderWeibullDistribution",
  "BernoulliB",
  "BernoulliDistribution",
  "BernoulliGraphDistribution",
  "BernoulliProcess",
  "BernsteinBasis",
  "BesagL",
  "BesselFilterModel",
  "BesselI",
  "BesselJ",
  "BesselJZero",
  "BesselK",
  "BesselY",
  "BesselYZero",
  "Beta",
  "BetaBinomialDistribution",
  "BetaDistribution",
  "BetaNegativeBinomialDistribution",
  "BetaPrimeDistribution",
  "BetaRegularized",
  "Between",
  "BetweennessCentrality",
  "Beveled",
  "BeveledPolyhedron",
  "BezierCurve",
  "BezierCurve3DBox",
  "BezierCurve3DBoxOptions",
  "BezierCurveBox",
  "BezierCurveBoxOptions",
  "BezierFunction",
  "BilateralFilter",
  "BilateralLaplaceTransform",
  "BilateralZTransform",
  "Binarize",
  "BinaryDeserialize",
  "BinaryDistance",
  "BinaryFormat",
  "BinaryImageQ",
  "BinaryRead",
  "BinaryReadList",
  "BinarySerialize",
  "BinaryWrite",
  "BinCounts",
  "BinLists",
  "BinnedVariogramList",
  "Binomial",
  "BinomialDistribution",
  "BinomialPointProcess",
  "BinomialProcess",
  "BinormalDistribution",
  "BiorthogonalSplineWavelet",
  "BioSequence",
  "BioSequenceBackTranslateList",
  "BioSequenceComplement",
  "BioSequenceInstances",
  "BioSequenceModify",
  "BioSequencePlot",
  "BioSequenceQ",
  "BioSequenceReverseComplement",
  "BioSequenceTranscribe",
  "BioSequenceTranslate",
  "BipartiteGraphQ",
  "BiquadraticFilterModel",
  "BirnbaumImportance",
  "BirnbaumSaundersDistribution",
  "BitAnd",
  "BitClear",
  "BitGet",
  "BitLength",
  "BitNot",
  "BitOr",
  "BitRate",
  "BitSet",
  "BitShiftLeft",
  "BitShiftRight",
  "BitXor",
  "BiweightLocation",
  "BiweightMidvariance",
  "Black",
  "BlackmanHarrisWindow",
  "BlackmanNuttallWindow",
  "BlackmanWindow",
  "Blank",
  "BlankForm",
  "BlankNullSequence",
  "BlankSequence",
  "Blend",
  "Block",
  "BlockchainAddressData",
  "BlockchainBase",
  "BlockchainBlockData",
  "BlockchainContractValue",
  "BlockchainData",
  "BlockchainGet",
  "BlockchainKeyEncode",
  "BlockchainPut",
  "BlockchainTokenData",
  "BlockchainTransaction",
  "BlockchainTransactionData",
  "BlockchainTransactionSign",
  "BlockchainTransactionSubmit",
  "BlockDiagonalMatrix",
  "BlockLowerTriangularMatrix",
  "BlockMap",
  "BlockRandom",
  "BlockUpperTriangularMatrix",
  "BlomqvistBeta",
  "BlomqvistBetaTest",
  "Blue",
  "Blur",
  "Blurring",
  "BodePlot",
  "BohmanWindow",
  "Bold",
  "Bond",
  "BondCount",
  "BondLabels",
  "BondLabelStyle",
  "BondList",
  "BondQ",
  "Bookmarks",
  "Boole",
  "BooleanConsecutiveFunction",
  "BooleanConvert",
  "BooleanCountingFunction",
  "BooleanFunction",
  "BooleanGraph",
  "BooleanMaxterms",
  "BooleanMinimize",
  "BooleanMinterms",
  "BooleanQ",
  "BooleanRegion",
  "Booleans",
  "BooleanStrings",
  "BooleanTable",
  "BooleanVariables",
  "BorderDimensions",
  "BorelTannerDistribution",
  "Bottom",
  "BottomHatTransform",
  "BoundaryDiscretizeGraphics",
  "BoundaryDiscretizeRegion",
  "BoundaryMesh",
  "BoundaryMeshRegion",
  "BoundaryMeshRegionQ",
  "BoundaryStyle",
  "BoundedRegionQ",
  "BoundingRegion",
  "Bounds",
  "Box",
  "BoxBaselineShift",
  "BoxData",
  "BoxDimensions",
  "Boxed",
  "Boxes",
  "BoxForm",
  "BoxFormFormatTypes",
  "BoxFrame",
  "BoxID",
  "BoxMargins",
  "BoxMatrix",
  "BoxObject",
  "BoxRatios",
  "BoxRotation",
  "BoxRotationPoint",
  "BoxStyle",
  "BoxWhiskerChart",
  "Bra",
  "BracketingBar",
  "BraKet",
  "BrayCurtisDistance",
  "BreadthFirstScan",
  "Break",
  "BridgeData",
  "BrightnessEqualize",
  "BroadcastStationData",
  "Brown",
  "BrownForsytheTest",
  "BrownianBridgeProcess",
  "BrowserCategory",
  "BSplineBasis",
  "BSplineCurve",
  "BSplineCurve3DBox",
  "BSplineCurve3DBoxOptions",
  "BSplineCurveBox",
  "BSplineCurveBoxOptions",
  "BSplineFunction",
  "BSplineSurface",
  "BSplineSurface3DBox",
  "BSplineSurface3DBoxOptions",
  "BubbleChart",
  "BubbleChart3D",
  "BubbleScale",
  "BubbleSizes",
  "BuckyballGraph",
  "BuildCompiledComponent",
  "BuildingData",
  "BulletGauge",
  "BusinessDayQ",
  "ButterflyGraph",
  "ButterworthFilterModel",
  "Button",
  "ButtonBar",
  "ButtonBox",
  "ButtonBoxOptions",
  "ButtonCell",
  "ButtonContents",
  "ButtonData",
  "ButtonEvaluator",
  "ButtonExpandable",
  "ButtonFrame",
  "ButtonFunction",
  "ButtonMargins",
  "ButtonMinHeight",
  "ButtonNote",
  "ButtonNotebook",
  "ButtonSource",
  "ButtonStyle",
  "ButtonStyleMenuListing",
  "Byte",
  "ByteArray",
  "ByteArrayFormat",
  "ByteArrayFormatQ",
  "ByteArrayQ",
  "ByteArrayToString",
  "ByteCount",
  "ByteOrdering",
  "C",
  "CachedValue",
  "CacheGraphics",
  "CachePersistence",
  "CalendarConvert",
  "CalendarData",
  "CalendarType",
  "Callout",
  "CalloutMarker",
  "CalloutStyle",
  "CallPacket",
  "CanberraDistance",
  "Cancel",
  "CancelButton",
  "CandlestickChart",
  "CanonicalGraph",
  "CanonicalizePolygon",
  "CanonicalizePolyhedron",
  "CanonicalizeRegion",
  "CanonicalName",
  "CanonicalWarpingCorrespondence",
  "CanonicalWarpingDistance",
  "CantorMesh",
  "CantorStaircase",
  "Canvas",
  "Cap",
  "CapForm",
  "CapitalDifferentialD",
  "Capitalize",
  "CapsuleShape",
  "CaptureRunning",
  "CaputoD",
  "CardinalBSplineBasis",
  "CarlemanLinearize",
  "CarlsonRC",
  "CarlsonRD",
  "CarlsonRE",
  "CarlsonRF",
  "CarlsonRG",
  "CarlsonRJ",
  "CarlsonRK",
  "CarlsonRM",
  "CarmichaelLambda",
  "CaseOrdering",
  "Cases",
  "CaseSensitive",
  "Cashflow",
  "Casoratian",
  "Cast",
  "Catalan",
  "CatalanNumber",
  "Catch",
  "CategoricalDistribution",
  "Catenate",
  "CatenateLayer",
  "CauchyDistribution",
  "CauchyMatrix",
  "CauchyPointProcess",
  "CauchyWindow",
  "CayleyGraph",
  "CDF",
  "CDFDeploy",
  "CDFInformation",
  "CDFWavelet",
  "Ceiling",
  "CelestialSystem",
  "Cell",
  "CellAutoOverwrite",
  "CellBaseline",
  "CellBoundingBox",
  "CellBracketOptions",
  "CellChangeTimes",
  "CellContents",
  "CellContext",
  "CellDingbat",
  "CellDingbatMargin",
  "CellDynamicExpression",
  "CellEditDuplicate",
  "CellElementsBoundingBox",
  "CellElementSpacings",
  "CellEpilog",
  "CellEvaluationDuplicate",
  "CellEvaluationFunction",
  "CellEvaluationLanguage",
  "CellEventActions",
  "CellFrame",
  "CellFrameColor",
  "CellFrameLabelMargins",
  "CellFrameLabels",
  "CellFrameMargins",
  "CellFrameStyle",
  "CellGroup",
  "CellGroupData",
  "CellGrouping",
  "CellGroupingRules",
  "CellHorizontalScrolling",
  "CellID",
  "CellInsertionPointCell",
  "CellLabel",
  "CellLabelAutoDelete",
  "CellLabelMargins",
  "CellLabelPositioning",
  "CellLabelStyle",
  "CellLabelTemplate",
  "CellMargins",
  "CellObject",
  "CellOpen",
  "CellPrint",
  "CellProlog",
  "Cells",
  "CellSize",
  "CellStyle",
  "CellTags",
  "CellTrayPosition",
  "CellTrayWidgets",
  "CellularAutomaton",
  "CensoredDistribution",
  "Censoring",
  "Center",
  "CenterArray",
  "CenterDot",
  "CenteredInterval",
  "CentralFeature",
  "CentralMoment",
  "CentralMomentGeneratingFunction",
  "Cepstrogram",
  "CepstrogramArray",
  "CepstrumArray",
  "CForm",
  "ChampernowneNumber",
  "ChangeOptions",
  "ChannelBase",
  "ChannelBrokerAction",
  "ChannelDatabin",
  "ChannelHistoryLength",
  "ChannelListen",
  "ChannelListener",
  "ChannelListeners",
  "ChannelListenerWait",
  "ChannelObject",
  "ChannelPreSendFunction",
  "ChannelReceiverFunction",
  "ChannelSend",
  "ChannelSubscribers",
  "ChanVeseBinarize",
  "Character",
  "CharacterCounts",
  "CharacterEncoding",
  "CharacterEncodingsPath",
  "CharacteristicFunction",
  "CharacteristicPolynomial",
  "CharacterName",
  "CharacterNormalize",
  "CharacterRange",
  "Characters",
  "ChartBaseStyle",
  "ChartElementData",
  "ChartElementDataFunction",
  "ChartElementFunction",
  "ChartElements",
  "ChartLabels",
  "ChartLayout",
  "ChartLegends",
  "ChartStyle",
  "Chebyshev1FilterModel",
  "Chebyshev2FilterModel",
  "ChebyshevDistance",
  "ChebyshevT",
  "ChebyshevU",
  "Check",
  "CheckAbort",
  "CheckAll",
  "CheckArguments",
  "Checkbox",
  "CheckboxBar",
  "CheckboxBox",
  "CheckboxBoxOptions",
  "ChemicalConvert",
  "ChemicalData",
  "ChemicalFormula",
  "ChemicalInstance",
  "ChemicalReaction",
  "ChessboardDistance",
  "ChiDistribution",
  "ChineseRemainder",
  "ChiSquareDistribution",
  "ChoiceButtons",
  "ChoiceDialog",
  "CholeskyDecomposition",
  "Chop",
  "ChromaticityPlot",
  "ChromaticityPlot3D",
  "ChromaticPolynomial",
  "Circle",
  "CircleBox",
  "CircleDot",
  "CircleMinus",
  "CirclePlus",
  "CirclePoints",
  "CircleThrough",
  "CircleTimes",
  "CirculantGraph",
  "CircularArcThrough",
  "CircularOrthogonalMatrixDistribution",
  "CircularQuaternionMatrixDistribution",
  "CircularRealMatrixDistribution",
  "CircularSymplecticMatrixDistribution",
  "CircularUnitaryMatrixDistribution",
  "Circumsphere",
  "CityData",
  "ClassifierFunction",
  "ClassifierInformation",
  "ClassifierMeasurements",
  "ClassifierMeasurementsObject",
  "Classify",
  "ClassPriors",
  "Clear",
  "ClearAll",
  "ClearAttributes",
  "ClearCookies",
  "ClearPermissions",
  "ClearSystemCache",
  "ClebschGordan",
  "ClickPane",
  "ClickToCopy",
  "ClickToCopyEnabled",
  "Clip",
  "ClipboardNotebook",
  "ClipFill",
  "ClippingStyle",
  "ClipPlanes",
  "ClipPlanesStyle",
  "ClipRange",
  "Clock",
  "ClockGauge",
  "ClockwiseContourIntegral",
  "Close",
  "Closed",
  "CloseKernels",
  "ClosenessCentrality",
  "Closing",
  "ClosingAutoSave",
  "ClosingEvent",
  "CloudAccountData",
  "CloudBase",
  "CloudConnect",
  "CloudConnections",
  "CloudDeploy",
  "CloudDirectory",
  "CloudDisconnect",
  "CloudEvaluate",
  "CloudExport",
  "CloudExpression",
  "CloudExpressions",
  "CloudFunction",
  "CloudGet",
  "CloudImport",
  "CloudLoggingData",
  "CloudObject",
  "CloudObjectInformation",
  "CloudObjectInformationData",
  "CloudObjectNameFormat",
  "CloudObjects",
  "CloudObjectURLType",
  "CloudPublish",
  "CloudPut",
  "CloudRenderingMethod",
  "CloudSave",
  "CloudShare",
  "CloudSubmit",
  "CloudSymbol",
  "CloudUnshare",
  "CloudUserID",
  "ClusterClassify",
  "ClusterDissimilarityFunction",
  "ClusteringComponents",
  "ClusteringMeasurements",
  "ClusteringTree",
  "CMYKColor",
  "Coarse",
  "CodeAssistOptions",
  "Coefficient",
  "CoefficientArrays",
  "CoefficientDomain",
  "CoefficientList",
  "CoefficientRules",
  "CoifletWavelet",
  "Collect",
  "CollinearPoints",
  "Colon",
  "ColonForm",
  "ColorBalance",
  "ColorCombine",
  "ColorConvert",
  "ColorCoverage",
  "ColorData",
  "ColorDataFunction",
  "ColorDetect",
  "ColorDistance",
  "ColorFunction",
  "ColorFunctionBinning",
  "ColorFunctionScaling",
  "Colorize",
  "ColorNegate",
  "ColorOutput",
  "ColorProfileData",
  "ColorQ",
  "ColorQuantize",
  "ColorReplace",
  "ColorRules",
  "ColorSelectorSettings",
  "ColorSeparate",
  "ColorSetter",
  "ColorSetterBox",
  "ColorSetterBoxOptions",
  "ColorSlider",
  "ColorsNear",
  "ColorSpace",
  "ColorToneMapping",
  "Column",
  "ColumnAlignments",
  "ColumnBackgrounds",
  "ColumnForm",
  "ColumnLines",
  "ColumnsEqual",
  "ColumnSpacings",
  "ColumnWidths",
  "CombinatorB",
  "CombinatorC",
  "CombinatorI",
  "CombinatorK",
  "CombinatorS",
  "CombinatorW",
  "CombinatorY",
  "CombinedEntityClass",
  "CombinerFunction",
  "CometData",
  "CommonDefaultFormatTypes",
  "Commonest",
  "CommonestFilter",
  "CommonName",
  "CommonUnits",
  "CommunityBoundaryStyle",
  "CommunityGraphPlot",
  "CommunityLabels",
  "CommunityRegionStyle",
  "CompanyData",
  "CompatibleUnitQ",
  "CompilationOptions",
  "CompilationTarget",
  "Compile",
  "Compiled",
  "CompiledCodeFunction",
  "CompiledComponent",
  "CompiledExpressionDeclaration",
  "CompiledFunction",
  "CompiledLayer",
  "CompilerCallback",
  "CompilerEnvironment",
  "CompilerEnvironmentAppend",
  "CompilerEnvironmentAppendTo",
  "CompilerEnvironmentObject",
  "CompilerOptions",
  "Complement",
  "ComplementedEntityClass",
  "CompleteGraph",
  "CompleteGraphQ",
  "CompleteIntegral",
  "CompleteKaryTree",
  "CompletionsListPacket",
  "Complex",
  "ComplexArrayPlot",
  "ComplexContourPlot",
  "Complexes",
  "ComplexExpand",
  "ComplexInfinity",
  "ComplexityFunction",
  "ComplexListPlot",
  "ComplexPlot",
  "ComplexPlot3D",
  "ComplexRegionPlot",
  "ComplexStreamPlot",
  "ComplexVectorPlot",
  "ComponentMeasurements",
  "ComponentwiseContextMenu",
  "Compose",
  "ComposeList",
  "ComposeSeries",
  "CompositeQ",
  "Composition",
  "CompoundElement",
  "CompoundExpression",
  "CompoundPoissonDistribution",
  "CompoundPoissonProcess",
  "CompoundRenewalProcess",
  "Compress",
  "CompressedData",
  "CompressionLevel",
  "ComputeUncertainty",
  "ConcaveHullMesh",
  "Condition",
  "ConditionalExpression",
  "Conditioned",
  "Cone",
  "ConeBox",
  "ConfidenceLevel",
  "ConfidenceRange",
  "ConfidenceTransform",
  "ConfigurationPath",
  "Confirm",
  "ConfirmAssert",
  "ConfirmBy",
  "ConfirmMatch",
  "ConfirmQuiet",
  "ConformationMethod",
  "ConformAudio",
  "ConformImages",
  "Congruent",
  "ConicGradientFilling",
  "ConicHullRegion",
  "ConicHullRegion3DBox",
  "ConicHullRegion3DBoxOptions",
  "ConicHullRegionBox",
  "ConicHullRegionBoxOptions",
  "ConicOptimization",
  "Conjugate",
  "ConjugateTranspose",
  "Conjunction",
  "Connect",
  "ConnectedComponents",
  "ConnectedGraphComponents",
  "ConnectedGraphQ",
  "ConnectedMeshComponents",
  "ConnectedMoleculeComponents",
  "ConnectedMoleculeQ",
  "ConnectionSettings",
  "ConnectLibraryCallbackFunction",
  "ConnectSystemModelComponents",
  "ConnectSystemModelController",
  "ConnesWindow",
  "ConoverTest",
  "ConservativeConvectionPDETerm",
  "ConsoleMessage",
  "Constant",
  "ConstantArray",
  "ConstantArrayLayer",
  "ConstantImage",
  "ConstantPlusLayer",
  "ConstantRegionQ",
  "Constants",
  "ConstantTimesLayer",
  "ConstellationData",
  "ConstrainedMax",
  "ConstrainedMin",
  "Construct",
  "Containing",
  "ContainsAll",
  "ContainsAny",
  "ContainsExactly",
  "ContainsNone",
  "ContainsOnly",
  "ContentDetectorFunction",
  "ContentFieldOptions",
  "ContentLocationFunction",
  "ContentObject",
  "ContentPadding",
  "ContentsBoundingBox",
  "ContentSelectable",
  "ContentSize",
  "Context",
  "ContextMenu",
  "Contexts",
  "ContextToFileName",
  "Continuation",
  "Continue",
  "ContinuedFraction",
  "ContinuedFractionK",
  "ContinuousAction",
  "ContinuousMarkovProcess",
  "ContinuousTask",
  "ContinuousTimeModelQ",
  "ContinuousWaveletData",
  "ContinuousWaveletTransform",
  "ContourDetect",
  "ContourGraphics",
  "ContourIntegral",
  "ContourLabels",
  "ContourLines",
  "ContourPlot",
  "ContourPlot3D",
  "Contours",
  "ContourShading",
  "ContourSmoothing",
  "ContourStyle",
  "ContraharmonicMean",
  "ContrastiveLossLayer",
  "Control",
  "ControlActive",
  "ControlAlignment",
  "ControlGroupContentsBox",
  "ControllabilityGramian",
  "ControllabilityMatrix",
  "ControllableDecomposition",
  "ControllableModelQ",
  "ControllerDuration",
  "ControllerInformation",
  "ControllerInformationData",
  "ControllerLinking",
  "ControllerManipulate",
  "ControllerMethod",
  "ControllerPath",
  "ControllerState",
  "ControlPlacement",
  "ControlsRendering",
  "ControlType",
  "ConvectionPDETerm",
  "Convergents",
  "ConversionOptions",
  "ConversionRules",
  "ConvertToPostScript",
  "ConvertToPostScriptPacket",
  "ConvexHullMesh",
  "ConvexHullRegion",
  "ConvexOptimization",
  "ConvexPolygonQ",
  "ConvexPolyhedronQ",
  "ConvexRegionQ",
  "ConvolutionLayer",
  "Convolve",
  "ConwayGroupCo1",
  "ConwayGroupCo2",
  "ConwayGroupCo3",
  "CookieFunction",
  "Cookies",
  "CoordinateBoundingBox",
  "CoordinateBoundingBoxArray",
  "CoordinateBounds",
  "CoordinateBoundsArray",
  "CoordinateChartData",
  "CoordinatesToolOptions",
  "CoordinateTransform",
  "CoordinateTransformData",
  "CoplanarPoints",
  "CoprimeQ",
  "Coproduct",
  "CopulaDistribution",
  "Copyable",
  "CopyDatabin",
  "CopyDirectory",
  "CopyFile",
  "CopyFunction",
  "CopyTag",
  "CopyToClipboard",
  "CoreNilpotentDecomposition",
  "CornerFilter",
  "CornerNeighbors",
  "Correlation",
  "CorrelationDistance",
  "CorrelationFunction",
  "CorrelationTest",
  "Cos",
  "Cosh",
  "CoshIntegral",
  "CosineDistance",
  "CosineWindow",
  "CosIntegral",
  "Cot",
  "Coth",
  "CoulombF",
  "CoulombG",
  "CoulombH1",
  "CoulombH2",
  "Count",
  "CountDistinct",
  "CountDistinctBy",
  "CounterAssignments",
  "CounterBox",
  "CounterBoxOptions",
  "CounterClockwiseContourIntegral",
  "CounterEvaluator",
  "CounterFunction",
  "CounterIncrements",
  "CounterStyle",
  "CounterStyleMenuListing",
  "CountRoots",
  "CountryData",
  "Counts",
  "CountsBy",
  "Covariance",
  "CovarianceEstimatorFunction",
  "CovarianceFunction",
  "CoxianDistribution",
  "CoxIngersollRossProcess",
  "CoxModel",
  "CoxModelFit",
  "CramerVonMisesTest",
  "CreateArchive",
  "CreateCellID",
  "CreateChannel",
  "CreateCloudExpression",
  "CreateCompilerEnvironment",
  "CreateDatabin",
  "CreateDataStructure",
  "CreateDataSystemModel",
  "CreateDialog",
  "CreateDirectory",
  "CreateDocument",
  "CreateFile",
  "CreateIntermediateDirectories",
  "CreateLicenseEntitlement",
  "CreateManagedLibraryExpression",
  "CreateNotebook",
  "CreatePacletArchive",
  "CreatePalette",
  "CreatePermissionsGroup",
  "CreateScheduledTask",
  "CreateSearchIndex",
  "CreateSystemModel",
  "CreateTemporary",
  "CreateTypeInstance",
  "CreateUUID",
  "CreateWindow",
  "CriterionFunction",
  "CriticalityFailureImportance",
  "CriticalitySuccessImportance",
  "CriticalSection",
  "Cross",
  "CrossEntropyLossLayer",
  "CrossingCount",
  "CrossingDetect",
  "CrossingPolygon",
  "CrossMatrix",
  "Csc",
  "Csch",
  "CSGRegion",
  "CSGRegionQ",
  "CSGRegionTree",
  "CTCLossLayer",
  "Cube",
  "CubeRoot",
  "Cubics",
  "Cuboid",
  "CuboidBox",
  "CuboidBoxOptions",
  "Cumulant",
  "CumulantGeneratingFunction",
  "CumulativeFeatureImpactPlot",
  "Cup",
  "CupCap",
  "Curl",
  "CurlyDoubleQuote",
  "CurlyQuote",
  "CurrencyConvert",
  "CurrentDate",
  "CurrentImage",
  "CurrentNotebookImage",
  "CurrentScreenImage",
  "CurrentValue",
  "Curry",
  "CurryApplied",
  "CurvatureFlowFilter",
  "CurveClosed",
  "Cyan",
  "CycleGraph",
  "CycleIndexPolynomial",
  "Cycles",
  "CyclicGroup",
  "Cyclotomic",
  "Cylinder",
  "CylinderBox",
  "CylinderBoxOptions",
  "CylindricalDecomposition",
  "CylindricalDecompositionFunction",
  "D",
  "DagumDistribution",
  "DamData",
  "DamerauLevenshteinDistance",
  "DampingFactor",
  "Darker",
  "Dashed",
  "Dashing",
  "DatabaseConnect",
  "DatabaseDisconnect",
  "DatabaseReference",
  "Databin",
  "DatabinAdd",
  "DatabinRemove",
  "Databins",
  "DatabinSubmit",
  "DatabinUpload",
  "DataCompression",
  "DataDistribution",
  "DataRange",
  "DataReversed",
  "Dataset",
  "DatasetDisplayPanel",
  "DatasetTheme",
  "DataStructure",
  "DataStructureQ",
  "Date",
  "DateBounds",
  "Dated",
  "DateDelimiters",
  "DateDifference",
  "DatedUnit",
  "DateFormat",
  "DateFunction",
  "DateGranularity",
  "DateHistogram",
  "DateInterval",
  "DateList",
  "DateListLogPlot",
  "DateListPlot",
  "DateListStepPlot",
  "DateObject",
  "DateObjectQ",
  "DateOverlapsQ",
  "DatePattern",
  "DatePlus",
  "DateRange",
  "DateReduction",
  "DateScale",
  "DateSelect",
  "DateString",
  "DateTicksFormat",
  "DateValue",
  "DateWithinQ",
  "DaubechiesWavelet",
  "DavisDistribution",
  "DawsonF",
  "DayCount",
  "DayCountConvention",
  "DayHemisphere",
  "DaylightQ",
  "DayMatchQ",
  "DayName",
  "DayNightTerminator",
  "DayPlus",
  "DayRange",
  "DayRound",
  "DeBruijnGraph",
  "DeBruijnSequence",
  "Debug",
  "DebugTag",
  "Decapitalize",
  "Decimal",
  "DecimalForm",
  "DeclareCompiledComponent",
  "DeclareKnownSymbols",
  "DeclarePackage",
  "Decompose",
  "DeconvolutionLayer",
  "Decrement",
  "Decrypt",
  "DecryptFile",
  "DedekindEta",
  "DeepSpaceProbeData",
  "Default",
  "Default2DTool",
  "Default3DTool",
  "DefaultAttachedCellStyle",
  "DefaultAxesStyle",
  "DefaultBaseStyle",
  "DefaultBoxStyle",
  "DefaultButton",
  "DefaultColor",
  "DefaultControlPlacement",
  "DefaultDockedCellStyle",
  "DefaultDuplicateCellStyle",
  "DefaultDuration",
  "DefaultElement",
  "DefaultFaceGridsStyle",
  "DefaultFieldHintStyle",
  "DefaultFont",
  "DefaultFontProperties",
  "DefaultFormatType",
  "DefaultFrameStyle",
  "DefaultFrameTicksStyle",
  "DefaultGridLinesStyle",
  "DefaultInlineFormatType",
  "DefaultInputFormatType",
  "DefaultLabelStyle",
  "DefaultMenuStyle",
  "DefaultNaturalLanguage",
  "DefaultNewCellStyle",
  "DefaultNewInlineCellStyle",
  "DefaultNotebook",
  "DefaultOptions",
  "DefaultOutputFormatType",
  "DefaultPrintPrecision",
  "DefaultStyle",
  "DefaultStyleDefinitions",
  "DefaultTextFormatType",
  "DefaultTextInlineFormatType",
  "DefaultTicksStyle",
  "DefaultTooltipStyle",
  "DefaultValue",
  "DefaultValues",
  "Defer",
  "DefineExternal",
  "DefineInputStreamMethod",
  "DefineOutputStreamMethod",
  "DefineResourceFunction",
  "Definition",
  "Degree",
  "DegreeCentrality",
  "DegreeGraphDistribution",
  "DegreeLexicographic",
  "DegreeReverseLexicographic",
  "DEigensystem",
  "DEigenvalues",
  "Deinitialization",
  "Del",
  "DelaunayMesh",
  "Delayed",
  "Deletable",
  "Delete",
  "DeleteAdjacentDuplicates",
  "DeleteAnomalies",
  "DeleteBorderComponents",
  "DeleteCases",
  "DeleteChannel",
  "DeleteCloudExpression",
  "DeleteContents",
  "DeleteDirectory",
  "DeleteDuplicates",
  "DeleteDuplicatesBy",
  "DeleteElements",
  "DeleteFile",
  "DeleteMissing",
  "DeleteObject",
  "DeletePermissionsKey",
  "DeleteSearchIndex",
  "DeleteSmallComponents",
  "DeleteStopwords",
  "DeleteWithContents",
  "DeletionWarning",
  "DelimitedArray",
  "DelimitedSequence",
  "Delimiter",
  "DelimiterAutoMatching",
  "DelimiterFlashTime",
  "DelimiterMatching",
  "Delimiters",
  "DeliveryFunction",
  "Dendrogram",
  "Denominator",
  "DensityGraphics",
  "DensityHistogram",
  "DensityPlot",
  "DensityPlot3D",
  "DependentVariables",
  "Deploy",
  "Deployed",
  "Depth",
  "DepthFirstScan",
  "Derivative",
  "DerivativeFilter",
  "DerivativePDETerm",
  "DerivedKey",
  "DescriptorStateSpace",
  "DesignMatrix",
  "DestroyAfterEvaluation",
  "Det",
  "DeviceClose",
  "DeviceConfigure",
  "DeviceExecute",
  "DeviceExecuteAsynchronous",
  "DeviceObject",
  "DeviceOpen",
  "DeviceOpenQ",
  "DeviceRead",
  "DeviceReadBuffer",
  "DeviceReadLatest",
  "DeviceReadList",
  "DeviceReadTimeSeries",
  "Devices",
  "DeviceStreams",
  "DeviceWrite",
  "DeviceWriteBuffer",
  "DGaussianWavelet",
  "DiacriticalPositioning",
  "Diagonal",
  "DiagonalizableMatrixQ",
  "DiagonalMatrix",
  "DiagonalMatrixQ",
  "Dialog",
  "DialogIndent",
  "DialogInput",
  "DialogLevel",
  "DialogNotebook",
  "DialogProlog",
  "DialogReturn",
  "DialogSymbols",
  "Diamond",
  "DiamondMatrix",
  "DiceDissimilarity",
  "DictionaryLookup",
  "DictionaryWordQ",
  "DifferenceDelta",
  "DifferenceOrder",
  "DifferenceQuotient",
  "DifferenceRoot",
  "DifferenceRootReduce",
  "Differences",
  "DifferentialD",
  "DifferentialRoot",
  "DifferentialRootReduce",
  "DifferentiatorFilter",
  "DiffusionPDETerm",
  "DiggleGatesPointProcess",
  "DiggleGrattonPointProcess",
  "DigitalSignature",
  "DigitBlock",
  "DigitBlockMinimum",
  "DigitCharacter",
  "DigitCount",
  "DigitQ",
  "DihedralAngle",
  "DihedralGroup",
  "Dilation",
  "DimensionalCombinations",
  "DimensionalMeshComponents",
  "DimensionReduce",
  "DimensionReducerFunction",
  "DimensionReduction",
  "Dimensions",
  "DiracComb",
  "DiracDelta",
  "DirectedEdge",
  "DirectedEdges",
  "DirectedGraph",
  "DirectedGraphQ",
  "DirectedInfinity",
  "Direction",
  "DirectionalLight",
  "Directive",
  "Directory",
  "DirectoryName",
  "DirectoryQ",
  "DirectoryStack",
  "DirichletBeta",
  "DirichletCharacter",
  "DirichletCondition",
  "DirichletConvolve",
  "DirichletDistribution",
  "DirichletEta",
  "DirichletL",
  "DirichletLambda",
  "DirichletTransform",
  "DirichletWindow",
  "DisableConsolePrintPacket",
  "DisableFormatting",
  "DiscreteAsymptotic",
  "DiscreteChirpZTransform",
  "DiscreteConvolve",
  "DiscreteDelta",
  "DiscreteHadamardTransform",
  "DiscreteIndicator",
  "DiscreteInputOutputModel",
  "DiscreteLimit",
  "DiscreteLQEstimatorGains",
  "DiscreteLQRegulatorGains",
  "DiscreteLyapunovSolve",
  "DiscreteMarkovProcess",
  "DiscreteMaxLimit",
  "DiscreteMinLimit",
  "DiscretePlot",
  "DiscretePlot3D",
  "DiscreteRatio",
  "DiscreteRiccatiSolve",
  "DiscreteShift",
  "DiscreteTimeModelQ",
  "DiscreteUniformDistribution",
  "DiscreteVariables",
  "DiscreteWaveletData",
  "DiscreteWaveletPacketTransform",
  "DiscreteWaveletTransform",
  "DiscretizeGraphics",
  "DiscretizeRegion",
  "Discriminant",
  "DisjointQ",
  "Disjunction",
  "Disk",
  "DiskBox",
  "DiskBoxOptions",
  "DiskMatrix",
  "DiskSegment",
  "Dispatch",
  "DispatchQ",
  "DispersionEstimatorFunction",
  "Display",
  "DisplayAllSteps",
  "DisplayEndPacket",
  "DisplayForm",
  "DisplayFunction",
  "DisplayPacket",
  "DisplayRules",
  "DisplayString",
  "DisplayTemporary",
  "DisplayWith",
  "DisplayWithRef",
  "DisplayWithVariable",
  "DistanceFunction",
  "DistanceMatrix",
  "DistanceTransform",
  "Distribute",
  "Distributed",
  "DistributedContexts",
  "DistributeDefinitions",
  "DistributionChart",
  "DistributionDomain",
  "DistributionFitTest",
  "DistributionParameterAssumptions",
  "DistributionParameterQ",
  "Dithering",
  "Div",
  "Divergence",
  "Divide",
  "DivideBy",
  "Dividers",
  "DivideSides",
  "Divisible",
  "Divisors",
  "DivisorSigma",
  "DivisorSum",
  "DMSList",
  "DMSString",
  "Do",
  "DockedCell",
  "DockedCells",
  "DocumentGenerator",
  "DocumentGeneratorInformation",
  "DocumentGeneratorInformationData",
  "DocumentGenerators",
  "DocumentNotebook",
  "DocumentWeightingRules",
  "Dodecahedron",
  "DomainRegistrationInformation",
  "DominantColors",
  "DominatorTreeGraph",
  "DominatorVertexList",
  "DOSTextFormat",
  "Dot",
  "DotDashed",
  "DotEqual",
  "DotLayer",
  "DotPlusLayer",
  "Dotted",
  "DoubleBracketingBar",
  "DoubleContourIntegral",
  "DoubleDownArrow",
  "DoubleLeftArrow",
  "DoubleLeftRightArrow",
  "DoubleLeftTee",
  "DoubleLongLeftArrow",
  "DoubleLongLeftRightArrow",
  "DoubleLongRightArrow",
  "DoubleRightArrow",
  "DoubleRightTee",
  "DoubleUpArrow",
  "DoubleUpDownArrow",
  "DoubleVerticalBar",
  "DoublyInfinite",
  "Down",
  "DownArrow",
  "DownArrowBar",
  "DownArrowUpArrow",
  "DownLeftRightVector",
  "DownLeftTeeVector",
  "DownLeftVector",
  "DownLeftVectorBar",
  "DownRightTeeVector",
  "DownRightVector",
  "DownRightVectorBar",
  "Downsample",
  "DownTee",
  "DownTeeArrow",
  "DownValues",
  "DownValuesFunction",
  "DragAndDrop",
  "DrawBackFaces",
  "DrawEdges",
  "DrawFrontFaces",
  "DrawHighlighted",
  "DrazinInverse",
  "Drop",
  "DropoutLayer",
  "DropShadowing",
  "DSolve",
  "DSolveChangeVariables",
  "DSolveValue",
  "Dt",
  "DualLinearProgramming",
  "DualPlanarGraph",
  "DualPolyhedron",
  "DualSystemsModel",
  "DumpGet",
  "DumpSave",
  "DuplicateFreeQ",
  "Duration",
  "Dynamic",
  "DynamicBox",
  "DynamicBoxOptions",
  "DynamicEvaluationTimeout",
  "DynamicGeoGraphics",
  "DynamicImage",
  "DynamicLocation",
  "DynamicModule",
  "DynamicModuleBox",
  "DynamicModuleBoxOptions",
  "DynamicModuleParent",
  "DynamicModuleValues",
  "DynamicName",
  "DynamicNamespace",
  "DynamicReference",
  "DynamicSetting",
  "DynamicUpdating",
  "DynamicWrapper",
  "DynamicWrapperBox",
  "DynamicWrapperBoxOptions",
  "E",
  "EarthImpactData",
  "EarthquakeData",
  "EccentricityCentrality",
  "Echo",
  "EchoEvaluation",
  "EchoFunction",
  "EchoLabel",
  "EchoTiming",
  "EclipseType",
  "EdgeAdd",
  "EdgeBetweennessCentrality",
  "EdgeCapacity",
  "EdgeCapForm",
  "EdgeChromaticNumber",
  "EdgeColor",
  "EdgeConnectivity",
  "EdgeContract",
  "EdgeCost",
  "EdgeCount",
  "EdgeCoverQ",
  "EdgeCycleMatrix",
  "EdgeDashing",
  "EdgeDelete",
  "EdgeDetect",
  "EdgeForm",
  "EdgeIndex",
  "EdgeJoinForm",
  "EdgeLabeling",
  "EdgeLabels",
  "EdgeLabelStyle",
  "EdgeList",
  "EdgeOpacity",
  "EdgeQ",
  "EdgeRenderingFunction",
  "EdgeRules",
  "EdgeShapeFunction",
  "EdgeStyle",
  "EdgeTaggedGraph",
  "EdgeTaggedGraphQ",
  "EdgeTags",
  "EdgeThickness",
  "EdgeTransitiveGraphQ",
  "EdgeValueRange",
  "EdgeValueSizes",
  "EdgeWeight",
  "EdgeWeightedGraphQ",
  "Editable",
  "EditButtonSettings",
  "EditCellTagsSettings",
  "EditDistance",
  "EffectiveInterest",
  "Eigensystem",
  "Eigenvalues",
  "EigenvectorCentrality",
  "Eigenvectors",
  "Element",
  "ElementData",
  "ElementwiseLayer",
  "ElidedForms",
  "Eliminate",
  "EliminationOrder",
  "Ellipsoid",
  "EllipticE",
  "EllipticExp",
  "EllipticExpPrime",
  "EllipticF",
  "EllipticFilterModel",
  "EllipticK",
  "EllipticLog",
  "EllipticNomeQ",
  "EllipticPi",
  "EllipticReducedHalfPeriods",
  "EllipticTheta",
  "EllipticThetaPrime",
  "EmbedCode",
  "EmbeddedHTML",
  "EmbeddedService",
  "EmbeddedSQLEntityClass",
  "EmbeddedSQLExpression",
  "EmbeddingLayer",
  "EmbeddingObject",
  "EmitSound",
  "EmphasizeSyntaxErrors",
  "EmpiricalDistribution",
  "Empty",
  "EmptyGraphQ",
  "EmptyRegion",
  "EmptySpaceF",
  "EnableConsolePrintPacket",
  "Enabled",
  "Enclose",
  "Encode",
  "Encrypt",
  "EncryptedObject",
  "EncryptFile",
  "End",
  "EndAdd",
  "EndDialogPacket",
  "EndOfBuffer",
  "EndOfFile",
  "EndOfLine",
  "EndOfString",
  "EndPackage",
  "EngineEnvironment",
  "EngineeringForm",
  "Enter",
  "EnterExpressionPacket",
  "EnterTextPacket",
  "Entity",
  "EntityClass",
  "EntityClassList",
  "EntityCopies",
  "EntityFunction",
  "EntityGroup",
  "EntityInstance",
  "EntityList",
  "EntityPrefetch",
  "EntityProperties",
  "EntityProperty",
  "EntityPropertyClass",
  "EntityRegister",
  "EntityStore",
  "EntityStores",
  "EntityTypeName",
  "EntityUnregister",
  "EntityValue",
  "Entropy",
  "EntropyFilter",
  "Environment",
  "Epilog",
  "EpilogFunction",
  "Equal",
  "EqualColumns",
  "EqualRows",
  "EqualTilde",
  "EqualTo",
  "EquatedTo",
  "Equilibrium",
  "EquirippleFilterKernel",
  "Equivalent",
  "Erf",
  "Erfc",
  "Erfi",
  "ErlangB",
  "ErlangC",
  "ErlangDistribution",
  "Erosion",
  "ErrorBox",
  "ErrorBoxOptions",
  "ErrorNorm",
  "ErrorPacket",
  "ErrorsDialogSettings",
  "EscapeRadius",
  "EstimatedBackground",
  "EstimatedDistribution",
  "EstimatedPointNormals",
  "EstimatedPointProcess",
  "EstimatedProcess",
  "EstimatedVariogramModel",
  "EstimatorGains",
  "EstimatorRegulator",
  "EuclideanDistance",
  "EulerAngles",
  "EulerCharacteristic",
  "EulerE",
  "EulerGamma",
  "EulerianGraphQ",
  "EulerMatrix",
  "EulerPhi",
  "Evaluatable",
  "Evaluate",
  "Evaluated",
  "EvaluatePacket",
  "EvaluateScheduledTask",
  "EvaluationBox",
  "EvaluationCell",
  "EvaluationCompletionAction",
  "EvaluationData",
  "EvaluationElements",
  "EvaluationEnvironment",
  "EvaluationMode",
  "EvaluationMonitor",
  "EvaluationNotebook",
  "EvaluationObject",
  "EvaluationOrder",
  "EvaluationPrivileges",
  "EvaluationRateLimit",
  "Evaluator",
  "EvaluatorNames",
  "EvenQ",
  "EventData",
  "EventEvaluator",
  "EventHandler",
  "EventHandlerTag",
  "EventLabels",
  "EventSeries",
  "ExactBlackmanWindow",
  "ExactNumberQ",
  "ExactRootIsolation",
  "ExampleData",
  "Except",
  "ExcludedContexts",
  "ExcludedForms",
  "ExcludedLines",
  "ExcludedPhysicalQuantities",
  "ExcludePods",
  "Exclusions",
  "ExclusionsStyle",
  "Exists",
  "Exit",
  "ExitDialog",
  "ExoplanetData",
  "Exp",
  "Expand",
  "ExpandAll",
  "ExpandDenominator",
  "ExpandFileName",
  "ExpandNumerator",
  "Expectation",
  "ExpectationE",
  "ExpectedValue",
  "ExpGammaDistribution",
  "ExpIntegralE",
  "ExpIntegralEi",
  "ExpirationDate",
  "Exponent",
  "ExponentFunction",
  "ExponentialDistribution",
  "ExponentialFamily",
  "ExponentialGeneratingFunction",
  "ExponentialMovingAverage",
  "ExponentialPowerDistribution",
  "ExponentPosition",
  "ExponentStep",
  "Export",
  "ExportAutoReplacements",
  "ExportByteArray",
  "ExportForm",
  "ExportPacket",
  "ExportString",
  "Expression",
  "ExpressionCell",
  "ExpressionGraph",
  "ExpressionPacket",
  "ExpressionTree",
  "ExpressionUUID",
  "ExpToTrig",
  "ExtendedEntityClass",
  "ExtendedGCD",
  "Extension",
  "ExtentElementFunction",
  "ExtentMarkers",
  "ExtentSize",
  "ExternalBundle",
  "ExternalCall",
  "ExternalDataCharacterEncoding",
  "ExternalEvaluate",
  "ExternalFunction",
  "ExternalFunctionName",
  "ExternalIdentifier",
  "ExternalObject",
  "ExternalOptions",
  "ExternalSessionObject",
  "ExternalSessions",
  "ExternalStorageBase",
  "ExternalStorageDownload",
  "ExternalStorageGet",
  "ExternalStorageObject",
  "ExternalStoragePut",
  "ExternalStorageUpload",
  "ExternalTypeSignature",
  "ExternalValue",
  "Extract",
  "ExtractArchive",
  "ExtractLayer",
  "ExtractPacletArchive",
  "ExtremeValueDistribution",
  "FaceAlign",
  "FaceForm",
  "FaceGrids",
  "FaceGridsStyle",
  "FaceRecognize",
  "FacialFeatures",
  "Factor",
  "FactorComplete",
  "Factorial",
  "Factorial2",
  "FactorialMoment",
  "FactorialMomentGeneratingFunction",
  "FactorialPower",
  "FactorInteger",
  "FactorList",
  "FactorSquareFree",
  "FactorSquareFreeList",
  "FactorTerms",
  "FactorTermsList",
  "Fail",
  "Failure",
  "FailureAction",
  "FailureDistribution",
  "FailureQ",
  "False",
  "FareySequence",
  "FARIMAProcess",
  "FeatureDistance",
  "FeatureExtract",
  "FeatureExtraction",
  "FeatureExtractor",
  "FeatureExtractorFunction",
  "FeatureImpactPlot",
  "FeatureNames",
  "FeatureNearest",
  "FeatureSpacePlot",
  "FeatureSpacePlot3D",
  "FeatureTypes",
  "FeatureValueDependencyPlot",
  "FeatureValueImpactPlot",
  "FEDisableConsolePrintPacket",
  "FeedbackLinearize",
  "FeedbackSector",
  "FeedbackSectorStyle",
  "FeedbackType",
  "FEEnableConsolePrintPacket",
  "FetalGrowthData",
  "Fibonacci",
  "Fibonorial",
  "FieldCompletionFunction",
  "FieldHint",
  "FieldHintStyle",
  "FieldMasked",
  "FieldSize",
  "File",
  "FileBaseName",
  "FileByteCount",
  "FileConvert",
  "FileDate",
  "FileExistsQ",
  "FileExtension",
  "FileFormat",
  "FileFormatProperties",
  "FileFormatQ",
  "FileHandler",
  "FileHash",
  "FileInformation",
  "FileName",
  "FileNameDepth",
  "FileNameDialogSettings",
  "FileNameDrop",
  "FileNameForms",
  "FileNameJoin",
  "FileNames",
  "FileNameSetter",
  "FileNameSplit",
  "FileNameTake",
  "FileNameToFormatList",
  "FilePrint",
  "FileSize",
  "FileSystemMap",
  "FileSystemScan",
  "FileSystemTree",
  "FileTemplate",
  "FileTemplateApply",
  "FileType",
  "FilledCurve",
  "FilledCurveBox",
  "FilledCurveBoxOptions",
  "FilledTorus",
  "FillForm",
  "Filling",
  "FillingStyle",
  "FillingTransform",
  "FilteredEntityClass",
  "FilterRules",
  "FinancialBond",
  "FinancialData",
  "FinancialDerivative",
  "FinancialIndicator",
  "Find",
  "FindAnomalies",
  "FindArgMax",
  "FindArgMin",
  "FindChannels",
  "FindClique",
  "FindClusters",
  "FindCookies",
  "FindCurvePath",
  "FindCycle",
  "FindDevices",
  "FindDistribution",
  "FindDistributionParameters",
  "FindDivisions",
  "FindEdgeColoring",
  "FindEdgeCover",
  "FindEdgeCut",
  "FindEdgeIndependentPaths",
  "FindEquationalProof",
  "FindEulerianCycle",
  "FindExternalEvaluators",
  "FindFaces",
  "FindFile",
  "FindFit",
  "FindFormula",
  "FindFundamentalCycles",
  "FindGeneratingFunction",
  "FindGeoLocation",
  "FindGeometricConjectures",
  "FindGeometricTransform",
  "FindGraphCommunities",
  "FindGraphIsomorphism",
  "FindGraphPartition",
  "FindHamiltonianCycle",
  "FindHamiltonianPath",
  "FindHiddenMarkovStates",
  "FindImageText",
  "FindIndependentEdgeSet",
  "FindIndependentVertexSet",
  "FindInstance",
  "FindIntegerNullVector",
  "FindIsomers",
  "FindIsomorphicSubgraph",
  "FindKClan",
  "FindKClique",
  "FindKClub",
  "FindKPlex",
  "FindLibrary",
  "FindLinearRecurrence",
  "FindList",
  "FindMatchingColor",
  "FindMaximum",
  "FindMaximumCut",
  "FindMaximumFlow",
  "FindMaxValue",
  "FindMeshDefects",
  "FindMinimum",
  "FindMinimumCostFlow",
  "FindMinimumCut",
  "FindMinValue",
  "FindMoleculeSubstructure",
  "FindPath",
  "FindPeaks",
  "FindPermutation",
  "FindPlanarColoring",
  "FindPointProcessParameters",
  "FindPostmanTour",
  "FindProcessParameters",
  "FindRegionTransform",
  "FindRepeat",
  "FindRoot",
  "FindSequenceFunction",
  "FindSettings",
  "FindShortestPath",
  "FindShortestTour",
  "FindSpanningTree",
  "FindSubgraphIsomorphism",
  "FindSystemModelEquilibrium",
  "FindTextualAnswer",
  "FindThreshold",
  "FindTransientRepeat",
  "FindVertexColoring",
  "FindVertexCover",
  "FindVertexCut",
  "FindVertexIndependentPaths",
  "Fine",
  "FinishDynamic",
  "FiniteAbelianGroupCount",
  "FiniteGroupCount",
  "FiniteGroupData",
  "First",
  "FirstCase",
  "FirstPassageTimeDistribution",
  "FirstPosition",
  "FischerGroupFi22",
  "FischerGroupFi23",
  "FischerGroupFi24Prime",
  "FisherHypergeometricDistribution",
  "FisherRatioTest",
  "FisherZDistribution",
  "Fit",
  "FitAll",
  "FitRegularization",
  "FittedModel",
  "FixedOrder",
  "FixedPoint",
  "FixedPointList",
  "FlashSelection",
  "Flat",
  "FlatShading",
  "Flatten",
  "FlattenAt",
  "FlattenLayer",
  "FlatTopWindow",
  "FlightData",
  "FlipView",
  "Floor",
  "FlowPolynomial",
  "Fold",
  "FoldList",
  "FoldPair",
  "FoldPairList",
  "FoldWhile",
  "FoldWhileList",
  "FollowRedirects",
  "Font",
  "FontColor",
  "FontFamily",
  "FontForm",
  "FontName",
  "FontOpacity",
  "FontPostScriptName",
  "FontProperties",
  "FontReencoding",
  "FontSize",
  "FontSlant",
  "FontSubstitutions",
  "FontTracking",
  "FontVariations",
  "FontWeight",
  "For",
  "ForAll",
  "ForAllType",
  "ForceVersionInstall",
  "Format",
  "FormatRules",
  "FormatType",
  "FormatTypeAutoConvert",
  "FormatValues",
  "FormBox",
  "FormBoxOptions",
  "FormControl",
  "FormFunction",
  "FormLayoutFunction",
  "FormObject",
  "FormPage",
  "FormProtectionMethod",
  "FormTheme",
  "FormulaData",
  "FormulaLookup",
  "FortranForm",
  "Forward",
  "ForwardBackward",
  "ForwardCloudCredentials",
  "Fourier",
  "FourierCoefficient",
  "FourierCosCoefficient",
  "FourierCosSeries",
  "FourierCosTransform",
  "FourierDCT",
  "FourierDCTFilter",
  "FourierDCTMatrix",
  "FourierDST",
  "FourierDSTMatrix",
  "FourierMatrix",
  "FourierParameters",
  "FourierSequenceTransform",
  "FourierSeries",
  "FourierSinCoefficient",
  "FourierSinSeries",
  "FourierSinTransform",
  "FourierTransform",
  "FourierTrigSeries",
  "FoxH",
  "FoxHReduce",
  "FractionalBrownianMotionProcess",
  "FractionalD",
  "FractionalGaussianNoiseProcess",
  "FractionalPart",
  "FractionBox",
  "FractionBoxOptions",
  "FractionLine",
  "Frame",
  "FrameBox",
  "FrameBoxOptions",
  "Framed",
  "FrameInset",
  "FrameLabel",
  "Frameless",
  "FrameListVideo",
  "FrameMargins",
  "FrameRate",
  "FrameStyle",
  "FrameTicks",
  "FrameTicksStyle",
  "FRatioDistribution",
  "FrechetDistribution",
  "FreeQ",
  "FrenetSerretSystem",
  "FrequencySamplingFilterKernel",
  "FresnelC",
  "FresnelF",
  "FresnelG",
  "FresnelS",
  "Friday",
  "FrobeniusNumber",
  "FrobeniusSolve",
  "FromAbsoluteTime",
  "FromCharacterCode",
  "FromCoefficientRules",
  "FromContinuedFraction",
  "FromDate",
  "FromDateString",
  "FromDigits",
  "FromDMS",
  "FromEntity",
  "FromJulianDate",
  "FromLetterNumber",
  "FromPolarCoordinates",
  "FromRawPointer",
  "FromRomanNumeral",
  "FromSphericalCoordinates",
  "FromUnixTime",
  "Front",
  "FrontEndDynamicExpression",
  "FrontEndEventActions",
  "FrontEndExecute",
  "FrontEndObject",
  "FrontEndResource",
  "FrontEndResourceString",
  "FrontEndStackSize",
  "FrontEndToken",
  "FrontEndTokenExecute",
  "FrontEndValueCache",
  "FrontEndVersion",
  "FrontFaceColor",
  "FrontFaceGlowColor",
  "FrontFaceOpacity",
  "FrontFaceSpecularColor",
  "FrontFaceSpecularExponent",
  "FrontFaceSurfaceAppearance",
  "FrontFaceTexture",
  "Full",
  "FullAxes",
  "FullDefinition",
  "FullForm",
  "FullGraphics",
  "FullInformationOutputRegulator",
  "FullOptions",
  "FullRegion",
  "FullSimplify",
  "Function",
  "FunctionAnalytic",
  "FunctionBijective",
  "FunctionCompile",
  "FunctionCompileExport",
  "FunctionCompileExportByteArray",
  "FunctionCompileExportLibrary",
  "FunctionCompileExportString",
  "FunctionContinuous",
  "FunctionConvexity",
  "FunctionDeclaration",
  "FunctionDiscontinuities",
  "FunctionDomain",
  "FunctionExpand",
  "FunctionInjective",
  "FunctionInterpolation",
  "FunctionLayer",
  "FunctionMeromorphic",
  "FunctionMonotonicity",
  "FunctionPeriod",
  "FunctionPoles",
  "FunctionRange",
  "FunctionSign",
  "FunctionSingularities",
  "FunctionSpace",
  "FunctionSurjective",
  "FussellVeselyImportance",
  "GaborFilter",
  "GaborMatrix",
  "GaborWavelet",
  "GainMargins",
  "GainPhaseMargins",
  "GalaxyData",
  "GalleryView",
  "Gamma",
  "GammaDistribution",
  "GammaRegularized",
  "GapPenalty",
  "GARCHProcess",
  "GatedRecurrentLayer",
  "Gather",
  "GatherBy",
  "GaugeFaceElementFunction",
  "GaugeFaceStyle",
  "GaugeFrameElementFunction",
  "GaugeFrameSize",
  "GaugeFrameStyle",
  "GaugeLabels",
  "GaugeMarkers",
  "GaugeStyle",
  "GaussianFilter",
  "GaussianIntegers",
  "GaussianMatrix",
  "GaussianOrthogonalMatrixDistribution",
  "GaussianSymplecticMatrixDistribution",
  "GaussianUnitaryMatrixDistribution",
  "GaussianWindow",
  "GCD",
  "GegenbauerC",
  "General",
  "GeneralizedLinearModelFit",
  "GenerateAsymmetricKeyPair",
  "GenerateConditions",
  "GeneratedAssetFormat",
  "GeneratedAssetLocation",
  "GeneratedCell",
  "GeneratedCellStyles",
  "GeneratedDocumentBinding",
  "GenerateDerivedKey",
  "GenerateDigitalSignature",
  "GenerateDocument",
  "GeneratedParameters",
  "GeneratedQuantityMagnitudes",
  "GenerateFileSignature",
  "GenerateHTTPResponse",
  "GenerateSecuredAuthenticationKey",
  "GenerateSymmetricKey",
  "GeneratingFunction",
  "GeneratorDescription",
  "GeneratorHistoryLength",
  "GeneratorOutputType",
  "Generic",
  "GenericCylindricalDecomposition",
  "GenomeData",
  "GenomeLookup",
  "GeoAntipode",
  "GeoArea",
  "GeoArraySize",
  "GeoBackground",
  "GeoBoundary",
  "GeoBoundingBox",
  "GeoBounds",
  "GeoBoundsRegion",
  "GeoBoundsRegionBoundary",
  "GeoBubbleChart",
  "GeoCenter",
  "GeoCircle",
  "GeoContourPlot",
  "GeoDensityPlot",
  "GeodesicClosing",
  "GeodesicDilation",
  "GeodesicErosion",
  "GeodesicOpening",
  "GeodesicPolyhedron",
  "GeoDestination",
  "GeodesyData",
  "GeoDirection",
  "GeoDisk",
  "GeoDisplacement",
  "GeoDistance",
  "GeoDistanceList",
  "GeoElevationData",
  "GeoEntities",
  "GeoGraphics",
  "GeoGraphPlot",
  "GeoGraphValuePlot",
  "GeogravityModelData",
  "GeoGridDirectionDifference",
  "GeoGridLines",
  "GeoGridLinesStyle",
  "GeoGridPosition",
  "GeoGridRange",
  "GeoGridRangePadding",
  "GeoGridUnitArea",
  "GeoGridUnitDistance",
  "GeoGridVector",
  "GeoGroup",
  "GeoHemisphere",
  "GeoHemisphereBoundary",
  "GeoHistogram",
  "GeoIdentify",
  "GeoImage",
  "GeoLabels",
  "GeoLength",
  "GeoListPlot",
  "GeoLocation",
  "GeologicalPeriodData",
  "GeomagneticModelData",
  "GeoMarker",
  "GeometricAssertion",
  "GeometricBrownianMotionProcess",
  "GeometricDistribution",
  "GeometricMean",
  "GeometricMeanFilter",
  "GeometricOptimization",
  "GeometricScene",
  "GeometricStep",
  "GeometricStylingRules",
  "GeometricTest",
  "GeometricTransformation",
  "GeometricTransformation3DBox",
  "GeometricTransformation3DBoxOptions",
  "GeometricTransformationBox",
  "GeometricTransformationBoxOptions",
  "GeoModel",
  "GeoNearest",
  "GeoOrientationData",
  "GeoPath",
  "GeoPolygon",
  "GeoPosition",
  "GeoPositionENU",
  "GeoPositionXYZ",
  "GeoProjection",
  "GeoProjectionData",
  "GeoRange",
  "GeoRangePadding",
  "GeoRegionValuePlot",
  "GeoResolution",
  "GeoScaleBar",
  "GeoServer",
  "GeoSmoothHistogram",
  "GeoStreamPlot",
  "GeoStyling",
  "GeoStylingImageFunction",
  "GeoVariant",
  "GeoVector",
  "GeoVectorENU",
  "GeoVectorPlot",
  "GeoVectorXYZ",
  "GeoVisibleRegion",
  "GeoVisibleRegionBoundary",
  "GeoWithinQ",
  "GeoZoomLevel",
  "GestureHandler",
  "GestureHandlerTag",
  "Get",
  "GetContext",
  "GetEnvironment",
  "GetFileName",
  "GetLinebreakInformationPacket",
  "GibbsPointProcess",
  "Glaisher",
  "GlobalClusteringCoefficient",
  "GlobalPreferences",
  "GlobalSession",
  "Glow",
  "GoldenAngle",
  "GoldenRatio",
  "GompertzMakehamDistribution",
  "GoochShading",
  "GoodmanKruskalGamma",
  "GoodmanKruskalGammaTest",
  "Goto",
  "GouraudShading",
  "Grad",
  "Gradient",
  "GradientFilter",
  "GradientFittedMesh",
  "GradientOrientationFilter",
  "GrammarApply",
  "GrammarRules",
  "GrammarToken",
  "Graph",
  "Graph3D",
  "GraphAssortativity",
  "GraphAutomorphismGroup",
  "GraphCenter",
  "GraphComplement",
  "GraphData",
  "GraphDensity",
  "GraphDiameter",
  "GraphDifference",
  "GraphDisjointUnion",
  "GraphDistance",
  "GraphDistanceMatrix",
  "GraphEmbedding",
  "GraphHighlight",
  "GraphHighlightStyle",
  "GraphHub",
  "Graphics",
  "Graphics3D",
  "Graphics3DBox",
  "Graphics3DBoxOptions",
  "GraphicsArray",
  "GraphicsBaseline",
  "GraphicsBox",
  "GraphicsBoxOptions",
  "GraphicsColor",
  "GraphicsColumn",
  "GraphicsComplex",
  "GraphicsComplex3DBox",
  "GraphicsComplex3DBoxOptions",
  "GraphicsComplexBox",
  "GraphicsComplexBoxOptions",
  "GraphicsContents",
  "GraphicsData",
  "GraphicsGrid",
  "GraphicsGridBox",
  "GraphicsGroup",
  "GraphicsGroup3DBox",
  "GraphicsGroup3DBoxOptions",
  "GraphicsGroupBox",
  "GraphicsGroupBoxOptions",
  "GraphicsGrouping",
  "GraphicsHighlightColor",
  "GraphicsRow",
  "GraphicsSpacing",
  "GraphicsStyle",
  "GraphIntersection",
  "GraphJoin",
  "GraphLayerLabels",
  "GraphLayers",
  "GraphLayerStyle",
  "GraphLayout",
  "GraphLinkEfficiency",
  "GraphPeriphery",
  "GraphPlot",
  "GraphPlot3D",
  "GraphPower",
  "GraphProduct",
  "GraphPropertyDistribution",
  "GraphQ",
  "GraphRadius",
  "GraphReciprocity",
  "GraphRoot",
  "GraphStyle",
  "GraphSum",
  "GraphTree",
  "GraphUnion",
  "Gray",
  "GrayLevel",
  "Greater",
  "GreaterEqual",
  "GreaterEqualLess",
  "GreaterEqualThan",
  "GreaterFullEqual",
  "GreaterGreater",
  "GreaterLess",
  "GreaterSlantEqual",
  "GreaterThan",
  "GreaterTilde",
  "GreekStyle",
  "Green",
  "GreenFunction",
  "Grid",
  "GridBaseline",
  "GridBox",
  "GridBoxAlignment",
  "GridBoxBackground",
  "GridBoxDividers",
  "GridBoxFrame",
  "GridBoxItemSize",
  "GridBoxItemStyle",
  "GridBoxOptions",
  "GridBoxSpacings",
  "GridCreationSettings",
  "GridDefaultElement",
  "GridElementStyleOptions",
  "GridFrame",
  "GridFrameMargins",
  "GridGraph",
  "GridLines",
  "GridLinesStyle",
  "GridVideo",
  "GroebnerBasis",
  "GroupActionBase",
  "GroupBy",
  "GroupCentralizer",
  "GroupElementFromWord",
  "GroupElementPosition",
  "GroupElementQ",
  "GroupElements",
  "GroupElementToWord",
  "GroupGenerators",
  "Groupings",
  "GroupMultiplicationTable",
  "GroupOpenerColor",
  "GroupOpenerInsideFrame",
  "GroupOrbits",
  "GroupOrder",
  "GroupPageBreakWithin",
  "GroupSetwiseStabilizer",
  "GroupStabilizer",
  "GroupStabilizerChain",
  "GroupTogetherGrouping",
  "GroupTogetherNestedGrouping",
  "GrowCutComponents",
  "Gudermannian",
  "GuidedFilter",
  "GumbelDistribution",
  "HaarWavelet",
  "HadamardMatrix",
  "HalfLine",
  "HalfNormalDistribution",
  "HalfPlane",
  "HalfSpace",
  "HalftoneShading",
  "HamiltonianGraphQ",
  "HammingDistance",
  "HammingWindow",
  "HandlerFunctions",
  "HandlerFunctionsKeys",
  "HankelH1",
  "HankelH2",
  "HankelMatrix",
  "HankelTransform",
  "HannPoissonWindow",
  "HannWindow",
  "HaradaNortonGroupHN",
  "HararyGraph",
  "HardcorePointProcess",
  "HarmonicMean",
  "HarmonicMeanFilter",
  "HarmonicNumber",
  "Hash",
  "HatchFilling",
  "HatchShading",
  "Haversine",
  "HazardFunction",
  "Head",
  "HeadCompose",
  "HeaderAlignment",
  "HeaderBackground",
  "HeaderDisplayFunction",
  "HeaderLines",
  "Headers",
  "HeaderSize",
  "HeaderStyle",
  "Heads",
  "HeatFluxValue",
  "HeatInsulationValue",
  "HeatOutflowValue",
  "HeatRadiationValue",
  "HeatSymmetryValue",
  "HeatTemperatureCondition",
  "HeatTransferPDEComponent",
  "HeatTransferValue",
  "HeavisideLambda",
  "HeavisidePi",
  "HeavisideTheta",
  "HeldGroupHe",
  "HeldPart",
  "HelmholtzPDEComponent",
  "HelpBrowserLookup",
  "HelpBrowserNotebook",
  "HelpBrowserSettings",
  "HelpViewerSettings",
  "Here",
  "HermiteDecomposition",
  "HermiteH",
  "Hermitian",
  "HermitianMatrixQ",
  "HessenbergDecomposition",
  "Hessian",
  "HeunB",
  "HeunBPrime",
  "HeunC",
  "HeunCPrime",
  "HeunD",
  "HeunDPrime",
  "HeunG",
  "HeunGPrime",
  "HeunT",
  "HeunTPrime",
  "HexadecimalCharacter",
  "Hexahedron",
  "HexahedronBox",
  "HexahedronBoxOptions",
  "HiddenItems",
  "HiddenMarkovProcess",
  "HiddenSurface",
  "Highlighted",
  "HighlightGraph",
  "HighlightImage",
  "HighlightMesh",
  "HighlightString",
  "HighpassFilter",
  "HigmanSimsGroupHS",
  "HilbertCurve",
  "HilbertFilter",
  "HilbertMatrix",
  "Histogram",
  "Histogram3D",
  "HistogramDistribution",
  "HistogramList",
  "HistogramPointDensity",
  "HistogramTransform",
  "HistogramTransformInterpolation",
  "HistoricalPeriodData",
  "HitMissTransform",
  "HITSCentrality",
  "HjorthDistribution",
  "HodgeDual",
  "HoeffdingD",
  "HoeffdingDTest",
  "Hold",
  "HoldAll",
  "HoldAllComplete",
  "HoldComplete",
  "HoldFirst",
  "HoldForm",
  "HoldPattern",
  "HoldRest",
  "HolidayCalendar",
  "HomeDirectory",
  "HomePage",
  "Horizontal",
  "HorizontalForm",
  "HorizontalGauge",
  "HorizontalScrollPosition",
  "HornerForm",
  "HostLookup",
  "HotellingTSquareDistribution",
  "HoytDistribution",
  "HTMLSave",
  "HTTPErrorResponse",
  "HTTPRedirect",
  "HTTPRequest",
  "HTTPRequestData",
  "HTTPResponse",
  "Hue",
  "HumanGrowthData",
  "HumpDownHump",
  "HumpEqual",
  "HurwitzLerchPhi",
  "HurwitzZeta",
  "HyperbolicDistribution",
  "HypercubeGraph",
  "HyperexponentialDistribution",
  "Hyperfactorial",
  "Hypergeometric0F1",
  "Hypergeometric0F1Regularized",
  "Hypergeometric1F1",
  "Hypergeometric1F1Regularized",
  "Hypergeometric2F1",
  "Hypergeometric2F1Regularized",
  "HypergeometricDistribution",
  "HypergeometricPFQ",
  "HypergeometricPFQRegularized",
  "HypergeometricU",
  "Hyperlink",
  "HyperlinkAction",
  "HyperlinkCreationSettings",
  "Hyperplane",
  "Hyphenation",
  "HyphenationOptions",
  "HypoexponentialDistribution",
  "HypothesisTestData",
  "I",
  "IconData",
  "Iconize",
  "IconizedObject",
  "IconRules",
  "Icosahedron",
  "Identity",
  "IdentityMatrix",
  "If",
  "IfCompiled",
  "IgnoreCase",
  "IgnoreDiacritics",
  "IgnoreIsotopes",
  "IgnorePunctuation",
  "IgnoreSpellCheck",
  "IgnoreStereochemistry",
  "IgnoringInactive",
  "Im",
  "Image",
  "Image3D",
  "Image3DProjection",
  "Image3DSlices",
  "ImageAccumulate",
  "ImageAdd",
  "ImageAdjust",
  "ImageAlign",
  "ImageApply",
  "ImageApplyIndexed",
  "ImageAspectRatio",
  "ImageAssemble",
  "ImageAugmentationLayer",
  "ImageBoundingBoxes",
  "ImageCache",
  "ImageCacheValid",
  "ImageCapture",
  "ImageCaptureFunction",
  "ImageCases",
  "ImageChannels",
  "ImageClip",
  "ImageCollage",
  "ImageColorSpace",
  "ImageCompose",
  "ImageContainsQ",
  "ImageContents",
  "ImageConvolve",
  "ImageCooccurrence",
  "ImageCorners",
  "ImageCorrelate",
  "ImageCorrespondingPoints",
  "ImageCrop",
  "ImageData",
  "ImageDeconvolve",
  "ImageDemosaic",
  "ImageDifference",
  "ImageDimensions",
  "ImageDisplacements",
  "ImageDistance",
  "ImageEditMode",
  "ImageEffect",
  "ImageExposureCombine",
  "ImageFeatureTrack",
  "ImageFileApply",
  "ImageFileFilter",
  "ImageFileScan",
  "ImageFilter",
  "ImageFocusCombine",
  "ImageForestingComponents",
  "ImageFormattingWidth",
  "ImageForwardTransformation",
  "ImageGraphics",
  "ImageHistogram",
  "ImageIdentify",
  "ImageInstanceQ",
  "ImageKeypoints",
  "ImageLabels",
  "ImageLegends",
  "ImageLevels",
  "ImageLines",
  "ImageMargins",
  "ImageMarker",
  "ImageMarkers",
  "ImageMeasurements",
  "ImageMesh",
  "ImageMultiply",
  "ImageOffset",
  "ImagePad",
  "ImagePadding",
  "ImagePartition",
  "ImagePeriodogram",
  "ImagePerspectiveTransformation",
  "ImagePosition",
  "ImagePreviewFunction",
  "ImagePyramid",
  "ImagePyramidApply",
  "ImageQ",
  "ImageRangeCache",
  "ImageRecolor",
  "ImageReflect",
  "ImageRegion",
  "ImageResize",
  "ImageResolution",
  "ImageRestyle",
  "ImageRotate",
  "ImageRotated",
  "ImageSaliencyFilter",
  "ImageScaled",
  "ImageScan",
  "ImageSize",
  "ImageSizeAction",
  "ImageSizeCache",
  "ImageSizeMultipliers",
  "ImageSizeRaw",
  "ImageStitch",
  "ImageSubtract",
  "ImageTake",
  "ImageTransformation",
  "ImageTrim",
  "ImageType",
  "ImageValue",
  "ImageValuePositions",
  "ImageVectorscopePlot",
  "ImageWaveformPlot",
  "ImagingDevice",
  "ImplicitD",
  "ImplicitRegion",
  "Implies",
  "Import",
  "ImportAutoReplacements",
  "ImportByteArray",
  "ImportedObject",
  "ImportOptions",
  "ImportString",
  "ImprovementImportance",
  "In",
  "Inactivate",
  "Inactive",
  "InactiveStyle",
  "IncidenceGraph",
  "IncidenceList",
  "IncidenceMatrix",
  "IncludeAromaticBonds",
  "IncludeConstantBasis",
  "IncludedContexts",
  "IncludeDefinitions",
  "IncludeDirectories",
  "IncludeFileExtension",
  "IncludeGeneratorTasks",
  "IncludeHydrogens",
  "IncludeInflections",
  "IncludeMetaInformation",
  "IncludePods",
  "IncludeQuantities",
  "IncludeRelatedTables",
  "IncludeSingularSolutions",
  "IncludeSingularTerm",
  "IncludeWindowTimes",
  "Increment",
  "IndefiniteMatrixQ",
  "Indent",
  "IndentingNewlineSpacings",
  "IndentMaxFraction",
  "IndependenceTest",
  "IndependentEdgeSetQ",
  "IndependentPhysicalQuantity",
  "IndependentUnit",
  "IndependentUnitDimension",
  "IndependentVertexSetQ",
  "Indeterminate",
  "IndeterminateThreshold",
  "IndexCreationOptions",
  "Indexed",
  "IndexEdgeTaggedGraph",
  "IndexGraph",
  "IndexTag",
  "Inequality",
  "InertEvaluate",
  "InertExpression",
  "InexactNumberQ",
  "InexactNumbers",
  "InfiniteFuture",
  "InfiniteLine",
  "InfiniteLineThrough",
  "InfinitePast",
  "InfinitePlane",
  "Infinity",
  "Infix",
  "InflationAdjust",
  "InflationMethod",
  "Information",
  "InformationData",
  "InformationDataGrid",
  "Inherited",
  "InheritScope",
  "InhomogeneousPoissonPointProcess",
  "InhomogeneousPoissonProcess",
  "InitialEvaluationHistory",
  "Initialization",
  "InitializationCell",
  "InitializationCellEvaluation",
  "InitializationCellWarning",
  "InitializationObject",
  "InitializationObjects",
  "InitializationValue",
  "Initialize",
  "InitialSeeding",
  "InlineCounterAssignments",
  "InlineCounterIncrements",
  "InlineRules",
  "Inner",
  "InnerPolygon",
  "InnerPolyhedron",
  "Inpaint",
  "Input",
  "InputAliases",
  "InputAssumptions",
  "InputAutoReplacements",
  "InputField",
  "InputFieldBox",
  "InputFieldBoxOptions",
  "InputForm",
  "InputGrouping",
  "InputNamePacket",
  "InputNotebook",
  "InputPacket",
  "InputPorts",
  "InputSettings",
  "InputStream",
  "InputString",
  "InputStringPacket",
  "InputToBoxFormPacket",
  "Insert",
  "InsertionFunction",
  "InsertionPointObject",
  "InsertLinebreaks",
  "InsertResults",
  "Inset",
  "Inset3DBox",
  "Inset3DBoxOptions",
  "InsetBox",
  "InsetBoxOptions",
  "Insphere",
  "Install",
  "InstallService",
  "InstanceNormalizationLayer",
  "InString",
  "Integer",
  "IntegerDigits",
  "IntegerExponent",
  "IntegerLength",
  "IntegerName",
  "IntegerPart",
  "IntegerPartitions",
  "IntegerQ",
  "IntegerReverse",
  "Integers",
  "IntegerString",
  "Integral",
  "Integrate",
  "IntegrateChangeVariables",
  "Interactive",
  "InteractiveTradingChart",
  "InterfaceSwitched",
  "Interlaced",
  "Interleaving",
  "InternallyBalancedDecomposition",
  "InterpolatingFunction",
  "InterpolatingPolynomial",
  "Interpolation",
  "InterpolationOrder",
  "InterpolationPoints",
  "InterpolationPrecision",
  "Interpretation",
  "InterpretationBox",
  "InterpretationBoxOptions",
  "InterpretationFunction",
  "Interpreter",
  "InterpretTemplate",
  "InterquartileRange",
  "Interrupt",
  "InterruptSettings",
  "IntersectedEntityClass",
  "IntersectingQ",
  "Intersection",
  "Interval",
  "IntervalIntersection",
  "IntervalMarkers",
  "IntervalMarkersStyle",
  "IntervalMemberQ",
  "IntervalSlider",
  "IntervalUnion",
  "Into",
  "Inverse",
  "InverseBetaRegularized",
  "InverseBilateralLaplaceTransform",
  "InverseBilateralZTransform",
  "InverseCDF",
  "InverseChiSquareDistribution",
  "InverseContinuousWaveletTransform",
  "InverseDistanceTransform",
  "InverseEllipticNomeQ",
  "InverseErf",
  "InverseErfc",
  "InverseFourier",
  "InverseFourierCosTransform",
  "InverseFourierSequenceTransform",
  "InverseFourierSinTransform",
  "InverseFourierTransform",
  "InverseFunction",
  "InverseFunctions",
  "InverseGammaDistribution",
  "InverseGammaRegularized",
  "InverseGaussianDistribution",
  "InverseGudermannian",
  "InverseHankelTransform",
  "InverseHaversine",
  "InverseImagePyramid",
  "InverseJacobiCD",
  "InverseJacobiCN",
  "InverseJacobiCS",
  "InverseJacobiDC",
  "InverseJacobiDN",
  "InverseJacobiDS",
  "InverseJacobiNC",
  "InverseJacobiND",
  "InverseJacobiNS",
  "InverseJacobiSC",
  "InverseJacobiSD",
  "InverseJacobiSN",
  "InverseLaplaceTransform",
  "InverseMellinTransform",
  "InversePermutation",
  "InverseRadon",
  "InverseRadonTransform",
  "InverseSeries",
  "InverseShortTimeFourier",
  "InverseSpectrogram",
  "InverseSurvivalFunction",
  "InverseTransformedRegion",
  "InverseWaveletTransform",
  "InverseWeierstrassP",
  "InverseWishartMatrixDistribution",
  "InverseZTransform",
  "Invisible",
  "InvisibleApplication",
  "InvisibleTimes",
  "IPAddress",
  "IrreduciblePolynomialQ",
  "IslandData",
  "IsolatingInterval",
  "IsomorphicGraphQ",
  "IsomorphicSubgraphQ",
  "IsotopeData",
  "Italic",
  "Item",
  "ItemAspectRatio",
  "ItemBox",
  "ItemBoxOptions",
  "ItemDisplayFunction",
  "ItemSize",
  "ItemStyle",
  "ItoProcess",
  "JaccardDissimilarity",
  "JacobiAmplitude",
  "Jacobian",
  "JacobiCD",
  "JacobiCN",
  "JacobiCS",
  "JacobiDC",
  "JacobiDN",
  "JacobiDS",
  "JacobiEpsilon",
  "JacobiNC",
  "JacobiND",
  "JacobiNS",
  "JacobiP",
  "JacobiSC",
  "JacobiSD",
  "JacobiSN",
  "JacobiSymbol",
  "JacobiZeta",
  "JacobiZN",
  "JankoGroupJ1",
  "JankoGroupJ2",
  "JankoGroupJ3",
  "JankoGroupJ4",
  "JarqueBeraALMTest",
  "JohnsonDistribution",
  "Join",
  "JoinAcross",
  "Joined",
  "JoinedCurve",
  "JoinedCurveBox",
  "JoinedCurveBoxOptions",
  "JoinForm",
  "JordanDecomposition",
  "JordanModelDecomposition",
  "JulianDate",
  "JuliaSetBoettcher",
  "JuliaSetIterationCount",
  "JuliaSetPlot",
  "JuliaSetPoints",
  "K",
  "KagiChart",
  "KaiserBesselWindow",
  "KaiserWindow",
  "KalmanEstimator",
  "KalmanFilter",
  "KarhunenLoeveDecomposition",
  "KaryTree",
  "KatzCentrality",
  "KCoreComponents",
  "KDistribution",
  "KEdgeConnectedComponents",
  "KEdgeConnectedGraphQ",
  "KeepExistingVersion",
  "KelvinBei",
  "KelvinBer",
  "KelvinKei",
  "KelvinKer",
  "KendallTau",
  "KendallTauTest",
  "KernelConfiguration",
  "KernelExecute",
  "KernelFunction",
  "KernelMixtureDistribution",
  "KernelObject",
  "Kernels",
  "Ket",
  "Key",
  "KeyCollisionFunction",
  "KeyComplement",
  "KeyDrop",
  "KeyDropFrom",
  "KeyExistsQ",
  "KeyFreeQ",
  "KeyIntersection",
  "KeyMap",
  "KeyMemberQ",
  "KeypointStrength",
  "Keys",
  "KeySelect",
  "KeySort",
  "KeySortBy",
  "KeyTake",
  "KeyUnion",
  "KeyValueMap",
  "KeyValuePattern",
  "Khinchin",
  "KillProcess",
  "KirchhoffGraph",
  "KirchhoffMatrix",
  "KleinInvariantJ",
  "KnapsackSolve",
  "KnightTourGraph",
  "KnotData",
  "KnownUnitQ",
  "KochCurve",
  "KolmogorovSmirnovTest",
  "KroneckerDelta",
  "KroneckerModelDecomposition",
  "KroneckerProduct",
  "KroneckerSymbol",
  "KuiperTest",
  "KumaraswamyDistribution",
  "Kurtosis",
  "KuwaharaFilter",
  "KVertexConnectedComponents",
  "KVertexConnectedGraphQ",
  "LABColor",
  "Label",
  "Labeled",
  "LabeledSlider",
  "LabelingFunction",
  "LabelingSize",
  "LabelStyle",
  "LabelVisibility",
  "LaguerreL",
  "LakeData",
  "LambdaComponents",
  "LambertW",
  "LameC",
  "LameCPrime",
  "LameEigenvalueA",
  "LameEigenvalueB",
  "LameS",
  "LameSPrime",
  "LaminaData",
  "LanczosWindow",
  "LandauDistribution",
  "Language",
  "LanguageCategory",
  "LanguageData",
  "LanguageIdentify",
  "LanguageOptions",
  "LaplaceDistribution",
  "LaplaceTransform",
  "Laplacian",
  "LaplacianFilter",
  "LaplacianGaussianFilter",
  "LaplacianPDETerm",
  "Large",
  "Larger",
  "Last",
  "Latitude",
  "LatitudeLongitude",
  "LatticeData",
  "LatticeReduce",
  "Launch",
  "LaunchKernels",
  "LayeredGraphPlot",
  "LayeredGraphPlot3D",
  "LayerSizeFunction",
  "LayoutInformation",
  "LCHColor",
  "LCM",
  "LeaderSize",
  "LeafCount",
  "LeapVariant",
  "LeapYearQ",
  "LearnDistribution",
  "LearnedDistribution",
  "LearningRate",
  "LearningRateMultipliers",
  "LeastSquares",
  "LeastSquaresFilterKernel",
  "Left",
  "LeftArrow",
  "LeftArrowBar",
  "LeftArrowRightArrow",
  "LeftDownTeeVector",
  "LeftDownVector",
  "LeftDownVectorBar",
  "LeftRightArrow",
  "LeftRightVector",
  "LeftTee",
  "LeftTeeArrow",
  "LeftTeeVector",
  "LeftTriangle",
  "LeftTriangleBar",
  "LeftTriangleEqual",
  "LeftUpDownVector",
  "LeftUpTeeVector",
  "LeftUpVector",
  "LeftUpVectorBar",
  "LeftVector",
  "LeftVectorBar",
  "LegendAppearance",
  "Legended",
  "LegendFunction",
  "LegendLabel",
  "LegendLayout",
  "LegendMargins",
  "LegendMarkers",
  "LegendMarkerSize",
  "LegendreP",
  "LegendreQ",
  "LegendreType",
  "Length",
  "LengthWhile",
  "LerchPhi",
  "Less",
  "LessEqual",
  "LessEqualGreater",
  "LessEqualThan",
  "LessFullEqual",
  "LessGreater",
  "LessLess",
  "LessSlantEqual",
  "LessThan",
  "LessTilde",
  "LetterCharacter",
  "LetterCounts",
  "LetterNumber",
  "LetterQ",
  "Level",
  "LeveneTest",
  "LeviCivitaTensor",
  "LevyDistribution",
  "Lexicographic",
  "LexicographicOrder",
  "LexicographicSort",
  "LibraryDataType",
  "LibraryFunction",
  "LibraryFunctionDeclaration",
  "LibraryFunctionError",
  "LibraryFunctionInformation",
  "LibraryFunctionLoad",
  "LibraryFunctionUnload",
  "LibraryLoad",
  "LibraryUnload",
  "LicenseEntitlementObject",
  "LicenseEntitlements",
  "LicenseID",
  "LicensingSettings",
  "LiftingFilterData",
  "LiftingWaveletTransform",
  "LightBlue",
  "LightBrown",
  "LightCyan",
  "Lighter",
  "LightGray",
  "LightGreen",
  "Lighting",
  "LightingAngle",
  "LightMagenta",
  "LightOrange",
  "LightPink",
  "LightPurple",
  "LightRed",
  "LightSources",
  "LightYellow",
  "Likelihood",
  "Limit",
  "LimitsPositioning",
  "LimitsPositioningTokens",
  "LindleyDistribution",
  "Line",
  "Line3DBox",
  "Line3DBoxOptions",
  "LinearFilter",
  "LinearFractionalOptimization",
  "LinearFractionalTransform",
  "LinearGradientFilling",
  "LinearGradientImage",
  "LinearizingTransformationData",
  "LinearLayer",
  "LinearModelFit",
  "LinearOffsetFunction",
  "LinearOptimization",
  "LinearProgramming",
  "LinearRecurrence",
  "LinearSolve",
  "LinearSolveFunction",
  "LineBox",
  "LineBoxOptions",
  "LineBreak",
  "LinebreakAdjustments",
  "LineBreakChart",
  "LinebreakSemicolonWeighting",
  "LineBreakWithin",
  "LineColor",
  "LineGraph",
  "LineIndent",
  "LineIndentMaxFraction",
  "LineIntegralConvolutionPlot",
  "LineIntegralConvolutionScale",
  "LineLegend",
  "LineOpacity",
  "LineSpacing",
  "LineWrapParts",
  "LinkActivate",
  "LinkClose",
  "LinkConnect",
  "LinkConnectedQ",
  "LinkCreate",
  "LinkError",
  "LinkFlush",
  "LinkFunction",
  "LinkHost",
  "LinkInterrupt",
  "LinkLaunch",
  "LinkMode",
  "LinkObject",
  "LinkOpen",
  "LinkOptions",
  "LinkPatterns",
  "LinkProtocol",
  "LinkRankCentrality",
  "LinkRead",
  "LinkReadHeld",
  "LinkReadyQ",
  "Links",
  "LinkService",
  "LinkWrite",
  "LinkWriteHeld",
  "LiouvilleLambda",
  "List",
  "Listable",
  "ListAnimate",
  "ListContourPlot",
  "ListContourPlot3D",
  "ListConvolve",
  "ListCorrelate",
  "ListCurvePathPlot",
  "ListDeconvolve",
  "ListDensityPlot",
  "ListDensityPlot3D",
  "Listen",
  "ListFormat",
  "ListFourierSequenceTransform",
  "ListInterpolation",
  "ListLineIntegralConvolutionPlot",
  "ListLinePlot",
  "ListLinePlot3D",
  "ListLogLinearPlot",
  "ListLogLogPlot",
  "ListLogPlot",
  "ListPicker",
  "ListPickerBox",
  "ListPickerBoxBackground",
  "ListPickerBoxOptions",
  "ListPlay",
  "ListPlot",
  "ListPlot3D",
  "ListPointPlot3D",
  "ListPolarPlot",
  "ListQ",
  "ListSliceContourPlot3D",
  "ListSliceDensityPlot3D",
  "ListSliceVectorPlot3D",
  "ListStepPlot",
  "ListStreamDensityPlot",
  "ListStreamPlot",
  "ListStreamPlot3D",
  "ListSurfacePlot3D",
  "ListVectorDensityPlot",
  "ListVectorDisplacementPlot",
  "ListVectorDisplacementPlot3D",
  "ListVectorPlot",
  "ListVectorPlot3D",
  "ListZTransform",
  "Literal",
  "LiteralSearch",
  "LiteralType",
  "LoadCompiledComponent",
  "LocalAdaptiveBinarize",
  "LocalCache",
  "LocalClusteringCoefficient",
  "LocalEvaluate",
  "LocalizeDefinitions",
  "LocalizeVariables",
  "LocalObject",
  "LocalObjects",
  "LocalResponseNormalizationLayer",
  "LocalSubmit",
  "LocalSymbol",
  "LocalTime",
  "LocalTimeZone",
  "LocationEquivalenceTest",
  "LocationTest",
  "Locator",
  "LocatorAutoCreate",
  "LocatorBox",
  "LocatorBoxOptions",
  "LocatorCentering",
  "LocatorPane",
  "LocatorPaneBox",
  "LocatorPaneBoxOptions",
  "LocatorRegion",
  "Locked",
  "Log",
  "Log10",
  "Log2",
  "LogBarnesG",
  "LogGamma",
  "LogGammaDistribution",
  "LogicalExpand",
  "LogIntegral",
  "LogisticDistribution",
  "LogisticSigmoid",
  "LogitModelFit",
  "LogLikelihood",
  "LogLinearPlot",
  "LogLogisticDistribution",
  "LogLogPlot",
  "LogMultinormalDistribution",
  "LogNormalDistribution",
  "LogPlot",
  "LogRankTest",
  "LogSeriesDistribution",
  "LongEqual",
  "Longest",
  "LongestCommonSequence",
  "LongestCommonSequencePositions",
  "LongestCommonSubsequence",
  "LongestCommonSubsequencePositions",
  "LongestMatch",
  "LongestOrderedSequence",
  "LongForm",
  "Longitude",
  "LongLeftArrow",
  "LongLeftRightArrow",
  "LongRightArrow",
  "LongShortTermMemoryLayer",
  "Lookup",
  "Loopback",
  "LoopFreeGraphQ",
  "Looping",
  "LossFunction",
  "LowerCaseQ",
  "LowerLeftArrow",
  "LowerRightArrow",
  "LowerTriangularize",
  "LowerTriangularMatrix",
  "LowerTriangularMatrixQ",
  "LowpassFilter",
  "LQEstimatorGains",
  "LQGRegulator",
  "LQOutputRegulatorGains",
  "LQRegulatorGains",
  "LUBackSubstitution",
  "LucasL",
  "LuccioSamiComponents",
  "LUDecomposition",
  "LunarEclipse",
  "LUVColor",
  "LyapunovSolve",
  "LyonsGroupLy",
  "MachineID",
  "MachineName",
  "MachineNumberQ",
  "MachinePrecision",
  "MacintoshSystemPageSetup",
  "Magenta",
  "Magnification",
  "Magnify",
  "MailAddressValidation",
  "MailExecute",
  "MailFolder",
  "MailItem",
  "MailReceiverFunction",
  "MailResponseFunction",
  "MailSearch",
  "MailServerConnect",
  "MailServerConnection",
  "MailSettings",
  "MainSolve",
  "MaintainDynamicCaches",
  "Majority",
  "MakeBoxes",
  "MakeExpression",
  "MakeRules",
  "ManagedLibraryExpressionID",
  "ManagedLibraryExpressionQ",
  "MandelbrotSetBoettcher",
  "MandelbrotSetDistance",
  "MandelbrotSetIterationCount",
  "MandelbrotSetMemberQ",
  "MandelbrotSetPlot",
  "MangoldtLambda",
  "ManhattanDistance",
  "Manipulate",
  "Manipulator",
  "MannedSpaceMissionData",
  "MannWhitneyTest",
  "MantissaExponent",
  "Manual",
  "Map",
  "MapAll",
  "MapApply",
  "MapAt",
  "MapIndexed",
  "MAProcess",
  "MapThread",
  "MarchenkoPasturDistribution",
  "MarcumQ",
  "MardiaCombinedTest",
  "MardiaKurtosisTest",
  "MardiaSkewnessTest",
  "MarginalDistribution",
  "MarkovProcessProperties",
  "Masking",
  "MassConcentrationCondition",
  "MassFluxValue",
  "MassImpermeableBoundaryValue",
  "MassOutflowValue",
  "MassSymmetryValue",
  "MassTransferValue",
  "MassTransportPDEComponent",
  "MatchingDissimilarity",
  "MatchLocalNameQ",
  "MatchLocalNames",
  "MatchQ",
  "Material",
  "MaterialShading",
  "MaternPointProcess",
  "MathematicalFunctionData",
  "MathematicaNotation",
  "MathieuC",
  "MathieuCharacteristicA",
  "MathieuCharacteristicB",
  "MathieuCharacteristicExponent",
  "MathieuCPrime",
  "MathieuGroupM11",
  "MathieuGroupM12",
  "MathieuGroupM22",
  "MathieuGroupM23",
  "MathieuGroupM24",
  "MathieuS",
  "MathieuSPrime",
  "MathMLForm",
  "MathMLText",
  "Matrices",
  "MatrixExp",
  "MatrixForm",
  "MatrixFunction",
  "MatrixLog",
  "MatrixNormalDistribution",
  "MatrixPlot",
  "MatrixPower",
  "MatrixPropertyDistribution",
  "MatrixQ",
  "MatrixRank",
  "MatrixTDistribution",
  "Max",
  "MaxBend",
  "MaxCellMeasure",
  "MaxColorDistance",
  "MaxDate",
  "MaxDetect",
  "MaxDisplayedChildren",
  "MaxDuration",
  "MaxExtraBandwidths",
  "MaxExtraConditions",
  "MaxFeatureDisplacement",
  "MaxFeatures",
  "MaxFilter",
  "MaximalBy",
  "Maximize",
  "MaxItems",
  "MaxIterations",
  "MaxLimit",
  "MaxMemoryUsed",
  "MaxMixtureKernels",
  "MaxOverlapFraction",
  "MaxPlotPoints",
  "MaxPoints",
  "MaxRecursion",
  "MaxStableDistribution",
  "MaxStepFraction",
  "MaxSteps",
  "MaxStepSize",
  "MaxTrainingRounds",
  "MaxValue",
  "MaxwellDistribution",
  "MaxWordGap",
  "McLaughlinGroupMcL",
  "Mean",
  "MeanAbsoluteLossLayer",
  "MeanAround",
  "MeanClusteringCoefficient",
  "MeanDegreeConnectivity",
  "MeanDeviation",
  "MeanFilter",
  "MeanGraphDistance",
  "MeanNeighborDegree",
  "MeanPointDensity",
  "MeanShift",
  "MeanShiftFilter",
  "MeanSquaredLossLayer",
  "Median",
  "MedianDeviation",
  "MedianFilter",
  "MedicalTestData",
  "Medium",
  "MeijerG",
  "MeijerGReduce",
  "MeixnerDistribution",
  "MellinConvolve",
  "MellinTransform",
  "MemberQ",
  "MemoryAvailable",
  "MemoryConstrained",
  "MemoryConstraint",
  "MemoryInUse",
  "MengerMesh",
  "Menu",
  "MenuAppearance",
  "MenuCommandKey",
  "MenuEvaluator",
  "MenuItem",
  "MenuList",
  "MenuPacket",
  "MenuSortingValue",
  "MenuStyle",
  "MenuView",
  "Merge",
  "MergeDifferences",
  "MergingFunction",
  "MersennePrimeExponent",
  "MersennePrimeExponentQ",
  "Mesh",
  "MeshCellCentroid",
  "MeshCellCount",
  "MeshCellHighlight",
  "MeshCellIndex",
  "MeshCellLabel",
  "MeshCellMarker",
  "MeshCellMeasure",
  "MeshCellQuality",
  "MeshCells",
  "MeshCellShapeFunction",
  "MeshCellStyle",
  "MeshConnectivityGraph",
  "MeshCoordinates",
  "MeshFunctions",
  "MeshPrimitives",
  "MeshQualityGoal",
  "MeshRange",
  "MeshRefinementFunction",
  "MeshRegion",
  "MeshRegionQ",
  "MeshShading",
  "MeshStyle",
  "Message",
  "MessageDialog",
  "MessageList",
  "MessageName",
  "MessageObject",
  "MessageOptions",
  "MessagePacket",
  "Messages",
  "MessagesNotebook",
  "MetaCharacters",
  "MetaInformation",
  "MeteorShowerData",
  "Method",
  "MethodOptions",
  "MexicanHatWavelet",
  "MeyerWavelet",
  "Midpoint",
  "MIMETypeToFormatList",
  "Min",
  "MinColorDistance",
  "MinDate",
  "MinDetect",
  "MineralData",
  "MinFilter",
  "MinimalBy",
  "MinimalPolynomial",
  "MinimalStateSpaceModel",
  "Minimize",
  "MinimumTimeIncrement",
  "MinIntervalSize",
  "MinkowskiQuestionMark",
  "MinLimit",
  "MinMax",
  "MinorPlanetData",
  "Minors",
  "MinPointSeparation",
  "MinRecursion",
  "MinSize",
  "MinStableDistribution",
  "Minus",
  "MinusPlus",
  "MinValue",
  "Missing",
  "MissingBehavior",
  "MissingDataMethod",
  "MissingDataRules",
  "MissingQ",
  "MissingString",
  "MissingStyle",
  "MissingValuePattern",
  "MissingValueSynthesis",
  "MittagLefflerE",
  "MixedFractionParts",
  "MixedGraphQ",
  "MixedMagnitude",
  "MixedRadix",
  "MixedRadixQuantity",
  "MixedUnit",
  "MixtureDistribution",
  "Mod",
  "Modal",
  "Mode",
  "ModelPredictiveController",
  "Modular",
  "ModularInverse",
  "ModularLambda",
  "Module",
  "Modulus",
  "MoebiusMu",
  "Molecule",
  "MoleculeAlign",
  "MoleculeContainsQ",
  "MoleculeDraw",
  "MoleculeEquivalentQ",
  "MoleculeFreeQ",
  "MoleculeGraph",
  "MoleculeMatchQ",
  "MoleculeMaximumCommonSubstructure",
  "MoleculeModify",
  "MoleculeName",
  "MoleculePattern",
  "MoleculePlot",
  "MoleculePlot3D",
  "MoleculeProperty",
  "MoleculeQ",
  "MoleculeRecognize",
  "MoleculeSubstructureCount",
  "MoleculeValue",
  "Moment",
  "MomentConvert",
  "MomentEvaluate",
  "MomentGeneratingFunction",
  "MomentOfInertia",
  "Monday",
  "Monitor",
  "MonomialList",
  "MonomialOrder",
  "MonsterGroupM",
  "MoonPhase",
  "MoonPosition",
  "MorletWavelet",
  "MorphologicalBinarize",
  "MorphologicalBranchPoints",
  "MorphologicalComponents",
  "MorphologicalEulerNumber",
  "MorphologicalGraph",
  "MorphologicalPerimeter",
  "MorphologicalTransform",
  "MortalityData",
  "Most",
  "MountainData",
  "MouseAnnotation",
  "MouseAppearance",
  "MouseAppearanceTag",
  "MouseButtons",
  "Mouseover",
  "MousePointerNote",
  "MousePosition",
  "MovieData",
  "MovingAverage",
  "MovingMap",
  "MovingMedian",
  "MoyalDistribution",
  "MultiaxisArrangement",
  "Multicolumn",
  "MultiedgeStyle",
  "MultigraphQ",
  "MultilaunchWarning",
  "MultiLetterItalics",
  "MultiLetterStyle",
  "MultilineFunction",
  "Multinomial",
  "MultinomialDistribution",
  "MultinormalDistribution",
  "MultiplicativeOrder",
  "Multiplicity",
  "MultiplySides",
  "MultiscriptBoxOptions",
  "Multiselection",
  "MultivariateHypergeometricDistribution",
  "MultivariatePoissonDistribution",
  "MultivariateTDistribution",
  "N",
  "NakagamiDistribution",
  "NameQ",
  "Names",
  "NamespaceBox",
  "NamespaceBoxOptions",
  "Nand",
  "NArgMax",
  "NArgMin",
  "NBernoulliB",
  "NBodySimulation",
  "NBodySimulationData",
  "NCache",
  "NCaputoD",
  "NDEigensystem",
  "NDEigenvalues",
  "NDSolve",
  "NDSolveValue",
  "Nearest",
  "NearestFunction",
  "NearestMeshCells",
  "NearestNeighborG",
  "NearestNeighborGraph",
  "NearestTo",
  "NebulaData",
  "NeedlemanWunschSimilarity",
  "Needs",
  "Negative",
  "NegativeBinomialDistribution",
  "NegativeDefiniteMatrixQ",
  "NegativeIntegers",
  "NegativelyOrientedPoints",
  "NegativeMultinomialDistribution",
  "NegativeRationals",
  "NegativeReals",
  "NegativeSemidefiniteMatrixQ",
  "NeighborhoodData",
  "NeighborhoodGraph",
  "Nest",
  "NestedGreaterGreater",
  "NestedLessLess",
  "NestedScriptRules",
  "NestGraph",
  "NestList",
  "NestTree",
  "NestWhile",
  "NestWhileList",
  "NetAppend",
  "NetArray",
  "NetArrayLayer",
  "NetBidirectionalOperator",
  "NetChain",
  "NetDecoder",
  "NetDelete",
  "NetDrop",
  "NetEncoder",
  "NetEvaluationMode",
  "NetExternalObject",
  "NetExtract",
  "NetFlatten",
  "NetFoldOperator",
  "NetGANOperator",
  "NetGraph",
  "NetInformation",
  "NetInitialize",
  "NetInsert",
  "NetInsertSharedArrays",
  "NetJoin",
  "NetMapOperator",
  "NetMapThreadOperator",
  "NetMeasurements",
  "NetModel",
  "NetNestOperator",
  "NetPairEmbeddingOperator",
  "NetPort",
  "NetPortGradient",
  "NetPrepend",
  "NetRename",
  "NetReplace",
  "NetReplacePart",
  "NetSharedArray",
  "NetStateObject",
  "NetTake",
  "NetTrain",
  "NetTrainResultsObject",
  "NetUnfold",
  "NetworkPacketCapture",
  "NetworkPacketRecording",
  "NetworkPacketRecordingDuring",
  "NetworkPacketTrace",
  "NeumannValue",
  "NevilleThetaC",
  "NevilleThetaD",
  "NevilleThetaN",
  "NevilleThetaS",
  "NewPrimitiveStyle",
  "NExpectation",
  "Next",
  "NextCell",
  "NextDate",
  "NextPrime",
  "NextScheduledTaskTime",
  "NeymanScottPointProcess",
  "NFractionalD",
  "NHoldAll",
  "NHoldFirst",
  "NHoldRest",
  "NicholsGridLines",
  "NicholsPlot",
  "NightHemisphere",
  "NIntegrate",
  "NMaximize",
  "NMaxValue",
  "NMinimize",
  "NMinValue",
  "NominalScale",
  "NominalVariables",
  "NonAssociative",
  "NoncentralBetaDistribution",
  "NoncentralChiSquareDistribution",
  "NoncentralFRatioDistribution",
  "NoncentralStudentTDistribution",
  "NonCommutativeMultiply",
  "NonConstants",
  "NondimensionalizationTransform",
  "None",
  "NoneTrue",
  "NonlinearModelFit",
  "NonlinearStateSpaceModel",
  "NonlocalMeansFilter",
  "NonNegative",
  "NonNegativeIntegers",
  "NonNegativeRationals",
  "NonNegativeReals",
  "NonPositive",
  "NonPositiveIntegers",
  "NonPositiveRationals",
  "NonPositiveReals",
  "Nor",
  "NorlundB",
  "Norm",
  "Normal",
  "NormalDistribution",
  "NormalGrouping",
  "NormalizationLayer",
  "Normalize",
  "Normalized",
  "NormalizedSquaredEuclideanDistance",
  "NormalMatrixQ",
  "NormalsFunction",
  "NormFunction",
  "Not",
  "NotCongruent",
  "NotCupCap",
  "NotDoubleVerticalBar",
  "Notebook",
  "NotebookApply",
  "NotebookAutoSave",
  "NotebookBrowseDirectory",
  "NotebookClose",
  "NotebookConvertSettings",
  "NotebookCreate",
  "NotebookDefault",
  "NotebookDelete",
  "NotebookDirectory",
  "NotebookDynamicExpression",
  "NotebookEvaluate",
  "NotebookEventActions",
  "NotebookFileName",
  "NotebookFind",
  "NotebookGet",
  "NotebookImport",
  "NotebookInformation",
  "NotebookInterfaceObject",
  "NotebookLocate",
  "NotebookObject",
  "NotebookOpen",
  "NotebookPath",
  "NotebookPrint",
  "NotebookPut",
  "NotebookRead",
  "Notebooks",
  "NotebookSave",
  "NotebookSelection",
  "NotebooksMenu",
  "NotebookTemplate",
  "NotebookWrite",
  "NotElement",
  "NotEqualTilde",
  "NotExists",
  "NotGreater",
  "NotGreaterEqual",
  "NotGreaterFullEqual",
  "NotGreaterGreater",
  "NotGreaterLess",
  "NotGreaterSlantEqual",
  "NotGreaterTilde",
  "Nothing",
  "NotHumpDownHump",
  "NotHumpEqual",
  "NotificationFunction",
  "NotLeftTriangle",
  "NotLeftTriangleBar",
  "NotLeftTriangleEqual",
  "NotLess",
  "NotLessEqual",
  "NotLessFullEqual",
  "NotLessGreater",
  "NotLessLess",
  "NotLessSlantEqual",
  "NotLessTilde",
  "NotNestedGreaterGreater",
  "NotNestedLessLess",
  "NotPrecedes",
  "NotPrecedesEqual",
  "NotPrecedesSlantEqual",
  "NotPrecedesTilde",
  "NotReverseElement",
  "NotRightTriangle",
  "NotRightTriangleBar",
  "NotRightTriangleEqual",
  "NotSquareSubset",
  "NotSquareSubsetEqual",
  "NotSquareSuperset",
  "NotSquareSupersetEqual",
  "NotSubset",
  "NotSubsetEqual",
  "NotSucceeds",
  "NotSucceedsEqual",
  "NotSucceedsSlantEqual",
  "NotSucceedsTilde",
  "NotSuperset",
  "NotSupersetEqual",
  "NotTilde",
  "NotTildeEqual",
  "NotTildeFullEqual",
  "NotTildeTilde",
  "NotVerticalBar",
  "Now",
  "NoWhitespace",
  "NProbability",
  "NProduct",
  "NProductFactors",
  "NRoots",
  "NSolve",
  "NSolveValues",
  "NSum",
  "NSumTerms",
  "NuclearExplosionData",
  "NuclearReactorData",
  "Null",
  "NullRecords",
  "NullSpace",
  "NullWords",
  "Number",
  "NumberCompose",
  "NumberDecompose",
  "NumberDigit",
  "NumberExpand",
  "NumberFieldClassNumber",
  "NumberFieldDiscriminant",
  "NumberFieldFundamentalUnits",
  "NumberFieldIntegralBasis",
  "NumberFieldNormRepresentatives",
  "NumberFieldRegulator",
  "NumberFieldRootsOfUnity",
  "NumberFieldSignature",
  "NumberForm",
  "NumberFormat",
  "NumberLinePlot",
  "NumberMarks",
  "NumberMultiplier",
  "NumberPadding",
  "NumberPoint",
  "NumberQ",
  "NumberSeparator",
  "NumberSigns",
  "NumberString",
  "Numerator",
  "NumeratorDenominator",
  "NumericalOrder",
  "NumericalSort",
  "NumericArray",
  "NumericArrayQ",
  "NumericArrayType",
  "NumericFunction",
  "NumericQ",
  "NuttallWindow",
  "NValues",
  "NyquistGridLines",
  "NyquistPlot",
  "O",
  "ObjectExistsQ",
  "ObservabilityGramian",
  "ObservabilityMatrix",
  "ObservableDecomposition",
  "ObservableModelQ",
  "OceanData",
  "Octahedron",
  "OddQ",
  "Off",
  "Offset",
  "OLEData",
  "On",
  "ONanGroupON",
  "Once",
  "OneIdentity",
  "Opacity",
  "OpacityFunction",
  "OpacityFunctionScaling",
  "Open",
  "OpenAppend",
  "Opener",
  "OpenerBox",
  "OpenerBoxOptions",
  "OpenerView",
  "OpenFunctionInspectorPacket",
  "Opening",
  "OpenRead",
  "OpenSpecialOptions",
  "OpenTemporary",
  "OpenWrite",
  "Operate",
  "OperatingSystem",
  "OperatorApplied",
  "OptimumFlowData",
  "Optional",
  "OptionalElement",
  "OptionInspectorSettings",
  "OptionQ",
  "Options",
  "OptionsPacket",
  "OptionsPattern",
  "OptionValue",
  "OptionValueBox",
  "OptionValueBoxOptions",
  "Or",
  "Orange",
  "Order",
  "OrderDistribution",
  "OrderedQ",
  "Ordering",
  "OrderingBy",
  "OrderingLayer",
  "Orderless",
  "OrderlessPatternSequence",
  "OrdinalScale",
  "OrnsteinUhlenbeckProcess",
  "Orthogonalize",
  "OrthogonalMatrixQ",
  "Out",
  "Outer",
  "OuterPolygon",
  "OuterPolyhedron",
  "OutputAutoOverwrite",
  "OutputControllabilityMatrix",
  "OutputControllableModelQ",
  "OutputForm",
  "OutputFormData",
  "OutputGrouping",
  "OutputMathEditExpression",
  "OutputNamePacket",
  "OutputPorts",
  "OutputResponse",
  "OutputSizeLimit",
  "OutputStream",
  "Over",
  "OverBar",
  "OverDot",
  "Overflow",
  "OverHat",
  "Overlaps",
  "Overlay",
  "OverlayBox",
  "OverlayBoxOptions",
  "OverlayVideo",
  "Overscript",
  "OverscriptBox",
  "OverscriptBoxOptions",
  "OverTilde",
  "OverVector",
  "OverwriteTarget",
  "OwenT",
  "OwnValues",
  "Package",
  "PackingMethod",
  "PackPaclet",
  "PacletDataRebuild",
  "PacletDirectoryAdd",
  "PacletDirectoryLoad",
  "PacletDirectoryRemove",
  "PacletDirectoryUnload",
  "PacletDisable",
  "PacletEnable",
  "PacletFind",
  "PacletFindRemote",
  "PacletInformation",
  "PacletInstall",
  "PacletInstallSubmit",
  "PacletNewerQ",
  "PacletObject",
  "PacletObjectQ",
  "PacletSite",
  "PacletSiteObject",
  "PacletSiteRegister",
  "PacletSites",
  "PacletSiteUnregister",
  "PacletSiteUpdate",
  "PacletSymbol",
  "PacletUninstall",
  "PacletUpdate",
  "PaddedForm",
  "Padding",
  "PaddingLayer",
  "PaddingSize",
  "PadeApproximant",
  "PadLeft",
  "PadRight",
  "PageBreakAbove",
  "PageBreakBelow",
  "PageBreakWithin",
  "PageFooterLines",
  "PageFooters",
  "PageHeaderLines",
  "PageHeaders",
  "PageHeight",
  "PageRankCentrality",
  "PageTheme",
  "PageWidth",
  "Pagination",
  "PairCorrelationG",
  "PairedBarChart",
  "PairedHistogram",
  "PairedSmoothHistogram",
  "PairedTTest",
  "PairedZTest",
  "PaletteNotebook",
  "PalettePath",
  "PalettesMenuSettings",
  "PalindromeQ",
  "Pane",
  "PaneBox",
  "PaneBoxOptions",
  "Panel",
  "PanelBox",
  "PanelBoxOptions",
  "Paneled",
  "PaneSelector",
  "PaneSelectorBox",
  "PaneSelectorBoxOptions",
  "PaperWidth",
  "ParabolicCylinderD",
  "ParagraphIndent",
  "ParagraphSpacing",
  "ParallelArray",
  "ParallelAxisPlot",
  "ParallelCombine",
  "ParallelDo",
  "Parallelepiped",
  "ParallelEvaluate",
  "Parallelization",
  "Parallelize",
  "ParallelKernels",
  "ParallelMap",
  "ParallelNeeds",
  "Parallelogram",
  "ParallelProduct",
  "ParallelSubmit",
  "ParallelSum",
  "ParallelTable",
  "ParallelTry",
  "Parameter",
  "ParameterEstimator",
  "ParameterMixtureDistribution",
  "ParameterVariables",
  "ParametricConvexOptimization",
  "ParametricFunction",
  "ParametricNDSolve",
  "ParametricNDSolveValue",
  "ParametricPlot",
  "ParametricPlot3D",
  "ParametricRampLayer",
  "ParametricRegion",
  "ParentBox",
  "ParentCell",
  "ParentConnect",
  "ParentDirectory",
  "ParentEdgeLabel",
  "ParentEdgeLabelFunction",
  "ParentEdgeLabelStyle",
  "ParentEdgeShapeFunction",
  "ParentEdgeStyle",
  "ParentEdgeStyleFunction",
  "ParentForm",
  "Parenthesize",
  "ParentList",
  "ParentNotebook",
  "ParetoDistribution",
  "ParetoPickandsDistribution",
  "ParkData",
  "Part",
  "PartBehavior",
  "PartialCorrelationFunction",
  "PartialD",
  "ParticleAcceleratorData",
  "ParticleData",
  "Partition",
  "PartitionGranularity",
  "PartitionsP",
  "PartitionsQ",
  "PartLayer",
  "PartOfSpeech",
  "PartProtection",
  "ParzenWindow",
  "PascalDistribution",
  "PassEventsDown",
  "PassEventsUp",
  "Paste",
  "PasteAutoQuoteCharacters",
  "PasteBoxFormInlineCells",
  "PasteButton",
  "Path",
  "PathGraph",
  "PathGraphQ",
  "Pattern",
  "PatternFilling",
  "PatternReaction",
  "PatternSequence",
  "PatternTest",
  "PauliMatrix",
  "PaulWavelet",
  "Pause",
  "PausedTime",
  "PDF",
  "PeakDetect",
  "PeanoCurve",
  "PearsonChiSquareTest",
  "PearsonCorrelationTest",
  "PearsonDistribution",
  "PenttinenPointProcess",
  "PercentForm",
  "PerfectNumber",
  "PerfectNumberQ",
  "PerformanceGoal",
  "Perimeter",
  "PeriodicBoundaryCondition",
  "PeriodicInterpolation",
  "Periodogram",
  "PeriodogramArray",
  "Permanent",
  "Permissions",
  "PermissionsGroup",
  "PermissionsGroupMemberQ",
  "PermissionsGroups",
  "PermissionsKey",
  "PermissionsKeys",
  "PermutationCycles",
  "PermutationCyclesQ",
  "PermutationGroup",
  "PermutationLength",
  "PermutationList",
  "PermutationListQ",
  "PermutationMatrix",
  "PermutationMax",
  "PermutationMin",
  "PermutationOrder",
  "PermutationPower",
  "PermutationProduct",
  "PermutationReplace",
  "Permutations",
  "PermutationSupport",
  "Permute",
  "PeronaMalikFilter",
  "Perpendicular",
  "PerpendicularBisector",
  "PersistenceLocation",
  "PersistenceTime",
  "PersistentObject",
  "PersistentObjects",
  "PersistentSymbol",
  "PersistentValue",
  "PersonData",
  "PERTDistribution",
  "PetersenGraph",
  "PhaseMargins",
  "PhaseRange",
  "PhongShading",
  "PhysicalSystemData",
  "Pi",
  "Pick",
  "PickedElements",
  "PickMode",
  "PIDData",
  "PIDDerivativeFilter",
  "PIDFeedforward",
  "PIDTune",
  "Piecewise",
  "PiecewiseExpand",
  "PieChart",
  "PieChart3D",
  "PillaiTrace",
  "PillaiTraceTest",
  "PingTime",
  "Pink",
  "PitchRecognize",
  "Pivoting",
  "PixelConstrained",
  "PixelValue",
  "PixelValuePositions",
  "Placed",
  "Placeholder",
  "PlaceholderLayer",
  "PlaceholderReplace",
  "Plain",
  "PlanarAngle",
  "PlanarFaceList",
  "PlanarGraph",
  "PlanarGraphQ",
  "PlanckRadiationLaw",
  "PlaneCurveData",
  "PlanetaryMoonData",
  "PlanetData",
  "PlantData",
  "Play",
  "PlaybackSettings",
  "PlayRange",
  "Plot",
  "Plot3D",
  "Plot3Matrix",
  "PlotDivision",
  "PlotJoined",
  "PlotLabel",
  "PlotLabels",
  "PlotLayout",
  "PlotLegends",
  "PlotMarkers",
  "PlotPoints",
  "PlotRange",
  "PlotRangeClipping",
  "PlotRangeClipPlanesStyle",
  "PlotRangePadding",
  "PlotRegion",
  "PlotStyle",
  "PlotTheme",
  "Pluralize",
  "Plus",
  "PlusMinus",
  "Pochhammer",
  "PodStates",
  "PodWidth",
  "Point",
  "Point3DBox",
  "Point3DBoxOptions",
  "PointBox",
  "PointBoxOptions",
  "PointCountDistribution",
  "PointDensity",
  "PointDensityFunction",
  "PointFigureChart",
  "PointLegend",
  "PointLight",
  "PointProcessEstimator",
  "PointProcessFitTest",
  "PointProcessParameterAssumptions",
  "PointProcessParameterQ",
  "PointSize",
  "PointStatisticFunction",
  "PointValuePlot",
  "PoissonConsulDistribution",
  "PoissonDistribution",
  "PoissonPDEComponent",
  "PoissonPointProcess",
  "PoissonProcess",
  "PoissonWindow",
  "PolarAxes",
  "PolarAxesOrigin",
  "PolarGridLines",
  "PolarPlot",
  "PolarTicks",
  "PoleZeroMarkers",
  "PolyaAeppliDistribution",
  "PolyGamma",
  "Polygon",
  "Polygon3DBox",
  "Polygon3DBoxOptions",
  "PolygonalNumber",
  "PolygonAngle",
  "PolygonBox",
  "PolygonBoxOptions",
  "PolygonCoordinates",
  "PolygonDecomposition",
  "PolygonHoleScale",
  "PolygonIntersections",
  "PolygonScale",
  "Polyhedron",
  "PolyhedronAngle",
  "PolyhedronBox",
  "PolyhedronBoxOptions",
  "PolyhedronCoordinates",
  "PolyhedronData",
  "PolyhedronDecomposition",
  "PolyhedronGenus",
  "PolyLog",
  "PolynomialExpressionQ",
  "PolynomialExtendedGCD",
  "PolynomialForm",
  "PolynomialGCD",
  "PolynomialLCM",
  "PolynomialMod",
  "PolynomialQ",
  "PolynomialQuotient",
  "PolynomialQuotientRemainder",
  "PolynomialReduce",
  "PolynomialRemainder",
  "Polynomials",
  "PolynomialSumOfSquaresList",
  "PoolingLayer",
  "PopupMenu",
  "PopupMenuBox",
  "PopupMenuBoxOptions",
  "PopupView",
  "PopupWindow",
  "Position",
  "PositionIndex",
  "PositionLargest",
  "PositionSmallest",
  "Positive",
  "PositiveDefiniteMatrixQ",
  "PositiveIntegers",
  "PositivelyOrientedPoints",
  "PositiveRationals",
  "PositiveReals",
  "PositiveSemidefiniteMatrixQ",
  "PossibleZeroQ",
  "Postfix",
  "PostScript",
  "Power",
  "PowerDistribution",
  "PowerExpand",
  "PowerMod",
  "PowerModList",
  "PowerRange",
  "PowerSpectralDensity",
  "PowersRepresentations",
  "PowerSymmetricPolynomial",
  "Precedence",
  "PrecedenceForm",
  "Precedes",
  "PrecedesEqual",
  "PrecedesSlantEqual",
  "PrecedesTilde",
  "Precision",
  "PrecisionGoal",
  "PreDecrement",
  "Predict",
  "PredictionRoot",
  "PredictorFunction",
  "PredictorInformation",
  "PredictorMeasurements",
  "PredictorMeasurementsObject",
  "PreemptProtect",
  "PreferencesPath",
  "PreferencesSettings",
  "Prefix",
  "PreIncrement",
  "Prepend",
  "PrependLayer",
  "PrependTo",
  "PreprocessingRules",
  "PreserveColor",
  "PreserveImageOptions",
  "Previous",
  "PreviousCell",
  "PreviousDate",
  "PriceGraphDistribution",
  "PrimaryPlaceholder",
  "Prime",
  "PrimeNu",
  "PrimeOmega",
  "PrimePi",
  "PrimePowerQ",
  "PrimeQ",
  "Primes",
  "PrimeZetaP",
  "PrimitivePolynomialQ",
  "PrimitiveRoot",
  "PrimitiveRootList",
  "PrincipalComponents",
  "PrincipalValue",
  "Print",
  "PrintableASCIIQ",
  "PrintAction",
  "PrintForm",
  "PrintingCopies",
  "PrintingOptions",
  "PrintingPageRange",
  "PrintingStartingPageNumber",
  "PrintingStyleEnvironment",
  "Printout3D",
  "Printout3DPreviewer",
  "PrintPrecision",
  "PrintTemporary",
  "Prism",
  "PrismBox",
  "PrismBoxOptions",
  "PrivateCellOptions",
  "PrivateEvaluationOptions",
  "PrivateFontOptions",
  "PrivateFrontEndOptions",
  "PrivateKey",
  "PrivateNotebookOptions",
  "PrivatePaths",
  "Probability",
  "ProbabilityDistribution",
  "ProbabilityPlot",
  "ProbabilityPr",
  "ProbabilityScalePlot",
  "ProbitModelFit",
  "ProcessConnection",
  "ProcessDirectory",
  "ProcessEnvironment",
  "Processes",
  "ProcessEstimator",
  "ProcessInformation",
  "ProcessObject",
  "ProcessParameterAssumptions",
  "ProcessParameterQ",
  "ProcessStateDomain",
  "ProcessStatus",
  "ProcessTimeDomain",
  "Product",
  "ProductDistribution",
  "ProductLog",
  "ProgressIndicator",
  "ProgressIndicatorBox",
  "ProgressIndicatorBoxOptions",
  "ProgressReporting",
  "Projection",
  "Prolog",
  "PromptForm",
  "ProofObject",
  "PropagateAborts",
  "Properties",
  "Property",
  "PropertyList",
  "PropertyValue",
  "Proportion",
  "Proportional",
  "Protect",
  "Protected",
  "ProteinData",
  "Pruning",
  "PseudoInverse",
  "PsychrometricPropertyData",
  "PublicKey",
  "PublisherID",
  "PulsarData",
  "PunctuationCharacter",
  "Purple",
  "Put",
  "PutAppend",
  "Pyramid",
  "PyramidBox",
  "PyramidBoxOptions",
  "QBinomial",
  "QFactorial",
  "QGamma",
  "QHypergeometricPFQ",
  "QnDispersion",
  "QPochhammer",
  "QPolyGamma",
  "QRDecomposition",
  "QuadraticIrrationalQ",
  "QuadraticOptimization",
  "Quantile",
  "QuantilePlot",
  "Quantity",
  "QuantityArray",
  "QuantityDistribution",
  "QuantityForm",
  "QuantityMagnitude",
  "QuantityQ",
  "QuantityUnit",
  "QuantityVariable",
  "QuantityVariableCanonicalUnit",
  "QuantityVariableDimensions",
  "QuantityVariableIdentifier",
  "QuantityVariablePhysicalQuantity",
  "Quartics",
  "QuartileDeviation",
  "Quartiles",
  "QuartileSkewness",
  "Query",
  "QuestionGenerator",
  "QuestionInterface",
  "QuestionObject",
  "QuestionSelector",
  "QueueingNetworkProcess",
  "QueueingProcess",
  "QueueProperties",
  "Quiet",
  "QuietEcho",
  "Quit",
  "Quotient",
  "QuotientRemainder",
  "RadialAxisPlot",
  "RadialGradientFilling",
  "RadialGradientImage",
  "RadialityCentrality",
  "RadicalBox",
  "RadicalBoxOptions",
  "RadioButton",
  "RadioButtonBar",
  "RadioButtonBox",
  "RadioButtonBoxOptions",
  "Radon",
  "RadonTransform",
  "RamanujanTau",
  "RamanujanTauL",
  "RamanujanTauTheta",
  "RamanujanTauZ",
  "Ramp",
  "Random",
  "RandomArrayLayer",
  "RandomChoice",
  "RandomColor",
  "RandomComplex",
  "RandomDate",
  "RandomEntity",
  "RandomFunction",
  "RandomGeneratorState",
  "RandomGeoPosition",
  "RandomGraph",
  "RandomImage",
  "RandomInstance",
  "RandomInteger",
  "RandomPermutation",
  "RandomPoint",
  "RandomPointConfiguration",
  "RandomPolygon",
  "RandomPolyhedron",
  "RandomPrime",
  "RandomReal",
  "RandomSample",
  "RandomSeed",
  "RandomSeeding",
  "RandomTime",
  "RandomTree",
  "RandomVariate",
  "RandomWalkProcess",
  "RandomWord",
  "Range",
  "RangeFilter",
  "RangeSpecification",
  "RankedMax",
  "RankedMin",
  "RarerProbability",
  "Raster",
  "Raster3D",
  "Raster3DBox",
  "Raster3DBoxOptions",
  "RasterArray",
  "RasterBox",
  "RasterBoxOptions",
  "Rasterize",
  "RasterSize",
  "Rational",
  "RationalExpressionQ",
  "RationalFunctions",
  "Rationalize",
  "Rationals",
  "Ratios",
  "RawArray",
  "RawBoxes",
  "RawData",
  "RawMedium",
  "RayleighDistribution",
  "Re",
  "ReactionBalance",
  "ReactionBalancedQ",
  "ReactionPDETerm",
  "Read",
  "ReadByteArray",
  "ReadLine",
  "ReadList",
  "ReadProtected",
  "ReadString",
  "Real",
  "RealAbs",
  "RealBlockDiagonalForm",
  "RealDigits",
  "RealExponent",
  "Reals",
  "RealSign",
  "Reap",
  "RebuildPacletData",
  "RecalibrationFunction",
  "RecognitionPrior",
  "RecognitionThreshold",
  "ReconstructionMesh",
  "Record",
  "RecordLists",
  "RecordSeparators",
  "Rectangle",
  "RectangleBox",
  "RectangleBoxOptions",
  "RectangleChart",
  "RectangleChart3D",
  "RectangularRepeatingElement",
  "RecurrenceFilter",
  "RecurrenceTable",
  "RecurringDigitsForm",
  "Red",
  "Reduce",
  "RefBox",
  "ReferenceLineStyle",
  "ReferenceMarkers",
  "ReferenceMarkerStyle",
  "Refine",
  "ReflectionMatrix",
  "ReflectionTransform",
  "Refresh",
  "RefreshRate",
  "Region",
  "RegionBinarize",
  "RegionBoundary",
  "RegionBoundaryStyle",
  "RegionBounds",
  "RegionCentroid",
  "RegionCongruent",
  "RegionConvert",
  "RegionDifference",
  "RegionDilation",
  "RegionDimension",
  "RegionDisjoint",
  "RegionDistance",
  "RegionDistanceFunction",
  "RegionEmbeddingDimension",
  "RegionEqual",
  "RegionErosion",
  "RegionFillingStyle",
  "RegionFit",
  "RegionFunction",
  "RegionImage",
  "RegionIntersection",
  "RegionMeasure",
  "RegionMember",
  "RegionMemberFunction",
  "RegionMoment",
  "RegionNearest",
  "RegionNearestFunction",
  "RegionPlot",
  "RegionPlot3D",
  "RegionProduct",
  "RegionQ",
  "RegionResize",
  "RegionSimilar",
  "RegionSize",
  "RegionSymmetricDifference",
  "RegionUnion",
  "RegionWithin",
  "RegisterExternalEvaluator",
  "RegularExpression",
  "Regularization",
  "RegularlySampledQ",
  "RegularPolygon",
  "ReIm",
  "ReImLabels",
  "ReImPlot",
  "ReImStyle",
  "Reinstall",
  "RelationalDatabase",
  "RelationGraph",
  "Release",
  "ReleaseHold",
  "ReliabilityDistribution",
  "ReliefImage",
  "ReliefPlot",
  "RemoteAuthorizationCaching",
  "RemoteBatchJobAbort",
  "RemoteBatchJobObject",
  "RemoteBatchJobs",
  "RemoteBatchMapSubmit",
  "RemoteBatchSubmissionEnvironment",
  "RemoteBatchSubmit",
  "RemoteConnect",
  "RemoteConnectionObject",
  "RemoteEvaluate",
  "RemoteFile",
  "RemoteInputFiles",
  "RemoteKernelObject",
  "RemoteProviderSettings",
  "RemoteRun",
  "RemoteRunProcess",
  "RemovalConditions",
  "Remove",
  "RemoveAlphaChannel",
  "RemoveAsynchronousTask",
  "RemoveAudioStream",
  "RemoveBackground",
  "RemoveChannelListener",
  "RemoveChannelSubscribers",
  "Removed",
  "RemoveDiacritics",
  "RemoveInputStreamMethod",
  "RemoveOutputStreamMethod",
  "RemoveProperty",
  "RemoveScheduledTask",
  "RemoveUsers",
  "RemoveVideoStream",
  "RenameDirectory",
  "RenameFile",
  "RenderAll",
  "RenderingOptions",
  "RenewalProcess",
  "RenkoChart",
  "RepairMesh",
  "Repeated",
  "RepeatedNull",
  "RepeatedString",
  "RepeatedTiming",
  "RepeatingElement",
  "Replace",
  "ReplaceAll",
  "ReplaceAt",
  "ReplaceHeldPart",
  "ReplaceImageValue",
  "ReplaceList",
  "ReplacePart",
  "ReplacePixelValue",
  "ReplaceRepeated",
  "ReplicateLayer",
  "RequiredPhysicalQuantities",
  "Resampling",
  "ResamplingAlgorithmData",
  "ResamplingMethod",
  "Rescale",
  "RescalingTransform",
  "ResetDirectory",
  "ResetScheduledTask",
  "ReshapeLayer",
  "Residue",
  "ResidueSum",
  "ResizeLayer",
  "Resolve",
  "ResolveContextAliases",
  "ResourceAcquire",
  "ResourceData",
  "ResourceFunction",
  "ResourceObject",
  "ResourceRegister",
  "ResourceRemove",
  "ResourceSearch",
  "ResourceSubmissionObject",
  "ResourceSubmit",
  "ResourceSystemBase",
  "ResourceSystemPath",
  "ResourceUpdate",
  "ResourceVersion",
  "ResponseForm",
  "Rest",
  "RestartInterval",
  "Restricted",
  "Resultant",
  "ResumePacket",
  "Return",
  "ReturnCreatesNewCell",
  "ReturnEntersInput",
  "ReturnExpressionPacket",
  "ReturnInputFormPacket",
  "ReturnPacket",
  "ReturnReceiptFunction",
  "ReturnTextPacket",
  "Reverse",
  "ReverseApplied",
  "ReverseBiorthogonalSplineWavelet",
  "ReverseElement",
  "ReverseEquilibrium",
  "ReverseGraph",
  "ReverseSort",
  "ReverseSortBy",
  "ReverseUpEquilibrium",
  "RevolutionAxis",
  "RevolutionPlot3D",
  "RGBColor",
  "RiccatiSolve",
  "RiceDistribution",
  "RidgeFilter",
  "RiemannR",
  "RiemannSiegelTheta",
  "RiemannSiegelZ",
  "RiemannXi",
  "Riffle",
  "Right",
  "RightArrow",
  "RightArrowBar",
  "RightArrowLeftArrow",
  "RightComposition",
  "RightCosetRepresentative",
  "RightDownTeeVector",
  "RightDownVector",
  "RightDownVectorBar",
  "RightTee",
  "RightTeeArrow",
  "RightTeeVector",
  "RightTriangle",
  "RightTriangleBar",
  "RightTriangleEqual",
  "RightUpDownVector",
  "RightUpTeeVector",
  "RightUpVector",
  "RightUpVectorBar",
  "RightVector",
  "RightVectorBar",
  "RipleyK",
  "RipleyRassonRegion",
  "RiskAchievementImportance",
  "RiskReductionImportance",
  "RobustConvexOptimization",
  "RogersTanimotoDissimilarity",
  "RollPitchYawAngles",
  "RollPitchYawMatrix",
  "RomanNumeral",
  "Root",
  "RootApproximant",
  "RootIntervals",
  "RootLocusPlot",
  "RootMeanSquare",
  "RootOfUnityQ",
  "RootReduce",
  "Roots",
  "RootSum",
  "RootTree",
  "Rotate",
  "RotateLabel",
  "RotateLeft",
  "RotateRight",
  "RotationAction",
  "RotationBox",
  "RotationBoxOptions",
  "RotationMatrix",
  "RotationTransform",
  "Round",
  "RoundImplies",
  "RoundingRadius",
  "Row",
  "RowAlignments",
  "RowBackgrounds",
  "RowBox",
  "RowHeights",
  "RowLines",
  "RowMinHeight",
  "RowReduce",
  "RowsEqual",
  "RowSpacings",
  "RSolve",
  "RSolveValue",
  "RudinShapiro",
  "RudvalisGroupRu",
  "Rule",
  "RuleCondition",
  "RuleDelayed",
  "RuleForm",
  "RulePlot",
  "RulerUnits",
  "RulesTree",
  "Run",
  "RunProcess",
  "RunScheduledTask",
  "RunThrough",
  "RuntimeAttributes",
  "RuntimeOptions",
  "RussellRaoDissimilarity",
  "SameAs",
  "SameQ",
  "SameTest",
  "SameTestProperties",
  "SampledEntityClass",
  "SampleDepth",
  "SampledSoundFunction",
  "SampledSoundList",
  "SampleRate",
  "SamplingPeriod",
  "SARIMAProcess",
  "SARMAProcess",
  "SASTriangle",
  "SatelliteData",
  "SatisfiabilityCount",
  "SatisfiabilityInstances",
  "SatisfiableQ",
  "Saturday",
  "Save",
  "Saveable",
  "SaveAutoDelete",
  "SaveConnection",
  "SaveDefinitions",
  "SavitzkyGolayMatrix",
  "SawtoothWave",
  "Scale",
  "Scaled",
  "ScaleDivisions",
  "ScaledMousePosition",
  "ScaleOrigin",
  "ScalePadding",
  "ScaleRanges",
  "ScaleRangeStyle",
  "ScalingFunctions",
  "ScalingMatrix",
  "ScalingTransform",
  "Scan",
  "ScheduledTask",
  "ScheduledTaskActiveQ",
  "ScheduledTaskInformation",
  "ScheduledTaskInformationData",
  "ScheduledTaskObject",
  "ScheduledTasks",
  "SchurDecomposition",
  "ScientificForm",
  "ScientificNotationThreshold",
  "ScorerGi",
  "ScorerGiPrime",
  "ScorerHi",
  "ScorerHiPrime",
  "ScreenRectangle",
  "ScreenStyleEnvironment",
  "ScriptBaselineShifts",
  "ScriptForm",
  "ScriptLevel",
  "ScriptMinSize",
  "ScriptRules",
  "ScriptSizeMultipliers",
  "Scrollbars",
  "ScrollingOptions",
  "ScrollPosition",
  "SearchAdjustment",
  "SearchIndexObject",
  "SearchIndices",
  "SearchQueryString",
  "SearchResultObject",
  "Sec",
  "Sech",
  "SechDistribution",
  "SecondOrderConeOptimization",
  "SectionGrouping",
  "SectorChart",
  "SectorChart3D",
  "SectorOrigin",
  "SectorSpacing",
  "SecuredAuthenticationKey",
  "SecuredAuthenticationKeys",
  "SecurityCertificate",
  "SeedRandom",
  "Select",
  "Selectable",
  "SelectComponents",
  "SelectedCells",
  "SelectedNotebook",
  "SelectFirst",
  "Selection",
  "SelectionAnimate",
  "SelectionCell",
  "SelectionCellCreateCell",
  "SelectionCellDefaultStyle",
  "SelectionCellParentStyle",
  "SelectionCreateCell",
  "SelectionDebuggerTag",
  "SelectionEvaluate",
  "SelectionEvaluateCreateCell",
  "SelectionMove",
  "SelectionPlaceholder",
  "SelectWithContents",
  "SelfLoops",
  "SelfLoopStyle",
  "SemanticImport",
  "SemanticImportString",
  "SemanticInterpretation",
  "SemialgebraicComponentInstances",
  "SemidefiniteOptimization",
  "SendMail",
  "SendMessage",
  "Sequence",
  "SequenceAlignment",
  "SequenceAttentionLayer",
  "SequenceCases",
  "SequenceCount",
  "SequenceFold",
  "SequenceFoldList",
  "SequenceForm",
  "SequenceHold",
  "SequenceIndicesLayer",
  "SequenceLastLayer",
  "SequenceMostLayer",
  "SequencePosition",
  "SequencePredict",
  "SequencePredictorFunction",
  "SequenceReplace",
  "SequenceRestLayer",
  "SequenceReverseLayer",
  "SequenceSplit",
  "Series",
  "SeriesCoefficient",
  "SeriesData",
  "SeriesTermGoal",
  "ServiceConnect",
  "ServiceDisconnect",
  "ServiceExecute",
  "ServiceObject",
  "ServiceRequest",
  "ServiceResponse",
  "ServiceSubmit",
  "SessionSubmit",
  "SessionTime",
  "Set",
  "SetAccuracy",
  "SetAlphaChannel",
  "SetAttributes",
  "Setbacks",
  "SetCloudDirectory",
  "SetCookies",
  "SetDelayed",
  "SetDirectory",
  "SetEnvironment",
  "SetFileDate",
  "SetFileFormatProperties",
  "SetOptions",
  "SetOptionsPacket",
  "SetPermissions",
  "SetPrecision",
  "SetProperty",
  "SetSecuredAuthenticationKey",
  "SetSelectedNotebook",
  "SetSharedFunction",
  "SetSharedVariable",
  "SetStreamPosition",
  "SetSystemModel",
  "SetSystemOptions",
  "Setter",
  "SetterBar",
  "SetterBox",
  "SetterBoxOptions",
  "Setting",
  "SetUsers",
  "Shading",
  "Shallow",
  "ShannonWavelet",
  "ShapiroWilkTest",
  "Share",
  "SharingList",
  "Sharpen",
  "ShearingMatrix",
  "ShearingTransform",
  "ShellRegion",
  "ShenCastanMatrix",
  "ShiftedGompertzDistribution",
  "ShiftRegisterSequence",
  "Short",
  "ShortDownArrow",
  "Shortest",
  "ShortestMatch",
  "ShortestPathFunction",
  "ShortLeftArrow",
  "ShortRightArrow",
  "ShortTimeFourier",
  "ShortTimeFourierData",
  "ShortUpArrow",
  "Show",
  "ShowAutoConvert",
  "ShowAutoSpellCheck",
  "ShowAutoStyles",
  "ShowCellBracket",
  "ShowCellLabel",
  "ShowCellTags",
  "ShowClosedCellArea",
  "ShowCodeAssist",
  "ShowContents",
  "ShowControls",
  "ShowCursorTracker",
  "ShowGroupOpenCloseIcon",
  "ShowGroupOpener",
  "ShowInvisibleCharacters",
  "ShowPageBreaks",
  "ShowPredictiveInterface",
  "ShowSelection",
  "ShowShortBoxForm",
  "ShowSpecialCharacters",
  "ShowStringCharacters",
  "ShowSyntaxStyles",
  "ShrinkingDelay",
  "ShrinkWrapBoundingBox",
  "SiderealTime",
  "SiegelTheta",
  "SiegelTukeyTest",
  "SierpinskiCurve",
  "SierpinskiMesh",
  "Sign",
  "Signature",
  "SignedRankTest",
  "SignedRegionDistance",
  "SignificanceLevel",
  "SignPadding",
  "SignTest",
  "SimilarityRules",
  "SimpleGraph",
  "SimpleGraphQ",
  "SimplePolygonQ",
  "SimplePolyhedronQ",
  "Simplex",
  "Simplify",
  "Sin",
  "Sinc",
  "SinghMaddalaDistribution",
  "SingleEvaluation",
  "SingleLetterItalics",
  "SingleLetterStyle",
  "SingularValueDecomposition",
  "SingularValueList",
  "SingularValuePlot",
  "SingularValues",
  "Sinh",
  "SinhIntegral",
  "SinIntegral",
  "SixJSymbol",
  "Skeleton",
  "SkeletonTransform",
  "SkellamDistribution",
  "Skewness",
  "SkewNormalDistribution",
  "SkinStyle",
  "Skip",
  "SliceContourPlot3D",
  "SliceDensityPlot3D",
  "SliceDistribution",
  "SliceVectorPlot3D",
  "Slider",
  "Slider2D",
  "Slider2DBox",
  "Slider2DBoxOptions",
  "SliderBox",
  "SliderBoxOptions",
  "SlideShowVideo",
  "SlideView",
  "Slot",
  "SlotSequence",
  "Small",
  "SmallCircle",
  "Smaller",
  "SmithDecomposition",
  "SmithDelayCompensator",
  "SmithWatermanSimilarity",
  "SmoothDensityHistogram",
  "SmoothHistogram",
  "SmoothHistogram3D",
  "SmoothKernelDistribution",
  "SmoothPointDensity",
  "SnDispersion",
  "Snippet",
  "SnippetsVideo",
  "SnubPolyhedron",
  "SocialMediaData",
  "Socket",
  "SocketConnect",
  "SocketListen",
  "SocketListener",
  "SocketObject",
  "SocketOpen",
  "SocketReadMessage",
  "SocketReadyQ",
  "Sockets",
  "SocketWaitAll",
  "SocketWaitNext",
  "SoftmaxLayer",
  "SokalSneathDissimilarity",
  "SolarEclipse",
  "SolarSystemFeatureData",
  "SolarTime",
  "SolidAngle",
  "SolidBoundaryLoadValue",
  "SolidData",
  "SolidDisplacementCondition",
  "SolidFixedCondition",
  "SolidMechanicsPDEComponent",
  "SolidMechanicsStrain",
  "SolidMechanicsStress",
  "SolidRegionQ",
  "Solve",
  "SolveAlways",
  "SolveDelayed",
  "SolveValues",
  "Sort",
  "SortBy",
  "SortedBy",
  "SortedEntityClass",
  "Sound",
  "SoundAndGraphics",
  "SoundNote",
  "SoundVolume",
  "SourceLink",
  "SourcePDETerm",
  "Sow",
  "Space",
  "SpaceCurveData",
  "SpaceForm",
  "Spacer",
  "Spacings",
  "Span",
  "SpanAdjustments",
  "SpanCharacterRounding",
  "SpanFromAbove",
  "SpanFromBoth",
  "SpanFromLeft",
  "SpanLineThickness",
  "SpanMaxSize",
  "SpanMinSize",
  "SpanningCharacters",
  "SpanSymmetric",
  "SparseArray",
  "SparseArrayQ",
  "SpatialBinnedPointData",
  "SpatialBoundaryCorrection",
  "SpatialEstimate",
  "SpatialEstimatorFunction",
  "SpatialGraphDistribution",
  "SpatialJ",
  "SpatialMedian",
  "SpatialNoiseLevel",
  "SpatialObservationRegionQ",
  "SpatialPointData",
  "SpatialPointSelect",
  "SpatialRandomnessTest",
  "SpatialTransformationLayer",
  "SpatialTrendFunction",
  "Speak",
  "SpeakerMatchQ",
  "SpearmanRankTest",
  "SpearmanRho",
  "SpeciesData",
  "SpecificityGoal",
  "SpectralLineData",
  "Spectrogram",
  "SpectrogramArray",
  "Specularity",
  "SpeechCases",
  "SpeechInterpreter",
  "SpeechRecognize",
  "SpeechSynthesize",
  "SpellingCorrection",
  "SpellingCorrectionList",
  "SpellingDictionaries",
  "SpellingDictionariesPath",
  "SpellingOptions",
  "Sphere",
  "SphereBox",
  "SphereBoxOptions",
  "SpherePoints",
  "SphericalBesselJ",
  "SphericalBesselY",
  "SphericalHankelH1",
  "SphericalHankelH2",
  "SphericalHarmonicY",
  "SphericalPlot3D",
  "SphericalRegion",
  "SphericalShell",
  "SpheroidalEigenvalue",
  "SpheroidalJoiningFactor",
  "SpheroidalPS",
  "SpheroidalPSPrime",
  "SpheroidalQS",
  "SpheroidalQSPrime",
  "SpheroidalRadialFactor",
  "SpheroidalS1",
  "SpheroidalS1Prime",
  "SpheroidalS2",
  "SpheroidalS2Prime",
  "Splice",
  "SplicedDistribution",
  "SplineClosed",
  "SplineDegree",
  "SplineKnots",
  "SplineWeights",
  "Split",
  "SplitBy",
  "SpokenString",
  "SpotLight",
  "Sqrt",
  "SqrtBox",
  "SqrtBoxOptions",
  "Square",
  "SquaredEuclideanDistance",
  "SquareFreeQ",
  "SquareIntersection",
  "SquareMatrixQ",
  "SquareRepeatingElement",
  "SquaresR",
  "SquareSubset",
  "SquareSubsetEqual",
  "SquareSuperset",
  "SquareSupersetEqual",
  "SquareUnion",
  "SquareWave",
  "SSSTriangle",
  "StabilityMargins",
  "StabilityMarginsStyle",
  "StableDistribution",
  "Stack",
  "StackBegin",
  "StackComplete",
  "StackedDateListPlot",
  "StackedListPlot",
  "StackInhibit",
  "StadiumShape",
  "StandardAtmosphereData",
  "StandardDeviation",
  "StandardDeviationFilter",
  "StandardForm",
  "Standardize",
  "Standardized",
  "StandardOceanData",
  "StandbyDistribution",
  "Star",
  "StarClusterData",
  "StarData",
  "StarGraph",
  "StartAsynchronousTask",
  "StartExternalSession",
  "StartingStepSize",
  "StartOfLine",
  "StartOfString",
  "StartProcess",
  "StartScheduledTask",
  "StartupSound",
  "StartWebSession",
  "StateDimensions",
  "StateFeedbackGains",
  "StateOutputEstimator",
  "StateResponse",
  "StateSpaceModel",
  "StateSpaceRealization",
  "StateSpaceTransform",
  "StateTransformationLinearize",
  "StationaryDistribution",
  "StationaryWaveletPacketTransform",
  "StationaryWaveletTransform",
  "StatusArea",
  "StatusCentrality",
  "StepMonitor",
  "StereochemistryElements",
  "StieltjesGamma",
  "StippleShading",
  "StirlingS1",
  "StirlingS2",
  "StopAsynchronousTask",
  "StoppingPowerData",
  "StopScheduledTask",
  "StrataVariables",
  "StratonovichProcess",
  "StraussHardcorePointProcess",
  "StraussPointProcess",
  "StreamColorFunction",
  "StreamColorFunctionScaling",
  "StreamDensityPlot",
  "StreamMarkers",
  "StreamPlot",
  "StreamPlot3D",
  "StreamPoints",
  "StreamPosition",
  "Streams",
  "StreamScale",
  "StreamStyle",
  "StrictInequalities",
  "String",
  "StringBreak",
  "StringByteCount",
  "StringCases",
  "StringContainsQ",
  "StringCount",
  "StringDelete",
  "StringDrop",
  "StringEndsQ",
  "StringExpression",
  "StringExtract",
  "StringForm",
  "StringFormat",
  "StringFormatQ",
  "StringFreeQ",
  "StringInsert",
  "StringJoin",
  "StringLength",
  "StringMatchQ",
  "StringPadLeft",
  "StringPadRight",
  "StringPart",
  "StringPartition",
  "StringPosition",
  "StringQ",
  "StringRepeat",
  "StringReplace",
  "StringReplaceList",
  "StringReplacePart",
  "StringReverse",
  "StringRiffle",
  "StringRotateLeft",
  "StringRotateRight",
  "StringSkeleton",
  "StringSplit",
  "StringStartsQ",
  "StringTake",
  "StringTakeDrop",
  "StringTemplate",
  "StringToByteArray",
  "StringToStream",
  "StringTrim",
  "StripBoxes",
  "StripOnInput",
  "StripStyleOnPaste",
  "StripWrapperBoxes",
  "StrokeForm",
  "Struckthrough",
  "StructuralImportance",
  "StructuredArray",
  "StructuredArrayHeadQ",
  "StructuredSelection",
  "StruveH",
  "StruveL",
  "Stub",
  "StudentTDistribution",
  "Style",
  "StyleBox",
  "StyleBoxAutoDelete",
  "StyleData",
  "StyleDefinitions",
  "StyleForm",
  "StyleHints",
  "StyleKeyMapping",
  "StyleMenuListing",
  "StyleNameDialogSettings",
  "StyleNames",
  "StylePrint",
  "StyleSheetPath",
  "Subdivide",
  "Subfactorial",
  "Subgraph",
  "SubMinus",
  "SubPlus",
  "SubresultantPolynomialRemainders",
  "SubresultantPolynomials",
  "Subresultants",
  "Subscript",
  "SubscriptBox",
  "SubscriptBoxOptions",
  "Subscripted",
  "Subsequences",
  "Subset",
  "SubsetCases",
  "SubsetCount",
  "SubsetEqual",
  "SubsetMap",
  "SubsetPosition",
  "SubsetQ",
  "SubsetReplace",
  "Subsets",
  "SubStar",
  "SubstitutionSystem",
  "Subsuperscript",
  "SubsuperscriptBox",
  "SubsuperscriptBoxOptions",
  "SubtitleEncoding",
  "SubtitleTrackSelection",
  "Subtract",
  "SubtractFrom",
  "SubtractSides",
  "SubValues",
  "Succeeds",
  "SucceedsEqual",
  "SucceedsSlantEqual",
  "SucceedsTilde",
  "Success",
  "SuchThat",
  "Sum",
  "SumConvergence",
  "SummationLayer",
  "Sunday",
  "SunPosition",
  "Sunrise",
  "Sunset",
  "SuperDagger",
  "SuperMinus",
  "SupernovaData",
  "SuperPlus",
  "Superscript",
  "SuperscriptBox",
  "SuperscriptBoxOptions",
  "Superset",
  "SupersetEqual",
  "SuperStar",
  "Surd",
  "SurdForm",
  "SurfaceAppearance",
  "SurfaceArea",
  "SurfaceColor",
  "SurfaceData",
  "SurfaceGraphics",
  "SurvivalDistribution",
  "SurvivalFunction",
  "SurvivalModel",
  "SurvivalModelFit",
  "SuspendPacket",
  "SuzukiDistribution",
  "SuzukiGroupSuz",
  "SwatchLegend",
  "Switch",
  "Symbol",
  "SymbolName",
  "SymletWavelet",
  "Symmetric",
  "SymmetricDifference",
  "SymmetricGroup",
  "SymmetricKey",
  "SymmetricMatrixQ",
  "SymmetricPolynomial",
  "SymmetricReduction",
  "Symmetrize",
  "SymmetrizedArray",
  "SymmetrizedArrayRules",
  "SymmetrizedDependentComponents",
  "SymmetrizedIndependentComponents",
  "SymmetrizedReplacePart",
  "SynchronousInitialization",
  "SynchronousUpdating",
  "Synonyms",
  "Syntax",
  "SyntaxForm",
  "SyntaxInformation",
  "SyntaxLength",
  "SyntaxPacket",
  "SyntaxQ",
  "SynthesizeMissingValues",
  "SystemCredential",
  "SystemCredentialData",
  "SystemCredentialKey",
  "SystemCredentialKeys",
  "SystemCredentialStoreObject",
  "SystemDialogInput",
  "SystemException",
  "SystemGet",
  "SystemHelpPath",
  "SystemInformation",
  "SystemInformationData",
  "SystemInstall",
  "SystemModel",
  "SystemModeler",
  "SystemModelExamples",
  "SystemModelLinearize",
  "SystemModelMeasurements",
  "SystemModelParametricSimulate",
  "SystemModelPlot",
  "SystemModelProgressReporting",
  "SystemModelReliability",
  "SystemModels",
  "SystemModelSimulate",
  "SystemModelSimulateSensitivity",
  "SystemModelSimulationData",
  "SystemOpen",
  "SystemOptions",
  "SystemProcessData",
  "SystemProcesses",
  "SystemsConnectionsModel",
  "SystemsModelControllerData",
  "SystemsModelDelay",
  "SystemsModelDelayApproximate",
  "SystemsModelDelete",
  "SystemsModelDimensions",
  "SystemsModelExtract",
  "SystemsModelFeedbackConnect",
  "SystemsModelLabels",
  "SystemsModelLinearity",
  "SystemsModelMerge",
  "SystemsModelOrder",
  "SystemsModelParallelConnect",
  "SystemsModelSeriesConnect",
  "SystemsModelStateFeedbackConnect",
  "SystemsModelVectorRelativeOrders",
  "SystemStub",
  "SystemTest",
  "Tab",
  "TabFilling",
  "Table",
  "TableAlignments",
  "TableDepth",
  "TableDirections",
  "TableForm",
  "TableHeadings",
  "TableSpacing",
  "TableView",
  "TableViewBox",
  "TableViewBoxAlignment",
  "TableViewBoxBackground",
  "TableViewBoxHeaders",
  "TableViewBoxItemSize",
  "TableViewBoxItemStyle",
  "TableViewBoxOptions",
  "TabSpacings",
  "TabView",
  "TabViewBox",
  "TabViewBoxOptions",
  "TagBox",
  "TagBoxNote",
  "TagBoxOptions",
  "TaggingRules",
  "TagSet",
  "TagSetDelayed",
  "TagStyle",
  "TagUnset",
  "Take",
  "TakeDrop",
  "TakeLargest",
  "TakeLargestBy",
  "TakeList",
  "TakeSmallest",
  "TakeSmallestBy",
  "TakeWhile",
  "Tally",
  "Tan",
  "Tanh",
  "TargetDevice",
  "TargetFunctions",
  "TargetSystem",
  "TargetUnits",
  "TaskAbort",
  "TaskExecute",
  "TaskObject",
  "TaskRemove",
  "TaskResume",
  "Tasks",
  "TaskSuspend",
  "TaskWait",
  "TautologyQ",
  "TelegraphProcess",
  "TemplateApply",
  "TemplateArgBox",
  "TemplateBox",
  "TemplateBoxOptions",
  "TemplateEvaluate",
  "TemplateExpression",
  "TemplateIf",
  "TemplateObject",
  "TemplateSequence",
  "TemplateSlot",
  "TemplateSlotSequence",
  "TemplateUnevaluated",
  "TemplateVerbatim",
  "TemplateWith",
  "TemporalData",
  "TemporalRegularity",
  "Temporary",
  "TemporaryVariable",
  "TensorContract",
  "TensorDimensions",
  "TensorExpand",
  "TensorProduct",
  "TensorQ",
  "TensorRank",
  "TensorReduce",
  "TensorSymmetry",
  "TensorTranspose",
  "TensorWedge",
  "TerminatedEvaluation",
  "TernaryListPlot",
  "TernaryPlotCorners",
  "TestID",
  "TestReport",
  "TestReportObject",
  "TestResultObject",
  "Tetrahedron",
  "TetrahedronBox",
  "TetrahedronBoxOptions",
  "TeXForm",
  "TeXSave",
  "Text",
  "Text3DBox",
  "Text3DBoxOptions",
  "TextAlignment",
  "TextBand",
  "TextBoundingBox",
  "TextBox",
  "TextCases",
  "TextCell",
  "TextClipboardType",
  "TextContents",
  "TextData",
  "TextElement",
  "TextForm",
  "TextGrid",
  "TextJustification",
  "TextLine",
  "TextPacket",
  "TextParagraph",
  "TextPosition",
  "TextRecognize",
  "TextSearch",
  "TextSearchReport",
  "TextSentences",
  "TextString",
  "TextStructure",
  "TextStyle",
  "TextTranslation",
  "Texture",
  "TextureCoordinateFunction",
  "TextureCoordinateScaling",
  "TextWords",
  "Therefore",
  "ThermodynamicData",
  "ThermometerGauge",
  "Thick",
  "Thickness",
  "Thin",
  "Thinning",
  "ThisLink",
  "ThomasPointProcess",
  "ThompsonGroupTh",
  "Thread",
  "Threaded",
  "ThreadingLayer",
  "ThreeJSymbol",
  "Threshold",
  "Through",
  "Throw",
  "ThueMorse",
  "Thumbnail",
  "Thursday",
  "TickDirection",
  "TickLabelOrientation",
  "TickLabelPositioning",
  "TickLabels",
  "TickLengths",
  "TickPositions",
  "Ticks",
  "TicksStyle",
  "TideData",
  "Tilde",
  "TildeEqual",
  "TildeFullEqual",
  "TildeTilde",
  "TimeConstrained",
  "TimeConstraint",
  "TimeDirection",
  "TimeFormat",
  "TimeGoal",
  "TimelinePlot",
  "TimeObject",
  "TimeObjectQ",
  "TimeRemaining",
  "Times",
  "TimesBy",
  "TimeSeries",
  "TimeSeriesAggregate",
  "TimeSeriesForecast",
  "TimeSeriesInsert",
  "TimeSeriesInvertibility",
  "TimeSeriesMap",
  "TimeSeriesMapThread",
  "TimeSeriesModel",
  "TimeSeriesModelFit",
  "TimeSeriesResample",
  "TimeSeriesRescale",
  "TimeSeriesShift",
  "TimeSeriesThread",
  "TimeSeriesWindow",
  "TimeSystem",
  "TimeSystemConvert",
  "TimeUsed",
  "TimeValue",
  "TimeWarpingCorrespondence",
  "TimeWarpingDistance",
  "TimeZone",
  "TimeZoneConvert",
  "TimeZoneOffset",
  "Timing",
  "Tiny",
  "TitleGrouping",
  "TitsGroupT",
  "ToBoxes",
  "ToCharacterCode",
  "ToColor",
  "ToContinuousTimeModel",
  "ToDate",
  "Today",
  "ToDiscreteTimeModel",
  "ToEntity",
  "ToeplitzMatrix",
  "ToExpression",
  "ToFileName",
  "Together",
  "Toggle",
  "ToggleFalse",
  "Toggler",
  "TogglerBar",
  "TogglerBox",
  "TogglerBoxOptions",
  "ToHeldExpression",
  "ToInvertibleTimeSeries",
  "TokenWords",
  "Tolerance",
  "ToLowerCase",
  "Tomorrow",
  "ToNumberField",
  "TooBig",
  "Tooltip",
  "TooltipBox",
  "TooltipBoxOptions",
  "TooltipDelay",
  "TooltipStyle",
  "ToonShading",
  "Top",
  "TopHatTransform",
  "ToPolarCoordinates",
  "TopologicalSort",
  "ToRadicals",
  "ToRawPointer",
  "ToRules",
  "Torus",
  "TorusGraph",
  "ToSphericalCoordinates",
  "ToString",
  "Total",
  "TotalHeight",
  "TotalLayer",
  "TotalVariationFilter",
  "TotalWidth",
  "TouchPosition",
  "TouchscreenAutoZoom",
  "TouchscreenControlPlacement",
  "ToUpperCase",
  "TourVideo",
  "Tr",
  "Trace",
  "TraceAbove",
  "TraceAction",
  "TraceBackward",
  "TraceDepth",
  "TraceDialog",
  "TraceForward",
  "TraceInternal",
  "TraceLevel",
  "TraceOff",
  "TraceOn",
  "TraceOriginal",
  "TracePrint",
  "TraceScan",
  "TrackCellChangeTimes",
  "TrackedSymbols",
  "TrackingFunction",
  "TracyWidomDistribution",
  "TradingChart",
  "TraditionalForm",
  "TraditionalFunctionNotation",
  "TraditionalNotation",
  "TraditionalOrder",
  "TrainImageContentDetector",
  "TrainingProgressCheckpointing",
  "TrainingProgressFunction",
  "TrainingProgressMeasurements",
  "TrainingProgressReporting",
  "TrainingStoppingCriterion",
  "TrainingUpdateSchedule",
  "TrainTextContentDetector",
  "TransferFunctionCancel",
  "TransferFunctionExpand",
  "TransferFunctionFactor",
  "TransferFunctionModel",
  "TransferFunctionPoles",
  "TransferFunctionTransform",
  "TransferFunctionZeros",
  "TransformationClass",
  "TransformationFunction",
  "TransformationFunctions",
  "TransformationMatrix",
  "TransformedDistribution",
  "TransformedField",
  "TransformedProcess",
  "TransformedRegion",
  "TransitionDirection",
  "TransitionDuration",
  "TransitionEffect",
  "TransitiveClosureGraph",
  "TransitiveReductionGraph",
  "Translate",
  "TranslationOptions",
  "TranslationTransform",
  "Transliterate",
  "Transparent",
  "TransparentColor",
  "Transpose",
  "TransposeLayer",
  "TrapEnterKey",
  "TrapSelection",
  "TravelDirections",
  "TravelDirectionsData",
  "TravelDistance",
  "TravelDistanceList",
  "TravelMethod",
  "TravelTime",
  "Tree",
  "TreeCases",
  "TreeChildren",
  "TreeCount",
  "TreeData",
  "TreeDelete",
  "TreeDepth",
  "TreeElementCoordinates",
  "TreeElementLabel",
  "TreeElementLabelFunction",
  "TreeElementLabelStyle",
  "TreeElementShape",
  "TreeElementShapeFunction",
  "TreeElementSize",
  "TreeElementSizeFunction",
  "TreeElementStyle",
  "TreeElementStyleFunction",
  "TreeExpression",
  "TreeExtract",
  "TreeFold",
  "TreeForm",
  "TreeGraph",
  "TreeGraphQ",
  "TreeInsert",
  "TreeLayout",
  "TreeLeafCount",
  "TreeLeafQ",
  "TreeLeaves",
  "TreeLevel",
  "TreeMap",
  "TreeMapAt",
  "TreeOutline",
  "TreePlot",
  "TreePosition",
  "TreeQ",
  "TreeReplacePart",
  "TreeRules",
  "TreeScan",
  "TreeSelect",
  "TreeSize",
  "TreeTraversalOrder",
  "TrendStyle",
  "Triangle",
  "TriangleCenter",
  "TriangleConstruct",
  "TriangleMeasurement",
  "TriangleWave",
  "TriangularDistribution",
  "TriangulateMesh",
  "Trig",
  "TrigExpand",
  "TrigFactor",
  "TrigFactorList",
  "Trigger",
  "TrigReduce",
  "TrigToExp",
  "TrimmedMean",
  "TrimmedVariance",
  "TropicalStormData",
  "True",
  "TrueQ",
  "TruncatedDistribution",
  "TruncatedPolyhedron",
  "TsallisQExponentialDistribution",
  "TsallisQGaussianDistribution",
  "TTest",
  "Tube",
  "TubeBezierCurveBox",
  "TubeBezierCurveBoxOptions",
  "TubeBox",
  "TubeBoxOptions",
  "TubeBSplineCurveBox",
  "TubeBSplineCurveBoxOptions",
  "Tuesday",
  "TukeyLambdaDistribution",
  "TukeyWindow",
  "TunnelData",
  "Tuples",
  "TuranGraph",
  "TuringMachine",
  "TuttePolynomial",
  "TwoWayRule",
  "Typed",
  "TypeDeclaration",
  "TypeEvaluate",
  "TypeHint",
  "TypeOf",
  "TypeSpecifier",
  "UnateQ",
  "Uncompress",
  "UnconstrainedParameters",
  "Undefined",
  "UnderBar",
  "Underflow",
  "Underlined",
  "Underoverscript",
  "UnderoverscriptBox",
  "UnderoverscriptBoxOptions",
  "Underscript",
  "UnderscriptBox",
  "UnderscriptBoxOptions",
  "UnderseaFeatureData",
  "UndirectedEdge",
  "UndirectedGraph",
  "UndirectedGraphQ",
  "UndoOptions",
  "UndoTrackedVariables",
  "Unequal",
  "UnequalTo",
  "Unevaluated",
  "UniformDistribution",
  "UniformGraphDistribution",
  "UniformPolyhedron",
  "UniformSumDistribution",
  "Uninstall",
  "Union",
  "UnionedEntityClass",
  "UnionPlus",
  "Unique",
  "UniqueElements",
  "UnitaryMatrixQ",
  "UnitBox",
  "UnitConvert",
  "UnitDimensions",
  "Unitize",
  "UnitRootTest",
  "UnitSimplify",
  "UnitStep",
  "UnitSystem",
  "UnitTriangle",
  "UnitVector",
  "UnitVectorLayer",
  "UnityDimensions",
  "UniverseModelData",
  "UniversityData",
  "UnixTime",
  "UnlabeledTree",
  "UnmanageObject",
  "Unprotect",
  "UnregisterExternalEvaluator",
  "UnsameQ",
  "UnsavedVariables",
  "Unset",
  "UnsetShared",
  "Until",
  "UntrackedVariables",
  "Up",
  "UpArrow",
  "UpArrowBar",
  "UpArrowDownArrow",
  "Update",
  "UpdateDynamicObjects",
  "UpdateDynamicObjectsSynchronous",
  "UpdateInterval",
  "UpdatePacletSites",
  "UpdateSearchIndex",
  "UpDownArrow",
  "UpEquilibrium",
  "UpperCaseQ",
  "UpperLeftArrow",
  "UpperRightArrow",
  "UpperTriangularize",
  "UpperTriangularMatrix",
  "UpperTriangularMatrixQ",
  "Upsample",
  "UpSet",
  "UpSetDelayed",
  "UpTee",
  "UpTeeArrow",
  "UpTo",
  "UpValues",
  "URL",
  "URLBuild",
  "URLDecode",
  "URLDispatcher",
  "URLDownload",
  "URLDownloadSubmit",
  "URLEncode",
  "URLExecute",
  "URLExpand",
  "URLFetch",
  "URLFetchAsynchronous",
  "URLParse",
  "URLQueryDecode",
  "URLQueryEncode",
  "URLRead",
  "URLResponseTime",
  "URLSave",
  "URLSaveAsynchronous",
  "URLShorten",
  "URLSubmit",
  "UseEmbeddedLibrary",
  "UseGraphicsRange",
  "UserDefinedWavelet",
  "Using",
  "UsingFrontEnd",
  "UtilityFunction",
  "V2Get",
  "ValenceErrorHandling",
  "ValenceFilling",
  "ValidationLength",
  "ValidationSet",
  "ValueBox",
  "ValueBoxOptions",
  "ValueDimensions",
  "ValueForm",
  "ValuePreprocessingFunction",
  "ValueQ",
  "Values",
  "ValuesData",
  "VandermondeMatrix",
  "Variables",
  "Variance",
  "VarianceEquivalenceTest",
  "VarianceEstimatorFunction",
  "VarianceGammaDistribution",
  "VarianceGammaPointProcess",
  "VarianceTest",
  "VariogramFunction",
  "VariogramModel",
  "VectorAngle",
  "VectorAround",
  "VectorAspectRatio",
  "VectorColorFunction",
  "VectorColorFunctionScaling",
  "VectorDensityPlot",
  "VectorDisplacementPlot",
  "VectorDisplacementPlot3D",
  "VectorGlyphData",
  "VectorGreater",
  "VectorGreaterEqual",
  "VectorLess",
  "VectorLessEqual",
  "VectorMarkers",
  "VectorPlot",
  "VectorPlot3D",
  "VectorPoints",
  "VectorQ",
  "VectorRange",
  "Vectors",
  "VectorScale",
  "VectorScaling",
  "VectorSizes",
  "VectorStyle",
  "Vee",
  "Verbatim",
  "Verbose",
  "VerificationTest",
  "VerifyConvergence",
  "VerifyDerivedKey",
  "VerifyDigitalSignature",
  "VerifyFileSignature",
  "VerifyInterpretation",
  "VerifySecurityCertificates",
  "VerifySolutions",
  "VerifyTestAssumptions",
  "VersionedPreferences",
  "VertexAdd",
  "VertexCapacity",
  "VertexChromaticNumber",
  "VertexColors",
  "VertexComponent",
  "VertexConnectivity",
  "VertexContract",
  "VertexCoordinateRules",
  "VertexCoordinates",
  "VertexCorrelationSimilarity",
  "VertexCosineSimilarity",
  "VertexCount",
  "VertexCoverQ",
  "VertexDataCoordinates",
  "VertexDegree",
  "VertexDelete",
  "VertexDiceSimilarity",
  "VertexEccentricity",
  "VertexInComponent",
  "VertexInComponentGraph",
  "VertexInDegree",
  "VertexIndex",
  "VertexJaccardSimilarity",
  "VertexLabeling",
  "VertexLabels",
  "VertexLabelStyle",
  "VertexList",
  "VertexNormals",
  "VertexOutComponent",
  "VertexOutComponentGraph",
  "VertexOutDegree",
  "VertexQ",
  "VertexRenderingFunction",
  "VertexReplace",
  "VertexShape",
  "VertexShapeFunction",
  "VertexSize",
  "VertexStyle",
  "VertexTextureCoordinates",
  "VertexTransitiveGraphQ",
  "VertexWeight",
  "VertexWeightedGraphQ",
  "Vertical",
  "VerticalBar",
  "VerticalForm",
  "VerticalGauge",
  "VerticalSeparator",
  "VerticalSlider",
  "VerticalTilde",
  "Video",
  "VideoCapture",
  "VideoCombine",
  "VideoDelete",
  "VideoEncoding",
  "VideoExtractFrames",
  "VideoFrameList",
  "VideoFrameMap",
  "VideoGenerator",
  "VideoInsert",
  "VideoIntervals",
  "VideoJoin",
  "VideoMap",
  "VideoMapList",
  "VideoMapTimeSeries",
  "VideoPadding",
  "VideoPause",
  "VideoPlay",
  "VideoQ",
  "VideoRecord",
  "VideoReplace",
  "VideoScreenCapture",
  "VideoSplit",
  "VideoStop",
  "VideoStream",
  "VideoStreams",
  "VideoTimeStretch",
  "VideoTrackSelection",
  "VideoTranscode",
  "VideoTransparency",
  "VideoTrim",
  "ViewAngle",
  "ViewCenter",
  "ViewMatrix",
  "ViewPoint",
  "ViewPointSelectorSettings",
  "ViewPort",
  "ViewProjection",
  "ViewRange",
  "ViewVector",
  "ViewVertical",
  "VirtualGroupData",
  "Visible",
  "VisibleCell",
  "VoiceStyleData",
  "VoigtDistribution",
  "VolcanoData",
  "Volume",
  "VonMisesDistribution",
  "VoronoiMesh",
  "WaitAll",
  "WaitAsynchronousTask",
  "WaitNext",
  "WaitUntil",
  "WakebyDistribution",
  "WalleniusHypergeometricDistribution",
  "WaringYuleDistribution",
  "WarpingCorrespondence",
  "WarpingDistance",
  "WatershedComponents",
  "WatsonUSquareTest",
  "WattsStrogatzGraphDistribution",
  "WaveletBestBasis",
  "WaveletFilterCoefficients",
  "WaveletImagePlot",
  "WaveletListPlot",
  "WaveletMapIndexed",
  "WaveletMatrixPlot",
  "WaveletPhi",
  "WaveletPsi",
  "WaveletScale",
  "WaveletScalogram",
  "WaveletThreshold",
  "WavePDEComponent",
  "WeaklyConnectedComponents",
  "WeaklyConnectedGraphComponents",
  "WeaklyConnectedGraphQ",
  "WeakStationarity",
  "WeatherData",
  "WeatherForecastData",
  "WebAudioSearch",
  "WebColumn",
  "WebElementObject",
  "WeberE",
  "WebExecute",
  "WebImage",
  "WebImageSearch",
  "WebItem",
  "WebPageMetaInformation",
  "WebRow",
  "WebSearch",
  "WebSessionObject",
  "WebSessions",
  "WebWindowObject",
  "Wedge",
  "Wednesday",
  "WeibullDistribution",
  "WeierstrassE1",
  "WeierstrassE2",
  "WeierstrassE3",
  "WeierstrassEta1",
  "WeierstrassEta2",
  "WeierstrassEta3",
  "WeierstrassHalfPeriods",
  "WeierstrassHalfPeriodW1",
  "WeierstrassHalfPeriodW2",
  "WeierstrassHalfPeriodW3",
  "WeierstrassInvariantG2",
  "WeierstrassInvariantG3",
  "WeierstrassInvariants",
  "WeierstrassP",
  "WeierstrassPPrime",
  "WeierstrassSigma",
  "WeierstrassZeta",
  "WeightedAdjacencyGraph",
  "WeightedAdjacencyMatrix",
  "WeightedData",
  "WeightedGraphQ",
  "Weights",
  "WelchWindow",
  "WheelGraph",
  "WhenEvent",
  "Which",
  "While",
  "White",
  "WhiteNoiseProcess",
  "WhitePoint",
  "Whitespace",
  "WhitespaceCharacter",
  "WhittakerM",
  "WhittakerW",
  "WholeCellGroupOpener",
  "WienerFilter",
  "WienerProcess",
  "WignerD",
  "WignerSemicircleDistribution",
  "WikidataData",
  "WikidataSearch",
  "WikipediaData",
  "WikipediaSearch",
  "WilksW",
  "WilksWTest",
  "WindDirectionData",
  "WindingCount",
  "WindingPolygon",
  "WindowClickSelect",
  "WindowElements",
  "WindowFloating",
  "WindowFrame",
  "WindowFrameElements",
  "WindowMargins",
  "WindowMovable",
  "WindowOpacity",
  "WindowPersistentStyles",
  "WindowSelected",
  "WindowSize",
  "WindowStatusArea",
  "WindowTitle",
  "WindowToolbars",
  "WindowWidth",
  "WindSpeedData",
  "WindVectorData",
  "WinsorizedMean",
  "WinsorizedVariance",
  "WishartMatrixDistribution",
  "With",
  "WithCleanup",
  "WithLock",
  "WolframAlpha",
  "WolframAlphaDate",
  "WolframAlphaQuantity",
  "WolframAlphaResult",
  "WolframCloudSettings",
  "WolframLanguageData",
  "Word",
  "WordBoundary",
  "WordCharacter",
  "WordCloud",
  "WordCount",
  "WordCounts",
  "WordData",
  "WordDefinition",
  "WordFrequency",
  "WordFrequencyData",
  "WordList",
  "WordOrientation",
  "WordSearch",
  "WordSelectionFunction",
  "WordSeparators",
  "WordSpacings",
  "WordStem",
  "WordTranslation",
  "WorkingPrecision",
  "WrapAround",
  "Write",
  "WriteLine",
  "WriteString",
  "Wronskian",
  "XMLElement",
  "XMLObject",
  "XMLTemplate",
  "Xnor",
  "Xor",
  "XYZColor",
  "Yellow",
  "Yesterday",
  "YuleDissimilarity",
  "ZernikeR",
  "ZeroSymmetric",
  "ZeroTest",
  "ZeroWidthTimes",
  "Zeta",
  "ZetaZero",
  "ZIPCodeData",
  "ZipfDistribution",
  "ZoomCenter",
  "ZoomFactor",
  "ZTest",
  "ZTransform",
  "$Aborted",
  "$ActivationGroupID",
  "$ActivationKey",
  "$ActivationUserRegistered",
  "$AddOnsDirectory",
  "$AllowDataUpdates",
  "$AllowExternalChannelFunctions",
  "$AllowInternet",
  "$AssertFunction",
  "$Assumptions",
  "$AsynchronousTask",
  "$AudioDecoders",
  "$AudioEncoders",
  "$AudioInputDevices",
  "$AudioOutputDevices",
  "$BaseDirectory",
  "$BasePacletsDirectory",
  "$BatchInput",
  "$BatchOutput",
  "$BlockchainBase",
  "$BoxForms",
  "$ByteOrdering",
  "$CacheBaseDirectory",
  "$Canceled",
  "$ChannelBase",
  "$CharacterEncoding",
  "$CharacterEncodings",
  "$CloudAccountName",
  "$CloudBase",
  "$CloudConnected",
  "$CloudConnection",
  "$CloudCreditsAvailable",
  "$CloudEvaluation",
  "$CloudExpressionBase",
  "$CloudObjectNameFormat",
  "$CloudObjectURLType",
  "$CloudRootDirectory",
  "$CloudSymbolBase",
  "$CloudUserID",
  "$CloudUserUUID",
  "$CloudVersion",
  "$CloudVersionNumber",
  "$CloudWolframEngineVersionNumber",
  "$CommandLine",
  "$CompilationTarget",
  "$CompilerEnvironment",
  "$ConditionHold",
  "$ConfiguredKernels",
  "$Context",
  "$ContextAliases",
  "$ContextPath",
  "$ControlActiveSetting",
  "$Cookies",
  "$CookieStore",
  "$CreationDate",
  "$CryptographicEllipticCurveNames",
  "$CurrentLink",
  "$CurrentTask",
  "$CurrentWebSession",
  "$DataStructures",
  "$DateStringFormat",
  "$DefaultAudioInputDevice",
  "$DefaultAudioOutputDevice",
  "$DefaultFont",
  "$DefaultFrontEnd",
  "$DefaultImagingDevice",
  "$DefaultKernels",
  "$DefaultLocalBase",
  "$DefaultLocalKernel",
  "$DefaultMailbox",
  "$DefaultNetworkInterface",
  "$DefaultPath",
  "$DefaultProxyRules",
  "$DefaultRemoteBatchSubmissionEnvironment",
  "$DefaultRemoteKernel",
  "$DefaultSystemCredentialStore",
  "$Display",
  "$DisplayFunction",
  "$DistributedContexts",
  "$DynamicEvaluation",
  "$Echo",
  "$EmbedCodeEnvironments",
  "$EmbeddableServices",
  "$EntityStores",
  "$Epilog",
  "$EvaluationCloudBase",
  "$EvaluationCloudObject",
  "$EvaluationEnvironment",
  "$ExportFormats",
  "$ExternalIdentifierTypes",
  "$ExternalStorageBase",
  "$Failed",
  "$FinancialDataSource",
  "$FontFamilies",
  "$FormatType",
  "$FrontEnd",
  "$FrontEndSession",
  "$GeneratedAssetLocation",
  "$GeoEntityTypes",
  "$GeoLocation",
  "$GeoLocationCity",
  "$GeoLocationCountry",
  "$GeoLocationPrecision",
  "$GeoLocationSource",
  "$HistoryLength",
  "$HomeDirectory",
  "$HTMLExportRules",
  "$HTTPCookies",
  "$HTTPRequest",
  "$IgnoreEOF",
  "$ImageFormattingWidth",
  "$ImageResolution",
  "$ImagingDevice",
  "$ImagingDevices",
  "$ImportFormats",
  "$IncomingMailSettings",
  "$InitialDirectory",
  "$Initialization",
  "$InitializationContexts",
  "$Input",
  "$InputFileName",
  "$InputStreamMethods",
  "$Inspector",
  "$InstallationDate",
  "$InstallationDirectory",
  "$InterfaceEnvironment",
  "$InterpreterTypes",
  "$IterationLimit",
  "$KernelCount",
  "$KernelID",
  "$Language",
  "$LaunchDirectory",
  "$LibraryPath",
  "$LicenseExpirationDate",
  "$LicenseID",
  "$LicenseProcesses",
  "$LicenseServer",
  "$LicenseSubprocesses",
  "$LicenseType",
  "$Line",
  "$Linked",
  "$LinkSupported",
  "$LoadedFiles",
  "$LocalBase",
  "$LocalSymbolBase",
  "$MachineAddresses",
  "$MachineDomain",
  "$MachineDomains",
  "$MachineEpsilon",
  "$MachineID",
  "$MachineName",
  "$MachinePrecision",
  "$MachineType",
  "$MaxDisplayedChildren",
  "$MaxExtraPrecision",
  "$MaxLicenseProcesses",
  "$MaxLicenseSubprocesses",
  "$MaxMachineNumber",
  "$MaxNumber",
  "$MaxPiecewiseCases",
  "$MaxPrecision",
  "$MaxRootDegree",
  "$MessageGroups",
  "$MessageList",
  "$MessagePrePrint",
  "$Messages",
  "$MinMachineNumber",
  "$MinNumber",
  "$MinorReleaseNumber",
  "$MinPrecision",
  "$MobilePhone",
  "$ModuleNumber",
  "$NetworkConnected",
  "$NetworkInterfaces",
  "$NetworkLicense",
  "$NewMessage",
  "$NewSymbol",
  "$NotebookInlineStorageLimit",
  "$Notebooks",
  "$NoValue",
  "$NumberMarks",
  "$Off",
  "$OperatingSystem",
  "$Output",
  "$OutputForms",
  "$OutputSizeLimit",
  "$OutputStreamMethods",
  "$Packages",
  "$ParentLink",
  "$ParentProcessID",
  "$PasswordFile",
  "$PatchLevelID",
  "$Path",
  "$PathnameSeparator",
  "$PerformanceGoal",
  "$Permissions",
  "$PermissionsGroupBase",
  "$PersistenceBase",
  "$PersistencePath",
  "$PipeSupported",
  "$PlotTheme",
  "$Post",
  "$Pre",
  "$PreferencesDirectory",
  "$PreInitialization",
  "$PrePrint",
  "$PreRead",
  "$PrintForms",
  "$PrintLiteral",
  "$Printout3DPreviewer",
  "$ProcessID",
  "$ProcessorCount",
  "$ProcessorType",
  "$ProductInformation",
  "$ProgramName",
  "$ProgressReporting",
  "$PublisherID",
  "$RandomGeneratorState",
  "$RandomState",
  "$RecursionLimit",
  "$RegisteredDeviceClasses",
  "$RegisteredUserName",
  "$ReleaseNumber",
  "$RequesterAddress",
  "$RequesterCloudUserID",
  "$RequesterCloudUserUUID",
  "$RequesterWolframID",
  "$RequesterWolframUUID",
  "$ResourceSystemBase",
  "$ResourceSystemPath",
  "$RootDirectory",
  "$ScheduledTask",
  "$ScriptCommandLine",
  "$ScriptInputString",
  "$SecuredAuthenticationKeyTokens",
  "$ServiceCreditsAvailable",
  "$Services",
  "$SessionID",
  "$SetParentLink",
  "$SharedFunctions",
  "$SharedVariables",
  "$SoundDisplay",
  "$SoundDisplayFunction",
  "$SourceLink",
  "$SSHAuthentication",
  "$SubtitleDecoders",
  "$SubtitleEncoders",
  "$SummaryBoxDataSizeLimit",
  "$SuppressInputFormHeads",
  "$SynchronousEvaluation",
  "$SyntaxHandler",
  "$System",
  "$SystemCharacterEncoding",
  "$SystemCredentialStore",
  "$SystemID",
  "$SystemMemory",
  "$SystemShell",
  "$SystemTimeZone",
  "$SystemWordLength",
  "$TargetSystems",
  "$TemplatePath",
  "$TemporaryDirectory",
  "$TemporaryPrefix",
  "$TestFileName",
  "$TextStyle",
  "$TimedOut",
  "$TimeUnit",
  "$TimeZone",
  "$TimeZoneEntity",
  "$TopDirectory",
  "$TraceOff",
  "$TraceOn",
  "$TracePattern",
  "$TracePostAction",
  "$TracePreAction",
  "$UnitSystem",
  "$Urgent",
  "$UserAddOnsDirectory",
  "$UserAgentLanguages",
  "$UserAgentMachine",
  "$UserAgentName",
  "$UserAgentOperatingSystem",
  "$UserAgentString",
  "$UserAgentVersion",
  "$UserBaseDirectory",
  "$UserBasePacletsDirectory",
  "$UserDocumentsDirectory",
  "$Username",
  "$UserName",
  "$UserURLBase",
  "$Version",
  "$VersionNumber",
  "$VideoDecoders",
  "$VideoEncoders",
  "$VoiceStyles",
  "$WolframDocumentsDirectory",
  "$WolframID",
  "$WolframUUID"
];
function ZJ(t) {
  const e = t.regex, r = /([2-9]|[1-2]\d|[3][0-5])\^\^/, n = /(\w*\.\w+|\w+\.\w*|\w+)/, a = /(\d*\.\d+|\d+\.\d*|\d+)/, i = e.either(e.concat(r, n), a), o = /``[+-]?(\d*\.\d+|\d+\.\d*|\d+)/, s = /`([+-]?(\d*\.\d+|\d+\.\d*|\d+))?/, l = e.either(o, s), u = /\*\^[+-]?\d+/, d = {
    className: "number",
    relevance: 0,
    begin: e.concat(
      i,
      e.optional(l),
      e.optional(u)
    )
  }, p = /[a-zA-Z$][a-zA-Z0-9$]*/, f = new Set(KJ), h = { variants: [
    {
      className: "builtin-symbol",
      begin: p,
      // for performance out of fear of regex.either(...Mathematica.SYSTEM_SYMBOLS)
      "on:begin": (S, E) => {
        f.has(S[0]) || E.ignoreMatch();
      }
    },
    {
      className: "symbol",
      relevance: 0,
      begin: p
    }
  ] }, g = {
    className: "named-character",
    begin: /\\\[[$a-zA-Z][$a-zA-Z0-9]+\]/
  }, v = {
    className: "operator",
    relevance: 0,
    begin: /[+\-*/,;.:@~=><&|_`'^?!%]+/
  }, m = {
    className: "pattern",
    relevance: 0,
    begin: /([a-zA-Z$][a-zA-Z0-9$]*)?_+([a-zA-Z$][a-zA-Z0-9$]*)?/
  }, _ = {
    className: "slot",
    relevance: 0,
    begin: /#[a-zA-Z$][a-zA-Z0-9$]*|#+[0-9]?/
  }, y = {
    className: "brace",
    relevance: 0,
    begin: /[[\](){}]/
  }, b = {
    className: "message-name",
    relevance: 0,
    begin: e.concat("::", p)
  };
  return {
    name: "Mathematica",
    aliases: [
      "mma",
      "wl"
    ],
    classNameAliases: {
      brace: "punctuation",
      pattern: "type",
      slot: "type",
      symbol: "variable",
      "named-character": "variable",
      "builtin-symbol": "built_in",
      "message-name": "string"
    },
    contains: [
      t.COMMENT(/\(\*/, /\*\)/, { contains: ["self"] }),
      m,
      _,
      b,
      h,
      g,
      t.QUOTE_STRING_MODE,
      d,
      v,
      y
    ]
  };
}
const Xae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ZJ
}, Symbol.toStringTag, { value: "Module" }));
function XJ(t) {
  const e = "('|\\.')+", r = {
    relevance: 0,
    contains: [{ begin: e }]
  };
  return {
    name: "Matlab",
    keywords: {
      keyword: "arguments break case catch classdef continue else elseif end enumeration events for function global if methods otherwise parfor persistent properties return spmd switch try while",
      built_in: "sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i|0 inf nan isnan isinf isfinite j|0 why compan gallery hadamard hankel hilb invhilb magic pascal rosser toeplitz vander wilkinson max min nanmax nanmin mean nanmean type table readtable writetable sortrows sort figure plot plot3 scatter scatter3 cellfun legend intersect ismember procrustes hold num2cell "
    },
    illegal: '(//|"|#|/\\*|\\s+/\\w+)',
    contains: [
      {
        className: "function",
        beginKeywords: "function",
        end: "$",
        contains: [
          t.UNDERSCORE_TITLE_MODE,
          {
            className: "params",
            variants: [
              {
                begin: "\\(",
                end: "\\)"
              },
              {
                begin: "\\[",
                end: "\\]"
              }
            ]
          }
        ]
      },
      {
        className: "built_in",
        begin: /true|false/,
        relevance: 0,
        starts: r
      },
      {
        begin: "[a-zA-Z][a-zA-Z_0-9]*" + e,
        relevance: 0
      },
      {
        className: "number",
        begin: t.C_NUMBER_RE,
        relevance: 0,
        starts: r
      },
      {
        className: "string",
        begin: "'",
        end: "'",
        contains: [{ begin: "''" }]
      },
      {
        begin: /\]|\}|\)/,
        relevance: 0,
        starts: r
      },
      {
        className: "string",
        begin: '"',
        end: '"',
        contains: [{ begin: '""' }],
        starts: r
      },
      t.COMMENT("^\\s*%\\{\\s*$", "^\\s*%\\}\\s*$"),
      t.COMMENT("%", "$")
    ]
  };
}
const Qae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XJ
}, Symbol.toStringTag, { value: "Module" }));
function QJ(t) {
  return {
    name: "Maxima",
    keywords: {
      $pattern: "[A-Za-z_%][0-9A-Za-z_%]*",
      keyword: "if then else elseif for thru do while unless step in and or not",
      literal: "true false unknown inf minf ind und %e %i %pi %phi %gamma",
      built_in: " abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type alias allroots alphacharp alphanumericp amortization %and annuity_fv annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2 applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method av average_degree backtrace bars barsplot barsplot_description base64 base64_decode bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description break bug_report build_info|10 buildq build_sample burn cabs canform canten cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2 charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps chinese cholesky christof chromatic_index chromatic_number cint circulant_graph clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse collectterms columnop columnspace columnswap columnvector combination combine comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph complete_graph complex_number_p components compose_functions concan concat conjugate conmetderiv connected_components connect_vertices cons constant constantp constituent constvalue cont2part content continuous_freq contortion contour_plot contract contract_edge contragrad contrib_ode convert coord copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1 covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate declare declare_constvalue declare_dimensions declare_fundamental_dimensions declare_fundamental_units declare_qty declare_translated declare_unit_conversion declare_units declare_weights decsym defcon define define_alt_display define_variable defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten delta demo demoivre denom depends derivdegree derivlist describe desolve determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export dimacs_import dimension dimensionless dimensions dimensions_as_list direct directory discrete_freq disjoin disjointp disolate disp dispcon dispform dispfun dispJordan display disprule dispterms distrib divide divisors divsum dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors euler ev eval_string evenp every evolution evolution2d evundiff example exp expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li expintegral_shi expintegral_si explicit explose exponentialize express expt exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge file_search file_type fillarray findde find_root find_root_abs find_root_error find_root_rel first fix flatten flength float floatnump floor flower_snark flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string get_pixel get_plot_option get_tex_environment get_tex_environment_default get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart imetric implicit implicit_derivative implicit_plot indexed_tensor indices induced_subgraph inferencep inference_result infix info_display init_atensor init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions integrate intersect intersection intervalp intopois intosum invariant1 invariant2 inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2 kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit Lindstedt linear linearinterpol linear_program linear_regression line_graph linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country make_polygon make_random_state make_rgb_picture makeset make_string_input_stream make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker max max_clique max_degree max_flow maximize_lp max_independent_set max_matching maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext newdet new_graph newline newton new_variable next_prime nicedummies niceindices ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst nthroot nullity nullspace num numbered_boundaries numberp number_to_octets num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin oid_to_octets op opena opena_binary openr openr_binary openw openw_binary operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface parg parGosper parse_string parse_timedate part part2cont partfrac partition partition_set partpol path_digraph path_graph pathname_directory pathname_name pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod powerseries powerset prefix prev_prime primep primes principal_components print printf printfile print_graph printpois printprops prodrac product properties propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2 quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan radius random random_bernoulli random_beta random_binomial random_bipartite_graph random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform random_exp random_f random_gamma random_general_finite_discrete random_geometric random_graph random_graph1 random_gumbel random_hypergeometric random_laplace random_logistic random_lognormal random_negative_binomial random_network random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto random_permutation random_poisson random_rayleigh random_regular_graph random_student_t random_tournament random_tree random_weibull range rank rat ratcoef ratdenom ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus rem remainder remarray rembox remcomps remcon remcoord remfun remfunction remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions remove_fundamental_units remove_plot_option remove_vertex rempart remrule remsym remvalue rename rename_file reset reset_displays residue resolvante resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann rinvariant risch rk rmdir rncombine romberg room rootscontract round row rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1 spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot starplot_description status std std1 std_bernoulli std_beta std_binomial std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull stemplot stirling stirling1 stirling2 strim striml strimr string stringout stringp strong_components struve_h struve_l sublis sublist sublist_indices submatrix subsample subset subsetp subst substinpart subst_parallel substpart substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext symbolp symmdifference symmetricp system take_channel take_inference tan tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference test_normality test_proportion test_proportions_difference test_rank_sum test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep totalfourier totient tpartpol trace tracematrix trace_options transform_sample translate translate_file transpose treefale tree_reduce treillis treinat triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget ultraspherical underlying_graph undiff union unique uniteigenvectors unitp units unit_step unitvector unorder unsum untellrat untimer untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table absboxchar activecontexts adapt_depth additive adim aform algebraic algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top azimuth background background_color backsubst berlefact bernstein_explicit besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest border boundaries_array box boxchar breakup %c capping cauchysum cbrange cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics colorbox columns commutative complex cone context contexts contour contour_levels cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp cube current_let_rule_package cylinder data_file_name debugmode decreasing default_let_rule_package delay dependencies derivabbrev derivsubst detout diagmetric diff dim dimensions dispflag display2d|10 display_format_internal distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart edge_color edge_coloring edge_partition edge_type edge_width %edispflag elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine factlim factorflag factorial_expand factors_only fb feature features file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10 file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color fill_density filled_func fixed_vertices flipflag float2bf font font_size fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both head_length head_type height hypergeometric_representation %iargs ibase icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued integrate_use_rootsof integration_constant integration_constant_counter interpolate_color intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10 maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties opsubst optimprefix optionset orientation origin orthopoly_returns_intervals outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart png_file pochhammer_max_index points pointsize point_size points_joined point_type poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list poly_secondary_elimination_order poly_top_reduction_only posfun position powerdisp pred prederror primep_number_of_tests product_use_gamma program programmode promote_float_to_bigfloat prompt proportional_axes props psexpand ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type show_vertices show_weight simp simplified_output simplify_products simpproduct simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch tr track transcompile transform transform_xy translate_fast_arrays transparent transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest",
      symbol: "_ __ %|0 %%|0"
    },
    contains: [
      {
        className: "comment",
        begin: "/\\*",
        end: "\\*/",
        contains: ["self"]
      },
      t.QUOTE_STRING_MODE,
      {
        className: "number",
        relevance: 0,
        variants: [
          {
            // float number w/ exponent
            // hmm, I wonder if we ought to include other exponent markers?
            begin: "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Ee][-+]?\\d+\\b"
          },
          {
            // bigfloat number
            begin: "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Bb][-+]?\\d+\\b",
            relevance: 10
          },
          {
            // float number w/out exponent
            // Doesn't seem to recognize floats which start with '.'
            begin: "\\b(\\.\\d+|\\d+\\.\\d+)\\b"
          },
          {
            // integer in base up to 36
            // Doesn't seem to recognize integers which end with '.'
            begin: "\\b(\\d+|0[0-9A-Za-z]+)\\.?\\b"
          }
        ]
      }
    ],
    illegal: /@/
  };
}
const jae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: QJ
}, Symbol.toStringTag, { value: "Module" }));
function jJ(t) {
  return {
    name: "MEL",
    keywords: "int float string vector matrix if else switch case default while do for in break continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor animDisplay animView annotate appendStringArray applicationName applyAttrPreset applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem componentEditor compositingInterop computePolysetVolume condition cone confirmDialog connectAttr connectControl connectDynamic connectJoint connectionInfo constrain constrainValue constructionHistory container containsMultibyte contextInfo control convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected displayColor displayCull displayLevelOfDetail displayPref displayRGBColor displaySmoothness displayStats displayString displaySurface distanceDimContext distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor editorTemplate effector emit emitter enableDevice encodeString endString endsWith env equivalent equivalentTol erf error eval evalDeferred evalEcho event exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo filetest filletCurve filter filterCurve filterExpand filterStudioImport findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss geometryConstraint getApplicationVersionAsFloat getAttr getClassification getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation listNodeTypes listPanelCategories listRelatives listSets listTransforms listUnselected listerEditor loadFluid loadNewShelf loadPlugin loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration panelHistory paramDimContext paramDimension paramLocator parent parentConstraint particle particleExists particleInstancer particleRenderInfo partition pasteKey pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE registerPluginResource rehash reloadImage removeJoint removeMultiInstance removePanelCategory rename renameAttr renameSelectionList renameUI render renderGlobalsNode renderInfo renderLayerButton renderLayerParent renderLayerPostProcess renderLayerUnparent renderManip renderPartition renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor renderWindowSelectContext renderer reorder reorderDeformers requires reroot resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType selectedNodes selectionConnection separator setAttr setAttrEnumResource setAttrMapping setAttrNiceNameResource setConstraintRestPosition setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField shortNameOf showHelp showHidden showManipCtx showSelectionInTitle showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString stringToStringArray strip stripPrefixFromName stroke subdAutoProjection subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList textToShelf textureDisplacePlane textureHairColor texturePlacementContext textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper trace track trackCtx transferAttributes transformCompare transformLimits translator trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",
    illegal: "</",
    contains: [
      t.C_NUMBER_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "`",
        end: "`",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        // eats variables
        begin: /[$%@](\^\w\b|#\w+|[^\s\w{]|\{\w+\}|\w+)/
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ]
  };
}
const Jae = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: jJ
}, Symbol.toStringTag, { value: "Module" }));
function JJ(t) {
  const e = {
    keyword: "module use_module import_module include_module end_module initialise mutable initialize finalize finalise interface implementation pred mode func type inst solver any_pred any_func is semidet det nondet multi erroneous failure cc_nondet cc_multi typeclass instance where pragma promise external trace atomic or_else require_complete_switch require_det require_semidet require_multi require_nondet require_cc_multi require_cc_nondet require_erroneous require_failure",
    meta: (
      // pragma
      "inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing"
    ),
    built_in: "some all not if then else true fail false try catch catch_any semidet_true semidet_false semidet_fail impure_true impure semipure"
  }, r = t.COMMENT("%", "$"), n = {
    className: "number",
    begin: "0'.\\|0[box][0-9a-fA-F]*"
  }, a = t.inherit(t.APOS_STRING_MODE, { relevance: 0 }), i = t.inherit(t.QUOTE_STRING_MODE, { relevance: 0 }), o = {
    className: "subst",
    begin: "\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",
    relevance: 0
  };
  return i.contains = i.contains.slice(), i.contains.push(o), {
    name: "Mercury",
    aliases: [
      "m",
      "moo"
    ],
    keywords: e,
    contains: [
      {
        className: "built_in",
        variants: [
          { begin: "<=>" },
          {
            begin: "<=",
            relevance: 0
          },
          {
            begin: "=>",
            relevance: 0
          },
          { begin: "/\\\\" },
          { begin: "\\\\/" }
        ]
      },
      {
        className: "built_in",
        variants: [
          { begin: ":-\\|-->" },
          {
            begin: "=",
            relevance: 0
          }
        ]
      },
      r,
      t.C_BLOCK_COMMENT_MODE,
      n,
      t.NUMBER_MODE,
      a,
      i,
      {
        // relevance booster
        begin: /:-/
      },
      {
        // relevance booster
        begin: /\.$/
      }
    ]
  };
}
const eie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: JJ
}, Symbol.toStringTag, { value: "Module" }));
function eee(t) {
  return {
    name: "MIPS Assembly",
    case_insensitive: !0,
    aliases: ["mips"],
    keywords: {
      $pattern: "\\.?" + t.IDENT_RE,
      meta: (
        // GNU preprocs
        ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg "
      ),
      built_in: "$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 k0 k1 gp sp fp ra $f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 $f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt "
      // Coprocessor 0 registers
    },
    contains: [
      {
        className: "keyword",
        begin: "\\b(addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(\\.hb)?|jr(\\.hb)?|lbu?|lhu?|ll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|srlv?|subu?|sw[lr]?|xori?|wsbh|abs\\.[sd]|add\\.[sd]|alnv.ps|bc1[ft]l?|c\\.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et])\\.[sd]|(ceil|floor|round|trunc)\\.[lw]\\.[sd]|cfc1|cvt\\.d\\.[lsw]|cvt\\.l\\.[dsw]|cvt\\.ps\\.s|cvt\\.s\\.[dlw]|cvt\\.s\\.p[lu]|cvt\\.w\\.[dls]|div\\.[ds]|ldx?c1|luxc1|lwx?c1|madd\\.[sd]|mfc1|mov[fntz]?\\.[ds]|msub\\.[sd]|mth?c1|mul\\.[ds]|neg\\.[ds]|nmadd\\.[ds]|nmsub\\.[ds]|p[lu][lu]\\.ps|recip\\.fmt|r?sqrt\\.[ds]|sdx?c1|sub\\.[ds]|suxc1|swx?c1|break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|tlti?u?|tnei?|wait|wrpgpr)",
        end: "\\s"
      },
      // lines ending with ; or # aren't really comments, probably auto-detect fail
      t.COMMENT("[;#](?!\\s*$)", "$"),
      t.C_BLOCK_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "'",
        end: "[^\\\\]'",
        relevance: 0
      },
      {
        className: "title",
        begin: "\\|",
        end: "\\|",
        illegal: "\\n",
        relevance: 0
      },
      {
        className: "number",
        variants: [
          {
            // hex
            begin: "0x[0-9a-f]+"
          },
          {
            // bare number
            begin: "\\b-?\\d+"
          }
        ],
        relevance: 0
      },
      {
        className: "symbol",
        variants: [
          {
            // GNU MIPS syntax
            begin: "^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"
          },
          {
            // numbered local labels
            begin: "^\\s*[0-9]+:"
          },
          {
            // number local label reference (backwards, forwards)
            begin: "[0-9]+[bf]"
          }
        ],
        relevance: 0
      }
    ],
    // forward slashes are not allowed
    illegal: /\//
  };
}
const tie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: eee
}, Symbol.toStringTag, { value: "Module" }));
function tee(t) {
  return {
    name: "Mizar",
    keywords: "environ vocabularies notations constructors definitions registrations theorems schemes requirements begin end definition registration cluster existence pred func defpred deffunc theorem proof let take assume then thus hence ex for st holds consider reconsider such that and in provided of as from be being by means equals implies iff redefine define now not or attr is mode suppose per cases set thesis contradiction scheme reserve struct correctness compatibility coherence symmetry assymetry reflexivity irreflexivity connectedness uniqueness commutativity idempotence involutiveness projectivity",
    contains: [t.COMMENT("::", "$")]
  };
}
const rie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: tee
}, Symbol.toStringTag, { value: "Module" }));
function ree(t) {
  return {
    name: "Mojolicious",
    subLanguage: "xml",
    contains: [
      {
        className: "meta",
        begin: "^__(END|DATA)__$"
      },
      // mojolicious line
      {
        begin: "^\\s*%{1,2}={0,2}",
        end: "$",
        subLanguage: "perl"
      },
      // mojolicious block
      {
        begin: "<%{1,2}={0,2}",
        end: "={0,1}%>",
        subLanguage: "perl",
        excludeBegin: !0,
        excludeEnd: !0
      }
    ]
  };
}
const nie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ree
}, Symbol.toStringTag, { value: "Module" }));
function nee(t) {
  const e = {
    className: "number",
    relevance: 0,
    variants: [
      { begin: "[$][a-fA-F0-9]+" },
      t.NUMBER_MODE
    ]
  }, r = {
    variants: [
      { match: [
        /(function|method)/,
        /\s+/,
        t.UNDERSCORE_IDENT_RE
      ] }
    ],
    scope: {
      1: "keyword",
      3: "title.function"
    }
  }, n = {
    variants: [
      { match: [
        /(class|interface|extends|implements)/,
        /\s+/,
        t.UNDERSCORE_IDENT_RE
      ] }
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  };
  return {
    name: "Monkey",
    case_insensitive: !0,
    keywords: {
      keyword: [
        "public",
        "private",
        "property",
        "continue",
        "exit",
        "extern",
        "new",
        "try",
        "catch",
        "eachin",
        "not",
        "abstract",
        "final",
        "select",
        "case",
        "default",
        "const",
        "local",
        "global",
        "field",
        "end",
        "if",
        "then",
        "else",
        "elseif",
        "endif",
        "while",
        "wend",
        "repeat",
        "until",
        "forever",
        "for",
        "to",
        "step",
        "next",
        "return",
        "module",
        "inline",
        "throw",
        "import",
        // not positive, but these are not literals
        "and",
        "or",
        "shl",
        "shr",
        "mod"
      ],
      built_in: [
        "DebugLog",
        "DebugStop",
        "Error",
        "Print",
        "ACos",
        "ACosr",
        "ASin",
        "ASinr",
        "ATan",
        "ATan2",
        "ATan2r",
        "ATanr",
        "Abs",
        "Abs",
        "Ceil",
        "Clamp",
        "Clamp",
        "Cos",
        "Cosr",
        "Exp",
        "Floor",
        "Log",
        "Max",
        "Max",
        "Min",
        "Min",
        "Pow",
        "Sgn",
        "Sgn",
        "Sin",
        "Sinr",
        "Sqrt",
        "Tan",
        "Tanr",
        "Seed",
        "PI",
        "HALFPI",
        "TWOPI"
      ],
      literal: [
        "true",
        "false",
        "null"
      ]
    },
    illegal: /\/\*/,
    contains: [
      t.COMMENT("#rem", "#end"),
      t.COMMENT(
        "'",
        "$",
        { relevance: 0 }
      ),
      r,
      n,
      {
        className: "variable.language",
        begin: /\b(self|super)\b/
      },
      {
        className: "meta",
        begin: /\s*#/,
        end: "$",
        keywords: { keyword: "if else elseif endif end then" }
      },
      {
        match: [
          /^\s*/,
          /strict\b/
        ],
        scope: { 2: "meta" }
      },
      {
        beginKeywords: "alias",
        end: "=",
        contains: [t.UNDERSCORE_TITLE_MODE]
      },
      t.QUOTE_STRING_MODE,
      e
    ]
  };
}
const aie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: nee
}, Symbol.toStringTag, { value: "Module" }));
function aee(t) {
  const e = {
    keyword: (
      // Moonscript keywords
      "if then not for in while do return else elseif break continue switch and or unless when class extends super local import export from using"
    ),
    literal: "true false nil",
    built_in: "_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table"
  }, r = "[A-Za-z$_][0-9A-Za-z$_]*", n = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: e
  }, a = [
    t.inherit(
      t.C_NUMBER_MODE,
      { starts: {
        end: "(\\s*/)?",
        relevance: 0
      } }
    ),
    // a number tries to eat the following slash to prevent treating it as a regexp
    {
      className: "string",
      variants: [
        {
          begin: /'/,
          end: /'/,
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /"/,
          end: /"/,
          contains: [
            t.BACKSLASH_ESCAPE,
            n
          ]
        }
      ]
    },
    {
      className: "built_in",
      begin: "@__" + t.IDENT_RE
    },
    {
      begin: "@" + t.IDENT_RE
      // relevance booster on par with CoffeeScript
    },
    {
      begin: t.IDENT_RE + "\\\\" + t.IDENT_RE
      // inst\method
    }
  ];
  n.contains = a;
  const i = t.inherit(t.TITLE_MODE, { begin: r }), o = "(\\(.*\\)\\s*)?\\B[-=]>", s = {
    className: "params",
    begin: "\\([^\\(]",
    returnBegin: !0,
    /* We need another contained nameless mode to not have every nested
    pair of parens to be called "params" */
    contains: [
      {
        begin: /\(/,
        end: /\)/,
        keywords: e,
        contains: ["self"].concat(a)
      }
    ]
  };
  return {
    name: "MoonScript",
    aliases: ["moon"],
    keywords: e,
    illegal: /\/\*/,
    contains: a.concat([
      t.COMMENT("--", "$"),
      {
        className: "function",
        // function: -> =>
        begin: "^\\s*" + r + "\\s*=\\s*" + o,
        end: "[-=]>",
        returnBegin: !0,
        contains: [
          i,
          s
        ]
      },
      {
        begin: /[\(,:=]\s*/,
        // anonymous function start
        relevance: 0,
        contains: [
          {
            className: "function",
            begin: o,
            end: "[-=]>",
            returnBegin: !0,
            contains: [s]
          }
        ]
      },
      {
        className: "class",
        beginKeywords: "class",
        end: "$",
        illegal: /[:="\[\]]/,
        contains: [
          {
            beginKeywords: "extends",
            endsWithParent: !0,
            illegal: /[:="\[\]]/,
            contains: [i]
          },
          i
        ]
      },
      {
        className: "name",
        // table
        begin: r + ":",
        end: ":",
        returnBegin: !0,
        returnEnd: !0,
        relevance: 0
      }
    ])
  };
}
const iie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: aee
}, Symbol.toStringTag, { value: "Module" }));
function iee(t) {
  return {
    name: "N1QL",
    case_insensitive: !0,
    contains: [
      {
        beginKeywords: "build create index delete drop explain infer|10 insert merge prepare select update upsert|10",
        end: /;/,
        keywords: {
          keyword: [
            "all",
            "alter",
            "analyze",
            "and",
            "any",
            "array",
            "as",
            "asc",
            "begin",
            "between",
            "binary",
            "boolean",
            "break",
            "bucket",
            "build",
            "by",
            "call",
            "case",
            "cast",
            "cluster",
            "collate",
            "collection",
            "commit",
            "connect",
            "continue",
            "correlate",
            "cover",
            "create",
            "database",
            "dataset",
            "datastore",
            "declare",
            "decrement",
            "delete",
            "derived",
            "desc",
            "describe",
            "distinct",
            "do",
            "drop",
            "each",
            "element",
            "else",
            "end",
            "every",
            "except",
            "exclude",
            "execute",
            "exists",
            "explain",
            "fetch",
            "first",
            "flatten",
            "for",
            "force",
            "from",
            "function",
            "grant",
            "group",
            "gsi",
            "having",
            "if",
            "ignore",
            "ilike",
            "in",
            "include",
            "increment",
            "index",
            "infer",
            "inline",
            "inner",
            "insert",
            "intersect",
            "into",
            "is",
            "join",
            "key",
            "keys",
            "keyspace",
            "known",
            "last",
            "left",
            "let",
            "letting",
            "like",
            "limit",
            "lsm",
            "map",
            "mapping",
            "matched",
            "materialized",
            "merge",
            "minus",
            "namespace",
            "nest",
            "not",
            "number",
            "object",
            "offset",
            "on",
            "option",
            "or",
            "order",
            "outer",
            "over",
            "parse",
            "partition",
            "password",
            "path",
            "pool",
            "prepare",
            "primary",
            "private",
            "privilege",
            "procedure",
            "public",
            "raw",
            "realm",
            "reduce",
            "rename",
            "return",
            "returning",
            "revoke",
            "right",
            "role",
            "rollback",
            "satisfies",
            "schema",
            "select",
            "self",
            "semi",
            "set",
            "show",
            "some",
            "start",
            "statistics",
            "string",
            "system",
            "then",
            "to",
            "transaction",
            "trigger",
            "truncate",
            "under",
            "union",
            "unique",
            "unknown",
            "unnest",
            "unset",
            "update",
            "upsert",
            "use",
            "user",
            "using",
            "validate",
            "value",
            "valued",
            "values",
            "via",
            "view",
            "when",
            "where",
            "while",
            "with",
            "within",
            "work",
            "xor"
          ],
          literal: [
            "true",
            "false",
            "null",
            "missing|5"
          ],
          built_in: [
            "array_agg",
            "array_append",
            "array_concat",
            "array_contains",
            "array_count",
            "array_distinct",
            "array_ifnull",
            "array_length",
            "array_max",
            "array_min",
            "array_position",
            "array_prepend",
            "array_put",
            "array_range",
            "array_remove",
            "array_repeat",
            "array_replace",
            "array_reverse",
            "array_sort",
            "array_sum",
            "avg",
            "count",
            "max",
            "min",
            "sum",
            "greatest",
            "least",
            "ifmissing",
            "ifmissingornull",
            "ifnull",
            "missingif",
            "nullif",
            "ifinf",
            "ifnan",
            "ifnanorinf",
            "naninf",
            "neginfif",
            "posinfif",
            "clock_millis",
            "clock_str",
            "date_add_millis",
            "date_add_str",
            "date_diff_millis",
            "date_diff_str",
            "date_part_millis",
            "date_part_str",
            "date_trunc_millis",
            "date_trunc_str",
            "duration_to_str",
            "millis",
            "str_to_millis",
            "millis_to_str",
            "millis_to_utc",
            "millis_to_zone_name",
            "now_millis",
            "now_str",
            "str_to_duration",
            "str_to_utc",
            "str_to_zone_name",
            "decode_json",
            "encode_json",
            "encoded_size",
            "poly_length",
            "base64",
            "base64_encode",
            "base64_decode",
            "meta",
            "uuid",
            "abs",
            "acos",
            "asin",
            "atan",
            "atan2",
            "ceil",
            "cos",
            "degrees",
            "e",
            "exp",
            "ln",
            "log",
            "floor",
            "pi",
            "power",
            "radians",
            "random",
            "round",
            "sign",
            "sin",
            "sqrt",
            "tan",
            "trunc",
            "object_length",
            "object_names",
            "object_pairs",
            "object_inner_pairs",
            "object_values",
            "object_inner_values",
            "object_add",
            "object_put",
            "object_remove",
            "object_unwrap",
            "regexp_contains",
            "regexp_like",
            "regexp_position",
            "regexp_replace",
            "contains",
            "initcap",
            "length",
            "lower",
            "ltrim",
            "position",
            "repeat",
            "replace",
            "rtrim",
            "split",
            "substr",
            "title",
            "trim",
            "upper",
            "isarray",
            "isatom",
            "isboolean",
            "isnumber",
            "isobject",
            "isstring",
            "type",
            "toarray",
            "toatom",
            "toboolean",
            "tonumber",
            "toobject",
            "tostring"
          ]
        },
        contains: [
          {
            className: "string",
            begin: "'",
            end: "'",
            contains: [t.BACKSLASH_ESCAPE]
          },
          {
            className: "string",
            begin: '"',
            end: '"',
            contains: [t.BACKSLASH_ESCAPE]
          },
          {
            className: "symbol",
            begin: "`",
            end: "`",
            contains: [t.BACKSLASH_ESCAPE]
          },
          t.C_NUMBER_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      t.C_BLOCK_COMMENT_MODE
    ]
  };
}
const oie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: iee
}, Symbol.toStringTag, { value: "Module" }));
function oee(t) {
  const e = t.regex, r = {
    className: "variable",
    variants: [
      { begin: /\$\d+/ },
      { begin: /\$\{\w+\}/ },
      { begin: e.concat(/[$@]/, t.UNDERSCORE_IDENT_RE) }
    ]
  }, a = {
    endsWithParent: !0,
    keywords: {
      $pattern: /[a-z_]{2,}|\/dev\/poll/,
      literal: [
        "on",
        "off",
        "yes",
        "no",
        "true",
        "false",
        "none",
        "blocked",
        "debug",
        "info",
        "notice",
        "warn",
        "error",
        "crit",
        "select",
        "break",
        "last",
        "permanent",
        "redirect",
        "kqueue",
        "rtsig",
        "epoll",
        "poll",
        "/dev/poll"
      ]
    },
    relevance: 0,
    illegal: "=>",
    contains: [
      t.HASH_COMMENT_MODE,
      {
        className: "string",
        contains: [
          t.BACKSLASH_ESCAPE,
          r
        ],
        variants: [
          {
            begin: /"/,
            end: /"/
          },
          {
            begin: /'/,
            end: /'/
          }
        ]
      },
      // this swallows entire URLs to avoid detecting numbers within
      {
        begin: "([a-z]+):/",
        end: "\\s",
        endsWithParent: !0,
        excludeEnd: !0,
        contains: [r]
      },
      {
        className: "regexp",
        contains: [
          t.BACKSLASH_ESCAPE,
          r
        ],
        variants: [
          {
            begin: "\\s\\^",
            end: "\\s|\\{|;",
            returnEnd: !0
          },
          // regexp locations (~, ~*)
          {
            begin: "~\\*?\\s+",
            end: "\\s|\\{|;",
            returnEnd: !0
          },
          // *.example.com
          { begin: "\\*(\\.[a-z\\-]+)+" },
          // sub.example.*
          { begin: "([a-z\\-]+\\.)+\\*" }
        ]
      },
      // IP
      {
        className: "number",
        begin: "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"
      },
      // units
      {
        className: "number",
        begin: "\\b\\d+[kKmMgGdshdwy]?\\b",
        relevance: 0
      },
      r
    ]
  };
  return {
    name: "Nginx config",
    aliases: ["nginxconf"],
    contains: [
      t.HASH_COMMENT_MODE,
      {
        beginKeywords: "upstream location",
        end: /;|\{/,
        contains: a.contains,
        keywords: { section: "upstream location" }
      },
      {
        className: "section",
        begin: e.concat(t.UNDERSCORE_IDENT_RE + e.lookahead(/\s+\{/)),
        relevance: 0
      },
      {
        begin: e.lookahead(t.UNDERSCORE_IDENT_RE + "\\s"),
        end: ";|\\{",
        contains: [
          {
            className: "attribute",
            begin: t.UNDERSCORE_IDENT_RE,
            starts: a
          }
        ],
        relevance: 0
      }
    ],
    illegal: "[^\\s\\}\\{]"
  };
}
const sie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oee
}, Symbol.toStringTag, { value: "Module" }));
function see(t) {
  return {
    name: "Nim",
    keywords: {
      keyword: [
        "addr",
        "and",
        "as",
        "asm",
        "bind",
        "block",
        "break",
        "case",
        "cast",
        "concept",
        "const",
        "continue",
        "converter",
        "defer",
        "discard",
        "distinct",
        "div",
        "do",
        "elif",
        "else",
        "end",
        "enum",
        "except",
        "export",
        "finally",
        "for",
        "from",
        "func",
        "generic",
        "guarded",
        "if",
        "import",
        "in",
        "include",
        "interface",
        "is",
        "isnot",
        "iterator",
        "let",
        "macro",
        "method",
        "mixin",
        "mod",
        "nil",
        "not",
        "notin",
        "object",
        "of",
        "or",
        "out",
        "proc",
        "ptr",
        "raise",
        "ref",
        "return",
        "shared",
        "shl",
        "shr",
        "static",
        "template",
        "try",
        "tuple",
        "type",
        "using",
        "var",
        "when",
        "while",
        "with",
        "without",
        "xor",
        "yield"
      ],
      literal: [
        "true",
        "false"
      ],
      type: [
        "int",
        "int8",
        "int16",
        "int32",
        "int64",
        "uint",
        "uint8",
        "uint16",
        "uint32",
        "uint64",
        "float",
        "float32",
        "float64",
        "bool",
        "char",
        "string",
        "cstring",
        "pointer",
        "expr",
        "stmt",
        "void",
        "auto",
        "any",
        "range",
        "array",
        "openarray",
        "varargs",
        "seq",
        "set",
        "clong",
        "culong",
        "cchar",
        "cschar",
        "cshort",
        "cint",
        "csize",
        "clonglong",
        "cfloat",
        "cdouble",
        "clongdouble",
        "cuchar",
        "cushort",
        "cuint",
        "culonglong",
        "cstringarray",
        "semistatic"
      ],
      built_in: [
        "stdin",
        "stdout",
        "stderr",
        "result"
      ]
    },
    contains: [
      {
        className: "meta",
        // Actually pragma
        begin: /\{\./,
        end: /\.\}/,
        relevance: 10
      },
      {
        className: "string",
        begin: /[a-zA-Z]\w*"/,
        end: /"/,
        contains: [{ begin: /""/ }]
      },
      {
        className: "string",
        begin: /([a-zA-Z]\w*)?"""/,
        end: /"""/
      },
      t.QUOTE_STRING_MODE,
      {
        className: "type",
        begin: /\b[A-Z]\w+\b/,
        relevance: 0
      },
      {
        className: "number",
        relevance: 0,
        variants: [
          { begin: /\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/ },
          { begin: /\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/ },
          { begin: /\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/ },
          { begin: /\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/ }
        ]
      },
      t.HASH_COMMENT_MODE
    ]
  };
}
const lie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: see
}, Symbol.toStringTag, { value: "Module" }));
function lee(t) {
  const e = t.regex, r = {
    keyword: [
      "assert",
      "else",
      "if",
      "in",
      "inherit",
      "let",
      "or",
      "rec",
      "then",
      "with"
    ],
    literal: [
      "true",
      "false",
      "null"
    ],
    built_in: [
      // toplevel builtins
      "abort",
      "baseNameOf",
      "builtins",
      "derivation",
      "derivationStrict",
      "dirOf",
      "fetchGit",
      "fetchMercurial",
      "fetchTarball",
      "fetchTree",
      "fromTOML",
      "import",
      "isNull",
      "map",
      "placeholder",
      "removeAttrs",
      "scopedImport",
      "throw",
      "toString"
    ]
  }, n = {
    scope: "built_in",
    match: e.either(...[
      "abort",
      "add",
      "addDrvOutputDependencies",
      "addErrorContext",
      "all",
      "any",
      "appendContext",
      "attrNames",
      "attrValues",
      "baseNameOf",
      "bitAnd",
      "bitOr",
      "bitXor",
      "break",
      "builtins",
      "catAttrs",
      "ceil",
      "compareVersions",
      "concatLists",
      "concatMap",
      "concatStringsSep",
      "convertHash",
      "currentSystem",
      "currentTime",
      "deepSeq",
      "derivation",
      "derivationStrict",
      "dirOf",
      "div",
      "elem",
      "elemAt",
      "false",
      "fetchGit",
      "fetchMercurial",
      "fetchTarball",
      "fetchTree",
      "fetchurl",
      "filter",
      "filterSource",
      "findFile",
      "flakeRefToString",
      "floor",
      "foldl'",
      "fromJSON",
      "fromTOML",
      "functionArgs",
      "genList",
      "genericClosure",
      "getAttr",
      "getContext",
      "getEnv",
      "getFlake",
      "groupBy",
      "hasAttr",
      "hasContext",
      "hashFile",
      "hashString",
      "head",
      "import",
      "intersectAttrs",
      "isAttrs",
      "isBool",
      "isFloat",
      "isFunction",
      "isInt",
      "isList",
      "isNull",
      "isPath",
      "isString",
      "langVersion",
      "length",
      "lessThan",
      "listToAttrs",
      "map",
      "mapAttrs",
      "match",
      "mul",
      "nixPath",
      "nixVersion",
      "null",
      "parseDrvName",
      "parseFlakeRef",
      "partition",
      "path",
      "pathExists",
      "placeholder",
      "readDir",
      "readFile",
      "readFileType",
      "removeAttrs",
      "replaceStrings",
      "scopedImport",
      "seq",
      "sort",
      "split",
      "splitVersion",
      "storeDir",
      "storePath",
      "stringLength",
      "sub",
      "substring",
      "tail",
      "throw",
      "toFile",
      "toJSON",
      "toPath",
      "toString",
      "toXML",
      "trace",
      "traceVerbose",
      "true",
      "tryEval",
      "typeOf",
      "unsafeDiscardOutputDependency",
      "unsafeDiscardStringContext",
      "unsafeGetAttrPos",
      "warn",
      "zipAttrsWith"
    ].map((E) => `builtins\\.${E}`)),
    relevance: 10
  }, a = "[A-Za-z_][A-Za-z0-9_'-]*", i = {
    scope: "symbol",
    match: new RegExp(`<${a}(/${a})*>`)
  }, o = "[A-Za-z0-9_\\+\\.-]+", s = {
    scope: "symbol",
    match: new RegExp(`(\\.\\.|\\.|~)?/(${o})?(/${o})*(?=[\\s;])`)
  }, l = e.either("==", "=", "\\+\\+", "\\+", "<=", "<\\|", "<", ">=", ">", "->", "//", "/", "!=", "!", "\\|\\|", "\\|>", "\\?", "\\*", "&&"), u = {
    scope: "operator",
    match: e.concat(l, /(?!-)/),
    relevance: 0
  }, c = {
    scope: "number",
    match: new RegExp(`${t.NUMBER_RE}(?!-)`),
    relevance: 0
  }, d = {
    variants: [
      {
        scope: "operator",
        beforeMatch: /\s/,
        // The (?!>) is used to ensure this doesn't collide with the '->' operator
        begin: /-(?!>)/
      },
      {
        begin: [
          new RegExp(`${t.NUMBER_RE}`),
          /-/,
          /(?!>)/
        ],
        beginScope: {
          1: "number",
          2: "operator"
        }
      },
      {
        begin: [
          l,
          /-/,
          /(?!>)/
        ],
        beginScope: {
          1: "operator",
          2: "operator"
        }
      }
    ],
    relevance: 0
  }, p = {
    beforeMatch: /(^|\{|;)\s*/,
    begin: new RegExp(`${a}(\\.${a})*\\s*=(?!=)`),
    returnBegin: !0,
    relevance: 0,
    contains: [
      {
        scope: "attr",
        match: new RegExp(`${a}(\\.${a})*(?=\\s*=)`),
        relevance: 0.2
      }
    ]
  }, f = {
    scope: "char.escape",
    match: /\\\$/
  }, h = {
    scope: "char.escape",
    match: /''\$/
  }, g = {
    scope: "subst",
    begin: /\$\{/,
    end: /\}/,
    keywords: r
  }, v = {
    scope: "char.escape",
    match: /'''/
  }, m = {
    scope: "char.escape",
    match: /\\(?!\$)./
  }, _ = {
    scope: "string",
    variants: [
      {
        begin: "''",
        end: "''",
        contains: [
          h,
          g,
          v,
          m
        ]
      },
      {
        begin: '"',
        end: '"',
        contains: [
          f,
          g,
          m
        ]
      }
    ]
  }, y = {
    scope: "params",
    match: new RegExp(`${a}\\s*:(?=\\s)`)
  }, b = [
    c,
    t.HASH_COMMENT_MODE,
    t.C_BLOCK_COMMENT_MODE,
    t.COMMENT(
      /\/\*\*(?!\/)/,
      /\*\//,
      {
        subLanguage: "markdown",
        relevance: 0
      }
    ),
    n,
    _,
    i,
    s,
    y,
    p,
    d,
    u
  ];
  g.contains = b;
  const S = [
    {
      scope: "meta.prompt",
      match: /^nix-repl>(?=\s)/,
      relevance: 10
    },
    {
      scope: "meta",
      beforeMatch: /\s+/,
      begin: /:([a-z]+|\?)/
    }
  ];
  return {
    name: "Nix",
    aliases: ["nixos"],
    keywords: r,
    contains: b.concat(S)
  };
}
const uie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lee
}, Symbol.toStringTag, { value: "Module" }));
function uee(t) {
  const e = t.regex, r = [
    "ADMINTOOLS",
    "APPDATA",
    "CDBURN_AREA",
    "CMDLINE",
    "COMMONFILES32",
    "COMMONFILES64",
    "COMMONFILES",
    "COOKIES",
    "DESKTOP",
    "DOCUMENTS",
    "EXEDIR",
    "EXEFILE",
    "EXEPATH",
    "FAVORITES",
    "FONTS",
    "HISTORY",
    "HWNDPARENT",
    "INSTDIR",
    "INTERNET_CACHE",
    "LANGUAGE",
    "LOCALAPPDATA",
    "MUSIC",
    "NETHOOD",
    "OUTDIR",
    "PICTURES",
    "PLUGINSDIR",
    "PRINTHOOD",
    "PROFILE",
    "PROGRAMFILES32",
    "PROGRAMFILES64",
    "PROGRAMFILES",
    "QUICKLAUNCH",
    "RECENT",
    "RESOURCES_LOCALIZED",
    "RESOURCES",
    "SENDTO",
    "SMPROGRAMS",
    "SMSTARTUP",
    "STARTMENU",
    "SYSDIR",
    "TEMP",
    "TEMPLATES",
    "VIDEOS",
    "WINDIR"
  ], n = [
    "ARCHIVE",
    "FILE_ATTRIBUTE_ARCHIVE",
    "FILE_ATTRIBUTE_NORMAL",
    "FILE_ATTRIBUTE_OFFLINE",
    "FILE_ATTRIBUTE_READONLY",
    "FILE_ATTRIBUTE_SYSTEM",
    "FILE_ATTRIBUTE_TEMPORARY",
    "HKCR",
    "HKCU",
    "HKDD",
    "HKEY_CLASSES_ROOT",
    "HKEY_CURRENT_CONFIG",
    "HKEY_CURRENT_USER",
    "HKEY_DYN_DATA",
    "HKEY_LOCAL_MACHINE",
    "HKEY_PERFORMANCE_DATA",
    "HKEY_USERS",
    "HKLM",
    "HKPD",
    "HKU",
    "IDABORT",
    "IDCANCEL",
    "IDIGNORE",
    "IDNO",
    "IDOK",
    "IDRETRY",
    "IDYES",
    "MB_ABORTRETRYIGNORE",
    "MB_DEFBUTTON1",
    "MB_DEFBUTTON2",
    "MB_DEFBUTTON3",
    "MB_DEFBUTTON4",
    "MB_ICONEXCLAMATION",
    "MB_ICONINFORMATION",
    "MB_ICONQUESTION",
    "MB_ICONSTOP",
    "MB_OK",
    "MB_OKCANCEL",
    "MB_RETRYCANCEL",
    "MB_RIGHT",
    "MB_RTLREADING",
    "MB_SETFOREGROUND",
    "MB_TOPMOST",
    "MB_USERICON",
    "MB_YESNO",
    "NORMAL",
    "OFFLINE",
    "READONLY",
    "SHCTX",
    "SHELL_CONTEXT",
    "SYSTEM|TEMPORARY"
  ], a = [
    "addincludedir",
    "addplugindir",
    "appendfile",
    "assert",
    "cd",
    "define",
    "delfile",
    "echo",
    "else",
    "endif",
    "error",
    "execute",
    "finalize",
    "getdllversion",
    "gettlbversion",
    "if",
    "ifdef",
    "ifmacrodef",
    "ifmacrondef",
    "ifndef",
    "include",
    "insertmacro",
    "macro",
    "macroend",
    "makensis",
    "packhdr",
    "searchparse",
    "searchreplace",
    "system",
    "tempfile",
    "undef",
    "uninstfinalize",
    "verbose",
    "warning"
  ], i = {
    className: "variable.constant",
    begin: e.concat(/\$/, e.either(...r))
  }, o = {
    // ${defines}
    className: "variable",
    begin: /\$+\{[\!\w.:-]+\}/
  }, s = {
    // $variables
    className: "variable",
    begin: /\$+\w[\w\.]*/,
    illegal: /\(\)\{\}/
  }, l = {
    // $(language_strings)
    className: "variable",
    begin: /\$+\([\w^.:!-]+\)/
  }, u = {
    // command parameters
    className: "params",
    begin: e.either(...n)
  }, c = {
    // !compiler_flags
    className: "keyword",
    begin: e.concat(
      /!/,
      e.either(...a)
    )
  }, d = {
    // $\n, $\r, $\t, $$
    className: "char.escape",
    begin: /\$(\\[nrt]|\$)/
  }, p = {
    // plug::ins
    className: "title.function",
    begin: /\w+::\w+/
  }, f = {
    className: "string",
    variants: [
      {
        begin: '"',
        end: '"'
      },
      {
        begin: "'",
        end: "'"
      },
      {
        begin: "`",
        end: "`"
      }
    ],
    illegal: /\n/,
    contains: [
      d,
      i,
      o,
      s,
      l
    ]
  }, h = [
    "Abort",
    "AddBrandingImage",
    "AddSize",
    "AllowRootDirInstall",
    "AllowSkipFiles",
    "AutoCloseWindow",
    "BGFont",
    "BGGradient",
    "BrandingText",
    "BringToFront",
    "Call",
    "CallInstDLL",
    "Caption",
    "ChangeUI",
    "CheckBitmap",
    "ClearErrors",
    "CompletedText",
    "ComponentText",
    "CopyFiles",
    "CRCCheck",
    "CreateDirectory",
    "CreateFont",
    "CreateShortCut",
    "Delete",
    "DeleteINISec",
    "DeleteINIStr",
    "DeleteRegKey",
    "DeleteRegValue",
    "DetailPrint",
    "DetailsButtonText",
    "DirText",
    "DirVar",
    "DirVerify",
    "EnableWindow",
    "EnumRegKey",
    "EnumRegValue",
    "Exch",
    "Exec",
    "ExecShell",
    "ExecShellWait",
    "ExecWait",
    "ExpandEnvStrings",
    "File",
    "FileBufSize",
    "FileClose",
    "FileErrorText",
    "FileOpen",
    "FileRead",
    "FileReadByte",
    "FileReadUTF16LE",
    "FileReadWord",
    "FileWriteUTF16LE",
    "FileSeek",
    "FileWrite",
    "FileWriteByte",
    "FileWriteWord",
    "FindClose",
    "FindFirst",
    "FindNext",
    "FindWindow",
    "FlushINI",
    "GetCurInstType",
    "GetCurrentAddress",
    "GetDlgItem",
    "GetDLLVersion",
    "GetDLLVersionLocal",
    "GetErrorLevel",
    "GetFileTime",
    "GetFileTimeLocal",
    "GetFullPathName",
    "GetFunctionAddress",
    "GetInstDirError",
    "GetKnownFolderPath",
    "GetLabelAddress",
    "GetTempFileName",
    "GetWinVer",
    "Goto",
    "HideWindow",
    "Icon",
    "IfAbort",
    "IfErrors",
    "IfFileExists",
    "IfRebootFlag",
    "IfRtlLanguage",
    "IfShellVarContextAll",
    "IfSilent",
    "InitPluginsDir",
    "InstallButtonText",
    "InstallColors",
    "InstallDir",
    "InstallDirRegKey",
    "InstProgressFlags",
    "InstType",
    "InstTypeGetText",
    "InstTypeSetText",
    "Int64Cmp",
    "Int64CmpU",
    "Int64Fmt",
    "IntCmp",
    "IntCmpU",
    "IntFmt",
    "IntOp",
    "IntPtrCmp",
    "IntPtrCmpU",
    "IntPtrOp",
    "IsWindow",
    "LangString",
    "LicenseBkColor",
    "LicenseData",
    "LicenseForceSelection",
    "LicenseLangString",
    "LicenseText",
    "LoadAndSetImage",
    "LoadLanguageFile",
    "LockWindow",
    "LogSet",
    "LogText",
    "ManifestDPIAware",
    "ManifestLongPathAware",
    "ManifestMaxVersionTested",
    "ManifestSupportedOS",
    "MessageBox",
    "MiscButtonText",
    "Name|0",
    "Nop",
    "OutFile",
    "Page",
    "PageCallbacks",
    "PEAddResource",
    "PEDllCharacteristics",
    "PERemoveResource",
    "PESubsysVer",
    "Pop",
    "Push",
    "Quit",
    "ReadEnvStr",
    "ReadINIStr",
    "ReadRegDWORD",
    "ReadRegStr",
    "Reboot",
    "RegDLL",
    "Rename",
    "RequestExecutionLevel",
    "ReserveFile",
    "Return",
    "RMDir",
    "SearchPath",
    "SectionGetFlags",
    "SectionGetInstTypes",
    "SectionGetSize",
    "SectionGetText",
    "SectionIn",
    "SectionSetFlags",
    "SectionSetInstTypes",
    "SectionSetSize",
    "SectionSetText",
    "SendMessage",
    "SetAutoClose",
    "SetBrandingImage",
    "SetCompress",
    "SetCompressor",
    "SetCompressorDictSize",
    "SetCtlColors",
    "SetCurInstType",
    "SetDatablockOptimize",
    "SetDateSave",
    "SetDetailsPrint",
    "SetDetailsView",
    "SetErrorLevel",
    "SetErrors",
    "SetFileAttributes",
    "SetFont",
    "SetOutPath",
    "SetOverwrite",
    "SetRebootFlag",
    "SetRegView",
    "SetShellVarContext",
    "SetSilent",
    "ShowInstDetails",
    "ShowUninstDetails",
    "ShowWindow",
    "SilentInstall",
    "SilentUnInstall",
    "Sleep",
    "SpaceTexts",
    "StrCmp",
    "StrCmpS",
    "StrCpy",
    "StrLen",
    "SubCaption",
    "Unicode",
    "UninstallButtonText",
    "UninstallCaption",
    "UninstallIcon",
    "UninstallSubCaption",
    "UninstallText",
    "UninstPage",
    "UnRegDLL",
    "Var",
    "VIAddVersionKey",
    "VIFileVersion",
    "VIProductVersion",
    "WindowIcon",
    "WriteINIStr",
    "WriteRegBin",
    "WriteRegDWORD",
    "WriteRegExpandStr",
    "WriteRegMultiStr",
    "WriteRegNone",
    "WriteRegStr",
    "WriteUninstaller",
    "XPStyle"
  ], g = [
    "admin",
    "all",
    "auto",
    "both",
    "bottom",
    "bzip2",
    "colored",
    "components",
    "current",
    "custom",
    "directory",
    "false",
    "force",
    "hide",
    "highest",
    "ifdiff",
    "ifnewer",
    "instfiles",
    "lastused",
    "leave",
    "left",
    "license",
    "listonly",
    "lzma",
    "nevershow",
    "none",
    "normal",
    "notset",
    "off",
    "on",
    "open",
    "print",
    "right",
    "show",
    "silent",
    "silentlog",
    "smooth",
    "textonly",
    "top",
    "true",
    "try",
    "un.components",
    "un.custom",
    "un.directory",
    "un.instfiles",
    "un.license",
    "uninstConfirm",
    "user",
    "Win10",
    "Win7",
    "Win8",
    "WinVista",
    "zlib"
  ], v = {
    match: [
      /Function/,
      /\s+/,
      e.concat(/(\.)?/, t.IDENT_RE)
    ],
    scope: {
      1: "keyword",
      3: "title.function"
    }
  }, _ = {
    match: [
      /Var/,
      /\s+/,
      /(?:\/GLOBAL\s+)?/,
      /[A-Za-z][\w.]*/
    ],
    scope: {
      1: "keyword",
      3: "params",
      4: "variable"
    }
  };
  return {
    name: "NSIS",
    case_insensitive: !0,
    keywords: {
      keyword: h,
      literal: g
    },
    contains: [
      t.HASH_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.COMMENT(
        ";",
        "$",
        { relevance: 0 }
      ),
      _,
      v,
      { beginKeywords: "Function PageEx Section SectionGroup FunctionEnd SectionEnd" },
      f,
      c,
      o,
      s,
      l,
      u,
      p,
      t.NUMBER_MODE
    ]
  };
}
const cie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: uee
}, Symbol.toStringTag, { value: "Module" }));
function cee(t) {
  const e = {
    className: "built_in",
    begin: "\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"
  }, r = /[a-zA-Z@][a-zA-Z0-9_]*/, s = {
    "variable.language": [
      "this",
      "super"
    ],
    $pattern: r,
    keyword: [
      "while",
      "export",
      "sizeof",
      "typedef",
      "const",
      "struct",
      "for",
      "union",
      "volatile",
      "static",
      "mutable",
      "if",
      "do",
      "return",
      "goto",
      "enum",
      "else",
      "break",
      "extern",
      "asm",
      "case",
      "default",
      "register",
      "explicit",
      "typename",
      "switch",
      "continue",
      "inline",
      "readonly",
      "assign",
      "readwrite",
      "self",
      "@synchronized",
      "id",
      "typeof",
      "nonatomic",
      "IBOutlet",
      "IBAction",
      "strong",
      "weak",
      "copy",
      "in",
      "out",
      "inout",
      "bycopy",
      "byref",
      "oneway",
      "__strong",
      "__weak",
      "__block",
      "__autoreleasing",
      "@private",
      "@protected",
      "@public",
      "@try",
      "@property",
      "@end",
      "@throw",
      "@catch",
      "@finally",
      "@autoreleasepool",
      "@synthesize",
      "@dynamic",
      "@selector",
      "@optional",
      "@required",
      "@encode",
      "@package",
      "@import",
      "@defs",
      "@compatibility_alias",
      "__bridge",
      "__bridge_transfer",
      "__bridge_retained",
      "__bridge_retain",
      "__covariant",
      "__contravariant",
      "__kindof",
      "_Nonnull",
      "_Nullable",
      "_Null_unspecified",
      "__FUNCTION__",
      "__PRETTY_FUNCTION__",
      "__attribute__",
      "getter",
      "setter",
      "retain",
      "unsafe_unretained",
      "nonnull",
      "nullable",
      "null_unspecified",
      "null_resettable",
      "class",
      "instancetype",
      "NS_DESIGNATED_INITIALIZER",
      "NS_UNAVAILABLE",
      "NS_REQUIRES_SUPER",
      "NS_RETURNS_INNER_POINTER",
      "NS_INLINE",
      "NS_AVAILABLE",
      "NS_DEPRECATED",
      "NS_ENUM",
      "NS_OPTIONS",
      "NS_SWIFT_UNAVAILABLE",
      "NS_ASSUME_NONNULL_BEGIN",
      "NS_ASSUME_NONNULL_END",
      "NS_REFINED_FOR_SWIFT",
      "NS_SWIFT_NAME",
      "NS_SWIFT_NOTHROW",
      "NS_DURING",
      "NS_HANDLER",
      "NS_ENDHANDLER",
      "NS_VALUERETURN",
      "NS_VOIDRETURN"
    ],
    literal: [
      "false",
      "true",
      "FALSE",
      "TRUE",
      "nil",
      "YES",
      "NO",
      "NULL"
    ],
    built_in: [
      "dispatch_once_t",
      "dispatch_queue_t",
      "dispatch_sync",
      "dispatch_async",
      "dispatch_once"
    ],
    type: [
      "int",
      "float",
      "char",
      "unsigned",
      "signed",
      "short",
      "long",
      "double",
      "wchar_t",
      "unichar",
      "void",
      "bool",
      "BOOL",
      "id|0",
      "_Bool"
    ]
  }, l = {
    $pattern: r,
    keyword: [
      "@interface",
      "@class",
      "@protocol",
      "@implementation"
    ]
  };
  return {
    name: "Objective-C",
    aliases: [
      "mm",
      "objc",
      "obj-c",
      "obj-c++",
      "objective-c++"
    ],
    keywords: s,
    illegal: "</",
    contains: [
      e,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.C_NUMBER_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      {
        className: "string",
        variants: [
          {
            begin: '@"',
            end: '"',
            illegal: "\\n",
            contains: [t.BACKSLASH_ESCAPE]
          }
        ]
      },
      {
        className: "meta",
        begin: /#\s*[a-z]+\b/,
        end: /$/,
        keywords: { keyword: "if else elif endif define undef warning error line pragma ifdef ifndef include" },
        contains: [
          {
            begin: /\\\n/,
            relevance: 0
          },
          t.inherit(t.QUOTE_STRING_MODE, { className: "string" }),
          {
            className: "string",
            begin: /<.*?>/,
            end: /$/,
            illegal: "\\n"
          },
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        className: "class",
        begin: "(" + l.keyword.join("|") + ")\\b",
        end: /(\{|$)/,
        excludeEnd: !0,
        keywords: l,
        contains: [t.UNDERSCORE_TITLE_MODE]
      },
      {
        begin: "\\." + t.UNDERSCORE_IDENT_RE,
        relevance: 0
      }
    ]
  };
}
const die = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: cee
}, Symbol.toStringTag, { value: "Module" }));
function dee(t) {
  return {
    name: "OCaml",
    aliases: ["ml"],
    keywords: {
      $pattern: "[a-z_]\\w*!?",
      keyword: "and as assert asr begin class constraint do done downto else end exception external for fun function functor if in include inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method mod module mutable new object of open! open or private rec sig struct then to try type val! val virtual when while with parser value",
      built_in: (
        /* built-in types */
        "array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit in_channel out_channel ref"
      ),
      literal: "true false"
    },
    illegal: /\/\/|>>/,
    contains: [
      {
        className: "literal",
        begin: "\\[(\\|\\|)?\\]|\\(\\)",
        relevance: 0
      },
      t.COMMENT(
        "\\(\\*",
        "\\*\\)",
        { contains: ["self"] }
      ),
      {
        /* type variable */
        className: "symbol",
        begin: "'[A-Za-z_](?!')[\\w']*"
        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
      },
      {
        /* polymorphic variant */
        className: "type",
        begin: "`[A-Z][\\w']*"
      },
      {
        /* module or constructor */
        className: "type",
        begin: "\\b[A-Z][\\w']*",
        relevance: 0
      },
      {
        /* don't color identifiers, but safely catch all identifiers with ' */
        begin: "[a-z_]\\w*'[\\w']*",
        relevance: 0
      },
      t.inherit(t.APOS_STRING_MODE, {
        className: "string",
        relevance: 0
      }),
      t.inherit(t.QUOTE_STRING_MODE, { illegal: null }),
      {
        className: "number",
        begin: "\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
        relevance: 0
      },
      {
        begin: /->/
        // relevance booster
      }
    ]
  };
}
const pie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: dee
}, Symbol.toStringTag, { value: "Module" }));
function pee(t) {
  const e = {
    className: "keyword",
    begin: "\\$(f[asn]|t|vp[rtd]|children)"
  }, r = {
    className: "literal",
    begin: "false|true|PI|undef"
  }, n = {
    className: "number",
    begin: "\\b\\d+(\\.\\d+)?(e-?\\d+)?",
    // adds 1e5, 1e-10
    relevance: 0
  }, a = t.inherit(t.QUOTE_STRING_MODE, { illegal: null }), i = {
    className: "meta",
    keywords: { keyword: "include use" },
    begin: "include|use <",
    end: ">"
  }, o = {
    className: "params",
    begin: "\\(",
    end: "\\)",
    contains: [
      "self",
      n,
      a,
      e,
      r
    ]
  }, s = {
    begin: "[*!#%]",
    relevance: 0
  }, l = {
    className: "function",
    beginKeywords: "module function",
    end: /=|\{/,
    contains: [
      o,
      t.UNDERSCORE_TITLE_MODE
    ]
  };
  return {
    name: "OpenSCAD",
    aliases: ["scad"],
    keywords: {
      keyword: "function module include use for intersection_for if else \\%",
      literal: "false true PI undef",
      built_in: "circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign"
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      n,
      i,
      a,
      e,
      s,
      l
    ]
  };
}
const fie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: pee
}, Symbol.toStringTag, { value: "Module" }));
function fee(t) {
  const e = {
    $pattern: /\.?\w+/,
    keyword: "abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained"
  }, r = t.COMMENT(
    /\{/,
    /\}/,
    { relevance: 0 }
  ), n = t.COMMENT(
    "\\(\\*",
    "\\*\\)",
    { relevance: 10 }
  ), a = {
    className: "string",
    begin: "'",
    end: "'",
    contains: [{ begin: "''" }]
  }, i = {
    className: "string",
    begin: "(#\\d+)+"
  }, o = {
    beginKeywords: "function constructor destructor procedure method",
    end: "[:;]",
    keywords: "function constructor|10 destructor|10 procedure|10 method|10",
    contains: [
      t.inherit(t.TITLE_MODE, { scope: "title.function" }),
      {
        className: "params",
        begin: "\\(",
        end: "\\)",
        keywords: e,
        contains: [
          a,
          i
        ]
      },
      r,
      n
    ]
  }, s = {
    scope: "punctuation",
    match: /;/,
    relevance: 0
  };
  return {
    name: "Oxygene",
    case_insensitive: !0,
    keywords: e,
    illegal: '("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',
    contains: [
      r,
      n,
      t.C_LINE_COMMENT_MODE,
      a,
      i,
      t.NUMBER_MODE,
      o,
      s
    ]
  };
}
const hie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: fee
}, Symbol.toStringTag, { value: "Module" }));
function hee(t) {
  const e = t.COMMENT(
    /\{/,
    /\}/,
    { contains: ["self"] }
  );
  return {
    name: "Parser3",
    subLanguage: "xml",
    relevance: 0,
    contains: [
      t.COMMENT("^#", "$"),
      t.COMMENT(
        /\^rem\{/,
        /\}/,
        {
          relevance: 10,
          contains: [e]
        }
      ),
      {
        className: "meta",
        begin: "^@(?:BASE|USE|CLASS|OPTIONS)$",
        relevance: 10
      },
      {
        className: "title",
        begin: "@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"
      },
      {
        className: "variable",
        begin: /\$\{?[\w\-.:]+\}?/
      },
      {
        className: "keyword",
        begin: /\^[\w\-.:]+/
      },
      {
        className: "number",
        begin: "\\^#[0-9a-fA-F]+"
      },
      t.C_NUMBER_MODE
    ]
  };
}
const gie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: hee
}, Symbol.toStringTag, { value: "Module" }));
function gee(t) {
  const e = t.regex, r = [
    "abs",
    "accept",
    "alarm",
    "and",
    "atan2",
    "bind",
    "binmode",
    "bless",
    "break",
    "caller",
    "chdir",
    "chmod",
    "chomp",
    "chop",
    "chown",
    "chr",
    "chroot",
    "class",
    "close",
    "closedir",
    "connect",
    "continue",
    "cos",
    "crypt",
    "dbmclose",
    "dbmopen",
    "defined",
    "delete",
    "die",
    "do",
    "dump",
    "each",
    "else",
    "elsif",
    "endgrent",
    "endhostent",
    "endnetent",
    "endprotoent",
    "endpwent",
    "endservent",
    "eof",
    "eval",
    "exec",
    "exists",
    "exit",
    "exp",
    "fcntl",
    "field",
    "fileno",
    "flock",
    "for",
    "foreach",
    "fork",
    "format",
    "formline",
    "getc",
    "getgrent",
    "getgrgid",
    "getgrnam",
    "gethostbyaddr",
    "gethostbyname",
    "gethostent",
    "getlogin",
    "getnetbyaddr",
    "getnetbyname",
    "getnetent",
    "getpeername",
    "getpgrp",
    "getpriority",
    "getprotobyname",
    "getprotobynumber",
    "getprotoent",
    "getpwent",
    "getpwnam",
    "getpwuid",
    "getservbyname",
    "getservbyport",
    "getservent",
    "getsockname",
    "getsockopt",
    "given",
    "glob",
    "gmtime",
    "goto",
    "grep",
    "gt",
    "hex",
    "if",
    "index",
    "int",
    "ioctl",
    "join",
    "keys",
    "kill",
    "last",
    "lc",
    "lcfirst",
    "length",
    "link",
    "listen",
    "local",
    "localtime",
    "log",
    "lstat",
    "lt",
    "ma",
    "map",
    "method",
    "mkdir",
    "msgctl",
    "msgget",
    "msgrcv",
    "msgsnd",
    "my",
    "ne",
    "next",
    "no",
    "not",
    "oct",
    "open",
    "opendir",
    "or",
    "ord",
    "our",
    "pack",
    "package",
    "pipe",
    "pop",
    "pos",
    "print",
    "printf",
    "prototype",
    "push",
    "q|0",
    "qq",
    "quotemeta",
    "qw",
    "qx",
    "rand",
    "read",
    "readdir",
    "readline",
    "readlink",
    "readpipe",
    "recv",
    "redo",
    "ref",
    "rename",
    "require",
    "reset",
    "return",
    "reverse",
    "rewinddir",
    "rindex",
    "rmdir",
    "say",
    "scalar",
    "seek",
    "seekdir",
    "select",
    "semctl",
    "semget",
    "semop",
    "send",
    "setgrent",
    "sethostent",
    "setnetent",
    "setpgrp",
    "setpriority",
    "setprotoent",
    "setpwent",
    "setservent",
    "setsockopt",
    "shift",
    "shmctl",
    "shmget",
    "shmread",
    "shmwrite",
    "shutdown",
    "sin",
    "sleep",
    "socket",
    "socketpair",
    "sort",
    "splice",
    "split",
    "sprintf",
    "sqrt",
    "srand",
    "stat",
    "state",
    "study",
    "sub",
    "substr",
    "symlink",
    "syscall",
    "sysopen",
    "sysread",
    "sysseek",
    "system",
    "syswrite",
    "tell",
    "telldir",
    "tie",
    "tied",
    "time",
    "times",
    "tr",
    "truncate",
    "uc",
    "ucfirst",
    "umask",
    "undef",
    "unless",
    "unlink",
    "unpack",
    "unshift",
    "untie",
    "until",
    "use",
    "utime",
    "values",
    "vec",
    "wait",
    "waitpid",
    "wantarray",
    "warn",
    "when",
    "while",
    "write",
    "x|0",
    "xor",
    "y|0"
  ], n = /[dualxmsipngr]{0,12}/, a = {
    $pattern: /[\w.]+/,
    keyword: r.join(" ")
  }, i = {
    className: "subst",
    begin: "[$@]\\{",
    end: "\\}",
    keywords: a
  }, o = {
    begin: /->\{/,
    end: /\}/
    // contains defined later
  }, s = {
    scope: "attr",
    match: /\s+:\s*\w+(\s*\(.*?\))?/
  }, l = {
    scope: "variable",
    variants: [
      { begin: /\$\d/ },
      {
        begin: e.concat(
          /[$%@](?!")(\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/,
          // negative look-ahead tries to avoid matching patterns that are not
          // Perl at all like $ident$, @ident@, etc.
          "(?![A-Za-z])(?![@$%])"
        )
      },
      {
        // Only $= is a special Perl variable and one can't declare @= or %=.
        begin: /[$%@](?!")[^\s\w{=]|\$=/,
        relevance: 0
      }
    ],
    contains: [s]
  }, u = {
    className: "number",
    variants: [
      // decimal numbers:
      // include the case where a number starts with a dot (eg. .9), and
      // the leading 0? avoids mixing the first and second match on 0.x cases
      { match: /0?\.[0-9][0-9_]+\b/ },
      // include the special versioned number (eg. v5.38)
      { match: /\bv?(0|[1-9][0-9_]*(\.[0-9_]+)?|[1-9][0-9_]*)\b/ },
      // non-decimal numbers:
      { match: /\b0[0-7][0-7_]*\b/ },
      { match: /\b0x[0-9a-fA-F][0-9a-fA-F_]*\b/ },
      { match: /\b0b[0-1][0-1_]*\b/ }
    ],
    relevance: 0
  }, c = [
    t.BACKSLASH_ESCAPE,
    i,
    l
  ], d = [
    /!/,
    /\//,
    /\|/,
    /\?/,
    /'/,
    /"/,
    // valid but infrequent and weird
    /#/
    // valid but infrequent and weird
  ], p = (g, v, m = "\\1") => {
    const _ = m === "\\1" ? m : e.concat(m, v);
    return e.concat(
      e.concat("(?:", g, ")"),
      v,
      /(?:\\.|[^\\\/])*?/,
      _,
      /(?:\\.|[^\\\/])*?/,
      m,
      n
    );
  }, f = (g, v, m) => e.concat(
    e.concat("(?:", g, ")"),
    v,
    /(?:\\.|[^\\\/])*?/,
    m,
    n
  ), h = [
    l,
    t.HASH_COMMENT_MODE,
    t.COMMENT(
      /^=\w/,
      /=cut/,
      { endsWithParent: !0 }
    ),
    o,
    {
      className: "string",
      contains: c,
      variants: [
        {
          begin: "q[qwxr]?\\s*\\(",
          end: "\\)",
          relevance: 5
        },
        {
          begin: "q[qwxr]?\\s*\\[",
          end: "\\]",
          relevance: 5
        },
        {
          begin: "q[qwxr]?\\s*\\{",
          end: "\\}",
          relevance: 5
        },
        {
          begin: "q[qwxr]?\\s*\\|",
          end: "\\|",
          relevance: 5
        },
        {
          begin: "q[qwxr]?\\s*<",
          end: ">",
          relevance: 5
        },
        {
          begin: "qw\\s+q",
          end: "q",
          relevance: 5
        },
        {
          begin: "'",
          end: "'",
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: '"',
          end: '"'
        },
        {
          begin: "`",
          end: "`",
          contains: [t.BACKSLASH_ESCAPE]
        },
        {
          begin: /\{\w+\}/,
          relevance: 0
        },
        {
          begin: "-?\\w+\\s*=>",
          relevance: 0
        }
      ]
    },
    u,
    {
      // regexp container
      begin: "(\\/\\/|" + t.RE_STARTERS_RE + "|\\b(split|return|print|reverse|grep)\\b)\\s*",
      keywords: "split return print reverse grep",
      relevance: 0,
      contains: [
        t.HASH_COMMENT_MODE,
        {
          className: "regexp",
          variants: [
            // allow matching common delimiters
            { begin: p("s|tr|y", e.either(...d, { capture: !0 })) },
            // and then paired delmis
            { begin: p("s|tr|y", "\\(", "\\)") },
            { begin: p("s|tr|y", "\\[", "\\]") },
            { begin: p("s|tr|y", "\\{", "\\}") }
          ],
          relevance: 2
        },
        {
          className: "regexp",
          variants: [
            {
              // could be a comment in many languages so do not count
              // as relevant
              begin: /(m|qr)\/\//,
              relevance: 0
            },
            // prefix is optional with /regex/
            { begin: f("(?:m|qr)?", /\//, /\//) },
            // allow matching common delimiters
            { begin: f("m|qr", e.either(...d, { capture: !0 }), /\1/) },
            // allow common paired delmins
            { begin: f("m|qr", /\(/, /\)/) },
            { begin: f("m|qr", /\[/, /\]/) },
            { begin: f("m|qr", /\{/, /\}/) }
          ]
        }
      ]
    },
    {
      className: "function",
      beginKeywords: "sub method",
      end: "(\\s*\\(.*?\\))?[;{]",
      excludeEnd: !0,
      relevance: 5,
      contains: [t.TITLE_MODE, s]
    },
    {
      className: "class",
      beginKeywords: "class",
      end: "[;{]",
      excludeEnd: !0,
      relevance: 5,
      contains: [t.TITLE_MODE, s, u]
    },
    {
      begin: "-\\w\\b",
      relevance: 0
    },
    {
      begin: "^__DATA__$",
      end: "^__END__$",
      subLanguage: "mojolicious",
      contains: [
        {
          begin: "^@@.*",
          end: "$",
          className: "comment"
        }
      ]
    }
  ];
  return i.contains = h, o.contains = h, {
    name: "Perl",
    aliases: [
      "pl",
      "pm"
    ],
    keywords: a,
    contains: h
  };
}
const vie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: gee
}, Symbol.toStringTag, { value: "Module" }));
function vee(t) {
  const e = {
    className: "variable",
    begin: /\$[\w\d#@][\w\d_]*/,
    relevance: 0
  }, r = {
    className: "variable",
    begin: /<(?!\/)/,
    end: />/
  };
  return {
    name: "Packet Filter config",
    aliases: ["pf.conf"],
    keywords: {
      $pattern: /[a-z0-9_<>-]+/,
      built_in: (
        /* block match pass are "actions" in pf.conf(5), the rest are
         * lexically similar top-level commands.
         */
        "block match pass load anchor|5 antispoof|10 set table"
      ),
      keyword: "in out log quick on rdomain inet inet6 proto from port os to route allow-opts divert-packet divert-reply divert-to flags group icmp-type icmp6-type label once probability recieved-on rtable prio queue tos tag tagged user keep fragment for os drop af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin source-hash static-port dup-to reply-to route-to parent bandwidth default min max qlimit block-policy debug fingerprints hostid limit loginterface optimization reassemble ruleset-optimization basic none profile skip state-defaults state-policy timeout const counters persist no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy source-track global rule max-src-nodes max-src-states max-src-conn max-src-conn-rate overload flush scrub|5 max-mss min-ttl no-df|10 random-id",
      literal: "all any no-route self urpf-failed egress|5 unknown"
    },
    contains: [
      t.HASH_COMMENT_MODE,
      t.NUMBER_MODE,
      t.QUOTE_STRING_MODE,
      e,
      r
    ]
  };
}
const mie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: vee
}, Symbol.toStringTag, { value: "Module" }));
function mee(t) {
  const e = t.COMMENT("--", "$"), r = "[a-zA-Z_][a-zA-Z_0-9$]*", n = "\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\$", a = "<<\\s*" + r + "\\s*>>", i = (
    // https://www.postgresql.org/docs/11/static/sql-keywords-appendix.html
    // https://www.postgresql.org/docs/11/static/sql-commands.html
    // SQL commands (starting words)
    "ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION INDEX PROCEDURE ASSERTION ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS DEFERRABLE RANGE DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED OF NOTHING NONE EXCLUDE ATTRIBUTE USAGE ROUTINES TRUE FALSE NAN INFINITY "
  ), o = (
    // only those not in keywrods already
    "SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS "
  ), s = "ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT OPEN ", l = (
    // https://www.postgresql.org/docs/11/static/datatype.html
    "BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR NAME OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 "
  ), u = l.trim().split(" ").map(function(g) {
    return g.split("|")[0];
  }).join("|"), c = "CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC ", d = "FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 ", p = (
    // exceptions https://www.postgresql.org/docs/current/static/errcodes-appendix.html
    "SQLSTATE SQLERRM|10 SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED INDEX_CORRUPTED "
  ), h = /* https://www.postgresql.org/docs/11/static/functions-aggregate.html */ "ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP PERCENTILE_CONT PERCENTILE_DISC ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE NUM_NONNULLS NUM_NULLS ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT TRUNC WIDTH_BUCKET RANDOM SETSEED ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR TO_ASCII TO_HEX TRANSLATE OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 TIMEOFDAY TRANSACTION_TIMESTAMP|10 ENUM_FIRST ENUM_LAST ENUM_RANGE AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY INET_MERGE MACADDR8_SET7BIT ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA CURSOR_TO_XML CURSOR_TO_XMLSCHEMA SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA XMLATTRIBUTES TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY CURRVAL LASTVAL NEXTVAL SETVAL COALESCE NULLIF GREATEST LEAST ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY STRING_TO_ARRAY UNNEST ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE GENERATE_SERIES GENERATE_SUBSCRIPTS CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE GIN_CLEAN_PENDING_LIST SUPPRESS_REDUNDANT_UPDATES_TRIGGER LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE GROUPING CAST ".trim().split(" ").map(function(g) {
    return g.split("|")[0];
  }).join("|");
  return {
    name: "PostgreSQL",
    aliases: [
      "postgres",
      "postgresql"
    ],
    supersetOf: "sql",
    case_insensitive: !0,
    keywords: {
      keyword: i + s + o,
      built_in: c + d + p
    },
    // Forbid some cunstructs from other languages to improve autodetect. In fact
    // "[a-z]:" is legal (as part of array slice), but improbabal.
    illegal: /:==|\W\s*\(\*|(^|\s)\$[a-z]|\{\{|[a-z]:\s*$|\.\.\.|TO:|DO:/,
    contains: [
      // special handling of some words, which are reserved only in some contexts
      {
        className: "keyword",
        variants: [
          { begin: /\bTEXT\s*SEARCH\b/ },
          { begin: /\b(PRIMARY|FOREIGN|FOR(\s+NO)?)\s+KEY\b/ },
          { begin: /\bPARALLEL\s+(UNSAFE|RESTRICTED|SAFE)\b/ },
          { begin: /\bSTORAGE\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\b/ },
          { begin: /\bMATCH\s+(FULL|PARTIAL|SIMPLE)\b/ },
          { begin: /\bNULLS\s+(FIRST|LAST)\b/ },
          { begin: /\bEVENT\s+TRIGGER\b/ },
          { begin: /\b(MAPPING|OR)\s+REPLACE\b/ },
          { begin: /\b(FROM|TO)\s+(PROGRAM|STDIN|STDOUT)\b/ },
          { begin: /\b(SHARE|EXCLUSIVE)\s+MODE\b/ },
          { begin: /\b(LEFT|RIGHT)\s+(OUTER\s+)?JOIN\b/ },
          { begin: /\b(FETCH|MOVE)\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\b/ },
          { begin: /\bPRESERVE\s+ROWS\b/ },
          { begin: /\bDISCARD\s+PLANS\b/ },
          { begin: /\bREFERENCING\s+(OLD|NEW)\b/ },
          { begin: /\bSKIP\s+LOCKED\b/ },
          { begin: /\bGROUPING\s+SETS\b/ },
          { begin: /\b(BINARY|INSENSITIVE|SCROLL|NO\s+SCROLL)\s+(CURSOR|FOR)\b/ },
          { begin: /\b(WITH|WITHOUT)\s+HOLD\b/ },
          { begin: /\bWITH\s+(CASCADED|LOCAL)\s+CHECK\s+OPTION\b/ },
          { begin: /\bEXCLUDE\s+(TIES|NO\s+OTHERS)\b/ },
          { begin: /\bFORMAT\s+(TEXT|XML|JSON|YAML)\b/ },
          { begin: /\bSET\s+((SESSION|LOCAL)\s+)?NAMES\b/ },
          { begin: /\bIS\s+(NOT\s+)?UNKNOWN\b/ },
          { begin: /\bSECURITY\s+LABEL\b/ },
          { begin: /\bSTANDALONE\s+(YES|NO|NO\s+VALUE)\b/ },
          { begin: /\bWITH\s+(NO\s+)?DATA\b/ },
          { begin: /\b(FOREIGN|SET)\s+DATA\b/ },
          { begin: /\bSET\s+(CATALOG|CONSTRAINTS)\b/ },
          { begin: /\b(WITH|FOR)\s+ORDINALITY\b/ },
          { begin: /\bIS\s+(NOT\s+)?DOCUMENT\b/ },
          { begin: /\bXML\s+OPTION\s+(DOCUMENT|CONTENT)\b/ },
          { begin: /\b(STRIP|PRESERVE)\s+WHITESPACE\b/ },
          { begin: /\bNO\s+(ACTION|MAXVALUE|MINVALUE)\b/ },
          { begin: /\bPARTITION\s+BY\s+(RANGE|LIST|HASH)\b/ },
          { begin: /\bAT\s+TIME\s+ZONE\b/ },
          { begin: /\bGRANTED\s+BY\b/ },
          { begin: /\bRETURN\s+(QUERY|NEXT)\b/ },
          { begin: /\b(ATTACH|DETACH)\s+PARTITION\b/ },
          { begin: /\bFORCE\s+ROW\s+LEVEL\s+SECURITY\b/ },
          { begin: /\b(INCLUDING|EXCLUDING)\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\b/ },
          { begin: /\bAS\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\b/ }
        ]
      },
      // functions named as keywords, followed by '('
      {
        begin: /\b(FORMAT|FAMILY|VERSION)\s*\(/
        // keywords: { built_in: 'FORMAT FAMILY VERSION' }
      },
      // INCLUDE ( ... ) in index_parameters in CREATE TABLE
      {
        begin: /\bINCLUDE\s*\(/,
        keywords: "INCLUDE"
      },
      // not highlight RANGE if not in frame_clause (not 100% correct, but seems satisfactory)
      { begin: /\bRANGE(?!\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/ },
      // disable highlighting in commands CREATE AGGREGATE/COLLATION/DATABASE/OPERTOR/TEXT SEARCH .../TYPE
      // and in PL/pgSQL RAISE ... USING
      { begin: /\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\s*=/ },
      // PG_smth; HAS_some_PRIVILEGE
      {
        // className: 'built_in',
        begin: /\b(PG_\w+?|HAS_[A-Z_]+_PRIVILEGE)\b/,
        relevance: 10
      },
      // extract
      {
        begin: /\bEXTRACT\s*\(/,
        end: /\bFROM\b/,
        returnEnd: !0,
        keywords: {
          // built_in: 'EXTRACT',
          type: "CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR TIMEZONE_MINUTE WEEK YEAR"
        }
      },
      // xmlelement, xmlpi - special NAME
      {
        begin: /\b(XMLELEMENT|XMLPI)\s*\(\s*NAME/,
        keywords: {
          // built_in: 'XMLELEMENT XMLPI',
          keyword: "NAME"
        }
      },
      // xmlparse, xmlserialize
      {
        begin: /\b(XMLPARSE|XMLSERIALIZE)\s*\(\s*(DOCUMENT|CONTENT)/,
        keywords: {
          // built_in: 'XMLPARSE XMLSERIALIZE',
          keyword: "DOCUMENT CONTENT"
        }
      },
      // Sequences. We actually skip everything between CACHE|INCREMENT|MAXVALUE|MINVALUE and
      // nearest following numeric constant. Without with trick we find a lot of "keywords"
      // in 'avrasm' autodetection test...
      {
        beginKeywords: "CACHE INCREMENT MAXVALUE MINVALUE",
        end: t.C_NUMBER_RE,
        returnEnd: !0,
        keywords: "BY CACHE INCREMENT MAXVALUE MINVALUE"
      },
      // WITH|WITHOUT TIME ZONE as part of datatype
      {
        className: "type",
        begin: /\b(WITH|WITHOUT)\s+TIME\s+ZONE\b/
      },
      // INTERVAL optional fields
      {
        className: "type",
        begin: /\bINTERVAL\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\s+TO\s+(MONTH|HOUR|MINUTE|SECOND))?\b/
      },
      // Pseudo-types which allowed only as return type
      {
        begin: /\bRETURNS\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\b/,
        keywords: {
          keyword: "RETURNS",
          type: "LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER"
        }
      },
      // Known functions - only when followed by '('
      {
        begin: "\\b(" + h + ")\\s*\\("
        // keywords: { built_in: FUNCTIONS }
      },
      // Types
      {
        begin: "\\.(" + u + ")\\b"
        // prevent highlight as type, say, 'oid' in 'pgclass.oid'
      },
      {
        begin: "\\b(" + u + ")\\s+PATH\\b",
        // in XMLTABLE
        keywords: {
          keyword: "PATH",
          // hopefully no one would use PATH type in XMLTABLE...
          type: l.replace("PATH ", "")
        }
      },
      {
        className: "type",
        begin: "\\b(" + u + ")\\b"
      },
      // Strings, see https://www.postgresql.org/docs/11/static/sql-syntax-lexical.html#SQL-SYNTAX-CONSTANTS
      {
        className: "string",
        begin: "'",
        end: "'",
        contains: [{ begin: "''" }]
      },
      {
        className: "string",
        begin: "(e|E|u&|U&)'",
        end: "'",
        contains: [{ begin: "\\\\." }],
        relevance: 10
      },
      t.END_SAME_AS_BEGIN({
        begin: n,
        end: n,
        contains: [
          {
            // actually we want them all except SQL; listed are those with known implementations
            // and XML + JSON just in case
            subLanguage: [
              "pgsql",
              "perl",
              "python",
              "tcl",
              "r",
              "lua",
              "java",
              "php",
              "ruby",
              "bash",
              "scheme",
              "xml",
              "json"
            ],
            endsWithParent: !0
          }
        ]
      }),
      // identifiers in quotes
      {
        begin: '"',
        end: '"',
        contains: [{ begin: '""' }]
      },
      // numbers
      t.C_NUMBER_MODE,
      // comments
      t.C_BLOCK_COMMENT_MODE,
      e,
      // PL/pgSQL staff
      // %ROWTYPE, %TYPE, $n
      {
        className: "meta",
        variants: [
          {
            // %TYPE, %ROWTYPE
            begin: "%(ROW)?TYPE",
            relevance: 10
          },
          {
            // $n
            begin: "\\$\\d+"
          },
          {
            // #compiler option
            begin: "^#\\w",
            end: "$"
          }
        ]
      },
      // <<labeles>>
      {
        className: "symbol",
        begin: a,
        relevance: 10
      }
    ]
  };
}
const _ie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: mee
}, Symbol.toStringTag, { value: "Module" }));
function _ee(t) {
  const e = t.regex, r = /(?![A-Za-z0-9])(?![$])/, n = e.concat(
    /[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/,
    r
  ), a = e.concat(
    /(\\?[A-Z][a-z0-9_\x7f-\xff]+|\\?[A-Z]+(?=[A-Z][a-z0-9_\x7f-\xff])){1,}/,
    r
  ), i = e.concat(
    /[A-Z]+/,
    r
  ), o = {
    scope: "variable",
    match: "\\$+" + n
  }, s = {
    scope: "meta",
    variants: [
      { begin: /<\?php/, relevance: 10 },
      // boost for obvious PHP
      { begin: /<\?=/ },
      // less relevant per PSR-1 which says not to use short-tags
      { begin: /<\?/, relevance: 0.1 },
      { begin: /\?>/ }
      // end php tag
    ]
  }, l = {
    scope: "subst",
    variants: [
      { begin: /\$\w+/ },
      {
        begin: /\{\$/,
        end: /\}/
      }
    ]
  }, u = t.inherit(t.APOS_STRING_MODE, { illegal: null }), c = t.inherit(t.QUOTE_STRING_MODE, {
    illegal: null,
    contains: t.QUOTE_STRING_MODE.contains.concat(l)
  }), d = {
    begin: /<<<[ \t]*(?:(\w+)|"(\w+)")\n/,
    end: /[ \t]*(\w+)\b/,
    contains: t.QUOTE_STRING_MODE.contains.concat(l),
    "on:begin": (N, R) => {
      R.data._beginMatch = N[1] || N[2];
    },
    "on:end": (N, R) => {
      R.data._beginMatch !== N[1] && R.ignoreMatch();
    }
  }, p = t.END_SAME_AS_BEGIN({
    begin: /<<<[ \t]*'(\w+)'\n/,
    end: /[ \t]*(\w+)\b/
  }), f = `[ 	
]`, h = {
    scope: "string",
    variants: [
      c,
      u,
      d,
      p
    ]
  }, g = {
    scope: "number",
    variants: [
      { begin: "\\b0[bB][01]+(?:_[01]+)*\\b" },
      // Binary w/ underscore support
      { begin: "\\b0[oO][0-7]+(?:_[0-7]+)*\\b" },
      // Octals w/ underscore support
      { begin: "\\b0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*\\b" },
      // Hex w/ underscore support
      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.
      { begin: "(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?" }
    ],
    relevance: 0
  }, v = [
    "false",
    "null",
    "true"
  ], m = [
    // Magic constants:
    // <https://www.php.net/manual/en/language.constants.predefined.php>
    "__CLASS__",
    "__DIR__",
    "__FILE__",
    "__FUNCTION__",
    "__COMPILER_HALT_OFFSET__",
    "__LINE__",
    "__METHOD__",
    "__NAMESPACE__",
    "__TRAIT__",
    // Function that look like language construct or language construct that look like function:
    // List of keywords that may not require parenthesis
    "die",
    "echo",
    "exit",
    "include",
    "include_once",
    "print",
    "require",
    "require_once",
    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table
    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +
    // Other keywords:
    // <https://www.php.net/manual/en/reserved.php>
    // <https://www.php.net/manual/en/language.types.type-juggling.php>
    "array",
    "abstract",
    "and",
    "as",
    "binary",
    "bool",
    "boolean",
    "break",
    "callable",
    "case",
    "catch",
    "class",
    "clone",
    "const",
    "continue",
    "declare",
    "default",
    "do",
    "double",
    "else",
    "elseif",
    "empty",
    "enddeclare",
    "endfor",
    "endforeach",
    "endif",
    "endswitch",
    "endwhile",
    "enum",
    "eval",
    "extends",
    "final",
    "finally",
    "float",
    "for",
    "foreach",
    "from",
    "global",
    "goto",
    "if",
    "implements",
    "instanceof",
    "insteadof",
    "int",
    "integer",
    "interface",
    "isset",
    "iterable",
    "list",
    "match|0",
    "mixed",
    "new",
    "never",
    "object",
    "or",
    "private",
    "protected",
    "public",
    "readonly",
    "real",
    "return",
    "string",
    "switch",
    "throw",
    "trait",
    "try",
    "unset",
    "use",
    "var",
    "void",
    "while",
    "xor",
    "yield"
  ], _ = [
    // Standard PHP library:
    // <https://www.php.net/manual/en/book.spl.php>
    "Error|0",
    "AppendIterator",
    "ArgumentCountError",
    "ArithmeticError",
    "ArrayIterator",
    "ArrayObject",
    "AssertionError",
    "BadFunctionCallException",
    "BadMethodCallException",
    "CachingIterator",
    "CallbackFilterIterator",
    "CompileError",
    "Countable",
    "DirectoryIterator",
    "DivisionByZeroError",
    "DomainException",
    "EmptyIterator",
    "ErrorException",
    "Exception",
    "FilesystemIterator",
    "FilterIterator",
    "GlobIterator",
    "InfiniteIterator",
    "InvalidArgumentException",
    "IteratorIterator",
    "LengthException",
    "LimitIterator",
    "LogicException",
    "MultipleIterator",
    "NoRewindIterator",
    "OutOfBoundsException",
    "OutOfRangeException",
    "OuterIterator",
    "OverflowException",
    "ParentIterator",
    "ParseError",
    "RangeException",
    "RecursiveArrayIterator",
    "RecursiveCachingIterator",
    "RecursiveCallbackFilterIterator",
    "RecursiveDirectoryIterator",
    "RecursiveFilterIterator",
    "RecursiveIterator",
    "RecursiveIteratorIterator",
    "RecursiveRegexIterator",
    "RecursiveTreeIterator",
    "RegexIterator",
    "RuntimeException",
    "SeekableIterator",
    "SplDoublyLinkedList",
    "SplFileInfo",
    "SplFileObject",
    "SplFixedArray",
    "SplHeap",
    "SplMaxHeap",
    "SplMinHeap",
    "SplObjectStorage",
    "SplObserver",
    "SplPriorityQueue",
    "SplQueue",
    "SplStack",
    "SplSubject",
    "SplTempFileObject",
    "TypeError",
    "UnderflowException",
    "UnexpectedValueException",
    "UnhandledMatchError",
    // Reserved interfaces:
    // <https://www.php.net/manual/en/reserved.interfaces.php>
    "ArrayAccess",
    "BackedEnum",
    "Closure",
    "Fiber",
    "Generator",
    "Iterator",
    "IteratorAggregate",
    "Serializable",
    "Stringable",
    "Throwable",
    "Traversable",
    "UnitEnum",
    "WeakReference",
    "WeakMap",
    // Reserved classes:
    // <https://www.php.net/manual/en/reserved.classes.php>
    "Directory",
    "__PHP_Incomplete_Class",
    "parent",
    "php_user_filter",
    "self",
    "static",
    "stdClass"
  ], b = {
    keyword: m,
    literal: ((N) => {
      const R = [];
      return N.forEach((O) => {
        R.push(O), O.toLowerCase() === O ? R.push(O.toUpperCase()) : R.push(O.toLowerCase());
      }), R;
    })(v),
    built_in: _
  }, S = (N) => N.map((R) => R.replace(/\|\d+$/, "")), E = { variants: [
    {
      match: [
        /new/,
        e.concat(f, "+"),
        // to prevent built ins from being confused as the class constructor call
        e.concat("(?!", S(_).join("\\b|"), "\\b)"),
        a
      ],
      scope: {
        1: "keyword",
        4: "title.class"
      }
    }
  ] }, T = e.concat(n, "\\b(?!\\()"), x = { variants: [
    {
      match: [
        e.concat(
          /::/,
          e.lookahead(/(?!class\b)/)
        ),
        T
      ],
      scope: { 2: "variable.constant" }
    },
    {
      match: [
        /::/,
        /class/
      ],
      scope: { 2: "variable.language" }
    },
    {
      match: [
        a,
        e.concat(
          /::/,
          e.lookahead(/(?!class\b)/)
        ),
        T
      ],
      scope: {
        1: "title.class",
        3: "variable.constant"
      }
    },
    {
      match: [
        a,
        e.concat(
          "::",
          e.lookahead(/(?!class\b)/)
        )
      ],
      scope: { 1: "title.class" }
    },
    {
      match: [
        a,
        /::/,
        /class/
      ],
      scope: {
        1: "title.class",
        3: "variable.language"
      }
    }
  ] }, C = {
    scope: "attr",
    match: e.concat(n, e.lookahead(":"), e.lookahead(/(?!::)/))
  }, A = {
    relevance: 0,
    begin: /\(/,
    end: /\)/,
    keywords: b,
    contains: [
      C,
      o,
      x,
      t.C_BLOCK_COMMENT_MODE,
      h,
      g,
      E
    ]
  }, D = {
    relevance: 0,
    match: [
      /\b/,
      // to prevent keywords from being confused as the function title
      e.concat("(?!fn\\b|function\\b|", S(m).join("\\b|"), "|", S(_).join("\\b|"), "\\b)"),
      n,
      e.concat(f, "*"),
      e.lookahead(/(?=\()/)
    ],
    scope: { 3: "title.function.invoke" },
    contains: [A]
  };
  A.contains.push(D);
  const M = [
    C,
    x,
    t.C_BLOCK_COMMENT_MODE,
    h,
    g,
    E
  ], I = {
    begin: e.concat(
      /#\[\s*\\?/,
      e.either(
        a,
        i
      )
    ),
    beginScope: "meta",
    end: /]/,
    endScope: "meta",
    keywords: {
      literal: v,
      keyword: [
        "new",
        "array"
      ]
    },
    contains: [
      {
        begin: /\[/,
        end: /]/,
        keywords: {
          literal: v,
          keyword: [
            "new",
            "array"
          ]
        },
        contains: [
          "self",
          ...M
        ]
      },
      ...M,
      {
        scope: "meta",
        variants: [
          { match: a },
          { match: i }
        ]
      }
    ]
  };
  return {
    case_insensitive: !1,
    keywords: b,
    contains: [
      I,
      t.HASH_COMMENT_MODE,
      t.COMMENT("//", "$"),
      t.COMMENT(
        "/\\*",
        "\\*/",
        { contains: [
          {
            scope: "doctag",
            match: "@[A-Za-z]+"
          }
        ] }
      ),
      {
        match: /__halt_compiler\(\);/,
        keywords: "__halt_compiler",
        starts: {
          scope: "comment",
          end: t.MATCH_NOTHING_RE,
          contains: [
            {
              match: /\?>/,
              scope: "meta",
              endsParent: !0
            }
          ]
        }
      },
      s,
      {
        scope: "variable.language",
        match: /\$this\b/
      },
      o,
      D,
      x,
      {
        match: [
          /const/,
          /\s/,
          n
        ],
        scope: {
          1: "keyword",
          3: "variable.constant"
        }
      },
      E,
      {
        scope: "function",
        relevance: 0,
        beginKeywords: "fn function",
        end: /[;{]/,
        excludeEnd: !0,
        illegal: "[$%\\[]",
        contains: [
          { beginKeywords: "use" },
          t.UNDERSCORE_TITLE_MODE,
          {
            begin: "=>",
            // No markup, just a relevance booster
            endsParent: !0
          },
          {
            scope: "params",
            begin: "\\(",
            end: "\\)",
            excludeBegin: !0,
            excludeEnd: !0,
            keywords: b,
            contains: [
              "self",
              I,
              o,
              x,
              t.C_BLOCK_COMMENT_MODE,
              h,
              g
            ]
          }
        ]
      },
      {
        scope: "class",
        variants: [
          {
            beginKeywords: "enum",
            illegal: /[($"]/
          },
          {
            beginKeywords: "class interface trait",
            illegal: /[:($"]/
          }
        ],
        relevance: 0,
        end: /\{/,
        excludeEnd: !0,
        contains: [
          { beginKeywords: "extends implements" },
          t.UNDERSCORE_TITLE_MODE
        ]
      },
      // both use and namespace still use "old style" rules (vs multi-match)
      // because the namespace name can include `\` and we still want each
      // element to be treated as its own *individual* title
      {
        beginKeywords: "namespace",
        relevance: 0,
        end: ";",
        illegal: /[.']/,
        contains: [t.inherit(t.UNDERSCORE_TITLE_MODE, { scope: "title.class" })]
      },
      {
        beginKeywords: "use",
        relevance: 0,
        end: ";",
        contains: [
          // TODO: title.function vs title.class
          {
            match: /\b(as|const|function)\b/,
            scope: "keyword"
          },
          // TODO: could be title.class or title.function
          t.UNDERSCORE_TITLE_MODE
        ]
      },
      h,
      g
    ]
  };
}
const yie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _ee
}, Symbol.toStringTag, { value: "Module" }));
function yee(t) {
  return {
    name: "Plain text",
    aliases: [
      "text",
      "txt"
    ],
    disableAutodetect: !0
  };
}
const bie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: yee
}, Symbol.toStringTag, { value: "Module" }));
function bee(t) {
  const e = {
    keyword: "actor addressof and as be break class compile_error compile_intrinsic consume continue delegate digestof do else elseif embed end error for fun if ifdef in interface is isnt lambda let match new not object or primitive recover repeat return struct then trait try type until use var where while with xor",
    meta: "iso val tag trn box ref",
    literal: "this false true"
  }, r = {
    className: "string",
    begin: '"""',
    end: '"""',
    relevance: 10
  }, n = {
    className: "string",
    begin: '"',
    end: '"',
    contains: [t.BACKSLASH_ESCAPE]
  }, a = {
    className: "string",
    begin: "'",
    end: "'",
    contains: [t.BACKSLASH_ESCAPE],
    relevance: 0
  }, i = {
    className: "type",
    begin: "\\b_?[A-Z][\\w]*",
    relevance: 0
  }, o = {
    begin: t.IDENT_RE + "'",
    relevance: 0
  };
  return {
    name: "Pony",
    keywords: e,
    contains: [
      i,
      r,
      n,
      a,
      o,
      {
        className: "number",
        begin: "(-?)(\\b0[xX][a-fA-F0-9]+|\\b0[bB][01]+|(\\b\\d+(_\\d+)?(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",
        relevance: 0
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ]
  };
}
const Sie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bee
}, Symbol.toStringTag, { value: "Module" }));
function See(t) {
  const e = [
    "string",
    "char",
    "byte",
    "int",
    "long",
    "bool",
    "decimal",
    "single",
    "double",
    "DateTime",
    "xml",
    "array",
    "hashtable",
    "void"
  ], r = "Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|Unprotect|Use|ForEach|Sort|Tee|Where", n = "-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|-split|-wildcard|-xor", a = {
    $pattern: /-?[A-z\.\-]+\b/,
    keyword: "if else foreach return do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch hidden static parameter",
    // "echo" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts
    built_in: "ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write"
    // TODO: 'validate[A-Z]+' can't work in keywords
  }, i = /\w[\w\d]*((-)[\w\d]+)*/, o = {
    begin: "`[\\s\\S]",
    relevance: 0
  }, s = {
    className: "variable",
    variants: [
      { begin: /\$\B/ },
      {
        className: "keyword",
        begin: /\$this/
      },
      { begin: /\$[\w\d][\w\d_:]*/ }
    ]
  }, l = {
    className: "literal",
    begin: /\$(null|true|false)\b/
  }, u = {
    className: "string",
    variants: [
      {
        begin: /"/,
        end: /"/
      },
      {
        begin: /@"/,
        end: /^"@/
      }
    ],
    contains: [
      o,
      s,
      {
        className: "variable",
        begin: /\$[A-z]/,
        end: /[^A-z]/
      }
    ]
  }, c = {
    className: "string",
    variants: [
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /@'/,
        end: /^'@/
      }
    ]
  }, d = {
    className: "doctag",
    variants: [
      /* no paramater help tags */
      { begin: /\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/ },
      /* one parameter help tags */
      { begin: /\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\s+\S+/ }
    ]
  }, p = t.inherit(
    t.COMMENT(null, null),
    {
      variants: [
        /* single-line comment */
        {
          begin: /#/,
          end: /$/
        },
        /* multi-line comment */
        {
          begin: /<#/,
          end: /#>/
        }
      ],
      contains: [d]
    }
  ), f = {
    className: "built_in",
    variants: [{ begin: "(".concat(r, ")+(-)[\\w\\d]+") }]
  }, h = {
    className: "class",
    beginKeywords: "class enum",
    end: /\s*[{]/,
    excludeEnd: !0,
    relevance: 0,
    contains: [t.TITLE_MODE]
  }, g = {
    className: "function",
    begin: /function\s+/,
    end: /\s*\{|$/,
    excludeEnd: !0,
    returnBegin: !0,
    relevance: 0,
    contains: [
      {
        begin: "function",
        relevance: 0,
        className: "keyword"
      },
      {
        className: "title",
        begin: i,
        relevance: 0
      },
      {
        begin: /\(/,
        end: /\)/,
        className: "params",
        relevance: 0,
        contains: [s]
      }
      // CMDLETS
    ]
  }, v = {
    begin: /using\s/,
    end: /$/,
    returnBegin: !0,
    contains: [
      u,
      c,
      {
        className: "keyword",
        begin: /(using|assembly|command|module|namespace|type)/
      }
    ]
  }, m = { variants: [
    // PS literals are pretty verbose so it's a good idea to accent them a bit.
    {
      className: "operator",
      begin: "(".concat(n, ")\\b")
    },
    {
      className: "literal",
      begin: /(-){1,2}[\w\d-]+/,
      relevance: 0
    }
  ] }, _ = {
    className: "selector-tag",
    begin: /@\B/,
    relevance: 0
  }, y = {
    className: "function",
    begin: /\[.*\]\s*[\w]+[ ]??\(/,
    end: /$/,
    returnBegin: !0,
    relevance: 0,
    contains: [
      {
        className: "keyword",
        begin: "(".concat(
          a.keyword.toString().replace(
            /\s/g,
            "|"
          ),
          ")\\b"
        ),
        endsParent: !0,
        relevance: 0
      },
      t.inherit(t.TITLE_MODE, { endsParent: !0 })
    ]
  }, b = [
    // STATIC_MEMBER,
    y,
    p,
    o,
    t.NUMBER_MODE,
    u,
    c,
    // PS_NEW_OBJECT_TYPE,
    f,
    s,
    l,
    _
  ], S = {
    begin: /\[/,
    end: /\]/,
    excludeBegin: !0,
    excludeEnd: !0,
    relevance: 0,
    contains: [].concat(
      "self",
      b,
      {
        begin: "(" + e.join("|") + ")",
        className: "built_in",
        relevance: 0
      },
      {
        className: "type",
        begin: /[\.\w\d]+/,
        relevance: 0
      }
    )
  };
  return y.contains.unshift(S), {
    name: "PowerShell",
    aliases: [
      "pwsh",
      "ps",
      "ps1"
    ],
    case_insensitive: !0,
    keywords: a,
    contains: b.concat(
      h,
      g,
      v,
      m,
      S
    )
  };
}
const Eie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: See
}, Symbol.toStringTag, { value: "Module" }));
function Eee(t) {
  const e = t.regex, r = [
    "displayHeight",
    "displayWidth",
    "mouseY",
    "mouseX",
    "mousePressed",
    "pmouseX",
    "pmouseY",
    "key",
    "keyCode",
    "pixels",
    "focused",
    "frameCount",
    "frameRate",
    "height",
    "width",
    "size",
    "createGraphics",
    "beginDraw",
    "createShape",
    "loadShape",
    "PShape",
    "arc",
    "ellipse",
    "line",
    "point",
    "quad",
    "rect",
    "triangle",
    "bezier",
    "bezierDetail",
    "bezierPoint",
    "bezierTangent",
    "curve",
    "curveDetail",
    "curvePoint",
    "curveTangent",
    "curveTightness",
    "shape",
    "shapeMode",
    "beginContour",
    "beginShape",
    "bezierVertex",
    "curveVertex",
    "endContour",
    "endShape",
    "quadraticVertex",
    "vertex",
    "ellipseMode",
    "noSmooth",
    "rectMode",
    "smooth",
    "strokeCap",
    "strokeJoin",
    "strokeWeight",
    "mouseClicked",
    "mouseDragged",
    "mouseMoved",
    "mousePressed",
    "mouseReleased",
    "mouseWheel",
    "keyPressed",
    "keyPressedkeyReleased",
    "keyTyped",
    "print",
    "println",
    "save",
    "saveFrame",
    "day",
    "hour",
    "millis",
    "minute",
    "month",
    "second",
    "year",
    "background",
    "clear",
    "colorMode",
    "fill",
    "noFill",
    "noStroke",
    "stroke",
    "alpha",
    "blue",
    "brightness",
    "color",
    "green",
    "hue",
    "lerpColor",
    "red",
    "saturation",
    "modelX",
    "modelY",
    "modelZ",
    "screenX",
    "screenY",
    "screenZ",
    "ambient",
    "emissive",
    "shininess",
    "specular",
    "add",
    "createImage",
    "beginCamera",
    "camera",
    "endCamera",
    "frustum",
    "ortho",
    "perspective",
    "printCamera",
    "printProjection",
    "cursor",
    "frameRate",
    "noCursor",
    "exit",
    "loop",
    "noLoop",
    "popStyle",
    "pushStyle",
    "redraw",
    "binary",
    "boolean",
    "byte",
    "char",
    "float",
    "hex",
    "int",
    "str",
    "unbinary",
    "unhex",
    "join",
    "match",
    "matchAll",
    "nf",
    "nfc",
    "nfp",
    "nfs",
    "split",
    "splitTokens",
    "trim",
    "append",
    "arrayCopy",
    "concat",
    "expand",
    "reverse",
    "shorten",
    "sort",
    "splice",
    "subset",
    "box",
    "sphere",
    "sphereDetail",
    "createInput",
    "createReader",
    "loadBytes",
    "loadJSONArray",
    "loadJSONObject",
    "loadStrings",
    "loadTable",
    "loadXML",
    "open",
    "parseXML",
    "saveTable",
    "selectFolder",
    "selectInput",
    "beginRaw",
    "beginRecord",
    "createOutput",
    "createWriter",
    "endRaw",
    "endRecord",
    "PrintWritersaveBytes",
    "saveJSONArray",
    "saveJSONObject",
    "saveStream",
    "saveStrings",
    "saveXML",
    "selectOutput",
    "popMatrix",
    "printMatrix",
    "pushMatrix",
    "resetMatrix",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "scale",
    "shearX",
    "shearY",
    "translate",
    "ambientLight",
    "directionalLight",
    "lightFalloff",
    "lights",
    "lightSpecular",
    "noLights",
    "normal",
    "pointLight",
    "spotLight",
    "image",
    "imageMode",
    "loadImage",
    "noTint",
    "requestImage",
    "tint",
    "texture",
    "textureMode",
    "textureWrap",
    "blend",
    "copy",
    "filter",
    "get",
    "loadPixels",
    "set",
    "updatePixels",
    "blendMode",
    "loadShader",
    "PShaderresetShader",
    "shader",
    "createFont",
    "loadFont",
    "text",
    "textFont",
    "textAlign",
    "textLeading",
    "textMode",
    "textSize",
    "textWidth",
    "textAscent",
    "textDescent",
    "abs",
    "ceil",
    "constrain",
    "dist",
    "exp",
    "floor",
    "lerp",
    "log",
    "mag",
    "map",
    "max",
    "min",
    "norm",
    "pow",
    "round",
    "sq",
    "sqrt",
    "acos",
    "asin",
    "atan",
    "atan2",
    "cos",
    "degrees",
    "radians",
    "sin",
    "tan",
    "noise",
    "noiseDetail",
    "noiseSeed",
    "random",
    "randomGaussian",
    "randomSeed"
  ], n = t.IDENT_RE, a = { variants: [
    {
      match: e.concat(e.either(...r), e.lookahead(/\s*\(/)),
      className: "built_in"
    },
    {
      relevance: 0,
      match: e.concat(
        /\b(?!for|if|while)/,
        n,
        e.lookahead(/\s*\(/)
      ),
      className: "title.function"
    }
  ] }, i = {
    match: [
      /new\s+/,
      n
    ],
    className: {
      1: "keyword",
      2: "class.title"
    }
  }, o = {
    relevance: 0,
    match: [
      /\./,
      n
    ],
    className: { 2: "property" }
  }, s = {
    variants: [
      { match: [
        /class/,
        /\s+/,
        n,
        /\s+/,
        /extends/,
        /\s+/,
        n
      ] },
      { match: [
        /class/,
        /\s+/,
        n
      ] }
    ],
    className: {
      1: "keyword",
      3: "title.class",
      5: "keyword",
      7: "title.class.inherited"
    }
  }, l = [
    "boolean",
    "byte",
    "char",
    "color",
    "double",
    "float",
    "int",
    "long",
    "short"
  ], u = [
    "BufferedReader",
    "PVector",
    "PFont",
    "PImage",
    "PGraphics",
    "HashMap",
    "String",
    "Array",
    "FloatDict",
    "ArrayList",
    "FloatList",
    "IntDict",
    "IntList",
    "JSONArray",
    "JSONObject",
    "Object",
    "StringDict",
    "StringList",
    "Table",
    "TableRow",
    "XML"
  ];
  return {
    name: "Processing",
    aliases: ["pde"],
    keywords: {
      keyword: [...[
        "abstract",
        "assert",
        "break",
        "case",
        "catch",
        "const",
        "continue",
        "default",
        "else",
        "enum",
        "final",
        "finally",
        "for",
        "if",
        "import",
        "instanceof",
        "long",
        "native",
        "new",
        "package",
        "private",
        "private",
        "protected",
        "protected",
        "public",
        "public",
        "return",
        "static",
        "strictfp",
        "switch",
        "synchronized",
        "throw",
        "throws",
        "transient",
        "try",
        "void",
        "volatile",
        "while"
      ]],
      literal: "P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI null true false",
      title: "setup draw",
      variable: "super this",
      built_in: [
        ...r,
        ...u
      ],
      type: l
    },
    contains: [
      s,
      i,
      a,
      o,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE
    ]
  };
}
const Tie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Eee
}, Symbol.toStringTag, { value: "Module" }));
function Tee(t) {
  return {
    name: "Python profiler",
    contains: [
      t.C_NUMBER_MODE,
      {
        begin: "[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",
        end: ":",
        excludeEnd: !0
      },
      {
        begin: "(ncalls|tottime|cumtime)",
        end: "$",
        keywords: "ncalls tottime|10 cumtime|10 filename",
        relevance: 10
      },
      {
        begin: "function calls",
        end: "$",
        contains: [t.C_NUMBER_MODE],
        relevance: 10
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "\\(",
        end: "\\)$",
        excludeBegin: !0,
        excludeEnd: !0,
        relevance: 0
      }
    ]
  };
}
const xie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Tee
}, Symbol.toStringTag, { value: "Module" }));
function xee(t) {
  const e = {
    begin: /[a-z][A-Za-z0-9_]*/,
    relevance: 0
  }, r = {
    className: "symbol",
    variants: [
      { begin: /[A-Z][a-zA-Z0-9_]*/ },
      { begin: /_[A-Za-z0-9_]*/ }
    ],
    relevance: 0
  }, n = {
    begin: /\(/,
    end: /\)/,
    relevance: 0
  }, a = {
    begin: /\[/,
    end: /\]/
  }, i = {
    className: "comment",
    begin: /%/,
    end: /$/,
    contains: [t.PHRASAL_WORDS_MODE]
  }, o = {
    className: "string",
    begin: /`/,
    end: /`/,
    contains: [t.BACKSLASH_ESCAPE]
  }, s = {
    className: "string",
    // 0'a etc.
    begin: /0'(\\'|.)/
  }, l = {
    className: "string",
    begin: /0'\\s/
    // 0'\s
  }, c = [
    e,
    r,
    n,
    {
      // relevance booster
      begin: /:-/
    },
    a,
    i,
    t.C_BLOCK_COMMENT_MODE,
    t.QUOTE_STRING_MODE,
    t.APOS_STRING_MODE,
    o,
    s,
    l,
    t.C_NUMBER_MODE
  ];
  return n.contains = c, a.contains = c, {
    name: "Prolog",
    contains: c.concat([
      {
        // relevance booster
        begin: /\.$/
      }
    ])
  };
}
const Cie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xee
}, Symbol.toStringTag, { value: "Module" }));
function Cee(t) {
  const e = "[ \\t\\f]*", r = "[ \\t\\f]+", n = e + "[:=]" + e, a = r, i = "(" + n + "|" + a + ")", o = "([^\\\\:= \\t\\f\\n]|\\\\.)+", s = {
    // skip DELIM
    end: i,
    relevance: 0,
    starts: {
      // value: everything until end of line (again, taking into account backslashes)
      className: "string",
      end: /$/,
      relevance: 0,
      contains: [
        { begin: "\\\\\\\\" },
        { begin: "\\\\\\n" }
      ]
    }
  };
  return {
    name: ".properties",
    disableAutodetect: !0,
    case_insensitive: !0,
    illegal: /\S/,
    contains: [
      t.COMMENT("^\\s*[!#]", "$"),
      // key: everything until whitespace or = or : (taking into account backslashes)
      // case of a key-value pair
      {
        returnBegin: !0,
        variants: [
          { begin: o + n },
          { begin: o + a }
        ],
        contains: [
          {
            className: "attr",
            begin: o,
            endsParent: !0
          }
        ],
        starts: s
      },
      // case of an empty key
      {
        className: "attr",
        begin: o + e + "$"
      }
    ]
  };
}
const Aie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Cee
}, Symbol.toStringTag, { value: "Module" }));
function Aee(t) {
  const e = [
    "package",
    "import",
    "option",
    "optional",
    "required",
    "repeated",
    "group",
    "oneof"
  ], r = [
    "double",
    "float",
    "int32",
    "int64",
    "uint32",
    "uint64",
    "sint32",
    "sint64",
    "fixed32",
    "fixed64",
    "sfixed32",
    "sfixed64",
    "bool",
    "string",
    "bytes"
  ], n = {
    match: [
      /(message|enum|service)\s+/,
      t.IDENT_RE
    ],
    scope: {
      1: "keyword",
      2: "title.class"
    }
  };
  return {
    name: "Protocol Buffers",
    aliases: ["proto"],
    keywords: {
      keyword: e,
      type: r,
      literal: [
        "true",
        "false"
      ]
    },
    contains: [
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      n,
      {
        className: "function",
        beginKeywords: "rpc",
        end: /[{;]/,
        excludeEnd: !0,
        keywords: "rpc returns"
      },
      {
        // match enum items (relevance)
        // BLAH = ...;
        begin: /^\s*[A-Z_]+(?=\s*=[^\n]+;$)/
      }
    ]
  };
}
const wie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Aee
}, Symbol.toStringTag, { value: "Module" }));
function wee(t) {
  const e = {
    keyword: (
      /* language keywords */
      "and case default else elsif false if in import enherits node or true undef unless main settings $string "
    ),
    literal: (
      /* metaparameters */
      "alias audit before loglevel noop require subscribe tag owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check en_address ip_address realname command environment hour monute month monthday special target weekday creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey sslverify mounted"
    ),
    built_in: (
      /* core facts */
      "architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version"
    )
  }, r = t.COMMENT("#", "$"), n = "([A-Za-z_]|::)(\\w|::)*", a = t.inherit(t.TITLE_MODE, { begin: n }), i = {
    className: "variable",
    begin: "\\$" + n
  }, o = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      i
    ],
    variants: [
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /"/,
        end: /"/
      }
    ]
  };
  return {
    name: "Puppet",
    aliases: ["pp"],
    contains: [
      r,
      i,
      o,
      {
        beginKeywords: "class",
        end: "\\{|;",
        illegal: /=/,
        contains: [
          a,
          r
        ]
      },
      {
        beginKeywords: "define",
        end: /\{/,
        contains: [
          {
            className: "section",
            begin: t.IDENT_RE,
            endsParent: !0
          }
        ]
      },
      {
        begin: t.IDENT_RE + "\\s+\\{",
        returnBegin: !0,
        end: /\S/,
        contains: [
          {
            className: "keyword",
            begin: t.IDENT_RE,
            relevance: 0.2
          },
          {
            begin: /\{/,
            end: /\}/,
            keywords: e,
            relevance: 0,
            contains: [
              o,
              r,
              {
                begin: "[a-zA-Z_]+\\s*=>",
                returnBegin: !0,
                end: "=>",
                contains: [
                  {
                    className: "attr",
                    begin: t.IDENT_RE
                  }
                ]
              },
              {
                className: "number",
                begin: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
                relevance: 0
              },
              i
            ]
          }
        ],
        relevance: 0
      }
    ]
  };
}
const Die = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: wee
}, Symbol.toStringTag, { value: "Module" }));
function Dee(t) {
  const e = {
    // PB IDE color: #0080FF (Azure Radiance)
    className: "string",
    begin: '(~)?"',
    end: '"',
    illegal: "\\n"
  }, r = {
    // PB IDE color: #924B72 (Cannon Pink)
    //  "#" + a letter or underscore + letters, digits or underscores + (optional) "$"
    className: "symbol",
    begin: "#[a-zA-Z_]\\w*\\$?"
  };
  return {
    name: "PureBASIC",
    aliases: [
      "pb",
      "pbi"
    ],
    keywords: (
      // PB IDE color: #006666 (Blue Stone) + Bold
      // Keywords from all version of PureBASIC 5.00 upward ...
      "Align And Array As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerElseIf CompilerEndIf CompilerEndSelect CompilerError CompilerIf CompilerSelect CompilerWarning Continue Data DataSection Debug DebugLevel Declare DeclareC DeclareCDLL DeclareDLL DeclareModule Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM EnableDebugger EnableExplicit End EndDataSection EndDeclareModule EndEnumeration EndIf EndImport EndInterface EndMacro EndModule EndProcedure EndSelect EndStructure EndStructureUnion EndWith Enumeration EnumerationBinary Extends FakeReturn For ForEach ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface List Macro MacroExpandedCount Map Module NewList NewMap Next Not Or Procedure ProcedureC ProcedureCDLL ProcedureDLL ProcedureReturn Protected Prototype PrototypeC ReDim Read Repeat Restore Return Runtime Select Shared Static Step Structure StructureUnion Swap Threaded To UndefineMacro Until Until  UnuseModule UseModule Wend While With XIncludeFile XOr"
    ),
    contains: [
      // COMMENTS | PB IDE color: #00AAAA (Persian Green)
      t.COMMENT(";", "$", { relevance: 0 }),
      {
        // PROCEDURES DEFINITIONS
        className: "function",
        begin: "\\b(Procedure|Declare)(C|CDLL|DLL)?\\b",
        end: "\\(",
        excludeEnd: !0,
        returnBegin: !0,
        contains: [
          {
            // PROCEDURE KEYWORDS | PB IDE color: #006666 (Blue Stone) + Bold
            className: "keyword",
            begin: "(Procedure|Declare)(C|CDLL|DLL)?",
            excludeEnd: !0
          },
          {
            // PROCEDURE RETURN TYPE SETTING | PB IDE color: #000000 (Black)
            className: "type",
            begin: "\\.\\w*"
            // end: ' ',
          },
          t.UNDERSCORE_TITLE_MODE
          // PROCEDURE NAME | PB IDE color: #006666 (Blue Stone)
        ]
      },
      e,
      r
    ]
  };
}
const Mie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Dee
}, Symbol.toStringTag, { value: "Module" }));
function Mee(t) {
  const e = t.regex, r = new RegExp("[\\p{XID_Start}_]\\p{XID_Continue}*", "u"), n = [
    "and",
    "as",
    "assert",
    "async",
    "await",
    "break",
    "case",
    "class",
    "continue",
    "def",
    "del",
    "elif",
    "else",
    "except",
    "finally",
    "for",
    "from",
    "global",
    "if",
    "import",
    "in",
    "is",
    "lambda",
    "match",
    "nonlocal|10",
    "not",
    "or",
    "pass",
    "raise",
    "return",
    "try",
    "while",
    "with",
    "yield"
  ], s = {
    $pattern: /[A-Za-z]\w+|__\w+__/,
    keyword: n,
    built_in: [
      "__import__",
      "abs",
      "all",
      "any",
      "ascii",
      "bin",
      "bool",
      "breakpoint",
      "bytearray",
      "bytes",
      "callable",
      "chr",
      "classmethod",
      "compile",
      "complex",
      "delattr",
      "dict",
      "dir",
      "divmod",
      "enumerate",
      "eval",
      "exec",
      "filter",
      "float",
      "format",
      "frozenset",
      "getattr",
      "globals",
      "hasattr",
      "hash",
      "help",
      "hex",
      "id",
      "input",
      "int",
      "isinstance",
      "issubclass",
      "iter",
      "len",
      "list",
      "locals",
      "map",
      "max",
      "memoryview",
      "min",
      "next",
      "object",
      "oct",
      "open",
      "ord",
      "pow",
      "print",
      "property",
      "range",
      "repr",
      "reversed",
      "round",
      "set",
      "setattr",
      "slice",
      "sorted",
      "staticmethod",
      "str",
      "sum",
      "super",
      "tuple",
      "type",
      "vars",
      "zip"
    ],
    literal: [
      "__debug__",
      "Ellipsis",
      "False",
      "None",
      "NotImplemented",
      "True"
    ],
    type: [
      "Any",
      "Callable",
      "Coroutine",
      "Dict",
      "List",
      "Literal",
      "Generic",
      "Optional",
      "Sequence",
      "Set",
      "Tuple",
      "Type",
      "Union"
    ]
  }, l = {
    className: "meta",
    begin: /^(>>>|\.\.\.) /
  }, u = {
    className: "subst",
    begin: /\{/,
    end: /\}/,
    keywords: s,
    illegal: /#/
  }, c = {
    begin: /\{\{/,
    relevance: 0
  }, d = {
    className: "string",
    contains: [t.BACKSLASH_ESCAPE],
    variants: [
      {
        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,
        end: /'''/,
        contains: [
          t.BACKSLASH_ESCAPE,
          l
        ],
        relevance: 10
      },
      {
        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,
        end: /"""/,
        contains: [
          t.BACKSLASH_ESCAPE,
          l
        ],
        relevance: 10
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])'''/,
        end: /'''/,
        contains: [
          t.BACKSLASH_ESCAPE,
          l,
          c,
          u
        ]
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])"""/,
        end: /"""/,
        contains: [
          t.BACKSLASH_ESCAPE,
          l,
          c,
          u
        ]
      },
      {
        begin: /([uU]|[rR])'/,
        end: /'/,
        relevance: 10
      },
      {
        begin: /([uU]|[rR])"/,
        end: /"/,
        relevance: 10
      },
      {
        begin: /([bB]|[bB][rR]|[rR][bB])'/,
        end: /'/
      },
      {
        begin: /([bB]|[bB][rR]|[rR][bB])"/,
        end: /"/
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])'/,
        end: /'/,
        contains: [
          t.BACKSLASH_ESCAPE,
          c,
          u
        ]
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])"/,
        end: /"/,
        contains: [
          t.BACKSLASH_ESCAPE,
          c,
          u
        ]
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  }, p = "[0-9](_?[0-9])*", f = `(\\b(${p}))?\\.(${p})|\\b(${p})\\.`, h = `\\b|${n.join("|")}`, g = {
    className: "number",
    relevance: 0,
    variants: [
      // exponentfloat, pointfloat
      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals
      // optionally imaginary
      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals
      // Note: no leading \b because floats can start with a decimal point
      // and we don't want to mishandle e.g. `fn(.5)`,
      // no trailing \b for pointfloat because it can end with a decimal point
      // and we don't want to mishandle e.g. `0..hex()`; this should be safe
      // because both MUST contain a decimal point and so cannot be confused with
      // the interior part of an identifier
      {
        begin: `(\\b(${p})|(${f}))[eE][+-]?(${p})[jJ]?(?=${h})`
      },
      {
        begin: `(${f})[jJ]?`
      },
      // decinteger, bininteger, octinteger, hexinteger
      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals
      // optionally "long" in Python 2
      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals
      // decinteger is optionally imaginary
      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals
      {
        begin: `\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${h})`
      },
      {
        begin: `\\b0[bB](_?[01])+[lL]?(?=${h})`
      },
      {
        begin: `\\b0[oO](_?[0-7])+[lL]?(?=${h})`
      },
      {
        begin: `\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${h})`
      },
      // imagnumber (digitpart-based)
      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals
      {
        begin: `\\b(${p})[jJ](?=${h})`
      }
    ]
  }, v = {
    className: "comment",
    begin: e.lookahead(/# type:/),
    end: /$/,
    keywords: s,
    contains: [
      {
        // prevent keywords from coloring `type`
        begin: /# type:/
      },
      // comment within a datatype comment includes no keywords
      {
        begin: /#/,
        end: /\b\B/,
        endsWithParent: !0
      }
    ]
  }, m = {
    className: "params",
    variants: [
      // Exclude params in functions without params
      {
        className: "",
        begin: /\(\s*\)/,
        skip: !0
      },
      {
        begin: /\(/,
        end: /\)/,
        excludeBegin: !0,
        excludeEnd: !0,
        keywords: s,
        contains: [
          "self",
          l,
          g,
          d,
          t.HASH_COMMENT_MODE
        ]
      }
    ]
  };
  return u.contains = [
    d,
    g,
    l
  ], {
    name: "Python",
    aliases: [
      "py",
      "gyp",
      "ipython"
    ],
    unicodeRegex: !0,
    keywords: s,
    illegal: /(<\/|\?)|=>/,
    contains: [
      l,
      g,
      {
        // very common convention
        scope: "variable.language",
        match: /\bself\b/
      },
      {
        // eat "if" prior to string so that it won't accidentally be
        // labeled as an f-string
        beginKeywords: "if",
        relevance: 0
      },
      { match: /\bor\b/, scope: "keyword" },
      d,
      v,
      t.HASH_COMMENT_MODE,
      {
        match: [
          /\bdef/,
          /\s+/,
          r
        ],
        scope: {
          1: "keyword",
          3: "title.function"
        },
        contains: [m]
      },
      {
        variants: [
          {
            match: [
              /\bclass/,
              /\s+/,
              r,
              /\s*/,
              /\(\s*/,
              r,
              /\s*\)/
            ]
          },
          {
            match: [
              /\bclass/,
              /\s+/,
              r
            ]
          }
        ],
        scope: {
          1: "keyword",
          3: "title.class",
          6: "title.class.inherited"
        }
      },
      {
        className: "meta",
        begin: /^[\t ]*@/,
        end: /(?=#)|$/,
        contains: [
          g,
          m,
          d
        ]
      }
    ]
  };
}
const Iie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Mee
}, Symbol.toStringTag, { value: "Module" }));
function Iee(t) {
  return {
    name: "Q",
    aliases: [
      "k",
      "kdb"
    ],
    keywords: {
      $pattern: /(`?)[A-Za-z0-9_]+\b/,
      keyword: "do while select delete by update from",
      literal: "0b 1b",
      built_in: "neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum",
      type: "`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid"
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE
    ]
  };
}
const Nie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Iee
}, Symbol.toStringTag, { value: "Module" }));
function Nee(t) {
  const e = t.regex, r = {
    keyword: "in of on if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await import",
    literal: "true false null undefined NaN Infinity",
    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Behavior bool color coordinate date double enumeration font geocircle georectangle geoshape int list matrix4x4 parent point quaternion real rect size string url variant vector2d vector3d vector4d Promise"
  }, n = "[a-zA-Z_][a-zA-Z0-9\\._]*", a = {
    className: "keyword",
    begin: "\\bproperty\\b",
    starts: {
      className: "string",
      end: "(:|=|;|,|//|/\\*|$)",
      returnEnd: !0
    }
  }, i = {
    className: "keyword",
    begin: "\\bsignal\\b",
    starts: {
      className: "string",
      end: "(\\(|:|=|;|,|//|/\\*|$)",
      returnEnd: !0
    }
  }, o = {
    className: "attribute",
    begin: "\\bid\\s*:",
    starts: {
      className: "string",
      end: n,
      returnEnd: !1
    }
  }, s = {
    begin: n + "\\s*:",
    returnBegin: !0,
    contains: [
      {
        className: "attribute",
        begin: n,
        end: "\\s*:",
        excludeEnd: !0,
        relevance: 0
      }
    ],
    relevance: 0
  }, l = {
    begin: e.concat(n, /\s*\{/),
    end: /\{/,
    returnBegin: !0,
    relevance: 0,
    contains: [t.inherit(t.TITLE_MODE, { begin: n })]
  };
  return {
    name: "QML",
    aliases: ["qt"],
    case_insensitive: !1,
    keywords: r,
    contains: [
      {
        className: "meta",
        begin: /^\s*['"]use (strict|asm)['"]/
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      {
        // template string
        className: "string",
        begin: "`",
        end: "`",
        contains: [
          t.BACKSLASH_ESCAPE,
          {
            className: "subst",
            begin: "\\$\\{",
            end: "\\}"
          }
        ]
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "number",
        variants: [
          { begin: "\\b(0[bB][01]+)" },
          { begin: "\\b(0[oO][0-7]+)" },
          { begin: t.C_NUMBER_RE }
        ],
        relevance: 0
      },
      {
        // "value" container
        begin: "(" + t.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        contains: [
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE,
          t.REGEXP_MODE,
          {
            // E4X / JSX
            begin: /</,
            end: />\s*[);\]]/,
            relevance: 0,
            subLanguage: "xml"
          }
        ],
        relevance: 0
      },
      i,
      a,
      {
        className: "function",
        beginKeywords: "function",
        end: /\{/,
        excludeEnd: !0,
        contains: [
          t.inherit(t.TITLE_MODE, { begin: /[A-Za-z$_][0-9A-Za-z$_]*/ }),
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            excludeBegin: !0,
            excludeEnd: !0,
            contains: [
              t.C_LINE_COMMENT_MODE,
              t.C_BLOCK_COMMENT_MODE
            ]
          }
        ],
        illegal: /\[|%/
      },
      {
        // hack: prevents detection of keywords after dots
        begin: "\\." + t.IDENT_RE,
        relevance: 0
      },
      o,
      s,
      l
    ],
    illegal: /#/
  };
}
const Rie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Nee
}, Symbol.toStringTag, { value: "Module" }));
function Ree(t) {
  const e = t.regex, r = /(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/, n = e.either(
    // Special case: only hexadecimal binary powers can contain fractions
    /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/,
    // Hexadecimal numbers without fraction and optional binary power
    /0[xX][0-9a-fA-F]+(?:[pP][+-]?\d+)?[Li]?/,
    // Decimal numbers
    /(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?[Li]?/
  ), a = /[=!<>:]=|\|\||&&|:::?|<-|<<-|->>|->|\|>|[-+*\/?!$&|:<=>@^~]|\*\*/, i = e.either(
    /[()]/,
    /[{}]/,
    /\[\[/,
    /[[\]]/,
    /\\/,
    /,/
  );
  return {
    name: "R",
    keywords: {
      $pattern: r,
      keyword: "function if in break next repeat else for while",
      literal: "NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",
      built_in: (
        // Builtin constants
        "LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"
      )
    },
    contains: [
      // Roxygen comments
      t.COMMENT(
        /#'/,
        /$/,
        { contains: [
          {
            // Handle `@examples` separately to cause all subsequent code
            // until the next `@`-tag on its own line to be kept as-is,
            // preventing highlighting. This code is example R code, so nested
            // doctags shouldn’t be treated as such. See
            // `test/markup/r/roxygen.txt` for an example.
            scope: "doctag",
            match: /@examples/,
            starts: {
              end: e.lookahead(e.either(
                // end if another doc comment
                /\n^#'\s*(?=@[a-zA-Z]+)/,
                // or a line with no comment
                /\n^(?!#')/
              )),
              endsParent: !0
            }
          },
          {
            // Handle `@param` to highlight the parameter name following
            // after.
            scope: "doctag",
            begin: "@param",
            end: /$/,
            contains: [
              {
                scope: "variable",
                variants: [
                  { match: r },
                  { match: /`(?:\\.|[^`\\])+`/ }
                ],
                endsParent: !0
              }
            ]
          },
          {
            scope: "doctag",
            match: /@[a-zA-Z]+/
          },
          {
            scope: "keyword",
            match: /\\[a-zA-Z]+/
          }
        ] }
      ),
      t.HASH_COMMENT_MODE,
      {
        scope: "string",
        contains: [t.BACKSLASH_ESCAPE],
        variants: [
          t.END_SAME_AS_BEGIN({
            begin: /[rR]"(-*)\(/,
            end: /\)(-*)"/
          }),
          t.END_SAME_AS_BEGIN({
            begin: /[rR]"(-*)\{/,
            end: /\}(-*)"/
          }),
          t.END_SAME_AS_BEGIN({
            begin: /[rR]"(-*)\[/,
            end: /\](-*)"/
          }),
          t.END_SAME_AS_BEGIN({
            begin: /[rR]'(-*)\(/,
            end: /\)(-*)'/
          }),
          t.END_SAME_AS_BEGIN({
            begin: /[rR]'(-*)\{/,
            end: /\}(-*)'/
          }),
          t.END_SAME_AS_BEGIN({
            begin: /[rR]'(-*)\[/,
            end: /\](-*)'/
          }),
          {
            begin: '"',
            end: '"',
            relevance: 0
          },
          {
            begin: "'",
            end: "'",
            relevance: 0
          }
        ]
      },
      // Matching numbers immediately following punctuation and operators is
      // tricky since we need to look at the character ahead of a number to
      // ensure the number is not part of an identifier, and we cannot use
      // negative look-behind assertions. So instead we explicitly handle all
      // possible combinations of (operator|punctuation), number.
      // TODO: replace with negative look-behind when available
      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/ },
      // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\d+)?[Li]?/ },
      // { begin: /(?<![a-zA-Z0-9._])(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?[Li]?/ }
      {
        relevance: 0,
        variants: [
          {
            scope: {
              1: "operator",
              2: "number"
            },
            match: [
              a,
              n
            ]
          },
          {
            scope: {
              1: "operator",
              2: "number"
            },
            match: [
              /%[^%]*%/,
              n
            ]
          },
          {
            scope: {
              1: "punctuation",
              2: "number"
            },
            match: [
              i,
              n
            ]
          },
          {
            scope: { 2: "number" },
            match: [
              /[^a-zA-Z0-9._]|^/,
              // not part of an identifier, or start of document
              n
            ]
          }
        ]
      },
      // Operators/punctuation when they're not directly followed by numbers
      {
        // Relevance boost for the most common assignment form.
        scope: { 3: "operator" },
        match: [
          r,
          /\s+/,
          /<-/,
          /\s+/
        ]
      },
      {
        scope: "operator",
        relevance: 0,
        variants: [
          { match: a },
          { match: /%[^%]*%/ }
        ]
      },
      {
        scope: "punctuation",
        relevance: 0,
        match: i
      },
      {
        // Escaped identifier
        begin: "`",
        end: "`",
        contains: [{ begin: /\\./ }]
      }
    ]
  };
}
const Oie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ree
}, Symbol.toStringTag, { value: "Module" }));
function Oee(t) {
  return {
    name: "ReasonML",
    aliases: ["re"],
    keywords: {
      $pattern: /[a-z_]\w*!?/,
      keyword: [
        "and",
        "as",
        "asr",
        "assert",
        "begin",
        "class",
        "constraint",
        "do",
        "done",
        "downto",
        "else",
        "end",
        "esfun",
        "exception",
        "external",
        "for",
        "fun",
        "function",
        "functor",
        "if",
        "in",
        "include",
        "inherit",
        "initializer",
        "land",
        "lazy",
        "let",
        "lor",
        "lsl",
        "lsr",
        "lxor",
        "mod",
        "module",
        "mutable",
        "new",
        "nonrec",
        "object",
        "of",
        "open",
        "or",
        "pri",
        "pub",
        "rec",
        "sig",
        "struct",
        "switch",
        "then",
        "to",
        "try",
        "type",
        "val",
        "virtual",
        "when",
        "while",
        "with"
      ],
      built_in: [
        "array",
        "bool",
        "bytes",
        "char",
        "exn|5",
        "float",
        "int",
        "int32",
        "int64",
        "list",
        "lazy_t|5",
        "nativeint|5",
        "ref",
        "string",
        "unit"
      ],
      literal: ["true", "false"]
    },
    illegal: /(:-|:=|\$\{|\+=)/,
    contains: [
      {
        scope: "literal",
        match: /\[(\|\|)?\]|\(\)/,
        relevance: 0
      },
      t.C_LINE_COMMENT_MODE,
      t.COMMENT(/\/\*/, /\*\//, { illegal: /^(#,\/\/)/ }),
      {
        /* type variable */
        scope: "symbol",
        match: /\'[A-Za-z_](?!\')[\w\']*/
        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
      },
      {
        /* polymorphic variant */
        scope: "type",
        match: /`[A-Z][\w\']*/
      },
      {
        /* module or constructor */
        scope: "type",
        match: /\b[A-Z][\w\']*/,
        relevance: 0
      },
      {
        /* don't color identifiers, but safely catch all identifiers with ' */
        match: /[a-z_]\w*\'[\w\']*/,
        relevance: 0
      },
      {
        scope: "operator",
        match: /\s+(\|\||\+[\+\.]?|\*[\*\/\.]?|\/[\.]?|\.\.\.|\|>|&&|===?)\s+/,
        relevance: 0
      },
      t.inherit(t.APOS_STRING_MODE, {
        scope: "string",
        relevance: 0
      }),
      t.inherit(t.QUOTE_STRING_MODE, { illegal: null }),
      {
        scope: "number",
        variants: [
          { match: /\b0[xX][a-fA-F0-9_]+[Lln]?/ },
          { match: /\b0[oO][0-7_]+[Lln]?/ },
          { match: /\b0[bB][01_]+[Lln]?/ },
          { match: /\b[0-9][0-9_]*([Lln]|(\.[0-9_]*)?([eE][-+]?[0-9_]+)?)/ }
        ],
        relevance: 0
      }
    ]
  };
}
const Lie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Oee
}, Symbol.toStringTag, { value: "Module" }));
function Lee(t) {
  return {
    name: "RenderMan RIB",
    keywords: "ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry Hider Hyperboloid Identity Illuminate Imager Interior LightSource MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd TransformPoints Translate TrimCurve WorldBegin WorldEnd",
    illegal: "</",
    contains: [
      t.HASH_COMMENT_MODE,
      t.C_NUMBER_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  };
}
const Pie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Lee
}, Symbol.toStringTag, { value: "Module" }));
function Pee(t) {
  const e = "[a-zA-Z-_][^\\n{]+\\{", r = {
    className: "attribute",
    begin: /[a-zA-Z-_]+/,
    end: /\s*:/,
    excludeEnd: !0,
    starts: {
      end: ";",
      relevance: 0,
      contains: [
        {
          className: "variable",
          begin: /\.[a-zA-Z-_]+/
        },
        {
          className: "keyword",
          begin: /\(optional\)/
        }
      ]
    }
  };
  return {
    name: "Roboconf",
    aliases: [
      "graph",
      "instances"
    ],
    case_insensitive: !0,
    keywords: "import",
    contains: [
      // Facet sections
      {
        begin: "^facet " + e,
        end: /\}/,
        keywords: "facet",
        contains: [
          r,
          t.HASH_COMMENT_MODE
        ]
      },
      // Instance sections
      {
        begin: "^\\s*instance of " + e,
        end: /\}/,
        keywords: "name count channels instance-data instance-state instance of",
        illegal: /\S/,
        contains: [
          "self",
          r,
          t.HASH_COMMENT_MODE
        ]
      },
      // Component sections
      {
        begin: "^" + e,
        end: /\}/,
        contains: [
          r,
          t.HASH_COMMENT_MODE
        ]
      },
      // Comments
      t.HASH_COMMENT_MODE
    ]
  };
}
const kie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Pee
}, Symbol.toStringTag, { value: "Module" }));
function kee(t) {
  const e = "foreach do while for if from to step else on-error and or not in", r = "global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime", n = "add remove enable disable set get print export edit find run debug error info warning", a = "true false yes no nothing nil null", i = "traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw", o = {
    className: "variable",
    variants: [
      { begin: /\$[\w\d#@][\w\d_]*/ },
      { begin: /\$\{(.*?)\}/ }
    ]
  }, s = {
    className: "string",
    begin: /"/,
    end: /"/,
    contains: [
      t.BACKSLASH_ESCAPE,
      o,
      {
        className: "variable",
        begin: /\$\(/,
        end: /\)/,
        contains: [t.BACKSLASH_ESCAPE]
      }
    ]
  }, l = {
    className: "string",
    begin: /'/,
    end: /'/
  };
  return {
    name: "MikroTik RouterOS script",
    aliases: ["mikrotik"],
    case_insensitive: !0,
    keywords: {
      $pattern: /:?[\w-]+/,
      literal: a,
      keyword: e + " :" + e.split(" ").join(" :") + " :" + r.split(" ").join(" :")
    },
    contains: [
      {
        // illegal syntax
        variants: [
          {
            // -- comment
            begin: /\/\*/,
            end: /\*\//
          },
          {
            // Stan comment
            begin: /\/\//,
            end: /$/
          },
          {
            // HTML tags
            begin: /<\//,
            end: />/
          }
        ],
        illegal: /./
      },
      t.COMMENT("^#", "$"),
      s,
      l,
      o,
      // attribute=value
      {
        // > is to avoid matches with => in other grammars
        begin: /[\w-]+=([^\s{}[\]()>]+)/,
        relevance: 0,
        returnBegin: !0,
        contains: [
          {
            className: "attribute",
            begin: /[^=]+/
          },
          {
            begin: /=/,
            endsWithParent: !0,
            relevance: 0,
            contains: [
              s,
              l,
              o,
              {
                className: "literal",
                begin: "\\b(" + a.split(" ").join("|") + ")\\b"
              },
              {
                // Do not format unclassified values. Needed to exclude highlighting of values as built_in.
                begin: /("[^"]*"|[^\s{}[\]]+)/
              }
              /*
              {
                // IPv4 addresses and subnets
                className: 'number',
                variants: [
                  {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24
                  {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3
                  {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1
                ]
              },
              {
                // MAC addresses and DHCP Client IDs
                className: 'number',
                begin: /\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\b/,
              },
              */
            ]
          }
        ]
      },
      {
        // HEX values
        className: "number",
        begin: /\*[0-9a-fA-F]+/
      },
      {
        begin: "\\b(" + n.split(" ").join("|") + ")([\\s[(\\]|])",
        returnBegin: !0,
        contains: [
          {
            className: "built_in",
            // 'function',
            begin: /\w+/
          }
        ]
      },
      {
        className: "built_in",
        variants: [
          { begin: "(\\.\\./|/|\\s)((" + i.split(" ").join("|") + ");?\\s)+" },
          {
            begin: /\.\./,
            relevance: 0
          }
        ]
      }
    ]
  };
}
const Bie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kee
}, Symbol.toStringTag, { value: "Module" }));
function Bee(t) {
  const e = [
    "abs",
    "acos",
    "ambient",
    "area",
    "asin",
    "atan",
    "atmosphere",
    "attribute",
    "calculatenormal",
    "ceil",
    "cellnoise",
    "clamp",
    "comp",
    "concat",
    "cos",
    "degrees",
    "depth",
    "Deriv",
    "diffuse",
    "distance",
    "Du",
    "Dv",
    "environment",
    "exp",
    "faceforward",
    "filterstep",
    "floor",
    "format",
    "fresnel",
    "incident",
    "length",
    "lightsource",
    "log",
    "match",
    "max",
    "min",
    "mod",
    "noise",
    "normalize",
    "ntransform",
    "opposite",
    "option",
    "phong",
    "pnoise",
    "pow",
    "printf",
    "ptlined",
    "radians",
    "random",
    "reflect",
    "refract",
    "renderinfo",
    "round",
    "setcomp",
    "setxcomp",
    "setycomp",
    "setzcomp",
    "shadow",
    "sign",
    "sin",
    "smoothstep",
    "specular",
    "specularbrdf",
    "spline",
    "sqrt",
    "step",
    "tan",
    "texture",
    "textureinfo",
    "trace",
    "transform",
    "vtransform",
    "xcomp",
    "ycomp",
    "zcomp"
  ], r = [
    "matrix",
    "float",
    "color",
    "point",
    "normal",
    "vector"
  ], n = [
    "while",
    "for",
    "if",
    "do",
    "return",
    "else",
    "break",
    "extern",
    "continue"
  ], a = {
    match: [
      /(surface|displacement|light|volume|imager)/,
      /\s+/,
      t.IDENT_RE
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  };
  return {
    name: "RenderMan RSL",
    keywords: {
      keyword: n,
      built_in: e,
      type: r
    },
    illegal: "</",
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        className: "meta",
        begin: "#",
        end: "$"
      },
      a,
      {
        beginKeywords: "illuminate illuminance gather",
        end: "\\("
      }
    ]
  };
}
const Fie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Bee
}, Symbol.toStringTag, { value: "Module" }));
function Fee(t) {
  const e = t.regex, r = "([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)", n = e.either(
    /\b([A-Z]+[a-z0-9]+)+/,
    // ends in caps
    /\b([A-Z]+[a-z0-9]+)+[A-Z]+/
  ), a = e.concat(n, /(::\w+)*/), o = {
    "variable.constant": [
      "__FILE__",
      "__LINE__",
      "__ENCODING__"
    ],
    "variable.language": [
      "self",
      "super"
    ],
    keyword: [
      "alias",
      "and",
      "begin",
      "BEGIN",
      "break",
      "case",
      "class",
      "defined",
      "do",
      "else",
      "elsif",
      "end",
      "END",
      "ensure",
      "for",
      "if",
      "in",
      "module",
      "next",
      "not",
      "or",
      "redo",
      "require",
      "rescue",
      "retry",
      "return",
      "then",
      "undef",
      "unless",
      "until",
      "when",
      "while",
      "yield",
      ...[
        "include",
        "extend",
        "prepend",
        "public",
        "private",
        "protected",
        "raise",
        "throw"
      ]
    ],
    built_in: [
      "proc",
      "lambda",
      "attr_accessor",
      "attr_reader",
      "attr_writer",
      "define_method",
      "private_constant",
      "module_function"
    ],
    literal: [
      "true",
      "false",
      "nil"
    ]
  }, s = {
    className: "doctag",
    begin: "@[A-Za-z]+"
  }, l = {
    begin: "#<",
    end: ">"
  }, u = [
    t.COMMENT(
      "#",
      "$",
      { contains: [s] }
    ),
    t.COMMENT(
      "^=begin",
      "^=end",
      {
        contains: [s],
        relevance: 10
      }
    ),
    t.COMMENT("^__END__", t.MATCH_NOTHING_RE)
  ], c = {
    className: "subst",
    begin: /#\{/,
    end: /\}/,
    keywords: o
  }, d = {
    className: "string",
    contains: [
      t.BACKSLASH_ESCAPE,
      c
    ],
    variants: [
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /"/,
        end: /"/
      },
      {
        begin: /`/,
        end: /`/
      },
      {
        begin: /%[qQwWx]?\(/,
        end: /\)/
      },
      {
        begin: /%[qQwWx]?\[/,
        end: /\]/
      },
      {
        begin: /%[qQwWx]?\{/,
        end: /\}/
      },
      {
        begin: /%[qQwWx]?</,
        end: />/
      },
      {
        begin: /%[qQwWx]?\//,
        end: /\//
      },
      {
        begin: /%[qQwWx]?%/,
        end: /%/
      },
      {
        begin: /%[qQwWx]?-/,
        end: /-/
      },
      {
        begin: /%[qQwWx]?\|/,
        end: /\|/
      },
      // in the following expressions, \B in the beginning suppresses recognition of ?-sequences
      // where ? is the last character of a preceding identifier, as in: `func?4`
      { begin: /\B\?(\\\d{1,3})/ },
      { begin: /\B\?(\\x[A-Fa-f0-9]{1,2})/ },
      { begin: /\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/ },
      { begin: /\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/ },
      { begin: /\B\?\\(c|C-)[\x20-\x7e]/ },
      { begin: /\B\?\\?\S/ },
      // heredocs
      {
        // this guard makes sure that we have an entire heredoc and not a false
        // positive (auto-detect, etc.)
        begin: e.concat(
          /<<[-~]?'?/,
          e.lookahead(/(\w+)(?=\W)[^\n]*\n(?:[^\n]*\n)*?\s*\1\b/)
        ),
        contains: [
          t.END_SAME_AS_BEGIN({
            begin: /(\w+)/,
            end: /(\w+)/,
            contains: [
              t.BACKSLASH_ESCAPE,
              c
            ]
          })
        ]
      }
    ]
  }, p = "[1-9](_?[0-9])*|0", f = "[0-9](_?[0-9])*", h = {
    className: "number",
    relevance: 0,
    variants: [
      // decimal integer/float, optionally exponential or rational, optionally imaginary
      { begin: `\\b(${p})(\\.(${f}))?([eE][+-]?(${f})|r)?i?\\b` },
      // explicit decimal/binary/octal/hexadecimal integer,
      // optionally rational and/or imaginary
      { begin: "\\b0[dD][0-9](_?[0-9])*r?i?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*r?i?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*r?i?\\b" },
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b" },
      // 0-prefixed implicit octal integer, optionally rational and/or imaginary
      { begin: "\\b0(_?[0-7])+r?i?\\b" }
    ]
  }, g = {
    variants: [
      {
        match: /\(\)/
      },
      {
        className: "params",
        begin: /\(/,
        end: /(?=\))/,
        excludeBegin: !0,
        endsParent: !0,
        keywords: o
      }
    ]
  }, E = [
    d,
    {
      variants: [
        {
          match: [
            /class\s+/,
            a,
            /\s+<\s+/,
            a
          ]
        },
        {
          match: [
            /\b(class|module)\s+/,
            a
          ]
        }
      ],
      scope: {
        2: "title.class",
        4: "title.class.inherited"
      },
      keywords: o
    },
    {
      match: [
        /(include|extend)\s+/,
        a
      ],
      scope: {
        2: "title.class"
      },
      keywords: o
    },
    {
      relevance: 0,
      match: [
        a,
        /\.new[. (]/
      ],
      scope: {
        1: "title.class"
      }
    },
    {
      relevance: 0,
      match: /\b[A-Z][A-Z_0-9]+\b/,
      className: "variable.constant"
    },
    {
      relevance: 0,
      match: n,
      scope: "title.class"
    },
    {
      match: [
        /def/,
        /\s+/,
        r
      ],
      scope: {
        1: "keyword",
        3: "title.function"
      },
      contains: [
        g
      ]
    },
    {
      // swallow namespace qualifiers before symbols
      begin: t.IDENT_RE + "::"
    },
    {
      className: "symbol",
      begin: t.UNDERSCORE_IDENT_RE + "(!|\\?)?:",
      relevance: 0
    },
    {
      className: "symbol",
      begin: ":(?!\\s)",
      contains: [
        d,
        { begin: r }
      ],
      relevance: 0
    },
    h,
    {
      // negative-look forward attempts to prevent false matches like:
      // @ident@ or $ident$ that might indicate this is not ruby at all
      className: "variable",
      begin: "(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"
    },
    {
      className: "params",
      begin: /\|(?!=)/,
      end: /\|/,
      excludeBegin: !0,
      excludeEnd: !0,
      relevance: 0,
      // this could be a lot of things (in other languages) other than params
      keywords: o
    },
    {
      // regexp container
      begin: "(" + t.RE_STARTERS_RE + "|unless)\\s*",
      keywords: "unless",
      contains: [
        {
          className: "regexp",
          contains: [
            t.BACKSLASH_ESCAPE,
            c
          ],
          illegal: /\n/,
          variants: [
            {
              begin: "/",
              end: "/[a-z]*"
            },
            {
              begin: /%r\{/,
              end: /\}[a-z]*/
            },
            {
              begin: "%r\\(",
              end: "\\)[a-z]*"
            },
            {
              begin: "%r!",
              end: "![a-z]*"
            },
            {
              begin: "%r\\[",
              end: "\\][a-z]*"
            }
          ]
        }
      ].concat(l, u),
      relevance: 0
    }
  ].concat(l, u);
  c.contains = E, g.contains = E;
  const A = [
    {
      begin: /^\s*=>/,
      starts: {
        end: "$",
        contains: E
      }
    },
    {
      className: "meta.prompt",
      begin: "^(" + "[>?]>" + "|" + "[\\w#]+\\(\\w+\\):\\d+:\\d+[>*]" + "|" + "(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>" + ")(?=[ ])",
      starts: {
        end: "$",
        keywords: o,
        contains: E
      }
    }
  ];
  return u.unshift(l), {
    name: "Ruby",
    aliases: [
      "rb",
      "gemspec",
      "podspec",
      "thor",
      "irb"
    ],
    keywords: o,
    illegal: /\/\*/,
    contains: [t.SHEBANG({ binary: "ruby" })].concat(A).concat(u).concat(E)
  };
}
const Gie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Fee
}, Symbol.toStringTag, { value: "Module" }));
function Gee(t) {
  return {
    name: "Oracle Rules Language",
    keywords: {
      keyword: "BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM NUMDAYS READ_DATE STAGING",
      built_in: "IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME"
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        className: "literal",
        variants: [
          {
            // looks like #-comment
            begin: "#\\s+",
            relevance: 0
          },
          { begin: "#[a-zA-Z .]+" }
        ]
      }
    ]
  };
}
const Uie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gee
}, Symbol.toStringTag, { value: "Module" }));
function Uee(t) {
  const e = t.regex, r = /(r#)?/, n = e.concat(r, t.UNDERSCORE_IDENT_RE), a = e.concat(r, t.IDENT_RE), i = {
    className: "title.function.invoke",
    relevance: 0,
    begin: e.concat(
      /\b/,
      /(?!let|for|while|if|else|match\b)/,
      a,
      e.lookahead(/\s*\(/)
    )
  }, o = "([ui](8|16|32|64|128|size)|f(32|64))?", s = [
    "abstract",
    "as",
    "async",
    "await",
    "become",
    "box",
    "break",
    "const",
    "continue",
    "crate",
    "do",
    "dyn",
    "else",
    "enum",
    "extern",
    "false",
    "final",
    "fn",
    "for",
    "if",
    "impl",
    "in",
    "let",
    "loop",
    "macro",
    "match",
    "mod",
    "move",
    "mut",
    "override",
    "priv",
    "pub",
    "ref",
    "return",
    "self",
    "Self",
    "static",
    "struct",
    "super",
    "trait",
    "true",
    "try",
    "type",
    "typeof",
    "union",
    "unsafe",
    "unsized",
    "use",
    "virtual",
    "where",
    "while",
    "yield"
  ], l = [
    "true",
    "false",
    "Some",
    "None",
    "Ok",
    "Err"
  ], u = [
    // functions
    "drop ",
    // traits
    "Copy",
    "Send",
    "Sized",
    "Sync",
    "Drop",
    "Fn",
    "FnMut",
    "FnOnce",
    "ToOwned",
    "Clone",
    "Debug",
    "PartialEq",
    "PartialOrd",
    "Eq",
    "Ord",
    "AsRef",
    "AsMut",
    "Into",
    "From",
    "Default",
    "Iterator",
    "Extend",
    "IntoIterator",
    "DoubleEndedIterator",
    "ExactSizeIterator",
    "SliceConcatExt",
    "ToString",
    // macros
    "assert!",
    "assert_eq!",
    "bitflags!",
    "bytes!",
    "cfg!",
    "col!",
    "concat!",
    "concat_idents!",
    "debug_assert!",
    "debug_assert_eq!",
    "env!",
    "eprintln!",
    "panic!",
    "file!",
    "format!",
    "format_args!",
    "include_bytes!",
    "include_str!",
    "line!",
    "local_data_key!",
    "module_path!",
    "option_env!",
    "print!",
    "println!",
    "select!",
    "stringify!",
    "try!",
    "unimplemented!",
    "unreachable!",
    "vec!",
    "write!",
    "writeln!",
    "macro_rules!",
    "assert_ne!",
    "debug_assert_ne!"
  ], c = [
    "i8",
    "i16",
    "i32",
    "i64",
    "i128",
    "isize",
    "u8",
    "u16",
    "u32",
    "u64",
    "u128",
    "usize",
    "f32",
    "f64",
    "str",
    "char",
    "bool",
    "Box",
    "Option",
    "Result",
    "String",
    "Vec"
  ];
  return {
    name: "Rust",
    aliases: ["rs"],
    keywords: {
      $pattern: t.IDENT_RE + "!?",
      type: c,
      keyword: s,
      literal: l,
      built_in: u
    },
    illegal: "</",
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.COMMENT("/\\*", "\\*/", { contains: ["self"] }),
      t.inherit(t.QUOTE_STRING_MODE, {
        begin: /b?"/,
        illegal: null
      }),
      {
        className: "symbol",
        // negative lookahead to avoid matching `'`
        begin: /'[a-zA-Z_][a-zA-Z0-9_]*(?!')/
      },
      {
        scope: "string",
        variants: [
          { begin: /b?r(#*)"(.|\n)*?"\1(?!#)/ },
          {
            begin: /b?'/,
            end: /'/,
            contains: [
              {
                scope: "char.escape",
                match: /\\('|\w|x\w{2}|u\w{4}|U\w{8})/
              }
            ]
          }
        ]
      },
      {
        className: "number",
        variants: [
          { begin: "\\b0b([01_]+)" + o },
          { begin: "\\b0o([0-7_]+)" + o },
          { begin: "\\b0x([A-Fa-f0-9_]+)" + o },
          { begin: "\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)" + o }
        ],
        relevance: 0
      },
      {
        begin: [
          /fn/,
          /\s+/,
          n
        ],
        className: {
          1: "keyword",
          3: "title.function"
        }
      },
      {
        className: "meta",
        begin: "#!?\\[",
        end: "\\]",
        contains: [
          {
            className: "string",
            begin: /"/,
            end: /"/,
            contains: [
              t.BACKSLASH_ESCAPE
            ]
          }
        ]
      },
      {
        begin: [
          /let/,
          /\s+/,
          /(?:mut\s+)?/,
          n
        ],
        className: {
          1: "keyword",
          3: "keyword",
          4: "variable"
        }
      },
      // must come before impl/for rule later
      {
        begin: [
          /for/,
          /\s+/,
          n,
          /\s+/,
          /in/
        ],
        className: {
          1: "keyword",
          3: "variable",
          5: "keyword"
        }
      },
      {
        begin: [
          /type/,
          /\s+/,
          n
        ],
        className: {
          1: "keyword",
          3: "title.class"
        }
      },
      {
        begin: [
          /(?:trait|enum|struct|union|impl|for)/,
          /\s+/,
          n
        ],
        className: {
          1: "keyword",
          3: "title.class"
        }
      },
      {
        begin: t.IDENT_RE + "::",
        keywords: {
          keyword: "Self",
          built_in: u,
          type: c
        }
      },
      {
        className: "punctuation",
        begin: "->"
      },
      i
    ]
  };
}
const zie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Uee
}, Symbol.toStringTag, { value: "Module" }));
function zee(t) {
  const e = t.regex, r = [
    "do",
    "if",
    "then",
    "else",
    "end",
    "until",
    "while",
    "abort",
    "array",
    "attrib",
    "by",
    "call",
    "cards",
    "cards4",
    "catname",
    "continue",
    "datalines",
    "datalines4",
    "delete",
    "delim",
    "delimiter",
    "display",
    "dm",
    "drop",
    "endsas",
    "error",
    "file",
    "filename",
    "footnote",
    "format",
    "goto",
    "in",
    "infile",
    "informat",
    "input",
    "keep",
    "label",
    "leave",
    "length",
    "libname",
    "link",
    "list",
    "lostcard",
    "merge",
    "missing",
    "modify",
    "options",
    "output",
    "out",
    "page",
    "put",
    "redirect",
    "remove",
    "rename",
    "replace",
    "retain",
    "return",
    "select",
    "set",
    "skip",
    "startsas",
    "stop",
    "title",
    "update",
    "waitsas",
    "where",
    "window",
    "x|0",
    "systask",
    "add",
    "and",
    "alter",
    "as",
    "cascade",
    "check",
    "create",
    "delete",
    "describe",
    "distinct",
    "drop",
    "foreign",
    "from",
    "group",
    "having",
    "index",
    "insert",
    "into",
    "in",
    "key",
    "like",
    "message",
    "modify",
    "msgtype",
    "not",
    "null",
    "on",
    "or",
    "order",
    "primary",
    "references",
    "reset",
    "restrict",
    "select",
    "set",
    "table",
    "unique",
    "update",
    "validate",
    "view",
    "where"
  ], n = [
    "abs",
    "addr",
    "airy",
    "arcos",
    "arsin",
    "atan",
    "attrc",
    "attrn",
    "band",
    "betainv",
    "blshift",
    "bnot",
    "bor",
    "brshift",
    "bxor",
    "byte",
    "cdf",
    "ceil",
    "cexist",
    "cinv",
    "close",
    "cnonct",
    "collate",
    "compbl",
    "compound",
    "compress",
    "cos",
    "cosh",
    "css",
    "curobs",
    "cv",
    "daccdb",
    "daccdbsl",
    "daccsl",
    "daccsyd",
    "dacctab",
    "dairy",
    "date",
    "datejul",
    "datepart",
    "datetime",
    "day",
    "dclose",
    "depdb",
    "depdbsl",
    "depdbsl",
    "depsl",
    "depsl",
    "depsyd",
    "depsyd",
    "deptab",
    "deptab",
    "dequote",
    "dhms",
    "dif",
    "digamma",
    "dim",
    "dinfo",
    "dnum",
    "dopen",
    "doptname",
    "doptnum",
    "dread",
    "dropnote",
    "dsname",
    "erf",
    "erfc",
    "exist",
    "exp",
    "fappend",
    "fclose",
    "fcol",
    "fdelete",
    "fetch",
    "fetchobs",
    "fexist",
    "fget",
    "fileexist",
    "filename",
    "fileref",
    "finfo",
    "finv",
    "fipname",
    "fipnamel",
    "fipstate",
    "floor",
    "fnonct",
    "fnote",
    "fopen",
    "foptname",
    "foptnum",
    "fpoint",
    "fpos",
    "fput",
    "fread",
    "frewind",
    "frlen",
    "fsep",
    "fuzz",
    "fwrite",
    "gaminv",
    "gamma",
    "getoption",
    "getvarc",
    "getvarn",
    "hbound",
    "hms",
    "hosthelp",
    "hour",
    "ibessel",
    "index",
    "indexc",
    "indexw",
    "input",
    "inputc",
    "inputn",
    "int",
    "intck",
    "intnx",
    "intrr",
    "irr",
    "jbessel",
    "juldate",
    "kurtosis",
    "lag",
    "lbound",
    "left",
    "length",
    "lgamma",
    "libname",
    "libref",
    "log",
    "log10",
    "log2",
    "logpdf",
    "logpmf",
    "logsdf",
    "lowcase",
    "max",
    "mdy",
    "mean",
    "min",
    "minute",
    "mod",
    "month",
    "mopen",
    "mort",
    "n",
    "netpv",
    "nmiss",
    "normal",
    "note",
    "npv",
    "open",
    "ordinal",
    "pathname",
    "pdf",
    "peek",
    "peekc",
    "pmf",
    "point",
    "poisson",
    "poke",
    "probbeta",
    "probbnml",
    "probchi",
    "probf",
    "probgam",
    "probhypr",
    "probit",
    "probnegb",
    "probnorm",
    "probt",
    "put",
    "putc",
    "putn",
    "qtr",
    "quote",
    "ranbin",
    "rancau",
    "ranexp",
    "rangam",
    "range",
    "rank",
    "rannor",
    "ranpoi",
    "rantbl",
    "rantri",
    "ranuni",
    "repeat",
    "resolve",
    "reverse",
    "rewind",
    "right",
    "round",
    "saving",
    "scan",
    "sdf",
    "second",
    "sign",
    "sin",
    "sinh",
    "skewness",
    "soundex",
    "spedis",
    "sqrt",
    "std",
    "stderr",
    "stfips",
    "stname",
    "stnamel",
    "substr",
    "sum",
    "symget",
    "sysget",
    "sysmsg",
    "sysprod",
    "sysrc",
    "system",
    "tan",
    "tanh",
    "time",
    "timepart",
    "tinv",
    "tnonct",
    "today",
    "translate",
    "tranwrd",
    "trigamma",
    "trim",
    "trimn",
    "trunc",
    "uniform",
    "upcase",
    "uss",
    "var",
    "varfmt",
    "varinfmt",
    "varlabel",
    "varlen",
    "varname",
    "varnum",
    "varray",
    "varrayx",
    "vartype",
    "verify",
    "vformat",
    "vformatd",
    "vformatdx",
    "vformatn",
    "vformatnx",
    "vformatw",
    "vformatwx",
    "vformatx",
    "vinarray",
    "vinarrayx",
    "vinformat",
    "vinformatd",
    "vinformatdx",
    "vinformatn",
    "vinformatnx",
    "vinformatw",
    "vinformatwx",
    "vinformatx",
    "vlabel",
    "vlabelx",
    "vlength",
    "vlengthx",
    "vname",
    "vnamex",
    "vtype",
    "vtypex",
    "weekday",
    "year",
    "yyq",
    "zipfips",
    "zipname",
    "zipnamel",
    "zipstate"
  ], a = [
    "bquote",
    "nrbquote",
    "cmpres",
    "qcmpres",
    "compstor",
    "datatyp",
    "display",
    "do",
    "else",
    "end",
    "eval",
    "global",
    "goto",
    "if",
    "index",
    "input",
    "keydef",
    "label",
    "left",
    "length",
    "let",
    "local",
    "lowcase",
    "macro",
    "mend",
    "nrbquote",
    "nrquote",
    "nrstr",
    "put",
    "qcmpres",
    "qleft",
    "qlowcase",
    "qscan",
    "qsubstr",
    "qsysfunc",
    "qtrim",
    "quote",
    "qupcase",
    "scan",
    "str",
    "substr",
    "superq",
    "syscall",
    "sysevalf",
    "sysexec",
    "sysfunc",
    "sysget",
    "syslput",
    "sysprod",
    "sysrc",
    "sysrput",
    "then",
    "to",
    "trim",
    "unquote",
    "until",
    "upcase",
    "verify",
    "while",
    "window"
  ];
  return {
    name: "SAS",
    case_insensitive: !0,
    keywords: {
      literal: [
        "null",
        "missing",
        "_all_",
        "_automatic_",
        "_character_",
        "_infile_",
        "_n_",
        "_name_",
        "_null_",
        "_numeric_",
        "_user_",
        "_webout_"
      ],
      keyword: r
    },
    contains: [
      {
        // Distinct highlight for proc <proc>, data, run, quit
        className: "keyword",
        begin: /^\s*(proc [\w\d_]+|data|run|quit)[\s;]/
      },
      {
        // Macro variables
        className: "variable",
        begin: /&[a-zA-Z_&][a-zA-Z0-9_]*\.?/
      },
      {
        begin: [
          /^\s*/,
          /datalines;|cards;/,
          /(?:.*\n)+/,
          /^\s*;\s*$/
        ],
        className: {
          2: "keyword",
          3: "string"
        }
      },
      {
        begin: [
          /%mend|%macro/,
          /\s+/,
          /[a-zA-Z_&][a-zA-Z0-9_]*/
        ],
        className: {
          1: "built_in",
          3: "title.function"
        }
      },
      {
        // Built-in macro variables
        className: "built_in",
        begin: "%" + e.either(...a)
      },
      {
        // User-defined macro functions
        className: "title.function",
        begin: /%[a-zA-Z_][a-zA-Z_0-9]*/
      },
      {
        // TODO: this is most likely an incorrect classification
        // built_in may need more nuance
        // https://github.com/highlightjs/highlight.js/issues/2521
        className: "meta",
        begin: e.either(...n) + "(?=\\()"
      },
      {
        className: "string",
        variants: [
          t.APOS_STRING_MODE,
          t.QUOTE_STRING_MODE
        ]
      },
      t.COMMENT("\\*", ";"),
      t.C_BLOCK_COMMENT_MODE
    ]
  };
}
const Vie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zee
}, Symbol.toStringTag, { value: "Module" }));
function Vee(t) {
  const e = t.regex, r = {
    className: "meta",
    begin: "@[A-Za-z]+"
  }, n = {
    className: "subst",
    variants: [
      { begin: "\\$[A-Za-z0-9_]+" },
      {
        begin: /\$\{/,
        end: /\}/
      }
    ]
  }, a = {
    className: "string",
    variants: [
      {
        begin: '"""',
        end: '"""'
      },
      {
        begin: '"',
        end: '"',
        illegal: "\\n",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        begin: '[a-z]+"',
        end: '"',
        illegal: "\\n",
        contains: [
          t.BACKSLASH_ESCAPE,
          n
        ]
      },
      {
        className: "string",
        begin: '[a-z]+"""',
        end: '"""',
        contains: [n],
        relevance: 10
      }
    ]
  }, i = {
    className: "type",
    begin: "\\b[A-Z][A-Za-z0-9_]*",
    relevance: 0
  }, o = {
    className: "title",
    begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,
    relevance: 0
  }, s = {
    className: "class",
    beginKeywords: "class object trait type",
    end: /[:={\[\n;]/,
    excludeEnd: !0,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        beginKeywords: "extends with",
        relevance: 10
      },
      {
        begin: /\[/,
        end: /\]/,
        excludeBegin: !0,
        excludeEnd: !0,
        relevance: 0,
        contains: [
          i,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      {
        className: "params",
        begin: /\(/,
        end: /\)/,
        excludeBegin: !0,
        excludeEnd: !0,
        relevance: 0,
        contains: [
          i,
          t.C_LINE_COMMENT_MODE,
          t.C_BLOCK_COMMENT_MODE
        ]
      },
      o
    ]
  }, l = {
    className: "function",
    beginKeywords: "def",
    end: e.lookahead(/[:={\[(\n;]/),
    contains: [o]
  }, u = {
    begin: [
      /^\s*/,
      // Is first token on the line
      "extension",
      /\s+(?=[[(])/
      // followed by at least one space and `[` or `(`
    ],
    beginScope: { 2: "keyword" }
  }, c = {
    begin: [
      /^\s*/,
      // Is first token on the line
      /end/,
      /\s+/,
      /(extension\b)?/
      // `extension` is the only marker that follows an `end` that cannot be captured by another rule.
    ],
    beginScope: {
      2: "keyword",
      4: "keyword"
    }
  }, d = [
    { match: /\.inline\b/ },
    {
      begin: /\binline(?=\s)/,
      keywords: "inline"
    }
  ], p = {
    begin: [
      /\(\s*/,
      // Opening `(` of a parameter or argument list
      /using/,
      /\s+(?!\))/
      // Spaces not followed by `)`
    ],
    beginScope: { 2: "keyword" }
  };
  return {
    name: "Scala",
    keywords: {
      literal: "true false null",
      keyword: "type yield lazy override def with val var sealed abstract private trait object if then forSome for while do throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit export enum given transparent"
    },
    contains: [
      {
        begin: [
          "//>",
          /\s+/,
          /using/,
          /\s+/,
          /\S+/
        ],
        beginScope: {
          1: "comment",
          3: "keyword",
          5: "type"
        },
        end: /$/,
        contains: [
          {
            className: "string",
            begin: /\S+/
          }
        ]
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      a,
      i,
      l,
      s,
      t.C_NUMBER_MODE,
      u,
      c,
      ...d,
      p,
      r
    ]
  };
}
const $ie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Vee
}, Symbol.toStringTag, { value: "Module" }));
function $ee(t) {
  const e = "[^\\(\\)\\[\\]\\{\\}\",'`;#|\\\\\\s]+", r = "(-|\\+)?\\d+([./]\\d+)?", n = r + "[+\\-]" + r + "i", a = {
    $pattern: e,
    built_in: "case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / ; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"
  }, i = {
    className: "literal",
    begin: "(#t|#f|#\\\\" + e + "|#\\\\.)"
  }, o = {
    className: "number",
    variants: [
      {
        begin: r,
        relevance: 0
      },
      {
        begin: n,
        relevance: 0
      },
      { begin: "#b[0-1]+(/[0-1]+)?" },
      { begin: "#o[0-7]+(/[0-7]+)?" },
      { begin: "#x[0-9a-f]+(/[0-9a-f]+)?" }
    ]
  }, s = t.QUOTE_STRING_MODE, l = [
    t.COMMENT(
      ";",
      "$",
      { relevance: 0 }
    ),
    t.COMMENT("#\\|", "\\|#")
  ], u = {
    begin: e,
    relevance: 0
  }, c = {
    className: "symbol",
    begin: "'" + e
  }, d = {
    endsWithParent: !0,
    relevance: 0
  }, p = {
    variants: [
      { begin: /'/ },
      { begin: "`" }
    ],
    contains: [
      {
        begin: "\\(",
        end: "\\)",
        contains: [
          "self",
          i,
          s,
          o,
          u,
          c
        ]
      }
    ]
  }, f = {
    className: "name",
    relevance: 0,
    begin: e,
    keywords: a
  }, g = {
    variants: [
      {
        begin: "\\(",
        end: "\\)"
      },
      {
        begin: "\\[",
        end: "\\]"
      }
    ],
    contains: [
      {
        begin: /lambda/,
        endsWithParent: !0,
        returnBegin: !0,
        contains: [
          f,
          {
            endsParent: !0,
            variants: [
              {
                begin: /\(/,
                end: /\)/
              },
              {
                begin: /\[/,
                end: /\]/
              }
            ],
            contains: [u]
          }
        ]
      },
      f,
      d
    ]
  };
  return d.contains = [
    i,
    o,
    s,
    u,
    c,
    p,
    g
  ].concat(l), {
    name: "Scheme",
    aliases: ["scm"],
    illegal: /\S/,
    contains: [
      t.SHEBANG(),
      o,
      s,
      c,
      p,
      g
    ].concat(l)
  };
}
const Hie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $ee
}, Symbol.toStringTag, { value: "Module" }));
function Hee(t) {
  const e = [
    t.C_NUMBER_MODE,
    {
      className: "string",
      begin: `'|"`,
      end: `'|"`,
      contains: [
        t.BACKSLASH_ESCAPE,
        { begin: "''" }
      ]
    }
  ];
  return {
    name: "Scilab",
    aliases: ["sci"],
    keywords: {
      $pattern: /%?\w+/,
      keyword: "abort break case clear catch continue do elseif else endfunction end for function global if pause return resume select try then while",
      literal: "%f %F %t %T %pi %eps %inf %nan %e %i %z %s",
      built_in: (
        // Scilab has more than 2000 functions. Just list the most commons
        "abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan type typename warning zeros matrix"
      )
    },
    illegal: '("|#|/\\*|\\s+/\\w+)',
    contains: [
      {
        className: "function",
        beginKeywords: "function",
        end: "$",
        contains: [
          t.UNDERSCORE_TITLE_MODE,
          {
            className: "params",
            begin: "\\(",
            end: "\\)"
          }
        ]
      },
      // seems to be a guard against [ident]' or [ident].
      // perhaps to prevent attributes from flagging as keywords?
      {
        begin: "[a-zA-Z_][a-zA-Z_0-9]*[\\.']+",
        relevance: 0
      },
      {
        begin: "\\[",
        end: "\\][\\.']*",
        relevance: 0,
        contains: e
      },
      t.COMMENT("//", "$")
    ].concat(e)
  };
}
const Wie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Hee
}, Symbol.toStringTag, { value: "Module" })), Wee = (t) => ({
  IMPORTANT: {
    scope: "meta",
    begin: "!important"
  },
  BLOCK_COMMENT: t.C_BLOCK_COMMENT_MODE,
  HEXCOLOR: {
    scope: "number",
    begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
  },
  FUNCTION_DISPATCH: {
    className: "built_in",
    begin: /[\w-]+(?=\()/
  },
  ATTRIBUTE_SELECTOR_MODE: {
    scope: "selector-attr",
    begin: /\[/,
    end: /\]/,
    illegal: "$",
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  },
  CSS_NUMBER_MODE: {
    scope: "number",
    begin: t.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
    relevance: 0
  },
  CSS_VARIABLE: {
    className: "attr",
    begin: /--[A-Za-z_][A-Za-z0-9_-]*/
  }
}), qee = [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "audio",
  "b",
  "blockquote",
  "body",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "dd",
  "del",
  "details",
  "dfn",
  "div",
  "dl",
  "dt",
  "em",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "header",
  "hgroup",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "mark",
  "menu",
  "nav",
  "object",
  "ol",
  "optgroup",
  "option",
  "p",
  "picture",
  "q",
  "quote",
  "samp",
  "section",
  "select",
  "source",
  "span",
  "strong",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "tr",
  "ul",
  "var",
  "video"
], Yee = [
  "defs",
  "g",
  "marker",
  "mask",
  "pattern",
  "svg",
  "switch",
  "symbol",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feFlood",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMorphology",
  "feOffset",
  "feSpecularLighting",
  "feTile",
  "feTurbulence",
  "linearGradient",
  "radialGradient",
  "stop",
  "circle",
  "ellipse",
  "image",
  "line",
  "path",
  "polygon",
  "polyline",
  "rect",
  "text",
  "use",
  "textPath",
  "tspan",
  "foreignObject",
  "clipPath"
], Kee = [
  ...qee,
  ...Yee
], Zee = [
  "any-hover",
  "any-pointer",
  "aspect-ratio",
  "color",
  "color-gamut",
  "color-index",
  "device-aspect-ratio",
  "device-height",
  "device-width",
  "display-mode",
  "forced-colors",
  "grid",
  "height",
  "hover",
  "inverted-colors",
  "monochrome",
  "orientation",
  "overflow-block",
  "overflow-inline",
  "pointer",
  "prefers-color-scheme",
  "prefers-contrast",
  "prefers-reduced-motion",
  "prefers-reduced-transparency",
  "resolution",
  "scan",
  "scripting",
  "update",
  "width",
  // TODO: find a better solution?
  "min-width",
  "max-width",
  "min-height",
  "max-height"
].sort().reverse(), Xee = [
  "active",
  "any-link",
  "blank",
  "checked",
  "current",
  "default",
  "defined",
  "dir",
  // dir()
  "disabled",
  "drop",
  "empty",
  "enabled",
  "first",
  "first-child",
  "first-of-type",
  "fullscreen",
  "future",
  "focus",
  "focus-visible",
  "focus-within",
  "has",
  // has()
  "host",
  // host or host()
  "host-context",
  // host-context()
  "hover",
  "indeterminate",
  "in-range",
  "invalid",
  "is",
  // is()
  "lang",
  // lang()
  "last-child",
  "last-of-type",
  "left",
  "link",
  "local-link",
  "not",
  // not()
  "nth-child",
  // nth-child()
  "nth-col",
  // nth-col()
  "nth-last-child",
  // nth-last-child()
  "nth-last-col",
  // nth-last-col()
  "nth-last-of-type",
  //nth-last-of-type()
  "nth-of-type",
  //nth-of-type()
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "past",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "target",
  "target-within",
  "user-invalid",
  "valid",
  "visited",
  "where"
  // where()
].sort().reverse(), Qee = [
  "after",
  "backdrop",
  "before",
  "cue",
  "cue-region",
  "first-letter",
  "first-line",
  "grammar-error",
  "marker",
  "part",
  "placeholder",
  "selection",
  "slotted",
  "spelling-error"
].sort().reverse(), jee = [
  "accent-color",
  "align-content",
  "align-items",
  "align-self",
  "alignment-baseline",
  "all",
  "anchor-name",
  "animation",
  "animation-composition",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-range",
  "animation-range-end",
  "animation-range-start",
  "animation-timeline",
  "animation-timing-function",
  "appearance",
  "aspect-ratio",
  "backdrop-filter",
  "backface-visibility",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-position-x",
  "background-position-y",
  "background-repeat",
  "background-size",
  "baseline-shift",
  "block-size",
  "border",
  "border-block",
  "border-block-color",
  "border-block-end",
  "border-block-end-color",
  "border-block-end-style",
  "border-block-end-width",
  "border-block-start",
  "border-block-start-color",
  "border-block-start-style",
  "border-block-start-width",
  "border-block-style",
  "border-block-width",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-end-end-radius",
  "border-end-start-radius",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-inline",
  "border-inline-color",
  "border-inline-end",
  "border-inline-end-color",
  "border-inline-end-style",
  "border-inline-end-width",
  "border-inline-start",
  "border-inline-start-color",
  "border-inline-start-style",
  "border-inline-start-width",
  "border-inline-style",
  "border-inline-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-start-end-radius",
  "border-start-start-radius",
  "border-style",
  "border-top",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width",
  "bottom",
  "box-align",
  "box-decoration-break",
  "box-direction",
  "box-flex",
  "box-flex-group",
  "box-lines",
  "box-ordinal-group",
  "box-orient",
  "box-pack",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation",
  "color-interpolation-filters",
  "color-profile",
  "color-rendering",
  "color-scheme",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "contain",
  "contain-intrinsic-block-size",
  "contain-intrinsic-height",
  "contain-intrinsic-inline-size",
  "contain-intrinsic-size",
  "contain-intrinsic-width",
  "container",
  "container-name",
  "container-type",
  "content",
  "content-visibility",
  "counter-increment",
  "counter-reset",
  "counter-set",
  "cue",
  "cue-after",
  "cue-before",
  "cursor",
  "cx",
  "cy",
  "direction",
  "display",
  "dominant-baseline",
  "empty-cells",
  "enable-background",
  "field-sizing",
  "fill",
  "fill-opacity",
  "fill-rule",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "flood-color",
  "flood-opacity",
  "flow",
  "font",
  "font-display",
  "font-family",
  "font-feature-settings",
  "font-kerning",
  "font-language-override",
  "font-optical-sizing",
  "font-palette",
  "font-size",
  "font-size-adjust",
  "font-smooth",
  "font-smoothing",
  "font-stretch",
  "font-style",
  "font-synthesis",
  "font-synthesis-position",
  "font-synthesis-small-caps",
  "font-synthesis-style",
  "font-synthesis-weight",
  "font-variant",
  "font-variant-alternates",
  "font-variant-caps",
  "font-variant-east-asian",
  "font-variant-emoji",
  "font-variant-ligatures",
  "font-variant-numeric",
  "font-variant-position",
  "font-variation-settings",
  "font-weight",
  "forced-color-adjust",
  "gap",
  "glyph-orientation-horizontal",
  "glyph-orientation-vertical",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "hanging-punctuation",
  "height",
  "hyphenate-character",
  "hyphenate-limit-chars",
  "hyphens",
  "icon",
  "image-orientation",
  "image-rendering",
  "image-resolution",
  "ime-mode",
  "initial-letter",
  "initial-letter-align",
  "inline-size",
  "inset",
  "inset-area",
  "inset-block",
  "inset-block-end",
  "inset-block-start",
  "inset-inline",
  "inset-inline-end",
  "inset-inline-start",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "kerning",
  "left",
  "letter-spacing",
  "lighting-color",
  "line-break",
  "line-height",
  "line-height-step",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-block",
  "margin-block-end",
  "margin-block-start",
  "margin-bottom",
  "margin-inline",
  "margin-inline-end",
  "margin-inline-start",
  "margin-left",
  "margin-right",
  "margin-top",
  "margin-trim",
  "marker",
  "marker-end",
  "marker-mid",
  "marker-start",
  "marks",
  "mask",
  "mask-border",
  "mask-border-mode",
  "mask-border-outset",
  "mask-border-repeat",
  "mask-border-slice",
  "mask-border-source",
  "mask-border-width",
  "mask-clip",
  "mask-composite",
  "mask-image",
  "mask-mode",
  "mask-origin",
  "mask-position",
  "mask-repeat",
  "mask-size",
  "mask-type",
  "masonry-auto-flow",
  "math-depth",
  "math-shift",
  "math-style",
  "max-block-size",
  "max-height",
  "max-inline-size",
  "max-width",
  "min-block-size",
  "min-height",
  "min-inline-size",
  "min-width",
  "mix-blend-mode",
  "nav-down",
  "nav-index",
  "nav-left",
  "nav-right",
  "nav-up",
  "none",
  "normal",
  "object-fit",
  "object-position",
  "offset",
  "offset-anchor",
  "offset-distance",
  "offset-path",
  "offset-position",
  "offset-rotate",
  "opacity",
  "order",
  "orphans",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-anchor",
  "overflow-block",
  "overflow-clip-margin",
  "overflow-inline",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "overlay",
  "overscroll-behavior",
  "overscroll-behavior-block",
  "overscroll-behavior-inline",
  "overscroll-behavior-x",
  "overscroll-behavior-y",
  "padding",
  "padding-block",
  "padding-block-end",
  "padding-block-start",
  "padding-bottom",
  "padding-inline",
  "padding-inline-end",
  "padding-inline-start",
  "padding-left",
  "padding-right",
  "padding-top",
  "page",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "paint-order",
  "pause",
  "pause-after",
  "pause-before",
  "perspective",
  "perspective-origin",
  "place-content",
  "place-items",
  "place-self",
  "pointer-events",
  "position",
  "position-anchor",
  "position-visibility",
  "print-color-adjust",
  "quotes",
  "r",
  "resize",
  "rest",
  "rest-after",
  "rest-before",
  "right",
  "rotate",
  "row-gap",
  "ruby-align",
  "ruby-position",
  "scale",
  "scroll-behavior",
  "scroll-margin",
  "scroll-margin-block",
  "scroll-margin-block-end",
  "scroll-margin-block-start",
  "scroll-margin-bottom",
  "scroll-margin-inline",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding",
  "scroll-padding-block",
  "scroll-padding-block-end",
  "scroll-padding-block-start",
  "scroll-padding-bottom",
  "scroll-padding-inline",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "scroll-timeline",
  "scroll-timeline-axis",
  "scroll-timeline-name",
  "scrollbar-color",
  "scrollbar-gutter",
  "scrollbar-width",
  "shape-image-threshold",
  "shape-margin",
  "shape-outside",
  "shape-rendering",
  "speak",
  "speak-as",
  "src",
  // @font-face
  "stop-color",
  "stop-opacity",
  "stroke",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "tab-size",
  "table-layout",
  "text-align",
  "text-align-all",
  "text-align-last",
  "text-anchor",
  "text-combine-upright",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-skip",
  "text-decoration-skip-ink",
  "text-decoration-style",
  "text-decoration-thickness",
  "text-emphasis",
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-rendering",
  "text-shadow",
  "text-size-adjust",
  "text-transform",
  "text-underline-offset",
  "text-underline-position",
  "text-wrap",
  "text-wrap-mode",
  "text-wrap-style",
  "timeline-scope",
  "top",
  "touch-action",
  "transform",
  "transform-box",
  "transform-origin",
  "transform-style",
  "transition",
  "transition-behavior",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "translate",
  "unicode-bidi",
  "user-modify",
  "user-select",
  "vector-effect",
  "vertical-align",
  "view-timeline",
  "view-timeline-axis",
  "view-timeline-inset",
  "view-timeline-name",
  "view-transition-name",
  "visibility",
  "voice-balance",
  "voice-duration",
  "voice-family",
  "voice-pitch",
  "voice-range",
  "voice-rate",
  "voice-stress",
  "voice-volume",
  "white-space",
  "white-space-collapse",
  "widows",
  "width",
  "will-change",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "x",
  "y",
  "z-index",
  "zoom"
].sort().reverse();
function Jee(t) {
  const e = Wee(t), r = Qee, n = Xee, a = "@[a-z-]+", i = "and or not only", s = {
    className: "variable",
    begin: "(\\$" + "[a-zA-Z-][a-zA-Z0-9_-]*" + ")\\b",
    relevance: 0
  };
  return {
    name: "SCSS",
    case_insensitive: !0,
    illegal: "[=/|']",
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      // to recognize keyframe 40% etc which are outside the scope of our
      // attribute value mode
      e.CSS_NUMBER_MODE,
      {
        className: "selector-id",
        begin: "#[A-Za-z0-9_-]+",
        relevance: 0
      },
      {
        className: "selector-class",
        begin: "\\.[A-Za-z0-9_-]+",
        relevance: 0
      },
      e.ATTRIBUTE_SELECTOR_MODE,
      {
        className: "selector-tag",
        begin: "\\b(" + Kee.join("|") + ")\\b",
        // was there, before, but why?
        relevance: 0
      },
      {
        className: "selector-pseudo",
        begin: ":(" + n.join("|") + ")"
      },
      {
        className: "selector-pseudo",
        begin: ":(:)?(" + r.join("|") + ")"
      },
      s,
      {
        // pseudo-selector params
        begin: /\(/,
        end: /\)/,
        contains: [e.CSS_NUMBER_MODE]
      },
      e.CSS_VARIABLE,
      {
        className: "attribute",
        begin: "\\b(" + jee.join("|") + ")\\b"
      },
      { begin: "\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b" },
      {
        begin: /:/,
        end: /[;}{]/,
        relevance: 0,
        contains: [
          e.BLOCK_COMMENT,
          s,
          e.HEXCOLOR,
          e.CSS_NUMBER_MODE,
          t.QUOTE_STRING_MODE,
          t.APOS_STRING_MODE,
          e.IMPORTANT,
          e.FUNCTION_DISPATCH
        ]
      },
      // matching these here allows us to treat them more like regular CSS
      // rules so everything between the {} gets regular rule highlighting,
      // which is what we want for page and font-face
      {
        begin: "@(page|font-face)",
        keywords: {
          $pattern: a,
          keyword: "@page @font-face"
        }
      },
      {
        begin: "@",
        end: "[{;]",
        returnBegin: !0,
        keywords: {
          $pattern: /[a-z-]+/,
          keyword: i,
          attribute: Zee.join(" ")
        },
        contains: [
          {
            begin: a,
            className: "keyword"
          },
          {
            begin: /[a-z-]+(?=:)/,
            className: "attribute"
          },
          s,
          t.QUOTE_STRING_MODE,
          t.APOS_STRING_MODE,
          e.HEXCOLOR,
          e.CSS_NUMBER_MODE
        ]
      },
      e.FUNCTION_DISPATCH
    ]
  };
}
const qie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Jee
}, Symbol.toStringTag, { value: "Module" }));
function ete(t) {
  return {
    name: "Shell Session",
    aliases: [
      "console",
      "shellsession"
    ],
    contains: [
      {
        className: "meta.prompt",
        // We cannot add \s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.
        // For instance, in the following example, it would match "echo /path/to/home >" as a prompt:
        // echo /path/to/home > t.exe
        begin: /^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,
        starts: {
          end: /[^\\](?=\s*$)/,
          subLanguage: "bash"
        }
      }
    ]
  };
}
const Yie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ete
}, Symbol.toStringTag, { value: "Module" }));
function tte(t) {
  const e = [
    "add",
    "and",
    "cmp",
    "cmpg",
    "cmpl",
    "const",
    "div",
    "double",
    "float",
    "goto",
    "if",
    "int",
    "long",
    "move",
    "mul",
    "neg",
    "new",
    "nop",
    "not",
    "or",
    "rem",
    "return",
    "shl",
    "shr",
    "sput",
    "sub",
    "throw",
    "ushr",
    "xor"
  ], r = [
    "aget",
    "aput",
    "array",
    "check",
    "execute",
    "fill",
    "filled",
    "goto/16",
    "goto/32",
    "iget",
    "instance",
    "invoke",
    "iput",
    "monitor",
    "packed",
    "sget",
    "sparse"
  ], n = [
    "transient",
    "constructor",
    "abstract",
    "final",
    "synthetic",
    "public",
    "private",
    "protected",
    "static",
    "bridge",
    "system"
  ];
  return {
    name: "Smali",
    contains: [
      {
        className: "string",
        begin: '"',
        end: '"',
        relevance: 0
      },
      t.COMMENT(
        "#",
        "$",
        { relevance: 0 }
      ),
      {
        className: "keyword",
        variants: [
          { begin: "\\s*\\.end\\s[a-zA-Z0-9]*" },
          {
            begin: "^[ ]*\\.[a-zA-Z]*",
            relevance: 0
          },
          {
            begin: "\\s:[a-zA-Z_0-9]*",
            relevance: 0
          },
          { begin: "\\s(" + n.join("|") + ")" }
        ]
      },
      {
        className: "built_in",
        variants: [
          { begin: "\\s(" + e.join("|") + ")\\s" },
          {
            begin: "\\s(" + e.join("|") + ")((-|/)[a-zA-Z0-9]+)+\\s",
            relevance: 10
          },
          {
            begin: "\\s(" + r.join("|") + ")((-|/)[a-zA-Z0-9]+)*\\s",
            relevance: 10
          }
        ]
      },
      {
        className: "class",
        begin: `L[^(;:
]*;`,
        relevance: 0
      },
      { begin: "[vp][0-9]+" }
    ]
  };
}
const Kie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: tte
}, Symbol.toStringTag, { value: "Module" }));
function rte(t) {
  const e = "[a-z][a-zA-Z0-9_]*", r = {
    className: "string",
    begin: "\\$.{1}"
  }, n = {
    className: "symbol",
    begin: "#" + t.UNDERSCORE_IDENT_RE
  };
  return {
    name: "Smalltalk",
    aliases: ["st"],
    keywords: [
      "self",
      "super",
      "nil",
      "true",
      "false",
      "thisContext"
    ],
    contains: [
      t.COMMENT('"', '"'),
      t.APOS_STRING_MODE,
      {
        className: "type",
        begin: "\\b[A-Z][A-Za-z0-9_]*",
        relevance: 0
      },
      {
        begin: e + ":",
        relevance: 0
      },
      t.C_NUMBER_MODE,
      n,
      r,
      {
        // This looks more complicated than needed to avoid combinatorial
        // explosion under V8. It effectively means `| var1 var2 ... |` with
        // whitespace adjacent to `|` being optional.
        begin: "\\|[ ]*" + e + "([ ]+" + e + ")*[ ]*\\|",
        returnBegin: !0,
        end: /\|/,
        illegal: /\S/,
        contains: [{ begin: "(\\|[ ]*)?" + e }]
      },
      {
        begin: "#\\(",
        end: "\\)",
        contains: [
          t.APOS_STRING_MODE,
          r,
          t.C_NUMBER_MODE,
          n
        ]
      }
    ]
  };
}
const Zie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: rte
}, Symbol.toStringTag, { value: "Module" }));
function nte(t) {
  return {
    name: "SML (Standard ML)",
    aliases: ["ml"],
    keywords: {
      $pattern: "[a-z_]\\w*!?",
      keyword: (
        /* according to Definition of Standard ML 97  */
        "abstype and andalso as case datatype do else end eqtype exception fn fun functor handle if in include infix infixr let local nonfix of op open orelse raise rec sharing sig signature struct structure then type val with withtype where while"
      ),
      built_in: (
        /* built-in types according to basis library */
        "array bool char exn int list option order real ref string substring vector unit word"
      ),
      literal: "true false NONE SOME LESS EQUAL GREATER nil"
    },
    illegal: /\/\/|>>/,
    contains: [
      {
        className: "literal",
        begin: /\[(\|\|)?\]|\(\)/,
        relevance: 0
      },
      t.COMMENT(
        "\\(\\*",
        "\\*\\)",
        { contains: ["self"] }
      ),
      {
        /* type variable */
        className: "symbol",
        begin: "'[A-Za-z_](?!')[\\w']*"
        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */
      },
      {
        /* polymorphic variant */
        className: "type",
        begin: "`[A-Z][\\w']*"
      },
      {
        /* module or constructor */
        className: "type",
        begin: "\\b[A-Z][\\w']*",
        relevance: 0
      },
      {
        /* don't color identifiers, but safely catch all identifiers with ' */
        begin: "[a-z_]\\w*'[\\w']*"
      },
      t.inherit(t.APOS_STRING_MODE, {
        className: "string",
        relevance: 0
      }),
      t.inherit(t.QUOTE_STRING_MODE, { illegal: null }),
      {
        className: "number",
        begin: "\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
        relevance: 0
      },
      {
        begin: /[-=]>/
        // relevance booster
      }
    ]
  };
}
const Xie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: nte
}, Symbol.toStringTag, { value: "Module" }));
function ate(t) {
  const e = {
    className: "variable",
    begin: /\b_+[a-zA-Z]\w*/
  }, r = {
    className: "title",
    begin: /[a-zA-Z][a-zA-Z_0-9]*_fnc_[a-zA-Z_0-9]+/
  }, n = {
    className: "string",
    variants: [
      {
        begin: '"',
        end: '"',
        contains: [
          {
            begin: '""',
            relevance: 0
          }
        ]
      },
      {
        begin: "'",
        end: "'",
        contains: [
          {
            begin: "''",
            relevance: 0
          }
        ]
      }
    ]
  }, a = [
    "break",
    "breakWith",
    "breakOut",
    "breakTo",
    "case",
    "catch",
    "continue",
    "continueWith",
    "default",
    "do",
    "else",
    "exit",
    "exitWith",
    "for",
    "forEach",
    "from",
    "if",
    "local",
    "private",
    "switch",
    "step",
    "then",
    "throw",
    "to",
    "try",
    "waitUntil",
    "while",
    "with"
  ], i = [
    "blufor",
    "civilian",
    "configNull",
    "controlNull",
    "displayNull",
    "diaryRecordNull",
    "east",
    "endl",
    "false",
    "grpNull",
    "independent",
    "lineBreak",
    "locationNull",
    "nil",
    "objNull",
    "opfor",
    "pi",
    "resistance",
    "scriptNull",
    "sideAmbientLife",
    "sideEmpty",
    "sideEnemy",
    "sideFriendly",
    "sideLogic",
    "sideUnknown",
    "taskNull",
    "teamMemberNull",
    "true",
    "west"
  ], o = [
    "abs",
    "accTime",
    "acos",
    "action",
    "actionIDs",
    "actionKeys",
    "actionKeysEx",
    "actionKeysImages",
    "actionKeysNames",
    "actionKeysNamesArray",
    "actionName",
    "actionParams",
    "activateAddons",
    "activatedAddons",
    "activateKey",
    "activeTitleEffectParams",
    "add3DENConnection",
    "add3DENEventHandler",
    "add3DENLayer",
    "addAction",
    "addBackpack",
    "addBackpackCargo",
    "addBackpackCargoGlobal",
    "addBackpackGlobal",
    "addBinocularItem",
    "addCamShake",
    "addCuratorAddons",
    "addCuratorCameraArea",
    "addCuratorEditableObjects",
    "addCuratorEditingArea",
    "addCuratorPoints",
    "addEditorObject",
    "addEventHandler",
    "addForce",
    "addForceGeneratorRTD",
    "addGoggles",
    "addGroupIcon",
    "addHandgunItem",
    "addHeadgear",
    "addItem",
    "addItemCargo",
    "addItemCargoGlobal",
    "addItemPool",
    "addItemToBackpack",
    "addItemToUniform",
    "addItemToVest",
    "addLiveStats",
    "addMagazine",
    "addMagazineAmmoCargo",
    "addMagazineCargo",
    "addMagazineCargoGlobal",
    "addMagazineGlobal",
    "addMagazinePool",
    "addMagazines",
    "addMagazineTurret",
    "addMenu",
    "addMenuItem",
    "addMissionEventHandler",
    "addMPEventHandler",
    "addMusicEventHandler",
    "addonFiles",
    "addOwnedMine",
    "addPlayerScores",
    "addPrimaryWeaponItem",
    "addPublicVariableEventHandler",
    "addRating",
    "addResources",
    "addScore",
    "addScoreSide",
    "addSecondaryWeaponItem",
    "addSwitchableUnit",
    "addTeamMember",
    "addToRemainsCollector",
    "addTorque",
    "addUniform",
    "addUserActionEventHandler",
    "addVehicle",
    "addVest",
    "addWaypoint",
    "addWeapon",
    "addWeaponCargo",
    "addWeaponCargoGlobal",
    "addWeaponGlobal",
    "addWeaponItem",
    "addWeaponPool",
    "addWeaponTurret",
    "addWeaponWithAttachmentsCargo",
    "addWeaponWithAttachmentsCargoGlobal",
    "admin",
    "agent",
    "agents",
    "AGLToASL",
    "aimedAtTarget",
    "aimPos",
    "airDensityCurveRTD",
    "airDensityRTD",
    "airplaneThrottle",
    "airportSide",
    "AISFinishHeal",
    "alive",
    "all3DENEntities",
    "allActiveTitleEffects",
    "allAddonsInfo",
    "allAirports",
    "allControls",
    "allCurators",
    "allCutLayers",
    "allDead",
    "allDeadMen",
    "allDiaryRecords",
    "allDiarySubjects",
    "allDisplays",
    "allEnv3DSoundSources",
    "allGroups",
    "allLODs",
    "allMapMarkers",
    "allMines",
    "allMissionObjects",
    "allObjects",
    "allow3DMode",
    "allowCrewInImmobile",
    "allowCuratorLogicIgnoreAreas",
    "allowDamage",
    "allowDammage",
    "allowedService",
    "allowFileOperations",
    "allowFleeing",
    "allowGetIn",
    "allowService",
    "allowSprint",
    "allPlayers",
    "allSimpleObjects",
    "allSites",
    "allTurrets",
    "allUnits",
    "allUnitsUAV",
    "allUsers",
    "allVariables",
    "ambientTemperature",
    "ammo",
    "ammoOnPylon",
    "and",
    "animate",
    "animateBay",
    "animateDoor",
    "animatePylon",
    "animateSource",
    "animationNames",
    "animationPhase",
    "animationSourcePhase",
    "animationState",
    "apertureParams",
    "append",
    "apply",
    "armoryPoints",
    "arrayIntersect",
    "asin",
    "ASLToAGL",
    "ASLToATL",
    "assert",
    "assignAsCargo",
    "assignAsCargoIndex",
    "assignAsCommander",
    "assignAsDriver",
    "assignAsGunner",
    "assignAsTurret",
    "assignCurator",
    "assignedCargo",
    "assignedCommander",
    "assignedDriver",
    "assignedGroup",
    "assignedGunner",
    "assignedItems",
    "assignedTarget",
    "assignedTeam",
    "assignedVehicle",
    "assignedVehicleRole",
    "assignedVehicles",
    "assignItem",
    "assignTeam",
    "assignToAirport",
    "atan",
    "atan2",
    "atg",
    "ATLToASL",
    "attachedObject",
    "attachedObjects",
    "attachedTo",
    "attachObject",
    "attachTo",
    "attackEnabled",
    "awake",
    "backpack",
    "backpackCargo",
    "backpackContainer",
    "backpackItems",
    "backpackMagazines",
    "backpackSpaceFor",
    "behaviour",
    "benchmark",
    "bezierInterpolation",
    "binocular",
    "binocularItems",
    "binocularMagazine",
    "boundingBox",
    "boundingBoxReal",
    "boundingCenter",
    "brakesDisabled",
    "briefingName",
    "buildingExit",
    "buildingPos",
    "buldozer_EnableRoadDiag",
    "buldozer_IsEnabledRoadDiag",
    "buldozer_LoadNewRoads",
    "buldozer_reloadOperMap",
    "buttonAction",
    "buttonSetAction",
    "cadetMode",
    "calculatePath",
    "calculatePlayerVisibilityByFriendly",
    "call",
    "callExtension",
    "camCommand",
    "camCommit",
    "camCommitPrepared",
    "camCommitted",
    "camConstuctionSetParams",
    "camCreate",
    "camDestroy",
    "cameraEffect",
    "cameraEffectEnableHUD",
    "cameraInterest",
    "cameraOn",
    "cameraView",
    "campaignConfigFile",
    "camPreload",
    "camPreloaded",
    "camPrepareBank",
    "camPrepareDir",
    "camPrepareDive",
    "camPrepareFocus",
    "camPrepareFov",
    "camPrepareFovRange",
    "camPreparePos",
    "camPrepareRelPos",
    "camPrepareTarget",
    "camSetBank",
    "camSetDir",
    "camSetDive",
    "camSetFocus",
    "camSetFov",
    "camSetFovRange",
    "camSetPos",
    "camSetRelPos",
    "camSetTarget",
    "camTarget",
    "camUseNVG",
    "canAdd",
    "canAddItemToBackpack",
    "canAddItemToUniform",
    "canAddItemToVest",
    "cancelSimpleTaskDestination",
    "canDeployWeapon",
    "canFire",
    "canMove",
    "canSlingLoad",
    "canStand",
    "canSuspend",
    "canTriggerDynamicSimulation",
    "canUnloadInCombat",
    "canVehicleCargo",
    "captive",
    "captiveNum",
    "cbChecked",
    "cbSetChecked",
    "ceil",
    "channelEnabled",
    "cheatsEnabled",
    "checkAIFeature",
    "checkVisibility",
    "className",
    "clear3DENAttribute",
    "clear3DENInventory",
    "clearAllItemsFromBackpack",
    "clearBackpackCargo",
    "clearBackpackCargoGlobal",
    "clearForcesRTD",
    "clearGroupIcons",
    "clearItemCargo",
    "clearItemCargoGlobal",
    "clearItemPool",
    "clearMagazineCargo",
    "clearMagazineCargoGlobal",
    "clearMagazinePool",
    "clearOverlay",
    "clearRadio",
    "clearWeaponCargo",
    "clearWeaponCargoGlobal",
    "clearWeaponPool",
    "clientOwner",
    "closeDialog",
    "closeDisplay",
    "closeOverlay",
    "collapseObjectTree",
    "collect3DENHistory",
    "collectiveRTD",
    "collisionDisabledWith",
    "combatBehaviour",
    "combatMode",
    "commandArtilleryFire",
    "commandChat",
    "commander",
    "commandFire",
    "commandFollow",
    "commandFSM",
    "commandGetOut",
    "commandingMenu",
    "commandMove",
    "commandRadio",
    "commandStop",
    "commandSuppressiveFire",
    "commandTarget",
    "commandWatch",
    "comment",
    "commitOverlay",
    "compatibleItems",
    "compatibleMagazines",
    "compile",
    "compileFinal",
    "compileScript",
    "completedFSM",
    "composeText",
    "configClasses",
    "configFile",
    "configHierarchy",
    "configName",
    "configOf",
    "configProperties",
    "configSourceAddonList",
    "configSourceMod",
    "configSourceModList",
    "confirmSensorTarget",
    "connectTerminalToUAV",
    "connectToServer",
    "controlsGroupCtrl",
    "conversationDisabled",
    "copyFromClipboard",
    "copyToClipboard",
    "copyWaypoints",
    "cos",
    "count",
    "countEnemy",
    "countFriendly",
    "countSide",
    "countType",
    "countUnknown",
    "create3DENComposition",
    "create3DENEntity",
    "createAgent",
    "createCenter",
    "createDialog",
    "createDiaryLink",
    "createDiaryRecord",
    "createDiarySubject",
    "createDisplay",
    "createGearDialog",
    "createGroup",
    "createGuardedPoint",
    "createHashMap",
    "createHashMapFromArray",
    "createLocation",
    "createMarker",
    "createMarkerLocal",
    "createMenu",
    "createMine",
    "createMissionDisplay",
    "createMPCampaignDisplay",
    "createSimpleObject",
    "createSimpleTask",
    "createSite",
    "createSoundSource",
    "createTask",
    "createTeam",
    "createTrigger",
    "createUnit",
    "createVehicle",
    "createVehicleCrew",
    "createVehicleLocal",
    "crew",
    "ctAddHeader",
    "ctAddRow",
    "ctClear",
    "ctCurSel",
    "ctData",
    "ctFindHeaderRows",
    "ctFindRowHeader",
    "ctHeaderControls",
    "ctHeaderCount",
    "ctRemoveHeaders",
    "ctRemoveRows",
    "ctrlActivate",
    "ctrlAddEventHandler",
    "ctrlAngle",
    "ctrlAnimateModel",
    "ctrlAnimationPhaseModel",
    "ctrlAt",
    "ctrlAutoScrollDelay",
    "ctrlAutoScrollRewind",
    "ctrlAutoScrollSpeed",
    "ctrlBackgroundColor",
    "ctrlChecked",
    "ctrlClassName",
    "ctrlCommit",
    "ctrlCommitted",
    "ctrlCreate",
    "ctrlDelete",
    "ctrlEnable",
    "ctrlEnabled",
    "ctrlFade",
    "ctrlFontHeight",
    "ctrlForegroundColor",
    "ctrlHTMLLoaded",
    "ctrlIDC",
    "ctrlIDD",
    "ctrlMapAnimAdd",
    "ctrlMapAnimClear",
    "ctrlMapAnimCommit",
    "ctrlMapAnimDone",
    "ctrlMapCursor",
    "ctrlMapMouseOver",
    "ctrlMapPosition",
    "ctrlMapScale",
    "ctrlMapScreenToWorld",
    "ctrlMapSetPosition",
    "ctrlMapWorldToScreen",
    "ctrlModel",
    "ctrlModelDirAndUp",
    "ctrlModelScale",
    "ctrlMousePosition",
    "ctrlParent",
    "ctrlParentControlsGroup",
    "ctrlPosition",
    "ctrlRemoveAllEventHandlers",
    "ctrlRemoveEventHandler",
    "ctrlScale",
    "ctrlScrollValues",
    "ctrlSetActiveColor",
    "ctrlSetAngle",
    "ctrlSetAutoScrollDelay",
    "ctrlSetAutoScrollRewind",
    "ctrlSetAutoScrollSpeed",
    "ctrlSetBackgroundColor",
    "ctrlSetChecked",
    "ctrlSetDisabledColor",
    "ctrlSetEventHandler",
    "ctrlSetFade",
    "ctrlSetFocus",
    "ctrlSetFont",
    "ctrlSetFontH1",
    "ctrlSetFontH1B",
    "ctrlSetFontH2",
    "ctrlSetFontH2B",
    "ctrlSetFontH3",
    "ctrlSetFontH3B",
    "ctrlSetFontH4",
    "ctrlSetFontH4B",
    "ctrlSetFontH5",
    "ctrlSetFontH5B",
    "ctrlSetFontH6",
    "ctrlSetFontH6B",
    "ctrlSetFontHeight",
    "ctrlSetFontHeightH1",
    "ctrlSetFontHeightH2",
    "ctrlSetFontHeightH3",
    "ctrlSetFontHeightH4",
    "ctrlSetFontHeightH5",
    "ctrlSetFontHeightH6",
    "ctrlSetFontHeightSecondary",
    "ctrlSetFontP",
    "ctrlSetFontPB",
    "ctrlSetFontSecondary",
    "ctrlSetForegroundColor",
    "ctrlSetModel",
    "ctrlSetModelDirAndUp",
    "ctrlSetModelScale",
    "ctrlSetMousePosition",
    "ctrlSetPixelPrecision",
    "ctrlSetPosition",
    "ctrlSetPositionH",
    "ctrlSetPositionW",
    "ctrlSetPositionX",
    "ctrlSetPositionY",
    "ctrlSetScale",
    "ctrlSetScrollValues",
    "ctrlSetShadow",
    "ctrlSetStructuredText",
    "ctrlSetText",
    "ctrlSetTextColor",
    "ctrlSetTextColorSecondary",
    "ctrlSetTextSecondary",
    "ctrlSetTextSelection",
    "ctrlSetTooltip",
    "ctrlSetTooltipColorBox",
    "ctrlSetTooltipColorShade",
    "ctrlSetTooltipColorText",
    "ctrlSetTooltipMaxWidth",
    "ctrlSetURL",
    "ctrlSetURLOverlayMode",
    "ctrlShadow",
    "ctrlShow",
    "ctrlShown",
    "ctrlStyle",
    "ctrlText",
    "ctrlTextColor",
    "ctrlTextHeight",
    "ctrlTextSecondary",
    "ctrlTextSelection",
    "ctrlTextWidth",
    "ctrlTooltip",
    "ctrlType",
    "ctrlURL",
    "ctrlURLOverlayMode",
    "ctrlVisible",
    "ctRowControls",
    "ctRowCount",
    "ctSetCurSel",
    "ctSetData",
    "ctSetHeaderTemplate",
    "ctSetRowTemplate",
    "ctSetValue",
    "ctValue",
    "curatorAddons",
    "curatorCamera",
    "curatorCameraArea",
    "curatorCameraAreaCeiling",
    "curatorCoef",
    "curatorEditableObjects",
    "curatorEditingArea",
    "curatorEditingAreaType",
    "curatorMouseOver",
    "curatorPoints",
    "curatorRegisteredObjects",
    "curatorSelected",
    "curatorWaypointCost",
    "current3DENOperation",
    "currentChannel",
    "currentCommand",
    "currentMagazine",
    "currentMagazineDetail",
    "currentMagazineDetailTurret",
    "currentMagazineTurret",
    "currentMuzzle",
    "currentNamespace",
    "currentPilot",
    "currentTask",
    "currentTasks",
    "currentThrowable",
    "currentVisionMode",
    "currentWaypoint",
    "currentWeapon",
    "currentWeaponMode",
    "currentWeaponTurret",
    "currentZeroing",
    "cursorObject",
    "cursorTarget",
    "customChat",
    "customRadio",
    "customWaypointPosition",
    "cutFadeOut",
    "cutObj",
    "cutRsc",
    "cutText",
    "damage",
    "date",
    "dateToNumber",
    "dayTime",
    "deActivateKey",
    "debriefingText",
    "debugFSM",
    "debugLog",
    "decayGraphValues",
    "deg",
    "delete3DENEntities",
    "deleteAt",
    "deleteCenter",
    "deleteCollection",
    "deleteEditorObject",
    "deleteGroup",
    "deleteGroupWhenEmpty",
    "deleteIdentity",
    "deleteLocation",
    "deleteMarker",
    "deleteMarkerLocal",
    "deleteRange",
    "deleteResources",
    "deleteSite",
    "deleteStatus",
    "deleteTeam",
    "deleteVehicle",
    "deleteVehicleCrew",
    "deleteWaypoint",
    "detach",
    "detectedMines",
    "diag_activeMissionFSMs",
    "diag_activeScripts",
    "diag_activeSQFScripts",
    "diag_activeSQSScripts",
    "diag_allMissionEventHandlers",
    "diag_captureFrame",
    "diag_captureFrameToFile",
    "diag_captureSlowFrame",
    "diag_codePerformance",
    "diag_deltaTime",
    "diag_drawmode",
    "diag_dumpCalltraceToLog",
    "diag_dumpScriptAssembly",
    "diag_dumpTerrainSynth",
    "diag_dynamicSimulationEnd",
    "diag_enable",
    "diag_enabled",
    "diag_exportConfig",
    "diag_exportTerrainSVG",
    "diag_fps",
    "diag_fpsmin",
    "diag_frameno",
    "diag_getTerrainSegmentOffset",
    "diag_lightNewLoad",
    "diag_list",
    "diag_localized",
    "diag_log",
    "diag_logSlowFrame",
    "diag_mergeConfigFile",
    "diag_recordTurretLimits",
    "diag_resetFSM",
    "diag_resetshapes",
    "diag_scope",
    "diag_setLightNew",
    "diag_stacktrace",
    "diag_tickTime",
    "diag_toggle",
    "dialog",
    "diarySubjectExists",
    "didJIP",
    "didJIPOwner",
    "difficulty",
    "difficultyEnabled",
    "difficultyEnabledRTD",
    "difficultyOption",
    "direction",
    "directionStabilizationEnabled",
    "directSay",
    "disableAI",
    "disableBrakes",
    "disableCollisionWith",
    "disableConversation",
    "disableDebriefingStats",
    "disableMapIndicators",
    "disableNVGEquipment",
    "disableRemoteSensors",
    "disableSerialization",
    "disableTIEquipment",
    "disableUAVConnectability",
    "disableUserInput",
    "displayAddEventHandler",
    "displayChild",
    "displayCtrl",
    "displayParent",
    "displayRemoveAllEventHandlers",
    "displayRemoveEventHandler",
    "displaySetEventHandler",
    "displayUniqueName",
    "displayUpdate",
    "dissolveTeam",
    "distance",
    "distance2D",
    "distanceSqr",
    "distributionRegion",
    "do3DENAction",
    "doArtilleryFire",
    "doFire",
    "doFollow",
    "doFSM",
    "doGetOut",
    "doMove",
    "doorPhase",
    "doStop",
    "doSuppressiveFire",
    "doTarget",
    "doWatch",
    "drawArrow",
    "drawEllipse",
    "drawIcon",
    "drawIcon3D",
    "drawLaser",
    "drawLine",
    "drawLine3D",
    "drawLink",
    "drawLocation",
    "drawPolygon",
    "drawRectangle",
    "drawTriangle",
    "driver",
    "drop",
    "dynamicSimulationDistance",
    "dynamicSimulationDistanceCoef",
    "dynamicSimulationEnabled",
    "dynamicSimulationSystemEnabled",
    "echo",
    "edit3DENMissionAttributes",
    "editObject",
    "editorSetEventHandler",
    "effectiveCommander",
    "elevatePeriscope",
    "emptyPositions",
    "enableAI",
    "enableAIFeature",
    "enableAimPrecision",
    "enableAttack",
    "enableAudioFeature",
    "enableAutoStartUpRTD",
    "enableAutoTrimRTD",
    "enableCamShake",
    "enableCaustics",
    "enableChannel",
    "enableCollisionWith",
    "enableCopilot",
    "enableDebriefingStats",
    "enableDiagLegend",
    "enableDirectionStabilization",
    "enableDynamicSimulation",
    "enableDynamicSimulationSystem",
    "enableEndDialog",
    "enableEngineArtillery",
    "enableEnvironment",
    "enableFatigue",
    "enableGunLights",
    "enableInfoPanelComponent",
    "enableIRLasers",
    "enableMimics",
    "enablePersonTurret",
    "enableRadio",
    "enableReload",
    "enableRopeAttach",
    "enableSatNormalOnDetail",
    "enableSaving",
    "enableSentences",
    "enableSimulation",
    "enableSimulationGlobal",
    "enableStamina",
    "enableStressDamage",
    "enableTeamSwitch",
    "enableTraffic",
    "enableUAVConnectability",
    "enableUAVWaypoints",
    "enableVehicleCargo",
    "enableVehicleSensor",
    "enableWeaponDisassembly",
    "endLoadingScreen",
    "endMission",
    "engineOn",
    "enginesIsOnRTD",
    "enginesPowerRTD",
    "enginesRpmRTD",
    "enginesTorqueRTD",
    "entities",
    "environmentEnabled",
    "environmentVolume",
    "equipmentDisabled",
    "estimatedEndServerTime",
    "estimatedTimeLeft",
    "evalObjectArgument",
    "everyBackpack",
    "everyContainer",
    "exec",
    "execEditorScript",
    "execFSM",
    "execVM",
    "exp",
    "expectedDestination",
    "exportJIPMessages",
    "eyeDirection",
    "eyePos",
    "face",
    "faction",
    "fadeEnvironment",
    "fadeMusic",
    "fadeRadio",
    "fadeSound",
    "fadeSpeech",
    "failMission",
    "fileExists",
    "fillWeaponsFromPool",
    "find",
    "findAny",
    "findCover",
    "findDisplay",
    "findEditorObject",
    "findEmptyPosition",
    "findEmptyPositionReady",
    "findIf",
    "findNearestEnemy",
    "finishMissionInit",
    "finite",
    "fire",
    "fireAtTarget",
    "firstBackpack",
    "flag",
    "flagAnimationPhase",
    "flagOwner",
    "flagSide",
    "flagTexture",
    "flatten",
    "fleeing",
    "floor",
    "flyInHeight",
    "flyInHeightASL",
    "focusedCtrl",
    "fog",
    "fogForecast",
    "fogParams",
    "forceAddUniform",
    "forceAtPositionRTD",
    "forceCadetDifficulty",
    "forcedMap",
    "forceEnd",
    "forceFlagTexture",
    "forceFollowRoad",
    "forceGeneratorRTD",
    "forceMap",
    "forceRespawn",
    "forceSpeed",
    "forceUnicode",
    "forceWalk",
    "forceWeaponFire",
    "forceWeatherChange",
    "forEachMember",
    "forEachMemberAgent",
    "forEachMemberTeam",
    "forgetTarget",
    "format",
    "formation",
    "formationDirection",
    "formationLeader",
    "formationMembers",
    "formationPosition",
    "formationTask",
    "formatText",
    "formLeader",
    "freeExtension",
    "freeLook",
    "fromEditor",
    "fuel",
    "fullCrew",
    "gearIDCAmmoCount",
    "gearSlotAmmoCount",
    "gearSlotData",
    "gestureState",
    "get",
    "get3DENActionState",
    "get3DENAttribute",
    "get3DENCamera",
    "get3DENConnections",
    "get3DENEntity",
    "get3DENEntityID",
    "get3DENGrid",
    "get3DENIconsVisible",
    "get3DENLayerEntities",
    "get3DENLinesVisible",
    "get3DENMissionAttribute",
    "get3DENMouseOver",
    "get3DENSelected",
    "getAimingCoef",
    "getAllEnv3DSoundControllers",
    "getAllEnvSoundControllers",
    "getAllHitPointsDamage",
    "getAllOwnedMines",
    "getAllPylonsInfo",
    "getAllSoundControllers",
    "getAllUnitTraits",
    "getAmmoCargo",
    "getAnimAimPrecision",
    "getAnimSpeedCoef",
    "getArray",
    "getArtilleryAmmo",
    "getArtilleryComputerSettings",
    "getArtilleryETA",
    "getAssetDLCInfo",
    "getAssignedCuratorLogic",
    "getAssignedCuratorUnit",
    "getAttackTarget",
    "getAudioOptionVolumes",
    "getBackpackCargo",
    "getBleedingRemaining",
    "getBurningValue",
    "getCalculatePlayerVisibilityByFriendly",
    "getCameraViewDirection",
    "getCargoIndex",
    "getCenterOfMass",
    "getClientState",
    "getClientStateNumber",
    "getCompatiblePylonMagazines",
    "getConnectedUAV",
    "getConnectedUAVUnit",
    "getContainerMaxLoad",
    "getCorpse",
    "getCruiseControl",
    "getCursorObjectParams",
    "getCustomAimCoef",
    "getCustomSoundController",
    "getCustomSoundControllerCount",
    "getDammage",
    "getDebriefingText",
    "getDescription",
    "getDir",
    "getDirVisual",
    "getDiverState",
    "getDLCAssetsUsage",
    "getDLCAssetsUsageByName",
    "getDLCs",
    "getDLCUsageTime",
    "getEditorCamera",
    "getEditorMode",
    "getEditorObjectScope",
    "getElevationOffset",
    "getEngineTargetRPMRTD",
    "getEnv3DSoundController",
    "getEnvSoundController",
    "getEventHandlerInfo",
    "getFatigue",
    "getFieldManualStartPage",
    "getForcedFlagTexture",
    "getForcedSpeed",
    "getFriend",
    "getFSMVariable",
    "getFuelCargo",
    "getGraphValues",
    "getGroupIcon",
    "getGroupIconParams",
    "getGroupIcons",
    "getHideFrom",
    "getHit",
    "getHitIndex",
    "getHitPointDamage",
    "getItemCargo",
    "getLighting",
    "getLightingAt",
    "getLoadedModsInfo",
    "getMagazineCargo",
    "getMarkerColor",
    "getMarkerPos",
    "getMarkerSize",
    "getMarkerType",
    "getMass",
    "getMissionConfig",
    "getMissionConfigValue",
    "getMissionDLCs",
    "getMissionLayerEntities",
    "getMissionLayers",
    "getMissionPath",
    "getModelInfo",
    "getMousePosition",
    "getMusicPlayedTime",
    "getNumber",
    "getObjectArgument",
    "getObjectChildren",
    "getObjectDLC",
    "getObjectFOV",
    "getObjectID",
    "getObjectMaterials",
    "getObjectProxy",
    "getObjectScale",
    "getObjectTextures",
    "getObjectType",
    "getObjectViewDistance",
    "getOpticsMode",
    "getOrDefault",
    "getOrDefaultCall",
    "getOxygenRemaining",
    "getPersonUsedDLCs",
    "getPilotCameraDirection",
    "getPilotCameraPosition",
    "getPilotCameraRotation",
    "getPilotCameraTarget",
    "getPiPViewDistance",
    "getPlateNumber",
    "getPlayerChannel",
    "getPlayerID",
    "getPlayerScores",
    "getPlayerUID",
    "getPlayerVoNVolume",
    "getPos",
    "getPosASL",
    "getPosASLVisual",
    "getPosASLW",
    "getPosATL",
    "getPosATLVisual",
    "getPosVisual",
    "getPosWorld",
    "getPosWorldVisual",
    "getPylonMagazines",
    "getRelDir",
    "getRelPos",
    "getRemoteSensorsDisabled",
    "getRepairCargo",
    "getResolution",
    "getRoadInfo",
    "getRotorBrakeRTD",
    "getSensorTargets",
    "getSensorThreats",
    "getShadowDistance",
    "getShotParents",
    "getSlingLoad",
    "getSoundController",
    "getSoundControllerResult",
    "getSpeed",
    "getStamina",
    "getStatValue",
    "getSteamFriendsServers",
    "getSubtitleOptions",
    "getSuppression",
    "getTerrainGrid",
    "getTerrainHeight",
    "getTerrainHeightASL",
    "getTerrainInfo",
    "getText",
    "getTextRaw",
    "getTextureInfo",
    "getTextWidth",
    "getTiParameters",
    "getTotalDLCUsageTime",
    "getTrimOffsetRTD",
    "getTurretLimits",
    "getTurretOpticsMode",
    "getUnitFreefallInfo",
    "getUnitLoadout",
    "getUnitTrait",
    "getUnloadInCombat",
    "getUserInfo",
    "getUserMFDText",
    "getUserMFDValue",
    "getVariable",
    "getVehicleCargo",
    "getVehicleTiPars",
    "getWeaponCargo",
    "getWeaponSway",
    "getWingsOrientationRTD",
    "getWingsPositionRTD",
    "getWPPos",
    "glanceAt",
    "globalChat",
    "globalRadio",
    "goggles",
    "goto",
    "group",
    "groupChat",
    "groupFromNetId",
    "groupIconSelectable",
    "groupIconsVisible",
    "groupID",
    "groupOwner",
    "groupRadio",
    "groups",
    "groupSelectedUnits",
    "groupSelectUnit",
    "gunner",
    "gusts",
    "halt",
    "handgunItems",
    "handgunMagazine",
    "handgunWeapon",
    "handsHit",
    "hashValue",
    "hasInterface",
    "hasPilotCamera",
    "hasWeapon",
    "hcAllGroups",
    "hcGroupParams",
    "hcLeader",
    "hcRemoveAllGroups",
    "hcRemoveGroup",
    "hcSelected",
    "hcSelectGroup",
    "hcSetGroup",
    "hcShowBar",
    "hcShownBar",
    "headgear",
    "hideBody",
    "hideObject",
    "hideObjectGlobal",
    "hideSelection",
    "hint",
    "hintC",
    "hintCadet",
    "hintSilent",
    "hmd",
    "hostMission",
    "htmlLoad",
    "HUDMovementLevels",
    "humidity",
    "image",
    "importAllGroups",
    "importance",
    "in",
    "inArea",
    "inAreaArray",
    "incapacitatedState",
    "inflame",
    "inflamed",
    "infoPanel",
    "infoPanelComponentEnabled",
    "infoPanelComponents",
    "infoPanels",
    "inGameUISetEventHandler",
    "inheritsFrom",
    "initAmbientLife",
    "inPolygon",
    "inputAction",
    "inputController",
    "inputMouse",
    "inRangeOfArtillery",
    "insert",
    "insertEditorObject",
    "intersect",
    "is3DEN",
    "is3DENMultiplayer",
    "is3DENPreview",
    "isAbleToBreathe",
    "isActionMenuVisible",
    "isAgent",
    "isAimPrecisionEnabled",
    "isAllowedCrewInImmobile",
    "isArray",
    "isAutoHoverOn",
    "isAutonomous",
    "isAutoStartUpEnabledRTD",
    "isAutotest",
    "isAutoTrimOnRTD",
    "isAwake",
    "isBleeding",
    "isBurning",
    "isClass",
    "isCollisionLightOn",
    "isCopilotEnabled",
    "isDamageAllowed",
    "isDedicated",
    "isDLCAvailable",
    "isEngineOn",
    "isEqualRef",
    "isEqualTo",
    "isEqualType",
    "isEqualTypeAll",
    "isEqualTypeAny",
    "isEqualTypeArray",
    "isEqualTypeParams",
    "isFilePatchingEnabled",
    "isFinal",
    "isFlashlightOn",
    "isFlatEmpty",
    "isForcedWalk",
    "isFormationLeader",
    "isGameFocused",
    "isGamePaused",
    "isGroupDeletedWhenEmpty",
    "isHidden",
    "isInRemainsCollector",
    "isInstructorFigureEnabled",
    "isIRLaserOn",
    "isKeyActive",
    "isKindOf",
    "isLaserOn",
    "isLightOn",
    "isLocalized",
    "isManualFire",
    "isMarkedForCollection",
    "isMissionProfileNamespaceLoaded",
    "isMultiplayer",
    "isMultiplayerSolo",
    "isNil",
    "isNotEqualRef",
    "isNotEqualTo",
    "isNull",
    "isNumber",
    "isObjectHidden",
    "isObjectRTD",
    "isOnRoad",
    "isPiPEnabled",
    "isPlayer",
    "isRealTime",
    "isRemoteExecuted",
    "isRemoteExecutedJIP",
    "isSaving",
    "isSensorTargetConfirmed",
    "isServer",
    "isShowing3DIcons",
    "isSimpleObject",
    "isSprintAllowed",
    "isStaminaEnabled",
    "isSteamMission",
    "isSteamOverlayEnabled",
    "isStreamFriendlyUIEnabled",
    "isStressDamageEnabled",
    "isText",
    "isTouchingGround",
    "isTurnedOut",
    "isTutHintsEnabled",
    "isUAVConnectable",
    "isUAVConnected",
    "isUIContext",
    "isUniformAllowed",
    "isVehicleCargo",
    "isVehicleRadarOn",
    "isVehicleSensorEnabled",
    "isWalking",
    "isWeaponDeployed",
    "isWeaponRested",
    "itemCargo",
    "items",
    "itemsWithMagazines",
    "join",
    "joinAs",
    "joinAsSilent",
    "joinSilent",
    "joinString",
    "kbAddDatabase",
    "kbAddDatabaseTargets",
    "kbAddTopic",
    "kbHasTopic",
    "kbReact",
    "kbRemoveTopic",
    "kbTell",
    "kbWasSaid",
    "keyImage",
    "keyName",
    "keys",
    "knowsAbout",
    "land",
    "landAt",
    "landResult",
    "language",
    "laserTarget",
    "lbAdd",
    "lbClear",
    "lbColor",
    "lbColorRight",
    "lbCurSel",
    "lbData",
    "lbDelete",
    "lbIsSelected",
    "lbPicture",
    "lbPictureRight",
    "lbSelection",
    "lbSetColor",
    "lbSetColorRight",
    "lbSetCurSel",
    "lbSetData",
    "lbSetPicture",
    "lbSetPictureColor",
    "lbSetPictureColorDisabled",
    "lbSetPictureColorSelected",
    "lbSetPictureRight",
    "lbSetPictureRightColor",
    "lbSetPictureRightColorDisabled",
    "lbSetPictureRightColorSelected",
    "lbSetSelectColor",
    "lbSetSelectColorRight",
    "lbSetSelected",
    "lbSetText",
    "lbSetTextRight",
    "lbSetTooltip",
    "lbSetValue",
    "lbSize",
    "lbSort",
    "lbSortBy",
    "lbSortByValue",
    "lbText",
    "lbTextRight",
    "lbTooltip",
    "lbValue",
    "leader",
    "leaderboardDeInit",
    "leaderboardGetRows",
    "leaderboardInit",
    "leaderboardRequestRowsFriends",
    "leaderboardRequestRowsGlobal",
    "leaderboardRequestRowsGlobalAroundUser",
    "leaderboardsRequestUploadScore",
    "leaderboardsRequestUploadScoreKeepBest",
    "leaderboardState",
    "leaveVehicle",
    "libraryCredits",
    "libraryDisclaimers",
    "lifeState",
    "lightAttachObject",
    "lightDetachObject",
    "lightIsOn",
    "lightnings",
    "limitSpeed",
    "linearConversion",
    "lineIntersects",
    "lineIntersectsObjs",
    "lineIntersectsSurfaces",
    "lineIntersectsWith",
    "linkItem",
    "list",
    "listObjects",
    "listRemoteTargets",
    "listVehicleSensors",
    "ln",
    "lnbAddArray",
    "lnbAddColumn",
    "lnbAddRow",
    "lnbClear",
    "lnbColor",
    "lnbColorRight",
    "lnbCurSelRow",
    "lnbData",
    "lnbDeleteColumn",
    "lnbDeleteRow",
    "lnbGetColumnsPosition",
    "lnbPicture",
    "lnbPictureRight",
    "lnbSetColor",
    "lnbSetColorRight",
    "lnbSetColumnsPos",
    "lnbSetCurSelRow",
    "lnbSetData",
    "lnbSetPicture",
    "lnbSetPictureColor",
    "lnbSetPictureColorRight",
    "lnbSetPictureColorSelected",
    "lnbSetPictureColorSelectedRight",
    "lnbSetPictureRight",
    "lnbSetText",
    "lnbSetTextRight",
    "lnbSetTooltip",
    "lnbSetValue",
    "lnbSize",
    "lnbSort",
    "lnbSortBy",
    "lnbSortByValue",
    "lnbText",
    "lnbTextRight",
    "lnbValue",
    "load",
    "loadAbs",
    "loadBackpack",
    "loadConfig",
    "loadFile",
    "loadGame",
    "loadIdentity",
    "loadMagazine",
    "loadOverlay",
    "loadStatus",
    "loadUniform",
    "loadVest",
    "localize",
    "localNamespace",
    "locationPosition",
    "lock",
    "lockCameraTo",
    "lockCargo",
    "lockDriver",
    "locked",
    "lockedCameraTo",
    "lockedCargo",
    "lockedDriver",
    "lockedInventory",
    "lockedTurret",
    "lockIdentity",
    "lockInventory",
    "lockTurret",
    "lockWp",
    "log",
    "logEntities",
    "logNetwork",
    "logNetworkTerminate",
    "lookAt",
    "lookAtPos",
    "magazineCargo",
    "magazines",
    "magazinesAllTurrets",
    "magazinesAmmo",
    "magazinesAmmoCargo",
    "magazinesAmmoFull",
    "magazinesDetail",
    "magazinesDetailBackpack",
    "magazinesDetailUniform",
    "magazinesDetailVest",
    "magazinesTurret",
    "magazineTurretAmmo",
    "mapAnimAdd",
    "mapAnimClear",
    "mapAnimCommit",
    "mapAnimDone",
    "mapCenterOnCamera",
    "mapGridPosition",
    "markAsFinishedOnSteam",
    "markerAlpha",
    "markerBrush",
    "markerChannel",
    "markerColor",
    "markerDir",
    "markerPolyline",
    "markerPos",
    "markerShadow",
    "markerShape",
    "markerSize",
    "markerText",
    "markerType",
    "matrixMultiply",
    "matrixTranspose",
    "max",
    "maxLoad",
    "members",
    "menuAction",
    "menuAdd",
    "menuChecked",
    "menuClear",
    "menuCollapse",
    "menuData",
    "menuDelete",
    "menuEnable",
    "menuEnabled",
    "menuExpand",
    "menuHover",
    "menuPicture",
    "menuSetAction",
    "menuSetCheck",
    "menuSetData",
    "menuSetPicture",
    "menuSetShortcut",
    "menuSetText",
    "menuSetURL",
    "menuSetValue",
    "menuShortcut",
    "menuShortcutText",
    "menuSize",
    "menuSort",
    "menuText",
    "menuURL",
    "menuValue",
    "merge",
    "min",
    "mineActive",
    "mineDetectedBy",
    "missileTarget",
    "missileTargetPos",
    "missionConfigFile",
    "missionDifficulty",
    "missionEnd",
    "missionName",
    "missionNameSource",
    "missionNamespace",
    "missionProfileNamespace",
    "missionStart",
    "missionVersion",
    "mod",
    "modelToWorld",
    "modelToWorldVisual",
    "modelToWorldVisualWorld",
    "modelToWorldWorld",
    "modParams",
    "moonIntensity",
    "moonPhase",
    "morale",
    "move",
    "move3DENCamera",
    "moveInAny",
    "moveInCargo",
    "moveInCommander",
    "moveInDriver",
    "moveInGunner",
    "moveInTurret",
    "moveObjectToEnd",
    "moveOut",
    "moveTime",
    "moveTo",
    "moveToCompleted",
    "moveToFailed",
    "musicVolume",
    "name",
    "namedProperties",
    "nameSound",
    "nearEntities",
    "nearestBuilding",
    "nearestLocation",
    "nearestLocations",
    "nearestLocationWithDubbing",
    "nearestMines",
    "nearestObject",
    "nearestObjects",
    "nearestTerrainObjects",
    "nearObjects",
    "nearObjectsReady",
    "nearRoads",
    "nearSupplies",
    "nearTargets",
    "needReload",
    "needService",
    "netId",
    "netObjNull",
    "newOverlay",
    "nextMenuItemIndex",
    "nextWeatherChange",
    "nMenuItems",
    "not",
    "numberOfEnginesRTD",
    "numberToDate",
    "objectCurators",
    "objectFromNetId",
    "objectParent",
    "objStatus",
    "onBriefingGroup",
    "onBriefingNotes",
    "onBriefingPlan",
    "onBriefingTeamSwitch",
    "onCommandModeChanged",
    "onDoubleClick",
    "onEachFrame",
    "onGroupIconClick",
    "onGroupIconOverEnter",
    "onGroupIconOverLeave",
    "onHCGroupSelectionChanged",
    "onMapSingleClick",
    "onPlayerConnected",
    "onPlayerDisconnected",
    "onPreloadFinished",
    "onPreloadStarted",
    "onShowNewObject",
    "onTeamSwitch",
    "openCuratorInterface",
    "openDLCPage",
    "openGPS",
    "openMap",
    "openSteamApp",
    "openYoutubeVideo",
    "or",
    "orderGetIn",
    "overcast",
    "overcastForecast",
    "owner",
    "param",
    "params",
    "parseNumber",
    "parseSimpleArray",
    "parseText",
    "parsingNamespace",
    "particlesQuality",
    "periscopeElevation",
    "pickWeaponPool",
    "pitch",
    "pixelGrid",
    "pixelGridBase",
    "pixelGridNoUIScale",
    "pixelH",
    "pixelW",
    "playableSlotsNumber",
    "playableUnits",
    "playAction",
    "playActionNow",
    "player",
    "playerRespawnTime",
    "playerSide",
    "playersNumber",
    "playGesture",
    "playMission",
    "playMove",
    "playMoveNow",
    "playMusic",
    "playScriptedMission",
    "playSound",
    "playSound3D",
    "playSoundUI",
    "pose",
    "position",
    "positionCameraToWorld",
    "posScreenToWorld",
    "posWorldToScreen",
    "ppEffectAdjust",
    "ppEffectCommit",
    "ppEffectCommitted",
    "ppEffectCreate",
    "ppEffectDestroy",
    "ppEffectEnable",
    "ppEffectEnabled",
    "ppEffectForceInNVG",
    "precision",
    "preloadCamera",
    "preloadObject",
    "preloadSound",
    "preloadTitleObj",
    "preloadTitleRsc",
    "preprocessFile",
    "preprocessFileLineNumbers",
    "primaryWeapon",
    "primaryWeaponItems",
    "primaryWeaponMagazine",
    "priority",
    "processDiaryLink",
    "productVersion",
    "profileName",
    "profileNamespace",
    "profileNameSteam",
    "progressLoadingScreen",
    "progressPosition",
    "progressSetPosition",
    "publicVariable",
    "publicVariableClient",
    "publicVariableServer",
    "pushBack",
    "pushBackUnique",
    "putWeaponPool",
    "queryItemsPool",
    "queryMagazinePool",
    "queryWeaponPool",
    "rad",
    "radioChannelAdd",
    "radioChannelCreate",
    "radioChannelInfo",
    "radioChannelRemove",
    "radioChannelSetCallSign",
    "radioChannelSetLabel",
    "radioEnabled",
    "radioVolume",
    "rain",
    "rainbow",
    "rainParams",
    "random",
    "rank",
    "rankId",
    "rating",
    "rectangular",
    "regexFind",
    "regexMatch",
    "regexReplace",
    "registeredTasks",
    "registerTask",
    "reload",
    "reloadEnabled",
    "remoteControl",
    "remoteExec",
    "remoteExecCall",
    "remoteExecutedOwner",
    "remove3DENConnection",
    "remove3DENEventHandler",
    "remove3DENLayer",
    "removeAction",
    "removeAll3DENEventHandlers",
    "removeAllActions",
    "removeAllAssignedItems",
    "removeAllBinocularItems",
    "removeAllContainers",
    "removeAllCuratorAddons",
    "removeAllCuratorCameraAreas",
    "removeAllCuratorEditingAreas",
    "removeAllEventHandlers",
    "removeAllHandgunItems",
    "removeAllItems",
    "removeAllItemsWithMagazines",
    "removeAllMissionEventHandlers",
    "removeAllMPEventHandlers",
    "removeAllMusicEventHandlers",
    "removeAllOwnedMines",
    "removeAllPrimaryWeaponItems",
    "removeAllSecondaryWeaponItems",
    "removeAllUserActionEventHandlers",
    "removeAllWeapons",
    "removeBackpack",
    "removeBackpackGlobal",
    "removeBinocularItem",
    "removeCuratorAddons",
    "removeCuratorCameraArea",
    "removeCuratorEditableObjects",
    "removeCuratorEditingArea",
    "removeDiaryRecord",
    "removeDiarySubject",
    "removeDrawIcon",
    "removeDrawLinks",
    "removeEventHandler",
    "removeFromRemainsCollector",
    "removeGoggles",
    "removeGroupIcon",
    "removeHandgunItem",
    "removeHeadgear",
    "removeItem",
    "removeItemFromBackpack",
    "removeItemFromUniform",
    "removeItemFromVest",
    "removeItems",
    "removeMagazine",
    "removeMagazineGlobal",
    "removeMagazines",
    "removeMagazinesTurret",
    "removeMagazineTurret",
    "removeMenuItem",
    "removeMissionEventHandler",
    "removeMPEventHandler",
    "removeMusicEventHandler",
    "removeOwnedMine",
    "removePrimaryWeaponItem",
    "removeSecondaryWeaponItem",
    "removeSimpleTask",
    "removeSwitchableUnit",
    "removeTeamMember",
    "removeUniform",
    "removeUserActionEventHandler",
    "removeVest",
    "removeWeapon",
    "removeWeaponAttachmentCargo",
    "removeWeaponCargo",
    "removeWeaponGlobal",
    "removeWeaponTurret",
    "reportRemoteTarget",
    "requiredVersion",
    "resetCamShake",
    "resetSubgroupDirection",
    "resize",
    "resources",
    "respawnVehicle",
    "restartEditorCamera",
    "reveal",
    "revealMine",
    "reverse",
    "reversedMouseY",
    "roadAt",
    "roadsConnectedTo",
    "roleDescription",
    "ropeAttachedObjects",
    "ropeAttachedTo",
    "ropeAttachEnabled",
    "ropeAttachTo",
    "ropeCreate",
    "ropeCut",
    "ropeDestroy",
    "ropeDetach",
    "ropeEndPosition",
    "ropeLength",
    "ropes",
    "ropesAttachedTo",
    "ropeSegments",
    "ropeUnwind",
    "ropeUnwound",
    "rotorsForcesRTD",
    "rotorsRpmRTD",
    "round",
    "runInitScript",
    "safeZoneH",
    "safeZoneW",
    "safeZoneWAbs",
    "safeZoneX",
    "safeZoneXAbs",
    "safeZoneY",
    "save3DENInventory",
    "saveGame",
    "saveIdentity",
    "saveJoysticks",
    "saveMissionProfileNamespace",
    "saveOverlay",
    "saveProfileNamespace",
    "saveStatus",
    "saveVar",
    "savingEnabled",
    "say",
    "say2D",
    "say3D",
    "scopeName",
    "score",
    "scoreSide",
    "screenshot",
    "screenToWorld",
    "scriptDone",
    "scriptName",
    "scudState",
    "secondaryWeapon",
    "secondaryWeaponItems",
    "secondaryWeaponMagazine",
    "select",
    "selectBestPlaces",
    "selectDiarySubject",
    "selectedEditorObjects",
    "selectEditorObject",
    "selectionNames",
    "selectionPosition",
    "selectionVectorDirAndUp",
    "selectLeader",
    "selectMax",
    "selectMin",
    "selectNoPlayer",
    "selectPlayer",
    "selectRandom",
    "selectRandomWeighted",
    "selectWeapon",
    "selectWeaponTurret",
    "sendAUMessage",
    "sendSimpleCommand",
    "sendTask",
    "sendTaskResult",
    "sendUDPMessage",
    "sentencesEnabled",
    "serverCommand",
    "serverCommandAvailable",
    "serverCommandExecutable",
    "serverName",
    "serverNamespace",
    "serverTime",
    "set",
    "set3DENAttribute",
    "set3DENAttributes",
    "set3DENGrid",
    "set3DENIconsVisible",
    "set3DENLayer",
    "set3DENLinesVisible",
    "set3DENLogicType",
    "set3DENMissionAttribute",
    "set3DENMissionAttributes",
    "set3DENModelsVisible",
    "set3DENObjectType",
    "set3DENSelected",
    "setAccTime",
    "setActualCollectiveRTD",
    "setAirplaneThrottle",
    "setAirportSide",
    "setAmmo",
    "setAmmoCargo",
    "setAmmoOnPylon",
    "setAnimSpeedCoef",
    "setAperture",
    "setApertureNew",
    "setArmoryPoints",
    "setAttributes",
    "setAutonomous",
    "setBehaviour",
    "setBehaviourStrong",
    "setBleedingRemaining",
    "setBrakesRTD",
    "setCameraInterest",
    "setCamShakeDefParams",
    "setCamShakeParams",
    "setCamUseTi",
    "setCaptive",
    "setCenterOfMass",
    "setCollisionLight",
    "setCombatBehaviour",
    "setCombatMode",
    "setCompassOscillation",
    "setConvoySeparation",
    "setCruiseControl",
    "setCuratorCameraAreaCeiling",
    "setCuratorCoef",
    "setCuratorEditingAreaType",
    "setCuratorWaypointCost",
    "setCurrentChannel",
    "setCurrentTask",
    "setCurrentWaypoint",
    "setCustomAimCoef",
    "SetCustomMissionData",
    "setCustomSoundController",
    "setCustomWeightRTD",
    "setDamage",
    "setDammage",
    "setDate",
    "setDebriefingText",
    "setDefaultCamera",
    "setDestination",
    "setDetailMapBlendPars",
    "setDiaryRecordText",
    "setDiarySubjectPicture",
    "setDir",
    "setDirection",
    "setDrawIcon",
    "setDriveOnPath",
    "setDropInterval",
    "setDynamicSimulationDistance",
    "setDynamicSimulationDistanceCoef",
    "setEditorMode",
    "setEditorObjectScope",
    "setEffectCondition",
    "setEffectiveCommander",
    "setEngineRpmRTD",
    "setFace",
    "setFaceanimation",
    "setFatigue",
    "setFeatureType",
    "setFlagAnimationPhase",
    "setFlagOwner",
    "setFlagSide",
    "setFlagTexture",
    "setFog",
    "setForceGeneratorRTD",
    "setFormation",
    "setFormationTask",
    "setFormDir",
    "setFriend",
    "setFromEditor",
    "setFSMVariable",
    "setFuel",
    "setFuelCargo",
    "setGroupIcon",
    "setGroupIconParams",
    "setGroupIconsSelectable",
    "setGroupIconsVisible",
    "setGroupid",
    "setGroupIdGlobal",
    "setGroupOwner",
    "setGusts",
    "setHideBehind",
    "setHit",
    "setHitIndex",
    "setHitPointDamage",
    "setHorizonParallaxCoef",
    "setHUDMovementLevels",
    "setHumidity",
    "setIdentity",
    "setImportance",
    "setInfoPanel",
    "setLeader",
    "setLightAmbient",
    "setLightAttenuation",
    "setLightBrightness",
    "setLightColor",
    "setLightConePars",
    "setLightDayLight",
    "setLightFlareMaxDistance",
    "setLightFlareSize",
    "setLightIntensity",
    "setLightIR",
    "setLightnings",
    "setLightUseFlare",
    "setLightVolumeShape",
    "setLocalWindParams",
    "setMagazineTurretAmmo",
    "setMarkerAlpha",
    "setMarkerAlphaLocal",
    "setMarkerBrush",
    "setMarkerBrushLocal",
    "setMarkerColor",
    "setMarkerColorLocal",
    "setMarkerDir",
    "setMarkerDirLocal",
    "setMarkerPolyline",
    "setMarkerPolylineLocal",
    "setMarkerPos",
    "setMarkerPosLocal",
    "setMarkerShadow",
    "setMarkerShadowLocal",
    "setMarkerShape",
    "setMarkerShapeLocal",
    "setMarkerSize",
    "setMarkerSizeLocal",
    "setMarkerText",
    "setMarkerTextLocal",
    "setMarkerType",
    "setMarkerTypeLocal",
    "setMass",
    "setMaxLoad",
    "setMimic",
    "setMissileTarget",
    "setMissileTargetPos",
    "setMousePosition",
    "setMusicEffect",
    "setMusicEventHandler",
    "setName",
    "setNameSound",
    "setObjectArguments",
    "setObjectMaterial",
    "setObjectMaterialGlobal",
    "setObjectProxy",
    "setObjectScale",
    "setObjectTexture",
    "setObjectTextureGlobal",
    "setObjectViewDistance",
    "setOpticsMode",
    "setOvercast",
    "setOwner",
    "setOxygenRemaining",
    "setParticleCircle",
    "setParticleClass",
    "setParticleFire",
    "setParticleParams",
    "setParticleRandom",
    "setPilotCameraDirection",
    "setPilotCameraRotation",
    "setPilotCameraTarget",
    "setPilotLight",
    "setPiPEffect",
    "setPiPViewDistance",
    "setPitch",
    "setPlateNumber",
    "setPlayable",
    "setPlayerRespawnTime",
    "setPlayerVoNVolume",
    "setPos",
    "setPosASL",
    "setPosASL2",
    "setPosASLW",
    "setPosATL",
    "setPosition",
    "setPosWorld",
    "setPylonLoadout",
    "setPylonsPriority",
    "setRadioMsg",
    "setRain",
    "setRainbow",
    "setRandomLip",
    "setRank",
    "setRectangular",
    "setRepairCargo",
    "setRotorBrakeRTD",
    "setShadowDistance",
    "setShotParents",
    "setSide",
    "setSimpleTaskAlwaysVisible",
    "setSimpleTaskCustomData",
    "setSimpleTaskDescription",
    "setSimpleTaskDestination",
    "setSimpleTaskTarget",
    "setSimpleTaskType",
    "setSimulWeatherLayers",
    "setSize",
    "setSkill",
    "setSlingLoad",
    "setSoundEffect",
    "setSpeaker",
    "setSpeech",
    "setSpeedMode",
    "setStamina",
    "setStaminaScheme",
    "setStatValue",
    "setSuppression",
    "setSystemOfUnits",
    "setTargetAge",
    "setTaskMarkerOffset",
    "setTaskResult",
    "setTaskState",
    "setTerrainGrid",
    "setTerrainHeight",
    "setText",
    "setTimeMultiplier",
    "setTiParameter",
    "setTitleEffect",
    "setTowParent",
    "setTrafficDensity",
    "setTrafficDistance",
    "setTrafficGap",
    "setTrafficSpeed",
    "setTriggerActivation",
    "setTriggerArea",
    "setTriggerInterval",
    "setTriggerStatements",
    "setTriggerText",
    "setTriggerTimeout",
    "setTriggerType",
    "setTurretLimits",
    "setTurretOpticsMode",
    "setType",
    "setUnconscious",
    "setUnitAbility",
    "setUnitCombatMode",
    "setUnitFreefallHeight",
    "setUnitLoadout",
    "setUnitPos",
    "setUnitPosWeak",
    "setUnitRank",
    "setUnitRecoilCoefficient",
    "setUnitTrait",
    "setUnloadInCombat",
    "setUserActionText",
    "setUserMFDText",
    "setUserMFDValue",
    "setVariable",
    "setVectorDir",
    "setVectorDirAndUp",
    "setVectorUp",
    "setVehicleAmmo",
    "setVehicleAmmoDef",
    "setVehicleArmor",
    "setVehicleCargo",
    "setVehicleId",
    "setVehicleLock",
    "setVehiclePosition",
    "setVehicleRadar",
    "setVehicleReceiveRemoteTargets",
    "setVehicleReportOwnPosition",
    "setVehicleReportRemoteTargets",
    "setVehicleTiPars",
    "setVehicleVarName",
    "setVelocity",
    "setVelocityModelSpace",
    "setVelocityTransformation",
    "setViewDistance",
    "setVisibleIfTreeCollapsed",
    "setWantedRPMRTD",
    "setWaves",
    "setWaypointBehaviour",
    "setWaypointCombatMode",
    "setWaypointCompletionRadius",
    "setWaypointDescription",
    "setWaypointForceBehaviour",
    "setWaypointFormation",
    "setWaypointHousePosition",
    "setWaypointLoiterAltitude",
    "setWaypointLoiterRadius",
    "setWaypointLoiterType",
    "setWaypointName",
    "setWaypointPosition",
    "setWaypointScript",
    "setWaypointSpeed",
    "setWaypointStatements",
    "setWaypointTimeout",
    "setWaypointType",
    "setWaypointVisible",
    "setWeaponReloadingTime",
    "setWeaponZeroing",
    "setWind",
    "setWindDir",
    "setWindForce",
    "setWindStr",
    "setWingForceScaleRTD",
    "setWPPos",
    "show3DIcons",
    "showChat",
    "showCinemaBorder",
    "showCommandingMenu",
    "showCompass",
    "showCuratorCompass",
    "showGps",
    "showHUD",
    "showLegend",
    "showMap",
    "shownArtilleryComputer",
    "shownChat",
    "shownCompass",
    "shownCuratorCompass",
    "showNewEditorObject",
    "shownGps",
    "shownHUD",
    "shownMap",
    "shownPad",
    "shownRadio",
    "shownScoretable",
    "shownSubtitles",
    "shownUAVFeed",
    "shownWarrant",
    "shownWatch",
    "showPad",
    "showRadio",
    "showScoretable",
    "showSubtitles",
    "showUAVFeed",
    "showWarrant",
    "showWatch",
    "showWaypoint",
    "showWaypoints",
    "side",
    "sideChat",
    "sideRadio",
    "simpleTasks",
    "simulationEnabled",
    "simulCloudDensity",
    "simulCloudOcclusion",
    "simulInClouds",
    "simulWeatherSync",
    "sin",
    "size",
    "sizeOf",
    "skill",
    "skillFinal",
    "skipTime",
    "sleep",
    "sliderPosition",
    "sliderRange",
    "sliderSetPosition",
    "sliderSetRange",
    "sliderSetSpeed",
    "sliderSpeed",
    "slingLoadAssistantShown",
    "soldierMagazines",
    "someAmmo",
    "sort",
    "soundVolume",
    "spawn",
    "speaker",
    "speechVolume",
    "speed",
    "speedMode",
    "splitString",
    "sqrt",
    "squadParams",
    "stance",
    "startLoadingScreen",
    "stop",
    "stopEngineRTD",
    "stopped",
    "str",
    "sunOrMoon",
    "supportInfo",
    "suppressFor",
    "surfaceIsWater",
    "surfaceNormal",
    "surfaceTexture",
    "surfaceType",
    "swimInDepth",
    "switchableUnits",
    "switchAction",
    "switchCamera",
    "switchGesture",
    "switchLight",
    "switchMove",
    "synchronizedObjects",
    "synchronizedTriggers",
    "synchronizedWaypoints",
    "synchronizeObjectsAdd",
    "synchronizeObjectsRemove",
    "synchronizeTrigger",
    "synchronizeWaypoint",
    "systemChat",
    "systemOfUnits",
    "systemTime",
    "systemTimeUTC",
    "tan",
    "targetKnowledge",
    "targets",
    "targetsAggregate",
    "targetsQuery",
    "taskAlwaysVisible",
    "taskChildren",
    "taskCompleted",
    "taskCustomData",
    "taskDescription",
    "taskDestination",
    "taskHint",
    "taskMarkerOffset",
    "taskName",
    "taskParent",
    "taskResult",
    "taskState",
    "taskType",
    "teamMember",
    "teamName",
    "teams",
    "teamSwitch",
    "teamSwitchEnabled",
    "teamType",
    "terminate",
    "terrainIntersect",
    "terrainIntersectASL",
    "terrainIntersectAtASL",
    "text",
    "textLog",
    "textLogFormat",
    "tg",
    "time",
    "timeMultiplier",
    "titleCut",
    "titleFadeOut",
    "titleObj",
    "titleRsc",
    "titleText",
    "toArray",
    "toFixed",
    "toLower",
    "toLowerANSI",
    "toString",
    "toUpper",
    "toUpperANSI",
    "triggerActivated",
    "triggerActivation",
    "triggerAmmo",
    "triggerArea",
    "triggerAttachedVehicle",
    "triggerAttachObject",
    "triggerAttachVehicle",
    "triggerDynamicSimulation",
    "triggerInterval",
    "triggerStatements",
    "triggerText",
    "triggerTimeout",
    "triggerTimeoutCurrent",
    "triggerType",
    "trim",
    "turretLocal",
    "turretOwner",
    "turretUnit",
    "tvAdd",
    "tvClear",
    "tvCollapse",
    "tvCollapseAll",
    "tvCount",
    "tvCurSel",
    "tvData",
    "tvDelete",
    "tvExpand",
    "tvExpandAll",
    "tvIsSelected",
    "tvPicture",
    "tvPictureRight",
    "tvSelection",
    "tvSetColor",
    "tvSetCurSel",
    "tvSetData",
    "tvSetPicture",
    "tvSetPictureColor",
    "tvSetPictureColorDisabled",
    "tvSetPictureColorSelected",
    "tvSetPictureRight",
    "tvSetPictureRightColor",
    "tvSetPictureRightColorDisabled",
    "tvSetPictureRightColorSelected",
    "tvSetSelectColor",
    "tvSetSelected",
    "tvSetText",
    "tvSetTooltip",
    "tvSetValue",
    "tvSort",
    "tvSortAll",
    "tvSortByValue",
    "tvSortByValueAll",
    "tvText",
    "tvTooltip",
    "tvValue",
    "type",
    "typeName",
    "typeOf",
    "UAVControl",
    "uiNamespace",
    "uiSleep",
    "unassignCurator",
    "unassignItem",
    "unassignTeam",
    "unassignVehicle",
    "underwater",
    "uniform",
    "uniformContainer",
    "uniformItems",
    "uniformMagazines",
    "uniqueUnitItems",
    "unitAddons",
    "unitAimPosition",
    "unitAimPositionVisual",
    "unitBackpack",
    "unitCombatMode",
    "unitIsUAV",
    "unitPos",
    "unitReady",
    "unitRecoilCoefficient",
    "units",
    "unitsBelowHeight",
    "unitTurret",
    "unlinkItem",
    "unlockAchievement",
    "unregisterTask",
    "updateDrawIcon",
    "updateMenuItem",
    "updateObjectTree",
    "useAIOperMapObstructionTest",
    "useAISteeringComponent",
    "useAudioTimeForMoves",
    "userInputDisabled",
    "values",
    "vectorAdd",
    "vectorCos",
    "vectorCrossProduct",
    "vectorDiff",
    "vectorDir",
    "vectorDirVisual",
    "vectorDistance",
    "vectorDistanceSqr",
    "vectorDotProduct",
    "vectorFromTo",
    "vectorLinearConversion",
    "vectorMagnitude",
    "vectorMagnitudeSqr",
    "vectorModelToWorld",
    "vectorModelToWorldVisual",
    "vectorMultiply",
    "vectorNormalized",
    "vectorUp",
    "vectorUpVisual",
    "vectorWorldToModel",
    "vectorWorldToModelVisual",
    "vehicle",
    "vehicleCargoEnabled",
    "vehicleChat",
    "vehicleMoveInfo",
    "vehicleRadio",
    "vehicleReceiveRemoteTargets",
    "vehicleReportOwnPosition",
    "vehicleReportRemoteTargets",
    "vehicles",
    "vehicleVarName",
    "velocity",
    "velocityModelSpace",
    "verifySignature",
    "vest",
    "vestContainer",
    "vestItems",
    "vestMagazines",
    "viewDistance",
    "visibleCompass",
    "visibleGps",
    "visibleMap",
    "visiblePosition",
    "visiblePositionASL",
    "visibleScoretable",
    "visibleWatch",
    "waves",
    "waypointAttachedObject",
    "waypointAttachedVehicle",
    "waypointAttachObject",
    "waypointAttachVehicle",
    "waypointBehaviour",
    "waypointCombatMode",
    "waypointCompletionRadius",
    "waypointDescription",
    "waypointForceBehaviour",
    "waypointFormation",
    "waypointHousePosition",
    "waypointLoiterAltitude",
    "waypointLoiterRadius",
    "waypointLoiterType",
    "waypointName",
    "waypointPosition",
    "waypoints",
    "waypointScript",
    "waypointsEnabledUAV",
    "waypointShow",
    "waypointSpeed",
    "waypointStatements",
    "waypointTimeout",
    "waypointTimeoutCurrent",
    "waypointType",
    "waypointVisible",
    "weaponAccessories",
    "weaponAccessoriesCargo",
    "weaponCargo",
    "weaponDirection",
    "weaponInertia",
    "weaponLowered",
    "weaponReloadingTime",
    "weapons",
    "weaponsInfo",
    "weaponsItems",
    "weaponsItemsCargo",
    "weaponState",
    "weaponsTurret",
    "weightRTD",
    "WFSideText",
    "wind",
    "windDir",
    "windRTD",
    "windStr",
    "wingsForcesRTD",
    "worldName",
    "worldSize",
    "worldToModel",
    "worldToModelVisual",
    "worldToScreen"
  ], s = {
    className: "meta",
    begin: /#\s*[a-z]+\b/,
    end: /$/,
    keywords: "define undef ifdef ifndef else endif include if",
    contains: [
      {
        begin: /\\\n/,
        relevance: 0
      },
      t.inherit(n, { className: "string" }),
      {
        begin: /<[^\n>]*>/,
        end: /$/,
        illegal: "\\n"
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ]
  };
  return {
    name: "SQF",
    case_insensitive: !0,
    keywords: {
      keyword: a,
      built_in: o,
      literal: i
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.NUMBER_MODE,
      e,
      r,
      n,
      s
    ],
    illegal: [
      //$ is only valid when used with Hex numbers (e.g. $FF)
      /\$[^a-fA-F0-9]/,
      /\w\$/,
      /\?/,
      //There's no ? in SQF
      /@/,
      //There's no @ in SQF
      // Brute-force-fixing the build error. See https://github.com/highlightjs/highlight.js/pull/3193#issuecomment-843088729
      / \| /,
      // . is only used in numbers
      /[a-zA-Z_]\./,
      /\:\=/,
      /\[\:/
    ]
  };
}
const Qie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ate
}, Symbol.toStringTag, { value: "Module" }));
function ite(t) {
  const e = t.regex, r = t.COMMENT("--", "$"), n = {
    scope: "string",
    variants: [
      {
        begin: /'/,
        end: /'/,
        contains: [{ match: /''/ }]
      }
    ]
  }, a = {
    begin: /"/,
    end: /"/,
    contains: [{ match: /""/ }]
  }, i = [
    "true",
    "false",
    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.
    // "null",
    "unknown"
  ], o = [
    "double precision",
    "large object",
    "with timezone",
    "without timezone"
  ], s = [
    "bigint",
    "binary",
    "blob",
    "boolean",
    "char",
    "character",
    "clob",
    "date",
    "dec",
    "decfloat",
    "decimal",
    "float",
    "int",
    "integer",
    "interval",
    "nchar",
    "nclob",
    "national",
    "numeric",
    "real",
    "row",
    "smallint",
    "time",
    "timestamp",
    "varchar",
    "varying",
    // modifier (character varying)
    "varbinary"
  ], l = [
    "add",
    "asc",
    "collation",
    "desc",
    "final",
    "first",
    "last",
    "view"
  ], u = [
    "abs",
    "acos",
    "all",
    "allocate",
    "alter",
    "and",
    "any",
    "are",
    "array",
    "array_agg",
    "array_max_cardinality",
    "as",
    "asensitive",
    "asin",
    "asymmetric",
    "at",
    "atan",
    "atomic",
    "authorization",
    "avg",
    "begin",
    "begin_frame",
    "begin_partition",
    "between",
    "bigint",
    "binary",
    "blob",
    "boolean",
    "both",
    "by",
    "call",
    "called",
    "cardinality",
    "cascaded",
    "case",
    "cast",
    "ceil",
    "ceiling",
    "char",
    "char_length",
    "character",
    "character_length",
    "check",
    "classifier",
    "clob",
    "close",
    "coalesce",
    "collate",
    "collect",
    "column",
    "commit",
    "condition",
    "connect",
    "constraint",
    "contains",
    "convert",
    "copy",
    "corr",
    "corresponding",
    "cos",
    "cosh",
    "count",
    "covar_pop",
    "covar_samp",
    "create",
    "cross",
    "cube",
    "cume_dist",
    "current",
    "current_catalog",
    "current_date",
    "current_default_transform_group",
    "current_path",
    "current_role",
    "current_row",
    "current_schema",
    "current_time",
    "current_timestamp",
    "current_path",
    "current_role",
    "current_transform_group_for_type",
    "current_user",
    "cursor",
    "cycle",
    "date",
    "day",
    "deallocate",
    "dec",
    "decimal",
    "decfloat",
    "declare",
    "default",
    "define",
    "delete",
    "dense_rank",
    "deref",
    "describe",
    "deterministic",
    "disconnect",
    "distinct",
    "double",
    "drop",
    "dynamic",
    "each",
    "element",
    "else",
    "empty",
    "end",
    "end_frame",
    "end_partition",
    "end-exec",
    "equals",
    "escape",
    "every",
    "except",
    "exec",
    "execute",
    "exists",
    "exp",
    "external",
    "extract",
    "false",
    "fetch",
    "filter",
    "first_value",
    "float",
    "floor",
    "for",
    "foreign",
    "frame_row",
    "free",
    "from",
    "full",
    "function",
    "fusion",
    "get",
    "global",
    "grant",
    "group",
    "grouping",
    "groups",
    "having",
    "hold",
    "hour",
    "identity",
    "in",
    "indicator",
    "initial",
    "inner",
    "inout",
    "insensitive",
    "insert",
    "int",
    "integer",
    "intersect",
    "intersection",
    "interval",
    "into",
    "is",
    "join",
    "json_array",
    "json_arrayagg",
    "json_exists",
    "json_object",
    "json_objectagg",
    "json_query",
    "json_table",
    "json_table_primitive",
    "json_value",
    "lag",
    "language",
    "large",
    "last_value",
    "lateral",
    "lead",
    "leading",
    "left",
    "like",
    "like_regex",
    "listagg",
    "ln",
    "local",
    "localtime",
    "localtimestamp",
    "log",
    "log10",
    "lower",
    "match",
    "match_number",
    "match_recognize",
    "matches",
    "max",
    "member",
    "merge",
    "method",
    "min",
    "minute",
    "mod",
    "modifies",
    "module",
    "month",
    "multiset",
    "national",
    "natural",
    "nchar",
    "nclob",
    "new",
    "no",
    "none",
    "normalize",
    "not",
    "nth_value",
    "ntile",
    "null",
    "nullif",
    "numeric",
    "octet_length",
    "occurrences_regex",
    "of",
    "offset",
    "old",
    "omit",
    "on",
    "one",
    "only",
    "open",
    "or",
    "order",
    "out",
    "outer",
    "over",
    "overlaps",
    "overlay",
    "parameter",
    "partition",
    "pattern",
    "per",
    "percent",
    "percent_rank",
    "percentile_cont",
    "percentile_disc",
    "period",
    "portion",
    "position",
    "position_regex",
    "power",
    "precedes",
    "precision",
    "prepare",
    "primary",
    "procedure",
    "ptf",
    "range",
    "rank",
    "reads",
    "real",
    "recursive",
    "ref",
    "references",
    "referencing",
    "regr_avgx",
    "regr_avgy",
    "regr_count",
    "regr_intercept",
    "regr_r2",
    "regr_slope",
    "regr_sxx",
    "regr_sxy",
    "regr_syy",
    "release",
    "result",
    "return",
    "returns",
    "revoke",
    "right",
    "rollback",
    "rollup",
    "row",
    "row_number",
    "rows",
    "running",
    "savepoint",
    "scope",
    "scroll",
    "search",
    "second",
    "seek",
    "select",
    "sensitive",
    "session_user",
    "set",
    "show",
    "similar",
    "sin",
    "sinh",
    "skip",
    "smallint",
    "some",
    "specific",
    "specifictype",
    "sql",
    "sqlexception",
    "sqlstate",
    "sqlwarning",
    "sqrt",
    "start",
    "static",
    "stddev_pop",
    "stddev_samp",
    "submultiset",
    "subset",
    "substring",
    "substring_regex",
    "succeeds",
    "sum",
    "symmetric",
    "system",
    "system_time",
    "system_user",
    "table",
    "tablesample",
    "tan",
    "tanh",
    "then",
    "time",
    "timestamp",
    "timezone_hour",
    "timezone_minute",
    "to",
    "trailing",
    "translate",
    "translate_regex",
    "translation",
    "treat",
    "trigger",
    "trim",
    "trim_array",
    "true",
    "truncate",
    "uescape",
    "union",
    "unique",
    "unknown",
    "unnest",
    "update",
    "upper",
    "user",
    "using",
    "value",
    "values",
    "value_of",
    "var_pop",
    "var_samp",
    "varbinary",
    "varchar",
    "varying",
    "versioning",
    "when",
    "whenever",
    "where",
    "width_bucket",
    "window",
    "with",
    "within",
    "without",
    "year"
  ], c = [
    "abs",
    "acos",
    "array_agg",
    "asin",
    "atan",
    "avg",
    "cast",
    "ceil",
    "ceiling",
    "coalesce",
    "corr",
    "cos",
    "cosh",
    "count",
    "covar_pop",
    "covar_samp",
    "cume_dist",
    "dense_rank",
    "deref",
    "element",
    "exp",
    "extract",
    "first_value",
    "floor",
    "json_array",
    "json_arrayagg",
    "json_exists",
    "json_object",
    "json_objectagg",
    "json_query",
    "json_table",
    "json_table_primitive",
    "json_value",
    "lag",
    "last_value",
    "lead",
    "listagg",
    "ln",
    "log",
    "log10",
    "lower",
    "max",
    "min",
    "mod",
    "nth_value",
    "ntile",
    "nullif",
    "percent_rank",
    "percentile_cont",
    "percentile_disc",
    "position",
    "position_regex",
    "power",
    "rank",
    "regr_avgx",
    "regr_avgy",
    "regr_count",
    "regr_intercept",
    "regr_r2",
    "regr_slope",
    "regr_sxx",
    "regr_sxy",
    "regr_syy",
    "row_number",
    "sin",
    "sinh",
    "sqrt",
    "stddev_pop",
    "stddev_samp",
    "substring",
    "substring_regex",
    "sum",
    "tan",
    "tanh",
    "translate",
    "translate_regex",
    "treat",
    "trim",
    "trim_array",
    "unnest",
    "upper",
    "value_of",
    "var_pop",
    "var_samp",
    "width_bucket"
  ], d = [
    "current_catalog",
    "current_date",
    "current_default_transform_group",
    "current_path",
    "current_role",
    "current_schema",
    "current_transform_group_for_type",
    "current_user",
    "session_user",
    "system_time",
    "system_user",
    "current_time",
    "localtime",
    "current_timestamp",
    "localtimestamp"
  ], p = [
    "create table",
    "insert into",
    "primary key",
    "foreign key",
    "not null",
    "alter table",
    "add constraint",
    "grouping sets",
    "on overflow",
    "character set",
    "respect nulls",
    "ignore nulls",
    "nulls first",
    "nulls last",
    "depth first",
    "breadth first"
  ], f = c, h = [
    ...u,
    ...l
  ].filter((S) => !c.includes(S)), g = {
    scope: "variable",
    match: /@[a-z0-9][a-z0-9_]*/
  }, v = {
    scope: "operator",
    match: /[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,
    relevance: 0
  }, m = {
    match: e.concat(/\b/, e.either(...f), /\s*\(/),
    relevance: 0,
    keywords: { built_in: f }
  };
  function _(S) {
    return e.concat(
      /\b/,
      e.either(...S.map((E) => E.replace(/\s+/, "\\s+"))),
      /\b/
    );
  }
  const y = {
    scope: "keyword",
    match: _(p),
    relevance: 0
  };
  function b(S, {
    exceptions: E,
    when: T
  } = {}) {
    const x = T;
    return E = E || [], S.map((C) => C.match(/\|\d+$/) || E.includes(C) ? C : x(C) ? `${C}|0` : C);
  }
  return {
    name: "SQL",
    case_insensitive: !0,
    // does not include {} or HTML tags `</`
    illegal: /[{}]|<\//,
    keywords: {
      $pattern: /\b[\w\.]+/,
      keyword: b(h, { when: (S) => S.length < 3 }),
      literal: i,
      type: s,
      built_in: d
    },
    contains: [
      {
        scope: "type",
        match: _(o)
      },
      y,
      m,
      g,
      n,
      a,
      t.C_NUMBER_MODE,
      t.C_BLOCK_COMMENT_MODE,
      r,
      v
    ]
  };
}
const jie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ite
}, Symbol.toStringTag, { value: "Module" }));
function ote(t) {
  const e = t.regex, r = [
    "functions",
    "model",
    "data",
    "parameters",
    "quantities",
    "transformed",
    "generated"
  ], n = [
    "for",
    "in",
    "if",
    "else",
    "while",
    "break",
    "continue",
    "return"
  ], a = [
    "array",
    "tuple",
    "complex",
    "int",
    "real",
    "vector",
    "complex_vector",
    "ordered",
    "positive_ordered",
    "simplex",
    "unit_vector",
    "row_vector",
    "complex_row_vector",
    "matrix",
    "complex_matrix",
    "cholesky_factor_corr|10",
    "cholesky_factor_cov|10",
    "corr_matrix|10",
    "cov_matrix|10",
    "void"
  ], i = [
    "abs",
    "acos",
    "acosh",
    "add_diag",
    "algebra_solver",
    "algebra_solver_newton",
    "append_array",
    "append_col",
    "append_row",
    "asin",
    "asinh",
    "atan",
    "atan2",
    "atanh",
    "bessel_first_kind",
    "bessel_second_kind",
    "binary_log_loss",
    "block",
    "cbrt",
    "ceil",
    "chol2inv",
    "cholesky_decompose",
    "choose",
    "col",
    "cols",
    "columns_dot_product",
    "columns_dot_self",
    "complex_schur_decompose",
    "complex_schur_decompose_t",
    "complex_schur_decompose_u",
    "conj",
    "cos",
    "cosh",
    "cov_exp_quad",
    "crossprod",
    "csr_extract",
    "csr_extract_u",
    "csr_extract_v",
    "csr_extract_w",
    "csr_matrix_times_vector",
    "csr_to_dense_matrix",
    "cumulative_sum",
    "dae",
    "dae_tol",
    "determinant",
    "diag_matrix",
    "diagonal",
    "diag_post_multiply",
    "diag_pre_multiply",
    "digamma",
    "dims",
    "distance",
    "dot_product",
    "dot_self",
    "eigendecompose",
    "eigendecompose_sym",
    "eigenvalues",
    "eigenvalues_sym",
    "eigenvectors",
    "eigenvectors_sym",
    "erf",
    "erfc",
    "exp",
    "exp2",
    "expm1",
    "falling_factorial",
    "fdim",
    "fft",
    "fft2",
    "floor",
    "fma",
    "fmax",
    "fmin",
    "fmod",
    "gamma_p",
    "gamma_q",
    "generalized_inverse",
    "get_imag",
    "get_real",
    "head",
    "hmm_hidden_state_prob",
    "hmm_marginal",
    "hypot",
    "identity_matrix",
    "inc_beta",
    "integrate_1d",
    "integrate_ode",
    "integrate_ode_adams",
    "integrate_ode_bdf",
    "integrate_ode_rk45",
    "int_step",
    "inv",
    "inv_cloglog",
    "inv_erfc",
    "inverse",
    "inverse_spd",
    "inv_fft",
    "inv_fft2",
    "inv_inc_beta",
    "inv_logit",
    "inv_Phi",
    "inv_sqrt",
    "inv_square",
    "is_inf",
    "is_nan",
    "lambert_w0",
    "lambert_wm1",
    "lbeta",
    "lchoose",
    "ldexp",
    "lgamma",
    "linspaced_array",
    "linspaced_int_array",
    "linspaced_row_vector",
    "linspaced_vector",
    "lmgamma",
    "lmultiply",
    "log",
    "log1m",
    "log1m_exp",
    "log1m_inv_logit",
    "log1p",
    "log1p_exp",
    "log_determinant",
    "log_diff_exp",
    "log_falling_factorial",
    "log_inv_logit",
    "log_inv_logit_diff",
    "logit",
    "log_mix",
    "log_modified_bessel_first_kind",
    "log_rising_factorial",
    "log_softmax",
    "log_sum_exp",
    "machine_precision",
    "map_rect",
    "matrix_exp",
    "matrix_exp_multiply",
    "matrix_power",
    "max",
    "mdivide_left_spd",
    "mdivide_left_tri_low",
    "mdivide_right_spd",
    "mdivide_right_tri_low",
    "mean",
    "min",
    "modified_bessel_first_kind",
    "modified_bessel_second_kind",
    "multiply_lower_tri_self_transpose",
    "negative_infinity",
    "norm",
    "norm1",
    "norm2",
    "not_a_number",
    "num_elements",
    "ode_adams",
    "ode_adams_tol",
    "ode_adjoint_tol_ctl",
    "ode_bdf",
    "ode_bdf_tol",
    "ode_ckrk",
    "ode_ckrk_tol",
    "ode_rk45",
    "ode_rk45_tol",
    "one_hot_array",
    "one_hot_int_array",
    "one_hot_row_vector",
    "one_hot_vector",
    "ones_array",
    "ones_int_array",
    "ones_row_vector",
    "ones_vector",
    "owens_t",
    "Phi",
    "Phi_approx",
    "polar",
    "positive_infinity",
    "pow",
    "print",
    "prod",
    "proj",
    "qr",
    "qr_Q",
    "qr_R",
    "qr_thin",
    "qr_thin_Q",
    "qr_thin_R",
    "quad_form",
    "quad_form_diag",
    "quad_form_sym",
    "quantile",
    "rank",
    "reduce_sum",
    "reject",
    "rep_array",
    "rep_matrix",
    "rep_row_vector",
    "rep_vector",
    "reverse",
    "rising_factorial",
    "round",
    "row",
    "rows",
    "rows_dot_product",
    "rows_dot_self",
    "scale_matrix_exp_multiply",
    "sd",
    "segment",
    "sin",
    "singular_values",
    "sinh",
    "size",
    "softmax",
    "sort_asc",
    "sort_desc",
    "sort_indices_asc",
    "sort_indices_desc",
    "sqrt",
    "square",
    "squared_distance",
    "step",
    "sub_col",
    "sub_row",
    "sum",
    "svd",
    "svd_U",
    "svd_V",
    "symmetrize_from_lower_tri",
    "tail",
    "tan",
    "tanh",
    "target",
    "tcrossprod",
    "tgamma",
    "to_array_1d",
    "to_array_2d",
    "to_complex",
    "to_int",
    "to_matrix",
    "to_row_vector",
    "to_vector",
    "trace",
    "trace_gen_quad_form",
    "trace_quad_form",
    "trigamma",
    "trunc",
    "uniform_simplex",
    "variance",
    "zeros_array",
    "zeros_int_array",
    "zeros_row_vector"
  ], o = [
    "bernoulli",
    "bernoulli_logit",
    "bernoulli_logit_glm",
    "beta",
    "beta_binomial",
    "beta_proportion",
    "binomial",
    "binomial_logit",
    "categorical",
    "categorical_logit",
    "categorical_logit_glm",
    "cauchy",
    "chi_square",
    "dirichlet",
    "discrete_range",
    "double_exponential",
    "exp_mod_normal",
    "exponential",
    "frechet",
    "gamma",
    "gaussian_dlm_obs",
    "gumbel",
    "hmm_latent",
    "hypergeometric",
    "inv_chi_square",
    "inv_gamma",
    "inv_wishart",
    "inv_wishart_cholesky",
    "lkj_corr",
    "lkj_corr_cholesky",
    "logistic",
    "loglogistic",
    "lognormal",
    "multi_gp",
    "multi_gp_cholesky",
    "multinomial",
    "multinomial_logit",
    "multi_normal",
    "multi_normal_cholesky",
    "multi_normal_prec",
    "multi_student_cholesky_t",
    "multi_student_t",
    "multi_student_t_cholesky",
    "neg_binomial",
    "neg_binomial_2",
    "neg_binomial_2_log",
    "neg_binomial_2_log_glm",
    "normal",
    "normal_id_glm",
    "ordered_logistic",
    "ordered_logistic_glm",
    "ordered_probit",
    "pareto",
    "pareto_type_2",
    "poisson",
    "poisson_log",
    "poisson_log_glm",
    "rayleigh",
    "scaled_inv_chi_square",
    "skew_double_exponential",
    "skew_normal",
    "std_normal",
    "std_normal_log",
    "student_t",
    "uniform",
    "von_mises",
    "weibull",
    "wiener",
    "wishart",
    "wishart_cholesky"
  ], s = t.COMMENT(
    /\/\*/,
    /\*\//,
    {
      relevance: 0,
      contains: [
        {
          scope: "doctag",
          match: /@(return|param)/
        }
      ]
    }
  ), l = {
    scope: "meta",
    begin: /#include\b/,
    end: /$/,
    contains: [
      {
        match: /[a-z][a-z-._]+/,
        scope: "string"
      },
      t.C_LINE_COMMENT_MODE
    ]
  }, u = [
    "lower",
    "upper",
    "offset",
    "multiplier"
  ];
  return {
    name: "Stan",
    aliases: ["stanfuncs"],
    keywords: {
      $pattern: t.IDENT_RE,
      title: r,
      type: a,
      keyword: n,
      built_in: i
    },
    contains: [
      t.C_LINE_COMMENT_MODE,
      l,
      t.HASH_COMMENT_MODE,
      s,
      {
        scope: "built_in",
        match: /\s(pi|e|sqrt2|log2|log10)(?=\()/,
        relevance: 0
      },
      {
        match: e.concat(/[<,]\s*/, e.either(...u), /\s*=/),
        keywords: u
      },
      {
        scope: "keyword",
        match: /\btarget(?=\s*\+=)/
      },
      {
        // highlights the 'T' in T[,] for only Stan language distributrions
        match: [
          /~\s*/,
          e.either(...o),
          /(?:\(\))/,
          /\s*T(?=\s*\[)/
        ],
        scope: {
          2: "built_in",
          4: "keyword"
        }
      },
      {
        // highlights distributions that end with special endings
        scope: "built_in",
        keywords: o,
        begin: e.concat(/\w*/, e.either(...o), /(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\s*[\(.*\)])/)
      },
      {
        // highlights distributions after ~
        begin: [
          /~/,
          /\s*/,
          e.concat(e.either(...o), /(?=\s*[\(.*\)])/)
        ],
        scope: { 3: "built_in" }
      },
      {
        // highlights user defined distributions after ~
        begin: [
          /~/,
          /\s*\w+(?=\s*[\(.*\)])/,
          "(?!.*/\b(" + e.either(...o) + ")\b)"
        ],
        scope: { 2: "title.function" }
      },
      {
        // highlights user defined distributions with special endings
        scope: "title.function",
        begin: /\w*(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\s*[\(.*\)])/
      },
      {
        scope: "number",
        match: e.concat(
          // Comes from @RunDevelopment accessed 11/29/2021 at
          // https://github.com/PrismJS/prism/blob/c53ad2e65b7193ab4f03a1797506a54bbb33d5a2/components/prism-stan.js#L56
          // start of big noncapture group which
          // 1. gets numbers that are by themselves
          // 2. numbers that are separated by _
          // 3. numbers that are separted by .
          /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)/,
          // grabs scientific notation
          // grabs complex numbers with i
          /(?:[eE][+-]?\d+(?:_\d+)*)?i?(?!\w)/
        ),
        relevance: 0
      },
      {
        scope: "string",
        begin: /"/,
        end: /"/
      }
    ]
  };
}
const Jie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ote
}, Symbol.toStringTag, { value: "Module" }));
function ste(t) {
  return {
    name: "Stata",
    aliases: [
      "do",
      "ado"
    ],
    case_insensitive: !0,
    keywords: "if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey bias binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 bubble bubbleplot ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error esize est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 forest forestplot form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate funnel funnelplot g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labbe labbeplot labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize menl meqparse mer merg merge meta mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trimfill trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5",
    contains: [
      {
        className: "symbol",
        begin: /`[a-zA-Z0-9_]+'/
      },
      {
        className: "variable",
        begin: /\$\{?[a-zA-Z0-9_]+\}?/,
        relevance: 0
      },
      {
        className: "string",
        variants: [
          { begin: `\`"[^\r
]*?"'` },
          { begin: `"[^\r
"]*"` }
        ]
      },
      {
        className: "built_in",
        variants: [{ begin: "\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\()" }]
      },
      t.COMMENT("^[ 	]*\\*.*$", !1),
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE
    ]
  };
}
const eoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ste
}, Symbol.toStringTag, { value: "Module" }));
function lte(t) {
  return {
    name: "STEP Part 21",
    aliases: [
      "p21",
      "step",
      "stp"
    ],
    case_insensitive: !0,
    // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.
    keywords: {
      $pattern: "[A-Z_][A-Z0-9_.]*",
      keyword: [
        "HEADER",
        "ENDSEC",
        "DATA"
      ]
    },
    contains: [
      {
        className: "meta",
        begin: "ISO-10303-21;",
        relevance: 10
      },
      {
        className: "meta",
        begin: "END-ISO-10303-21;",
        relevance: 10
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      t.COMMENT("/\\*\\*!", "\\*/"),
      t.C_NUMBER_MODE,
      t.inherit(t.APOS_STRING_MODE, { illegal: null }),
      t.inherit(t.QUOTE_STRING_MODE, { illegal: null }),
      {
        className: "string",
        begin: "'",
        end: "'"
      },
      {
        className: "symbol",
        variants: [
          {
            begin: "#",
            end: "\\d+",
            illegal: "\\W"
          }
        ]
      }
    ]
  };
}
const toe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lte
}, Symbol.toStringTag, { value: "Module" })), ute = (t) => ({
  IMPORTANT: {
    scope: "meta",
    begin: "!important"
  },
  BLOCK_COMMENT: t.C_BLOCK_COMMENT_MODE,
  HEXCOLOR: {
    scope: "number",
    begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
  },
  FUNCTION_DISPATCH: {
    className: "built_in",
    begin: /[\w-]+(?=\()/
  },
  ATTRIBUTE_SELECTOR_MODE: {
    scope: "selector-attr",
    begin: /\[/,
    end: /\]/,
    illegal: "$",
    contains: [
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE
    ]
  },
  CSS_NUMBER_MODE: {
    scope: "number",
    begin: t.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
    relevance: 0
  },
  CSS_VARIABLE: {
    className: "attr",
    begin: /--[A-Za-z_][A-Za-z0-9_-]*/
  }
}), cte = [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "audio",
  "b",
  "blockquote",
  "body",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "dd",
  "del",
  "details",
  "dfn",
  "div",
  "dl",
  "dt",
  "em",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "header",
  "hgroup",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "mark",
  "menu",
  "nav",
  "object",
  "ol",
  "optgroup",
  "option",
  "p",
  "picture",
  "q",
  "quote",
  "samp",
  "section",
  "select",
  "source",
  "span",
  "strong",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "tr",
  "ul",
  "var",
  "video"
], dte = [
  "defs",
  "g",
  "marker",
  "mask",
  "pattern",
  "svg",
  "switch",
  "symbol",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feFlood",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMorphology",
  "feOffset",
  "feSpecularLighting",
  "feTile",
  "feTurbulence",
  "linearGradient",
  "radialGradient",
  "stop",
  "circle",
  "ellipse",
  "image",
  "line",
  "path",
  "polygon",
  "polyline",
  "rect",
  "text",
  "use",
  "textPath",
  "tspan",
  "foreignObject",
  "clipPath"
], pte = [
  ...cte,
  ...dte
], fte = [
  "any-hover",
  "any-pointer",
  "aspect-ratio",
  "color",
  "color-gamut",
  "color-index",
  "device-aspect-ratio",
  "device-height",
  "device-width",
  "display-mode",
  "forced-colors",
  "grid",
  "height",
  "hover",
  "inverted-colors",
  "monochrome",
  "orientation",
  "overflow-block",
  "overflow-inline",
  "pointer",
  "prefers-color-scheme",
  "prefers-contrast",
  "prefers-reduced-motion",
  "prefers-reduced-transparency",
  "resolution",
  "scan",
  "scripting",
  "update",
  "width",
  // TODO: find a better solution?
  "min-width",
  "max-width",
  "min-height",
  "max-height"
].sort().reverse(), hte = [
  "active",
  "any-link",
  "blank",
  "checked",
  "current",
  "default",
  "defined",
  "dir",
  // dir()
  "disabled",
  "drop",
  "empty",
  "enabled",
  "first",
  "first-child",
  "first-of-type",
  "fullscreen",
  "future",
  "focus",
  "focus-visible",
  "focus-within",
  "has",
  // has()
  "host",
  // host or host()
  "host-context",
  // host-context()
  "hover",
  "indeterminate",
  "in-range",
  "invalid",
  "is",
  // is()
  "lang",
  // lang()
  "last-child",
  "last-of-type",
  "left",
  "link",
  "local-link",
  "not",
  // not()
  "nth-child",
  // nth-child()
  "nth-col",
  // nth-col()
  "nth-last-child",
  // nth-last-child()
  "nth-last-col",
  // nth-last-col()
  "nth-last-of-type",
  //nth-last-of-type()
  "nth-of-type",
  //nth-of-type()
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "past",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "target",
  "target-within",
  "user-invalid",
  "valid",
  "visited",
  "where"
  // where()
].sort().reverse(), gte = [
  "after",
  "backdrop",
  "before",
  "cue",
  "cue-region",
  "first-letter",
  "first-line",
  "grammar-error",
  "marker",
  "part",
  "placeholder",
  "selection",
  "slotted",
  "spelling-error"
].sort().reverse(), vte = [
  "accent-color",
  "align-content",
  "align-items",
  "align-self",
  "alignment-baseline",
  "all",
  "anchor-name",
  "animation",
  "animation-composition",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-range",
  "animation-range-end",
  "animation-range-start",
  "animation-timeline",
  "animation-timing-function",
  "appearance",
  "aspect-ratio",
  "backdrop-filter",
  "backface-visibility",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-position-x",
  "background-position-y",
  "background-repeat",
  "background-size",
  "baseline-shift",
  "block-size",
  "border",
  "border-block",
  "border-block-color",
  "border-block-end",
  "border-block-end-color",
  "border-block-end-style",
  "border-block-end-width",
  "border-block-start",
  "border-block-start-color",
  "border-block-start-style",
  "border-block-start-width",
  "border-block-style",
  "border-block-width",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-style",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-end-end-radius",
  "border-end-start-radius",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "border-inline",
  "border-inline-color",
  "border-inline-end",
  "border-inline-end-color",
  "border-inline-end-style",
  "border-inline-end-width",
  "border-inline-start",
  "border-inline-start-color",
  "border-inline-start-style",
  "border-inline-start-width",
  "border-inline-style",
  "border-inline-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-spacing",
  "border-start-end-radius",
  "border-start-start-radius",
  "border-style",
  "border-top",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-style",
  "border-top-width",
  "border-width",
  "bottom",
  "box-align",
  "box-decoration-break",
  "box-direction",
  "box-flex",
  "box-flex-group",
  "box-lines",
  "box-ordinal-group",
  "box-orient",
  "box-pack",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "clip-path",
  "clip-rule",
  "color",
  "color-interpolation",
  "color-interpolation-filters",
  "color-profile",
  "color-rendering",
  "color-scheme",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-color",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "contain",
  "contain-intrinsic-block-size",
  "contain-intrinsic-height",
  "contain-intrinsic-inline-size",
  "contain-intrinsic-size",
  "contain-intrinsic-width",
  "container",
  "container-name",
  "container-type",
  "content",
  "content-visibility",
  "counter-increment",
  "counter-reset",
  "counter-set",
  "cue",
  "cue-after",
  "cue-before",
  "cursor",
  "cx",
  "cy",
  "direction",
  "display",
  "dominant-baseline",
  "empty-cells",
  "enable-background",
  "field-sizing",
  "fill",
  "fill-opacity",
  "fill-rule",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "flood-color",
  "flood-opacity",
  "flow",
  "font",
  "font-display",
  "font-family",
  "font-feature-settings",
  "font-kerning",
  "font-language-override",
  "font-optical-sizing",
  "font-palette",
  "font-size",
  "font-size-adjust",
  "font-smooth",
  "font-smoothing",
  "font-stretch",
  "font-style",
  "font-synthesis",
  "font-synthesis-position",
  "font-synthesis-small-caps",
  "font-synthesis-style",
  "font-synthesis-weight",
  "font-variant",
  "font-variant-alternates",
  "font-variant-caps",
  "font-variant-east-asian",
  "font-variant-emoji",
  "font-variant-ligatures",
  "font-variant-numeric",
  "font-variant-position",
  "font-variation-settings",
  "font-weight",
  "forced-color-adjust",
  "gap",
  "glyph-orientation-horizontal",
  "glyph-orientation-vertical",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "hanging-punctuation",
  "height",
  "hyphenate-character",
  "hyphenate-limit-chars",
  "hyphens",
  "icon",
  "image-orientation",
  "image-rendering",
  "image-resolution",
  "ime-mode",
  "initial-letter",
  "initial-letter-align",
  "inline-size",
  "inset",
  "inset-area",
  "inset-block",
  "inset-block-end",
  "inset-block-start",
  "inset-inline",
  "inset-inline-end",
  "inset-inline-start",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "kerning",
  "left",
  "letter-spacing",
  "lighting-color",
  "line-break",
  "line-height",
  "line-height-step",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-block",
  "margin-block-end",
  "margin-block-start",
  "margin-bottom",
  "margin-inline",
  "margin-inline-end",
  "margin-inline-start",
  "margin-left",
  "margin-right",
  "margin-top",
  "margin-trim",
  "marker",
  "marker-end",
  "marker-mid",
  "marker-start",
  "marks",
  "mask",
  "mask-border",
  "mask-border-mode",
  "mask-border-outset",
  "mask-border-repeat",
  "mask-border-slice",
  "mask-border-source",
  "mask-border-width",
  "mask-clip",
  "mask-composite",
  "mask-image",
  "mask-mode",
  "mask-origin",
  "mask-position",
  "mask-repeat",
  "mask-size",
  "mask-type",
  "masonry-auto-flow",
  "math-depth",
  "math-shift",
  "math-style",
  "max-block-size",
  "max-height",
  "max-inline-size",
  "max-width",
  "min-block-size",
  "min-height",
  "min-inline-size",
  "min-width",
  "mix-blend-mode",
  "nav-down",
  "nav-index",
  "nav-left",
  "nav-right",
  "nav-up",
  "none",
  "normal",
  "object-fit",
  "object-position",
  "offset",
  "offset-anchor",
  "offset-distance",
  "offset-path",
  "offset-position",
  "offset-rotate",
  "opacity",
  "order",
  "orphans",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-anchor",
  "overflow-block",
  "overflow-clip-margin",
  "overflow-inline",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "overlay",
  "overscroll-behavior",
  "overscroll-behavior-block",
  "overscroll-behavior-inline",
  "overscroll-behavior-x",
  "overscroll-behavior-y",
  "padding",
  "padding-block",
  "padding-block-end",
  "padding-block-start",
  "padding-bottom",
  "padding-inline",
  "padding-inline-end",
  "padding-inline-start",
  "padding-left",
  "padding-right",
  "padding-top",
  "page",
  "page-break-after",
  "page-break-before",
  "page-break-inside",
  "paint-order",
  "pause",
  "pause-after",
  "pause-before",
  "perspective",
  "perspective-origin",
  "place-content",
  "place-items",
  "place-self",
  "pointer-events",
  "position",
  "position-anchor",
  "position-visibility",
  "print-color-adjust",
  "quotes",
  "r",
  "resize",
  "rest",
  "rest-after",
  "rest-before",
  "right",
  "rotate",
  "row-gap",
  "ruby-align",
  "ruby-position",
  "scale",
  "scroll-behavior",
  "scroll-margin",
  "scroll-margin-block",
  "scroll-margin-block-end",
  "scroll-margin-block-start",
  "scroll-margin-bottom",
  "scroll-margin-inline",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding",
  "scroll-padding-block",
  "scroll-padding-block-end",
  "scroll-padding-block-start",
  "scroll-padding-bottom",
  "scroll-padding-inline",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "scroll-timeline",
  "scroll-timeline-axis",
  "scroll-timeline-name",
  "scrollbar-color",
  "scrollbar-gutter",
  "scrollbar-width",
  "shape-image-threshold",
  "shape-margin",
  "shape-outside",
  "shape-rendering",
  "speak",
  "speak-as",
  "src",
  // @font-face
  "stop-color",
  "stop-opacity",
  "stroke",
  "stroke-dasharray",
  "stroke-dashoffset",
  "stroke-linecap",
  "stroke-linejoin",
  "stroke-miterlimit",
  "stroke-opacity",
  "stroke-width",
  "tab-size",
  "table-layout",
  "text-align",
  "text-align-all",
  "text-align-last",
  "text-anchor",
  "text-combine-upright",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-skip",
  "text-decoration-skip-ink",
  "text-decoration-style",
  "text-decoration-thickness",
  "text-emphasis",
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-rendering",
  "text-shadow",
  "text-size-adjust",
  "text-transform",
  "text-underline-offset",
  "text-underline-position",
  "text-wrap",
  "text-wrap-mode",
  "text-wrap-style",
  "timeline-scope",
  "top",
  "touch-action",
  "transform",
  "transform-box",
  "transform-origin",
  "transform-style",
  "transition",
  "transition-behavior",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "translate",
  "unicode-bidi",
  "user-modify",
  "user-select",
  "vector-effect",
  "vertical-align",
  "view-timeline",
  "view-timeline-axis",
  "view-timeline-inset",
  "view-timeline-name",
  "view-transition-name",
  "visibility",
  "voice-balance",
  "voice-duration",
  "voice-family",
  "voice-pitch",
  "voice-range",
  "voice-rate",
  "voice-stress",
  "voice-volume",
  "white-space",
  "white-space-collapse",
  "widows",
  "width",
  "will-change",
  "word-break",
  "word-spacing",
  "word-wrap",
  "writing-mode",
  "x",
  "y",
  "z-index",
  "zoom"
].sort().reverse();
function mte(t) {
  const e = ute(t), r = "and or not only", n = {
    className: "variable",
    begin: "\\$" + t.IDENT_RE
  }, a = [
    "charset",
    "css",
    "debug",
    "extend",
    "font-face",
    "for",
    "import",
    "include",
    "keyframes",
    "media",
    "mixin",
    "page",
    "warn",
    "while"
  ], i = "(?=[.\\s\\n[:,(])";
  return {
    name: "Stylus",
    aliases: ["styl"],
    case_insensitive: !1,
    keywords: "if else for in",
    illegal: "(" + [
      "\\?",
      "(\\bReturn\\b)",
      // monkey
      "(\\bEnd\\b)",
      // monkey
      "(\\bend\\b)",
      // vbscript
      "(\\bdef\\b)",
      // gradle
      ";",
      // a whole lot of languages
      "#\\s",
      // markdown
      "\\*\\s",
      // markdown
      "===\\s",
      // markdown
      "\\|",
      "%"
      // prolog
    ].join("|") + ")",
    contains: [
      // strings
      t.QUOTE_STRING_MODE,
      t.APOS_STRING_MODE,
      // comments
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      // hex colors
      e.HEXCOLOR,
      // class tag
      {
        begin: "\\.[a-zA-Z][a-zA-Z0-9_-]*" + i,
        className: "selector-class"
      },
      // id tag
      {
        begin: "#[a-zA-Z][a-zA-Z0-9_-]*" + i,
        className: "selector-id"
      },
      // tags
      {
        begin: "\\b(" + pte.join("|") + ")" + i,
        className: "selector-tag"
      },
      // psuedo selectors
      {
        className: "selector-pseudo",
        begin: "&?:(" + hte.join("|") + ")" + i
      },
      {
        className: "selector-pseudo",
        begin: "&?:(:)?(" + gte.join("|") + ")" + i
      },
      e.ATTRIBUTE_SELECTOR_MODE,
      {
        className: "keyword",
        begin: /@media/,
        starts: {
          end: /[{;}]/,
          keywords: {
            $pattern: /[a-z-]+/,
            keyword: r,
            attribute: fte.join(" ")
          },
          contains: [e.CSS_NUMBER_MODE]
        }
      },
      // @ keywords
      {
        className: "keyword",
        begin: "@((-(o|moz|ms|webkit)-)?(" + a.join("|") + "))\\b"
      },
      // variables
      n,
      // dimension
      e.CSS_NUMBER_MODE,
      // functions
      //  - only from beginning of line + whitespace
      {
        className: "function",
        begin: "^[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)",
        illegal: "[\\n]",
        returnBegin: !0,
        contains: [
          {
            className: "title",
            begin: "\\b[a-zA-Z][a-zA-Z0-9_-]*"
          },
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            contains: [
              e.HEXCOLOR,
              n,
              t.APOS_STRING_MODE,
              e.CSS_NUMBER_MODE,
              t.QUOTE_STRING_MODE
            ]
          }
        ]
      },
      // css variables
      e.CSS_VARIABLE,
      // attributes
      //  - only from beginning of line + whitespace
      //  - must have whitespace after it
      {
        className: "attribute",
        begin: "\\b(" + vte.join("|") + ")\\b",
        starts: {
          // value container
          end: /;|$/,
          contains: [
            e.HEXCOLOR,
            n,
            t.APOS_STRING_MODE,
            t.QUOTE_STRING_MODE,
            e.CSS_NUMBER_MODE,
            t.C_BLOCK_COMMENT_MODE,
            e.IMPORTANT,
            e.FUNCTION_DISPATCH
          ],
          illegal: /\./,
          relevance: 0
        }
      },
      e.FUNCTION_DISPATCH
    ]
  };
}
const roe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: mte
}, Symbol.toStringTag, { value: "Module" }));
function _te(t) {
  return {
    name: "SubUnit",
    case_insensitive: !0,
    contains: [
      {
        className: "string",
        begin: `\\[
(multipart)?`,
        end: `\\]
`
      },
      {
        className: "string",
        begin: "\\d{4}-\\d{2}-\\d{2}(\\s+)\\d{2}:\\d{2}:\\d{2}.\\d+Z"
      },
      {
        className: "string",
        begin: "(\\+|-)\\d+"
      },
      {
        className: "keyword",
        relevance: 10,
        variants: [
          { begin: "^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\s+(test)?" },
          { begin: "^progress(:?)(\\s+)?(pop|push)?" },
          { begin: "^tags:" },
          { begin: "^time:" }
        ]
      }
    ]
  };
}
const noe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _te
}, Symbol.toStringTag, { value: "Module" }));
function aL(t) {
  return t ? typeof t == "string" ? t : t.source : null;
}
function Sl(t) {
  return tt("(?=", t, ")");
}
function tt(...t) {
  return t.map((r) => aL(r)).join("");
}
function yte(t) {
  const e = t[t.length - 1];
  return typeof e == "object" && e.constructor === Object ? (t.splice(t.length - 1, 1), e) : {};
}
function jt(...t) {
  return "(" + (yte(t).capture ? "" : "?:") + t.map((n) => aL(n)).join("|") + ")";
}
const Wb = (t) => tt(
  /\b/,
  t,
  /\w$/.test(t) ? /\b/ : /\B/
), bte = [
  "Protocol",
  // contextual
  "Type"
  // contextual
].map(Wb), UA = [
  "init",
  "self"
].map(Wb), Ste = [
  "Any",
  "Self"
], Iv = [
  // strings below will be fed into the regular `keywords` engine while regex
  // will result in additional modes being created to scan for those keywords to
  // avoid conflicts with other rules
  "actor",
  "any",
  // contextual
  "associatedtype",
  "async",
  "await",
  /as\?/,
  // operator
  /as!/,
  // operator
  "as",
  // operator
  "borrowing",
  // contextual
  "break",
  "case",
  "catch",
  "class",
  "consume",
  // contextual
  "consuming",
  // contextual
  "continue",
  "convenience",
  // contextual
  "copy",
  // contextual
  "default",
  "defer",
  "deinit",
  "didSet",
  // contextual
  "distributed",
  "do",
  "dynamic",
  // contextual
  "each",
  "else",
  "enum",
  "extension",
  "fallthrough",
  /fileprivate\(set\)/,
  "fileprivate",
  "final",
  // contextual
  "for",
  "func",
  "get",
  // contextual
  "guard",
  "if",
  "import",
  "indirect",
  // contextual
  "infix",
  // contextual
  /init\?/,
  /init!/,
  "inout",
  /internal\(set\)/,
  "internal",
  "in",
  "is",
  // operator
  "isolated",
  // contextual
  "nonisolated",
  // contextual
  "lazy",
  // contextual
  "let",
  "macro",
  "mutating",
  // contextual
  "nonmutating",
  // contextual
  /open\(set\)/,
  // contextual
  "open",
  // contextual
  "operator",
  "optional",
  // contextual
  "override",
  // contextual
  "package",
  "postfix",
  // contextual
  "precedencegroup",
  "prefix",
  // contextual
  /private\(set\)/,
  "private",
  "protocol",
  /public\(set\)/,
  "public",
  "repeat",
  "required",
  // contextual
  "rethrows",
  "return",
  "set",
  // contextual
  "some",
  // contextual
  "static",
  "struct",
  "subscript",
  "super",
  "switch",
  "throws",
  "throw",
  /try\?/,
  // operator
  /try!/,
  // operator
  "try",
  // operator
  "typealias",
  /unowned\(safe\)/,
  // contextual
  /unowned\(unsafe\)/,
  // contextual
  "unowned",
  // contextual
  "var",
  "weak",
  // contextual
  "where",
  "while",
  "willSet"
  // contextual
], zA = [
  "false",
  "nil",
  "true"
], Ete = [
  "assignment",
  "associativity",
  "higherThan",
  "left",
  "lowerThan",
  "none",
  "right"
], Tte = [
  "#colorLiteral",
  "#column",
  "#dsohandle",
  "#else",
  "#elseif",
  "#endif",
  "#error",
  "#file",
  "#fileID",
  "#fileLiteral",
  "#filePath",
  "#function",
  "#if",
  "#imageLiteral",
  "#keyPath",
  "#line",
  "#selector",
  "#sourceLocation",
  "#warning"
], VA = [
  "abs",
  "all",
  "any",
  "assert",
  "assertionFailure",
  "debugPrint",
  "dump",
  "fatalError",
  "getVaList",
  "isKnownUniquelyReferenced",
  "max",
  "min",
  "numericCast",
  "pointwiseMax",
  "pointwiseMin",
  "precondition",
  "preconditionFailure",
  "print",
  "readLine",
  "repeatElement",
  "sequence",
  "stride",
  "swap",
  "swift_unboxFromSwiftValueWithType",
  "transcode",
  "type",
  "unsafeBitCast",
  "unsafeDowncast",
  "withExtendedLifetime",
  "withUnsafeMutablePointer",
  "withUnsafePointer",
  "withVaList",
  "withoutActuallyEscaping",
  "zip"
], iL = jt(
  /[/=\-+!*%<>&|^~?]/,
  /[\u00A1-\u00A7]/,
  /[\u00A9\u00AB]/,
  /[\u00AC\u00AE]/,
  /[\u00B0\u00B1]/,
  /[\u00B6\u00BB\u00BF\u00D7\u00F7]/,
  /[\u2016-\u2017]/,
  /[\u2020-\u2027]/,
  /[\u2030-\u203E]/,
  /[\u2041-\u2053]/,
  /[\u2055-\u205E]/,
  /[\u2190-\u23FF]/,
  /[\u2500-\u2775]/,
  /[\u2794-\u2BFF]/,
  /[\u2E00-\u2E7F]/,
  /[\u3001-\u3003]/,
  /[\u3008-\u3020]/,
  /[\u3030]/
), oL = jt(
  iL,
  /[\u0300-\u036F]/,
  /[\u1DC0-\u1DFF]/,
  /[\u20D0-\u20FF]/,
  /[\uFE00-\uFE0F]/,
  /[\uFE20-\uFE2F]/
  // TODO: The following characters are also allowed, but the regex isn't supported yet.
  // /[\u{E0100}-\u{E01EF}]/u
), Nv = tt(iL, oL, "*"), sL = jt(
  /[a-zA-Z_]/,
  /[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,
  /[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,
  /[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,
  /[\u1E00-\u1FFF]/,
  /[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,
  /[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,
  /[\u2C00-\u2DFF\u2E80-\u2FFF]/,
  /[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,
  /[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,
  /[\uFE47-\uFEFE\uFF00-\uFFFD]/
  // Should be /[\uFE47-\uFFFD]/, but we have to exclude FEFF.
  // The following characters are also allowed, but the regexes aren't supported yet.
  // /[\u{10000}-\u{1FFFD}\u{20000-\u{2FFFD}\u{30000}-\u{3FFFD}\u{40000}-\u{4FFFD}]/u,
  // /[\u{50000}-\u{5FFFD}\u{60000-\u{6FFFD}\u{70000}-\u{7FFFD}\u{80000}-\u{8FFFD}]/u,
  // /[\u{90000}-\u{9FFFD}\u{A0000-\u{AFFFD}\u{B0000}-\u{BFFFD}\u{C0000}-\u{CFFFD}]/u,
  // /[\u{D0000}-\u{DFFFD}\u{E0000-\u{EFFFD}]/u
), Wp = jt(
  sL,
  /\d/,
  /[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/
), _n = tt(sL, Wp, "*"), Sd = tt(/[A-Z]/, Wp, "*"), xte = [
  "attached",
  "autoclosure",
  tt(/convention\(/, jt("swift", "block", "c"), /\)/),
  "discardableResult",
  "dynamicCallable",
  "dynamicMemberLookup",
  "escaping",
  "freestanding",
  "frozen",
  "GKInspectable",
  "IBAction",
  "IBDesignable",
  "IBInspectable",
  "IBOutlet",
  "IBSegueAction",
  "inlinable",
  "main",
  "nonobjc",
  "NSApplicationMain",
  "NSCopying",
  "NSManaged",
  tt(/objc\(/, _n, /\)/),
  "objc",
  "objcMembers",
  "propertyWrapper",
  "requires_stored_property_inits",
  "resultBuilder",
  "Sendable",
  "testable",
  "UIApplicationMain",
  "unchecked",
  "unknown",
  "usableFromInline",
  "warn_unqualified_access"
], Cte = [
  "iOS",
  "iOSApplicationExtension",
  "macOS",
  "macOSApplicationExtension",
  "macCatalyst",
  "macCatalystApplicationExtension",
  "watchOS",
  "watchOSApplicationExtension",
  "tvOS",
  "tvOSApplicationExtension",
  "swift"
];
function Ate(t) {
  const e = {
    match: /\s+/,
    relevance: 0
  }, r = t.COMMENT(
    "/\\*",
    "\\*/",
    { contains: ["self"] }
  ), n = [
    t.C_LINE_COMMENT_MODE,
    r
  ], a = {
    match: [
      /\./,
      jt(...bte, ...UA)
    ],
    className: { 2: "keyword" }
  }, i = {
    // Consume .keyword to prevent highlighting properties and methods as keywords.
    match: tt(/\./, jt(...Iv)),
    relevance: 0
  }, o = Iv.filter((ye) => typeof ye == "string").concat(["_|0"]), s = Iv.filter((ye) => typeof ye != "string").concat(Ste).map(Wb), l = { variants: [
    {
      className: "keyword",
      match: jt(...s, ...UA)
    }
  ] }, u = {
    $pattern: jt(
      /\b\w+/,
      // regular keywords
      /#\w+/
      // number keywords
    ),
    keyword: o.concat(Tte),
    literal: zA
  }, c = [
    a,
    i,
    l
  ], d = {
    // Consume .built_in to prevent highlighting properties and methods.
    match: tt(/\./, jt(...VA)),
    relevance: 0
  }, p = {
    className: "built_in",
    match: tt(/\b/, jt(...VA), /(?=\()/)
  }, f = [
    d,
    p
  ], h = {
    // Prevent -> from being highlighting as an operator.
    match: /->/,
    relevance: 0
  }, g = {
    className: "operator",
    relevance: 0,
    variants: [
      { match: Nv },
      {
        // dot-operator: only operators that start with a dot are allowed to use dots as
        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more
        // characters that may also include dots.
        match: `\\.(\\.|${oL})+`
      }
    ]
  }, v = [
    h,
    g
  ], m = "([0-9]_*)+", _ = "([0-9a-fA-F]_*)+", y = {
    className: "number",
    relevance: 0,
    variants: [
      // decimal floating-point-literal (subsumes decimal-literal)
      { match: `\\b(${m})(\\.(${m}))?([eE][+-]?(${m}))?\\b` },
      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)
      { match: `\\b0x(${_})(\\.(${_}))?([pP][+-]?(${m}))?\\b` },
      // octal-literal
      { match: /\b0o([0-7]_*)+\b/ },
      // binary-literal
      { match: /\b0b([01]_*)+\b/ }
    ]
  }, b = (ye = "") => ({
    className: "subst",
    variants: [
      { match: tt(/\\/, ye, /[0\\tnr"']/) },
      { match: tt(/\\/, ye, /u\{[0-9a-fA-F]{1,8}\}/) }
    ]
  }), S = (ye = "") => ({
    className: "subst",
    match: tt(/\\/, ye, /[\t ]*(?:[\r\n]|\r\n)/)
  }), E = (ye = "") => ({
    className: "subst",
    label: "interpol",
    begin: tt(/\\/, ye, /\(/),
    end: /\)/
  }), T = (ye = "") => ({
    begin: tt(ye, /"""/),
    end: tt(/"""/, ye),
    contains: [
      b(ye),
      S(ye),
      E(ye)
    ]
  }), x = (ye = "") => ({
    begin: tt(ye, /"/),
    end: tt(/"/, ye),
    contains: [
      b(ye),
      E(ye)
    ]
  }), C = {
    className: "string",
    variants: [
      T(),
      T("#"),
      T("##"),
      T("###"),
      x(),
      x("#"),
      x("##"),
      x("###")
    ]
  }, A = [
    t.BACKSLASH_ESCAPE,
    {
      begin: /\[/,
      end: /\]/,
      relevance: 0,
      contains: [t.BACKSLASH_ESCAPE]
    }
  ], D = {
    begin: /\/[^\s](?=[^/\n]*\/)/,
    end: /\//,
    contains: A
  }, M = (ye) => {
    const nt = tt(ye, /\//), pt = tt(/\//, ye);
    return {
      begin: nt,
      end: pt,
      contains: [
        ...A,
        {
          scope: "comment",
          begin: `#(?!.*${pt})`,
          end: /$/
        }
      ]
    };
  }, I = {
    scope: "regexp",
    variants: [
      M("###"),
      M("##"),
      M("#"),
      D
    ]
  }, N = { match: tt(/`/, _n, /`/) }, R = {
    className: "variable",
    match: /\$\d+/
  }, O = {
    className: "variable",
    match: `\\$${Wp}+`
  }, B = [
    N,
    R,
    O
  ], L = {
    match: /(@|#(un)?)available/,
    scope: "keyword",
    starts: { contains: [
      {
        begin: /\(/,
        end: /\)/,
        keywords: Cte,
        contains: [
          ...v,
          y,
          C
        ]
      }
    ] }
  }, F = {
    scope: "keyword",
    match: tt(/@/, jt(...xte), Sl(jt(/\(/, /\s+/)))
  }, U = {
    scope: "meta",
    match: tt(/@/, _n)
  }, z = [
    L,
    F,
    U
  ], H = {
    match: Sl(/\b[A-Z]/),
    relevance: 0,
    contains: [
      {
        // Common Apple frameworks, for relevance boost
        className: "type",
        match: tt(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, Wp, "+")
      },
      {
        // Type identifier
        className: "type",
        match: Sd,
        relevance: 0
      },
      {
        // Optional type
        match: /[?!]+/,
        relevance: 0
      },
      {
        // Variadic parameter
        match: /\.\.\./,
        relevance: 0
      },
      {
        // Protocol composition
        match: tt(/\s+&\s+/, Sl(Sd)),
        relevance: 0
      }
    ]
  }, Z = {
    begin: /</,
    end: />/,
    keywords: u,
    contains: [
      ...n,
      ...c,
      ...z,
      h,
      H
    ]
  };
  H.contains.push(Z);
  const ee = {
    match: tt(_n, /\s*:/),
    keywords: "_|0",
    relevance: 0
  }, oe = {
    begin: /\(/,
    end: /\)/,
    relevance: 0,
    keywords: u,
    contains: [
      "self",
      ee,
      ...n,
      I,
      ...c,
      ...f,
      ...v,
      y,
      C,
      ...B,
      ...z,
      H
    ]
  }, Le = {
    begin: /</,
    end: />/,
    keywords: "repeat each",
    contains: [
      ...n,
      H
    ]
  }, Xe = {
    begin: jt(
      Sl(tt(_n, /\s*:/)),
      Sl(tt(_n, /\s+/, _n, /\s*:/))
    ),
    end: /:/,
    relevance: 0,
    contains: [
      {
        className: "keyword",
        match: /\b_\b/
      },
      {
        className: "params",
        match: _n
      }
    ]
  }, fe = {
    begin: /\(/,
    end: /\)/,
    keywords: u,
    contains: [
      Xe,
      ...n,
      ...c,
      ...v,
      y,
      C,
      ...z,
      H,
      oe
    ],
    endsParent: !0,
    illegal: /["']/
  }, re = {
    match: [
      /(func|macro)/,
      /\s+/,
      jt(N.match, _n, Nv)
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      Le,
      fe,
      e
    ],
    illegal: [
      /\[/,
      /%/
    ]
  }, ve = {
    match: [
      /\b(?:subscript|init[?!]?)/,
      /\s*(?=[<(])/
    ],
    className: { 1: "keyword" },
    contains: [
      Le,
      fe,
      e
    ],
    illegal: /\[|%/
  }, j = {
    match: [
      /operator/,
      /\s+/,
      Nv
    ],
    className: {
      1: "keyword",
      3: "title"
    }
  }, ce = {
    begin: [
      /precedencegroup/,
      /\s+/,
      Sd
    ],
    className: {
      1: "keyword",
      3: "title"
    },
    contains: [H],
    keywords: [
      ...Ete,
      ...zA
    ],
    end: /}/
  }, qe = {
    match: [
      /class\b/,
      /\s+/,
      /func\b/,
      /\s+/,
      /\b[A-Za-z_][A-Za-z0-9_]*\b/
    ],
    scope: {
      1: "keyword",
      3: "keyword",
      5: "title.function"
    }
  }, Ge = {
    match: [
      /class\b/,
      /\s+/,
      /var\b/
    ],
    scope: {
      1: "keyword",
      3: "keyword"
    }
  }, We = {
    begin: [
      /(struct|protocol|class|extension|enum|actor)/,
      /\s+/,
      _n,
      /\s*/
    ],
    beginScope: {
      1: "keyword",
      3: "title.class"
    },
    keywords: u,
    contains: [
      Le,
      ...c,
      {
        begin: /:/,
        end: /\{/,
        keywords: u,
        contains: [
          {
            scope: "title.class.inherited",
            match: Sd
          },
          ...c
        ],
        relevance: 0
      }
    ]
  };
  for (const ye of C.variants) {
    const nt = ye.contains.find((It) => It.label === "interpol");
    nt.keywords = u;
    const pt = [
      ...c,
      ...f,
      ...v,
      y,
      C,
      ...B
    ];
    nt.contains = [
      ...pt,
      {
        begin: /\(/,
        end: /\)/,
        contains: [
          "self",
          ...pt
        ]
      }
    ];
  }
  return {
    name: "Swift",
    keywords: u,
    contains: [
      ...n,
      re,
      ve,
      qe,
      Ge,
      We,
      j,
      ce,
      {
        beginKeywords: "import",
        end: /$/,
        contains: [...n],
        relevance: 0
      },
      I,
      ...c,
      ...f,
      ...v,
      y,
      C,
      ...B,
      ...z,
      H,
      oe
    ]
  };
}
const aoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ate
}, Symbol.toStringTag, { value: "Module" }));
function wte(t) {
  return {
    name: "Tagger Script",
    contains: [
      {
        className: "comment",
        begin: /\$noop\(/,
        end: /\)/,
        contains: [
          { begin: /\\[()]/ },
          {
            begin: /\(/,
            end: /\)/,
            contains: [
              { begin: /\\[()]/ },
              "self"
            ]
          }
        ],
        relevance: 10
      },
      {
        className: "keyword",
        begin: /\$[_a-zA-Z0-9]+(?=\()/
      },
      {
        className: "variable",
        begin: /%[_a-zA-Z0-9:]+%/
      },
      {
        className: "symbol",
        begin: /\\[\\nt$%,()]/
      },
      {
        className: "symbol",
        begin: /\\u[a-fA-F0-9]{4}/
      }
    ]
  };
}
const ioe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: wte
}, Symbol.toStringTag, { value: "Module" }));
function Dte(t) {
  return {
    name: "Test Anything Protocol",
    case_insensitive: !0,
    contains: [
      t.HASH_COMMENT_MODE,
      // version of format and total amount of testcases
      {
        className: "meta",
        variants: [
          { begin: "^TAP version (\\d+)$" },
          { begin: "^1\\.\\.(\\d+)$" }
        ]
      },
      // YAML block
      {
        begin: /---$/,
        end: "\\.\\.\\.$",
        subLanguage: "yaml",
        relevance: 0
      },
      // testcase number
      {
        className: "number",
        begin: " (\\d+) "
      },
      // testcase status and description
      {
        className: "symbol",
        variants: [
          { begin: "^ok" },
          { begin: "^not ok" }
        ]
      }
    ]
  };
}
const ooe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Dte
}, Symbol.toStringTag, { value: "Module" }));
function Mte(t) {
  const e = t.regex, r = /[a-zA-Z_][a-zA-Z0-9_]*/, n = {
    className: "number",
    variants: [
      t.BINARY_NUMBER_MODE,
      t.C_NUMBER_MODE
    ]
  };
  return {
    name: "Tcl",
    aliases: ["tk"],
    keywords: [
      "after",
      "append",
      "apply",
      "array",
      "auto_execok",
      "auto_import",
      "auto_load",
      "auto_mkindex",
      "auto_mkindex_old",
      "auto_qualify",
      "auto_reset",
      "bgerror",
      "binary",
      "break",
      "catch",
      "cd",
      "chan",
      "clock",
      "close",
      "concat",
      "continue",
      "dde",
      "dict",
      "encoding",
      "eof",
      "error",
      "eval",
      "exec",
      "exit",
      "expr",
      "fblocked",
      "fconfigure",
      "fcopy",
      "file",
      "fileevent",
      "filename",
      "flush",
      "for",
      "foreach",
      "format",
      "gets",
      "glob",
      "global",
      "history",
      "http",
      "if",
      "incr",
      "info",
      "interp",
      "join",
      "lappend|10",
      "lassign|10",
      "lindex|10",
      "linsert|10",
      "list",
      "llength|10",
      "load",
      "lrange|10",
      "lrepeat|10",
      "lreplace|10",
      "lreverse|10",
      "lsearch|10",
      "lset|10",
      "lsort|10",
      "mathfunc",
      "mathop",
      "memory",
      "msgcat",
      "namespace",
      "open",
      "package",
      "parray",
      "pid",
      "pkg::create",
      "pkg_mkIndex",
      "platform",
      "platform::shell",
      "proc",
      "puts",
      "pwd",
      "read",
      "refchan",
      "regexp",
      "registry",
      "regsub|10",
      "rename",
      "return",
      "safe",
      "scan",
      "seek",
      "set",
      "socket",
      "source",
      "split",
      "string",
      "subst",
      "switch",
      "tcl_endOfWord",
      "tcl_findLibrary",
      "tcl_startOfNextWord",
      "tcl_startOfPreviousWord",
      "tcl_wordBreakAfter",
      "tcl_wordBreakBefore",
      "tcltest",
      "tclvars",
      "tell",
      "time",
      "tm",
      "trace",
      "unknown",
      "unload",
      "unset",
      "update",
      "uplevel",
      "upvar",
      "variable",
      "vwait",
      "while"
    ],
    contains: [
      t.COMMENT(";[ \\t]*#", "$"),
      t.COMMENT("^[ \\t]*#", "$"),
      {
        beginKeywords: "proc",
        end: "[\\{]",
        excludeEnd: !0,
        contains: [
          {
            className: "title",
            begin: "[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
            end: "[ \\t\\n\\r]",
            endsWithParent: !0,
            excludeEnd: !0
          }
        ]
      },
      {
        className: "variable",
        variants: [
          { begin: e.concat(
            /\$/,
            e.optional(/::/),
            r,
            "(::",
            r,
            ")*"
          ) },
          {
            begin: "\\$\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
            end: "\\}",
            contains: [n]
          }
        ]
      },
      {
        className: "string",
        contains: [t.BACKSLASH_ESCAPE],
        variants: [t.inherit(t.QUOTE_STRING_MODE, { illegal: null })]
      },
      n
    ]
  };
}
const soe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Mte
}, Symbol.toStringTag, { value: "Module" }));
function Ite(t) {
  const e = [
    "bool",
    "byte",
    "i16",
    "i32",
    "i64",
    "double",
    "string",
    "binary"
  ];
  return {
    name: "Thrift",
    keywords: {
      keyword: [
        "namespace",
        "const",
        "typedef",
        "struct",
        "enum",
        "service",
        "exception",
        "void",
        "oneway",
        "set",
        "list",
        "map",
        "required",
        "optional"
      ],
      type: e,
      literal: "true false"
    },
    contains: [
      t.QUOTE_STRING_MODE,
      t.NUMBER_MODE,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "class",
        beginKeywords: "struct enum service exception",
        end: /\{/,
        illegal: /\n/,
        contains: [
          t.inherit(t.TITLE_MODE, {
            // hack: eating everything after the first title
            starts: {
              endsWithParent: !0,
              excludeEnd: !0
            }
          })
        ]
      },
      {
        begin: "\\b(set|list|map)\\s*<",
        keywords: { type: [
          ...e,
          "set",
          "list",
          "map"
        ] },
        end: ">",
        contains: ["self"]
      }
    ]
  };
}
const loe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ite
}, Symbol.toStringTag, { value: "Module" }));
function Nte(t) {
  const e = {
    className: "number",
    begin: "[1-9][0-9]*",
    /* no leading zeros */
    relevance: 0
  }, r = {
    className: "symbol",
    begin: ":[^\\]]+"
  }, n = {
    className: "built_in",
    begin: "(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[",
    end: "\\]",
    contains: [
      "self",
      e,
      r
    ]
  }, a = {
    className: "built_in",
    begin: "(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[",
    end: "\\]",
    contains: [
      "self",
      e,
      t.QUOTE_STRING_MODE,
      /* for pos section at bottom */
      r
    ]
  };
  return {
    name: "TP",
    keywords: {
      keyword: [
        "ABORT",
        "ACC",
        "ADJUST",
        "AND",
        "AP_LD",
        "BREAK",
        "CALL",
        "CNT",
        "COL",
        "CONDITION",
        "CONFIG",
        "DA",
        "DB",
        "DIV",
        "DETECT",
        "ELSE",
        "END",
        "ENDFOR",
        "ERR_NUM",
        "ERROR_PROG",
        "FINE",
        "FOR",
        "GP",
        "GUARD",
        "INC",
        "IF",
        "JMP",
        "LINEAR_MAX_SPEED",
        "LOCK",
        "MOD",
        "MONITOR",
        "OFFSET",
        "Offset",
        "OR",
        "OVERRIDE",
        "PAUSE",
        "PREG",
        "PTH",
        "RT_LD",
        "RUN",
        "SELECT",
        "SKIP",
        "Skip",
        "TA",
        "TB",
        "TO",
        "TOOL_OFFSET",
        "Tool_Offset",
        "UF",
        "UT",
        "UFRAME_NUM",
        "UTOOL_NUM",
        "UNLOCK",
        "WAIT",
        "X",
        "Y",
        "Z",
        "W",
        "P",
        "R",
        "STRLEN",
        "SUBSTR",
        "FINDSTR",
        "VOFFSET",
        "PROG",
        "ATTR",
        "MN",
        "POS"
      ],
      literal: [
        "ON",
        "OFF",
        "max_speed",
        "LPOS",
        "JPOS",
        "ENABLE",
        "DISABLE",
        "START",
        "STOP",
        "RESET"
      ]
    },
    contains: [
      n,
      a,
      {
        className: "keyword",
        begin: "/(PROG|ATTR|MN|POS|END)\\b"
      },
      {
        /* this is for cases like ,CALL */
        className: "keyword",
        begin: "(CALL|RUN|POINT_LOGIC|LBL)\\b"
      },
      {
        /* this is for cases like CNT100 where the default lexemes do not
         * separate the keyword and the number */
        className: "keyword",
        begin: "\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)"
      },
      {
        /* to catch numbers that do not have a word boundary on the left */
        className: "number",
        begin: "\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b",
        relevance: 0
      },
      t.COMMENT("//", "[;$]"),
      t.COMMENT("!", "[;$]"),
      t.COMMENT("--eg:", "$"),
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        begin: "'",
        end: "'"
      },
      t.C_NUMBER_MODE,
      {
        className: "variable",
        begin: "\\$[A-Za-z0-9_]+"
      }
    ]
  };
}
const uoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Nte
}, Symbol.toStringTag, { value: "Module" }));
function Rte(t) {
  const e = t.regex, r = [
    "absolute_url",
    "asset|0",
    "asset_version",
    "attribute",
    "block",
    "constant",
    "controller|0",
    "country_timezones",
    "csrf_token",
    "cycle",
    "date",
    "dump",
    "expression",
    "form|0",
    "form_end",
    "form_errors",
    "form_help",
    "form_label",
    "form_rest",
    "form_row",
    "form_start",
    "form_widget",
    "html_classes",
    "include",
    "is_granted",
    "logout_path",
    "logout_url",
    "max",
    "min",
    "parent",
    "path|0",
    "random",
    "range",
    "relative_path",
    "render",
    "render_esi",
    "source",
    "template_from_string",
    "url|0"
  ], n = [
    "abs",
    "abbr_class",
    "abbr_method",
    "batch",
    "capitalize",
    "column",
    "convert_encoding",
    "country_name",
    "currency_name",
    "currency_symbol",
    "data_uri",
    "date",
    "date_modify",
    "default",
    "escape",
    "file_excerpt",
    "file_link",
    "file_relative",
    "filter",
    "first",
    "format",
    "format_args",
    "format_args_as_text",
    "format_currency",
    "format_date",
    "format_datetime",
    "format_file",
    "format_file_from_text",
    "format_number",
    "format_time",
    "html_to_markdown",
    "humanize",
    "inky_to_html",
    "inline_css",
    "join",
    "json_encode",
    "keys",
    "language_name",
    "last",
    "length",
    "locale_name",
    "lower",
    "map",
    "markdown",
    "markdown_to_html",
    "merge",
    "nl2br",
    "number_format",
    "raw",
    "reduce",
    "replace",
    "reverse",
    "round",
    "slice",
    "slug",
    "sort",
    "spaceless",
    "split",
    "striptags",
    "timezone_name",
    "title",
    "trans",
    "transchoice",
    "trim",
    "u|0",
    "upper",
    "url_encode",
    "yaml_dump",
    "yaml_encode"
  ];
  let a = [
    "apply",
    "autoescape",
    "block",
    "cache",
    "deprecated",
    "do",
    "embed",
    "extends",
    "filter",
    "flush",
    "for",
    "form_theme",
    "from",
    "if",
    "import",
    "include",
    "macro",
    "sandbox",
    "set",
    "stopwatch",
    "trans",
    "trans_default_domain",
    "transchoice",
    "use",
    "verbatim",
    "with"
  ];
  a = a.concat(a.map((h) => `end${h}`));
  const i = {
    scope: "string",
    variants: [
      {
        begin: /'/,
        end: /'/
      },
      {
        begin: /"/,
        end: /"/
      }
    ]
  }, o = {
    scope: "number",
    match: /\d+/
  }, s = {
    begin: /\(/,
    end: /\)/,
    excludeBegin: !0,
    excludeEnd: !0,
    contains: [
      i,
      o
    ]
  }, l = {
    beginKeywords: r.join(" "),
    keywords: { name: r },
    relevance: 0,
    contains: [s]
  }, u = {
    match: /\|(?=[A-Za-z_]+:?)/,
    beginScope: "punctuation",
    relevance: 0,
    contains: [
      {
        match: /[A-Za-z_]+:?/,
        keywords: n
      }
    ]
  }, c = (h, { relevance: g }) => ({
    beginScope: {
      1: "template-tag",
      3: "name"
    },
    relevance: g || 2,
    endScope: "template-tag",
    begin: [
      /\{%/,
      /\s*/,
      e.either(...h)
    ],
    end: /%\}/,
    keywords: "in",
    contains: [
      u,
      l,
      i,
      o
    ]
  }), d = /[a-z_]+/, p = c(a, { relevance: 2 }), f = c([d], { relevance: 1 });
  return {
    name: "Twig",
    aliases: ["craftcms"],
    case_insensitive: !0,
    subLanguage: "xml",
    contains: [
      t.COMMENT(/\{#/, /#\}/),
      p,
      f,
      {
        className: "template-variable",
        begin: /\{\{/,
        end: /\}\}/,
        contains: [
          "self",
          u,
          l,
          i,
          o
        ]
      }
    ]
  };
}
const coe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Rte
}, Symbol.toStringTag, { value: "Module" })), qp = "[A-Za-z$_][0-9A-Za-z$_]*", lL = [
  "as",
  // for exports
  "in",
  "of",
  "if",
  "for",
  "while",
  "finally",
  "var",
  "new",
  "function",
  "do",
  "return",
  "void",
  "else",
  "break",
  "catch",
  "instanceof",
  "with",
  "throw",
  "case",
  "default",
  "try",
  "switch",
  "continue",
  "typeof",
  "delete",
  "let",
  "yield",
  "const",
  "class",
  // JS handles these with a special rule
  // "get",
  // "set",
  "debugger",
  "async",
  "await",
  "static",
  "import",
  "from",
  "export",
  "extends",
  // It's reached stage 3, which is "recommended for implementation":
  "using"
], uL = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
], cL = [
  // Fundamental objects
  "Object",
  "Function",
  "Boolean",
  "Symbol",
  // numbers and dates
  "Math",
  "Date",
  "Number",
  "BigInt",
  // text
  "String",
  "RegExp",
  // Indexed collections
  "Array",
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Int16Array",
  "Int32Array",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array",
  // Keyed collections
  "Set",
  "Map",
  "WeakSet",
  "WeakMap",
  // Structured data
  "ArrayBuffer",
  "SharedArrayBuffer",
  "Atomics",
  "DataView",
  "JSON",
  // Control abstraction objects
  "Promise",
  "Generator",
  "GeneratorFunction",
  "AsyncFunction",
  // Reflection
  "Reflect",
  "Proxy",
  // Internationalization
  "Intl",
  // WebAssembly
  "WebAssembly"
], dL = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
], pL = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
], fL = [
  "arguments",
  "this",
  "super",
  "console",
  "window",
  "document",
  "localStorage",
  "sessionStorage",
  "module",
  "global"
  // Node.js
], hL = [].concat(
  pL,
  cL,
  dL
);
function Ote(t) {
  const e = t.regex, r = (L, { after: F }) => {
    const U = "</" + L[0].slice(1);
    return L.input.indexOf(U, F) !== -1;
  }, n = qp, a = {
    begin: "<>",
    end: "</>"
  }, i = /<[A-Za-z0-9\\._:-]+\s*\/>/, o = {
    begin: /<[A-Za-z0-9\\._:-]+/,
    end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
    /**
     * @param {RegExpMatchArray} match
     * @param {CallbackResponse} response
     */
    isTrulyOpeningTag: (L, F) => {
      const U = L[0].length + L.index, z = L.input[U];
      if (
        // HTML should not include another raw `<` inside a tag
        // nested type?
        // `<Array<Array<number>>`, etc.
        z === "<" || // the , gives away that this is not HTML
        // `<T, A extends keyof T, V>`
        z === ","
      ) {
        F.ignoreMatch();
        return;
      }
      z === ">" && (r(L, { after: U }) || F.ignoreMatch());
      let H;
      const Z = L.input.substring(U);
      if (H = Z.match(/^\s*=/)) {
        F.ignoreMatch();
        return;
      }
      if ((H = Z.match(/^\s+extends\s+/)) && H.index === 0) {
        F.ignoreMatch();
        return;
      }
    }
  }, s = {
    $pattern: qp,
    keyword: lL,
    literal: uL,
    built_in: hL,
    "variable.language": fL
  }, l = "[0-9](_?[0-9])*", u = `\\.(${l})`, c = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*", d = {
    className: "number",
    variants: [
      // DecimalLiteral
      { begin: `(\\b(${c})((${u})|\\.)?|(${u}))[eE][+-]?(${l})\\b` },
      { begin: `\\b(${c})\\b((${u})\\b|\\.)?|(${u})\\b` },
      // DecimalBigIntegerLiteral
      { begin: "\\b(0|[1-9](_?[0-9])*)n\\b" },
      // NonDecimalIntegerLiteral
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*n?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*n?\\b" },
      // LegacyOctalIntegerLiteral (does not include underscore separators)
      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals
      { begin: "\\b0[0-7]+n?\\b" }
    ],
    relevance: 0
  }, p = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: s,
    contains: []
    // defined later
  }, f = {
    begin: ".?html`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "xml"
    }
  }, h = {
    begin: ".?css`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "css"
    }
  }, g = {
    begin: ".?gql`",
    end: "",
    starts: {
      end: "`",
      returnEnd: !1,
      contains: [
        t.BACKSLASH_ESCAPE,
        p
      ],
      subLanguage: "graphql"
    }
  }, v = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [
      t.BACKSLASH_ESCAPE,
      p
    ]
  }, _ = {
    className: "comment",
    variants: [
      t.COMMENT(
        /\/\*\*(?!\/)/,
        "\\*/",
        {
          relevance: 0,
          contains: [
            {
              begin: "(?=@[A-Za-z]+)",
              relevance: 0,
              contains: [
                {
                  className: "doctag",
                  begin: "@[A-Za-z]+"
                },
                {
                  className: "type",
                  begin: "\\{",
                  end: "\\}",
                  excludeEnd: !0,
                  excludeBegin: !0,
                  relevance: 0
                },
                {
                  className: "variable",
                  begin: n + "(?=\\s*(-)|$)",
                  endsParent: !0,
                  relevance: 0
                },
                // eat spaces (not newlines) so we can find
                // types or variables
                {
                  begin: /(?=[^\n])\s/,
                  relevance: 0
                }
              ]
            }
          ]
        }
      ),
      t.C_BLOCK_COMMENT_MODE,
      t.C_LINE_COMMENT_MODE
    ]
  }, y = [
    t.APOS_STRING_MODE,
    t.QUOTE_STRING_MODE,
    f,
    h,
    g,
    v,
    // Skip numbers when they are part of a variable name
    { match: /\$\d+/ },
    d
    // This is intentional:
    // See https://github.com/highlightjs/highlight.js/issues/3288
    // hljs.REGEXP_MODE
  ];
  p.contains = y.concat({
    // we need to pair up {} inside our subst to prevent
    // it from ending too early by matching another }
    begin: /\{/,
    end: /\}/,
    keywords: s,
    contains: [
      "self"
    ].concat(y)
  });
  const b = [].concat(_, p.contains), S = b.concat([
    // eat recursive parens in sub expressions
    {
      begin: /(\s*)\(/,
      end: /\)/,
      keywords: s,
      contains: ["self"].concat(b)
    }
  ]), E = {
    className: "params",
    // convert this to negative lookbehind in v12
    begin: /(\s*)\(/,
    // to match the parms with
    end: /\)/,
    excludeBegin: !0,
    excludeEnd: !0,
    keywords: s,
    contains: S
  }, T = {
    variants: [
      // class Car extends vehicle
      {
        match: [
          /class/,
          /\s+/,
          n,
          /\s+/,
          /extends/,
          /\s+/,
          e.concat(n, "(", e.concat(/\./, n), ")*")
        ],
        scope: {
          1: "keyword",
          3: "title.class",
          5: "keyword",
          7: "title.class.inherited"
        }
      },
      // class Car
      {
        match: [
          /class/,
          /\s+/,
          n
        ],
        scope: {
          1: "keyword",
          3: "title.class"
        }
      }
    ]
  }, x = {
    relevance: 0,
    match: e.either(
      // Hard coded exceptions
      /\bJSON/,
      // Float32Array, OutT
      /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,
      // CSSFactory, CSSFactoryT
      /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,
      // FPs, FPsT
      /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/
      // P
      // single letters are not highlighted
      // BLAH
      // this will be flagged as a UPPER_CASE_CONSTANT instead
    ),
    className: "title.class",
    keywords: {
      _: [
        // se we still get relevance credit for JS library classes
        ...cL,
        ...dL
      ]
    }
  }, C = {
    label: "use_strict",
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use (strict|asm)['"]/
  }, A = {
    variants: [
      {
        match: [
          /function/,
          /\s+/,
          n,
          /(?=\s*\()/
        ]
      },
      // anonymous function
      {
        match: [
          /function/,
          /\s*(?=\()/
        ]
      }
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    label: "func.def",
    contains: [E],
    illegal: /%/
  }, D = {
    relevance: 0,
    match: /\b[A-Z][A-Z_0-9]+\b/,
    className: "variable.constant"
  };
  function M(L) {
    return e.concat("(?!", L.join("|"), ")");
  }
  const I = {
    match: e.concat(
      /\b/,
      M([
        ...pL,
        "super",
        "import"
      ].map((L) => `${L}\\s*\\(`)),
      n,
      e.lookahead(/\s*\(/)
    ),
    className: "title.function",
    relevance: 0
  }, N = {
    begin: e.concat(/\./, e.lookahead(
      e.concat(n, /(?![0-9A-Za-z$_(])/)
    )),
    end: n,
    excludeBegin: !0,
    keywords: "prototype",
    className: "property",
    relevance: 0
  }, R = {
    match: [
      /get|set/,
      /\s+/,
      n,
      /(?=\()/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      {
        // eat to avoid empty params
        begin: /\(\)/
      },
      E
    ]
  }, O = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + t.UNDERSCORE_IDENT_RE + ")\\s*=>", B = {
    match: [
      /const|var|let/,
      /\s+/,
      n,
      /\s*/,
      /=\s*/,
      /(async\s*)?/,
      // async is optional
      e.lookahead(O)
    ],
    keywords: "async",
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [
      E
    ]
  };
  return {
    name: "JavaScript",
    aliases: ["js", "jsx", "mjs", "cjs"],
    keywords: s,
    // this will be extended by TypeScript
    exports: { PARAMS_CONTAINS: S, CLASS_REFERENCE: x },
    illegal: /#(?![$_A-z])/,
    contains: [
      t.SHEBANG({
        label: "shebang",
        binary: "node",
        relevance: 5
      }),
      C,
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      f,
      h,
      g,
      v,
      _,
      // Skip numbers when they are part of a variable name
      { match: /\$\d+/ },
      d,
      x,
      {
        scope: "attr",
        match: n + e.lookahead(":"),
        relevance: 0
      },
      B,
      {
        // "value" container
        begin: "(" + t.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        relevance: 0,
        contains: [
          _,
          t.REGEXP_MODE,
          {
            className: "function",
            // we have to count the parens to make sure we actually have the
            // correct bounding ( ) before the =>.  There could be any number of
            // sub-expressions inside also surrounded by parens.
            begin: O,
            returnBegin: !0,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  {
                    begin: t.UNDERSCORE_IDENT_RE,
                    relevance: 0
                  },
                  {
                    className: null,
                    begin: /\(\s*\)/,
                    skip: !0
                  },
                  {
                    begin: /(\s*)\(/,
                    end: /\)/,
                    excludeBegin: !0,
                    excludeEnd: !0,
                    keywords: s,
                    contains: S
                  }
                ]
              }
            ]
          },
          {
            // could be a comma delimited list of params to a function call
            begin: /,/,
            relevance: 0
          },
          {
            match: /\s+/,
            relevance: 0
          },
          {
            // JSX
            variants: [
              { begin: a.begin, end: a.end },
              { match: i },
              {
                begin: o.begin,
                // we carefully check the opening tag to see if it truly
                // is a tag and not a false positive
                "on:begin": o.isTrulyOpeningTag,
                end: o.end
              }
            ],
            subLanguage: "xml",
            contains: [
              {
                begin: o.begin,
                end: o.end,
                skip: !0,
                contains: ["self"]
              }
            ]
          }
        ]
      },
      A,
      {
        // prevent this from getting swallowed up by function
        // since they appear "function like"
        beginKeywords: "while if switch catch for"
      },
      {
        // we have to count the parens to make sure we actually have the correct
        // bounding ( ).  There could be any number of sub-expressions inside
        // also surrounded by parens.
        begin: "\\b(?!function)" + t.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
        // end parens
        returnBegin: !0,
        label: "func.def",
        contains: [
          E,
          t.inherit(t.TITLE_MODE, { begin: n, className: "title.function" })
        ]
      },
      // catch ... so it won't trigger the property rule below
      {
        match: /\.\.\./,
        relevance: 0
      },
      N,
      // hack: prevents detection of keywords in some circumstances
      // .keyword()
      // $keyword = x
      {
        match: "\\$" + n,
        relevance: 0
      },
      {
        match: [/\bconstructor(?=\s*\()/],
        className: { 1: "title.function" },
        contains: [E]
      },
      I,
      D,
      T,
      R,
      {
        match: /\$[(.]/
        // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
      }
    ]
  };
}
function Lte(t) {
  const e = t.regex, r = Ote(t), n = qp, a = [
    "any",
    "void",
    "number",
    "boolean",
    "string",
    "object",
    "never",
    "symbol",
    "bigint",
    "unknown"
  ], i = {
    begin: [
      /namespace/,
      /\s+/,
      t.IDENT_RE
    ],
    beginScope: {
      1: "keyword",
      3: "title.class"
    }
  }, o = {
    beginKeywords: "interface",
    end: /\{/,
    excludeEnd: !0,
    keywords: {
      keyword: "interface extends",
      built_in: a
    },
    contains: [r.exports.CLASS_REFERENCE]
  }, s = {
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use strict['"]/
  }, l = [
    "type",
    // "namespace",
    "interface",
    "public",
    "private",
    "protected",
    "implements",
    "declare",
    "abstract",
    "readonly",
    "enum",
    "override",
    "satisfies"
  ], u = {
    $pattern: qp,
    keyword: lL.concat(l),
    literal: uL,
    built_in: hL.concat(a),
    "variable.language": fL
  }, c = {
    className: "meta",
    begin: "@" + n
  }, d = (g, v, m) => {
    const _ = g.contains.findIndex((y) => y.label === v);
    if (_ === -1)
      throw new Error("can not find mode to replace");
    g.contains.splice(_, 1, m);
  };
  Object.assign(r.keywords, u), r.exports.PARAMS_CONTAINS.push(c);
  const p = r.contains.find((g) => g.scope === "attr"), f = Object.assign(
    {},
    p,
    { match: e.concat(n, e.lookahead(/\s*\?:/)) }
  );
  r.exports.PARAMS_CONTAINS.push([
    r.exports.CLASS_REFERENCE,
    // class reference for highlighting the params types
    p,
    // highlight the params key
    f
    // Added for optional property assignment highlighting
  ]), r.contains = r.contains.concat([
    c,
    i,
    o,
    f
    // Added for optional property assignment highlighting
  ]), d(r, "shebang", t.SHEBANG()), d(r, "use_strict", s);
  const h = r.contains.find((g) => g.label === "func.def");
  return h.relevance = 0, Object.assign(r, {
    name: "TypeScript",
    aliases: [
      "ts",
      "tsx",
      "mts",
      "cts"
    ]
  }), r;
}
const doe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Lte
}, Symbol.toStringTag, { value: "Module" }));
function Pte(t) {
  return {
    name: "Vala",
    keywords: {
      keyword: (
        // Value types
        "char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 uint16 uint32 uint64 float double bool struct enum string void weak unowned owned async signal static abstract interface override virtual delegate if while do for foreach else switch case break default return try catch public private protected internal using new this get set const stdout stdin stderr var"
      ),
      built_in: "DBus GLib CCode Gee Object Gtk Posix",
      literal: "false true null"
    },
    contains: [
      {
        className: "class",
        beginKeywords: "class interface namespace",
        end: /\{/,
        excludeEnd: !0,
        illegal: "[^,:\\n\\s\\.]",
        contains: [t.UNDERSCORE_TITLE_MODE]
      },
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      {
        className: "string",
        begin: '"""',
        end: '"""',
        relevance: 5
      },
      t.APOS_STRING_MODE,
      t.QUOTE_STRING_MODE,
      t.C_NUMBER_MODE,
      {
        className: "meta",
        begin: "^#",
        end: "$"
      }
    ]
  };
}
const poe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Pte
}, Symbol.toStringTag, { value: "Module" }));
function kte(t) {
  const e = t.regex, r = {
    className: "string",
    begin: /"(""|[^/n])"C\b/
  }, n = {
    className: "string",
    begin: /"/,
    end: /"/,
    illegal: /\n/,
    contains: [
      {
        // double quote escape
        begin: /""/
      }
    ]
  }, a = /\d{1,2}\/\d{1,2}\/\d{4}/, i = /\d{4}-\d{1,2}-\d{1,2}/, o = /(\d|1[012])(:\d+){0,2} *(AM|PM)/, s = /\d{1,2}(:\d{1,2}){1,2}/, l = {
    className: "literal",
    variants: [
      {
        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)
        begin: e.concat(/# */, e.either(i, a), / *#/)
      },
      {
        // #H:mm[:ss]# (24h Time)
        begin: e.concat(/# */, s, / *#/)
      },
      {
        // #h[:mm[:ss]] A# (12h Time)
        begin: e.concat(/# */, o, / *#/)
      },
      {
        // date plus time
        begin: e.concat(
          /# */,
          e.either(i, a),
          / +/,
          e.either(o, s),
          / *#/
        )
      }
    ]
  }, u = {
    className: "number",
    relevance: 0,
    variants: [
      {
        // Float
        begin: /\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/
      },
      {
        // Integer (base 10)
        begin: /\b\d[\d_]*((U?[SIL])|[%&])?/
      },
      {
        // Integer (base 16)
        begin: /&H[\dA-F_]+((U?[SIL])|[%&])?/
      },
      {
        // Integer (base 8)
        begin: /&O[0-7_]+((U?[SIL])|[%&])?/
      },
      {
        // Integer (base 2)
        begin: /&B[01_]+((U?[SIL])|[%&])?/
      }
    ]
  }, c = {
    className: "label",
    begin: /^\w+:/
  }, d = t.COMMENT(/'''/, /$/, { contains: [
    {
      className: "doctag",
      begin: /<\/?/,
      end: />/
    }
  ] }), p = t.COMMENT(null, /$/, { variants: [
    { begin: /'/ },
    {
      // TODO: Use multi-class for leading spaces
      begin: /([\t ]|^)REM(?=\s)/
    }
  ] });
  return {
    name: "Visual Basic .NET",
    aliases: ["vb"],
    case_insensitive: !0,
    classNameAliases: { label: "symbol" },
    keywords: {
      keyword: "addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield",
      built_in: (
        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators
        "addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort"
      ),
      type: (
        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types
        "boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort"
      ),
      literal: "true false nothing"
    },
    illegal: "//|\\{|\\}|endif|gosub|variant|wend|^\\$ ",
    contains: [
      r,
      n,
      l,
      u,
      c,
      d,
      p,
      {
        className: "meta",
        // TODO: Use multi-class for indentation once available
        begin: /[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,
        end: /$/,
        keywords: { keyword: "const disable else elseif enable end externalsource if region then" },
        contains: [p]
      }
    ]
  };
}
const foe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kte
}, Symbol.toStringTag, { value: "Module" }));
function Bte(t) {
  const e = t.regex, r = [
    "lcase",
    "month",
    "vartype",
    "instrrev",
    "ubound",
    "setlocale",
    "getobject",
    "rgb",
    "getref",
    "string",
    "weekdayname",
    "rnd",
    "dateadd",
    "monthname",
    "now",
    "day",
    "minute",
    "isarray",
    "cbool",
    "round",
    "formatcurrency",
    "conversions",
    "csng",
    "timevalue",
    "second",
    "year",
    "space",
    "abs",
    "clng",
    "timeserial",
    "fixs",
    "len",
    "asc",
    "isempty",
    "maths",
    "dateserial",
    "atn",
    "timer",
    "isobject",
    "filter",
    "weekday",
    "datevalue",
    "ccur",
    "isdate",
    "instr",
    "datediff",
    "formatdatetime",
    "replace",
    "isnull",
    "right",
    "sgn",
    "array",
    "snumeric",
    "log",
    "cdbl",
    "hex",
    "chr",
    "lbound",
    "msgbox",
    "ucase",
    "getlocale",
    "cos",
    "cdate",
    "cbyte",
    "rtrim",
    "join",
    "hour",
    "oct",
    "typename",
    "trim",
    "strcomp",
    "int",
    "createobject",
    "loadpicture",
    "tan",
    "formatnumber",
    "mid",
    "split",
    "cint",
    "sin",
    "datepart",
    "ltrim",
    "sqr",
    "time",
    "derived",
    "eval",
    "date",
    "formatpercent",
    "exp",
    "inputbox",
    "left",
    "ascw",
    "chrw",
    "regexp",
    "cstr",
    "err"
  ], n = [
    "server",
    "response",
    "request",
    // take no arguments so can be called without ()
    "scriptengine",
    "scriptenginebuildversion",
    "scriptengineminorversion",
    "scriptenginemajorversion"
  ], a = {
    begin: e.concat(e.either(...r), "\\s*\\("),
    // relevance 0 because this is acting as a beginKeywords really
    relevance: 0,
    keywords: { built_in: r }
  };
  return {
    name: "VBScript",
    aliases: ["vbs"],
    case_insensitive: !0,
    keywords: {
      keyword: [
        "call",
        "class",
        "const",
        "dim",
        "do",
        "loop",
        "erase",
        "execute",
        "executeglobal",
        "exit",
        "for",
        "each",
        "next",
        "function",
        "if",
        "then",
        "else",
        "on",
        "error",
        "option",
        "explicit",
        "new",
        "private",
        "property",
        "let",
        "get",
        "public",
        "randomize",
        "redim",
        "rem",
        "select",
        "case",
        "set",
        "stop",
        "sub",
        "while",
        "wend",
        "with",
        "end",
        "to",
        "elseif",
        "is",
        "or",
        "xor",
        "and",
        "not",
        "class_initialize",
        "class_terminate",
        "default",
        "preserve",
        "in",
        "me",
        "byval",
        "byref",
        "step",
        "resume",
        "goto"
      ],
      built_in: n,
      literal: [
        "true",
        "false",
        "null",
        "nothing",
        "empty"
      ]
    },
    illegal: "//",
    contains: [
      a,
      t.inherit(t.QUOTE_STRING_MODE, { contains: [{ begin: '""' }] }),
      t.COMMENT(
        /'/,
        /$/,
        { relevance: 0 }
      ),
      t.C_NUMBER_MODE
    ]
  };
}
const hoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Bte
}, Symbol.toStringTag, { value: "Module" }));
function Fte(t) {
  return {
    name: "VBScript in HTML",
    subLanguage: "xml",
    contains: [
      {
        begin: "<%",
        end: "%>",
        subLanguage: "vbscript"
      }
    ]
  };
}
const goe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Fte
}, Symbol.toStringTag, { value: "Module" }));
function Gte(t) {
  const e = t.regex, r = {
    $pattern: /\$?[\w]+(\$[\w]+)*/,
    keyword: [
      "accept_on",
      "alias",
      "always",
      "always_comb",
      "always_ff",
      "always_latch",
      "and",
      "assert",
      "assign",
      "assume",
      "automatic",
      "before",
      "begin",
      "bind",
      "bins",
      "binsof",
      "bit",
      "break",
      "buf|0",
      "bufif0",
      "bufif1",
      "byte",
      "case",
      "casex",
      "casez",
      "cell",
      "chandle",
      "checker",
      "class",
      "clocking",
      "cmos",
      "config",
      "const",
      "constraint",
      "context",
      "continue",
      "cover",
      "covergroup",
      "coverpoint",
      "cross",
      "deassign",
      "default",
      "defparam",
      "design",
      "disable",
      "dist",
      "do",
      "edge",
      "else",
      "end",
      "endcase",
      "endchecker",
      "endclass",
      "endclocking",
      "endconfig",
      "endfunction",
      "endgenerate",
      "endgroup",
      "endinterface",
      "endmodule",
      "endpackage",
      "endprimitive",
      "endprogram",
      "endproperty",
      "endspecify",
      "endsequence",
      "endtable",
      "endtask",
      "enum",
      "event",
      "eventually",
      "expect",
      "export",
      "extends",
      "extern",
      "final",
      "first_match",
      "for",
      "force",
      "foreach",
      "forever",
      "fork",
      "forkjoin",
      "function",
      "generate|5",
      "genvar",
      "global",
      "highz0",
      "highz1",
      "if",
      "iff",
      "ifnone",
      "ignore_bins",
      "illegal_bins",
      "implements",
      "implies",
      "import",
      "incdir",
      "include",
      "initial",
      "inout",
      "input",
      "inside",
      "instance",
      "int",
      "integer",
      "interconnect",
      "interface",
      "intersect",
      "join",
      "join_any",
      "join_none",
      "large",
      "let",
      "liblist",
      "library",
      "local",
      "localparam",
      "logic",
      "longint",
      "macromodule",
      "matches",
      "medium",
      "modport",
      "module",
      "nand",
      "negedge",
      "nettype",
      "new",
      "nexttime",
      "nmos",
      "nor",
      "noshowcancelled",
      "not",
      "notif0",
      "notif1",
      "or",
      "output",
      "package",
      "packed",
      "parameter",
      "pmos",
      "posedge",
      "primitive",
      "priority",
      "program",
      "property",
      "protected",
      "pull0",
      "pull1",
      "pulldown",
      "pullup",
      "pulsestyle_ondetect",
      "pulsestyle_onevent",
      "pure",
      "rand",
      "randc",
      "randcase",
      "randsequence",
      "rcmos",
      "real",
      "realtime",
      "ref",
      "reg",
      "reject_on",
      "release",
      "repeat",
      "restrict",
      "return",
      "rnmos",
      "rpmos",
      "rtran",
      "rtranif0",
      "rtranif1",
      "s_always",
      "s_eventually",
      "s_nexttime",
      "s_until",
      "s_until_with",
      "scalared",
      "sequence",
      "shortint",
      "shortreal",
      "showcancelled",
      "signed",
      "small",
      "soft",
      "solve",
      "specify",
      "specparam",
      "static",
      "string",
      "strong",
      "strong0",
      "strong1",
      "struct",
      "super",
      "supply0",
      "supply1",
      "sync_accept_on",
      "sync_reject_on",
      "table",
      "tagged",
      "task",
      "this",
      "throughout",
      "time",
      "timeprecision",
      "timeunit",
      "tran",
      "tranif0",
      "tranif1",
      "tri",
      "tri0",
      "tri1",
      "triand",
      "trior",
      "trireg",
      "type",
      "typedef",
      "union",
      "unique",
      "unique0",
      "unsigned",
      "until",
      "until_with",
      "untyped",
      "use",
      "uwire",
      "var",
      "vectored",
      "virtual",
      "void",
      "wait",
      "wait_order",
      "wand",
      "weak",
      "weak0",
      "weak1",
      "while",
      "wildcard",
      "wire",
      "with",
      "within",
      "wor",
      "xnor",
      "xor"
    ],
    literal: ["null"],
    built_in: [
      "$finish",
      "$stop",
      "$exit",
      "$fatal",
      "$error",
      "$warning",
      "$info",
      "$realtime",
      "$time",
      "$printtimescale",
      "$bitstoreal",
      "$bitstoshortreal",
      "$itor",
      "$signed",
      "$cast",
      "$bits",
      "$stime",
      "$timeformat",
      "$realtobits",
      "$shortrealtobits",
      "$rtoi",
      "$unsigned",
      "$asserton",
      "$assertkill",
      "$assertpasson",
      "$assertfailon",
      "$assertnonvacuouson",
      "$assertoff",
      "$assertcontrol",
      "$assertpassoff",
      "$assertfailoff",
      "$assertvacuousoff",
      "$isunbounded",
      "$sampled",
      "$fell",
      "$changed",
      "$past_gclk",
      "$fell_gclk",
      "$changed_gclk",
      "$rising_gclk",
      "$steady_gclk",
      "$coverage_control",
      "$coverage_get",
      "$coverage_save",
      "$set_coverage_db_name",
      "$rose",
      "$stable",
      "$past",
      "$rose_gclk",
      "$stable_gclk",
      "$future_gclk",
      "$falling_gclk",
      "$changing_gclk",
      "$display",
      "$coverage_get_max",
      "$coverage_merge",
      "$get_coverage",
      "$load_coverage_db",
      "$typename",
      "$unpacked_dimensions",
      "$left",
      "$low",
      "$increment",
      "$clog2",
      "$ln",
      "$log10",
      "$exp",
      "$sqrt",
      "$pow",
      "$floor",
      "$ceil",
      "$sin",
      "$cos",
      "$tan",
      "$countbits",
      "$onehot",
      "$isunknown",
      "$fatal",
      "$warning",
      "$dimensions",
      "$right",
      "$high",
      "$size",
      "$asin",
      "$acos",
      "$atan",
      "$atan2",
      "$hypot",
      "$sinh",
      "$cosh",
      "$tanh",
      "$asinh",
      "$acosh",
      "$atanh",
      "$countones",
      "$onehot0",
      "$error",
      "$info",
      "$random",
      "$dist_chi_square",
      "$dist_erlang",
      "$dist_exponential",
      "$dist_normal",
      "$dist_poisson",
      "$dist_t",
      "$dist_uniform",
      "$q_initialize",
      "$q_remove",
      "$q_exam",
      "$async$and$array",
      "$async$nand$array",
      "$async$or$array",
      "$async$nor$array",
      "$sync$and$array",
      "$sync$nand$array",
      "$sync$or$array",
      "$sync$nor$array",
      "$q_add",
      "$q_full",
      "$psprintf",
      "$async$and$plane",
      "$async$nand$plane",
      "$async$or$plane",
      "$async$nor$plane",
      "$sync$and$plane",
      "$sync$nand$plane",
      "$sync$or$plane",
      "$sync$nor$plane",
      "$system",
      "$display",
      "$displayb",
      "$displayh",
      "$displayo",
      "$strobe",
      "$strobeb",
      "$strobeh",
      "$strobeo",
      "$write",
      "$readmemb",
      "$readmemh",
      "$writememh",
      "$value$plusargs",
      "$dumpvars",
      "$dumpon",
      "$dumplimit",
      "$dumpports",
      "$dumpportson",
      "$dumpportslimit",
      "$writeb",
      "$writeh",
      "$writeo",
      "$monitor",
      "$monitorb",
      "$monitorh",
      "$monitoro",
      "$writememb",
      "$dumpfile",
      "$dumpoff",
      "$dumpall",
      "$dumpflush",
      "$dumpportsoff",
      "$dumpportsall",
      "$dumpportsflush",
      "$fclose",
      "$fdisplay",
      "$fdisplayb",
      "$fdisplayh",
      "$fdisplayo",
      "$fstrobe",
      "$fstrobeb",
      "$fstrobeh",
      "$fstrobeo",
      "$swrite",
      "$swriteb",
      "$swriteh",
      "$swriteo",
      "$fscanf",
      "$fread",
      "$fseek",
      "$fflush",
      "$feof",
      "$fopen",
      "$fwrite",
      "$fwriteb",
      "$fwriteh",
      "$fwriteo",
      "$fmonitor",
      "$fmonitorb",
      "$fmonitorh",
      "$fmonitoro",
      "$sformat",
      "$sformatf",
      "$fgetc",
      "$ungetc",
      "$fgets",
      "$sscanf",
      "$rewind",
      "$ftell",
      "$ferror"
    ]
  }, n = [
    "__FILE__",
    "__LINE__"
  ], a = [
    "begin_keywords",
    "celldefine",
    "default_nettype",
    "default_decay_time",
    "default_trireg_strength",
    "define",
    "delay_mode_distributed",
    "delay_mode_path",
    "delay_mode_unit",
    "delay_mode_zero",
    "else",
    "elsif",
    "end_keywords",
    "endcelldefine",
    "endif",
    "ifdef",
    "ifndef",
    "include",
    "line",
    "nounconnected_drive",
    "pragma",
    "resetall",
    "timescale",
    "unconnected_drive",
    "undef",
    "undefineall"
  ];
  return {
    name: "Verilog",
    aliases: [
      "v",
      "sv",
      "svh"
    ],
    case_insensitive: !1,
    keywords: r,
    contains: [
      t.C_BLOCK_COMMENT_MODE,
      t.C_LINE_COMMENT_MODE,
      t.QUOTE_STRING_MODE,
      {
        scope: "number",
        contains: [t.BACKSLASH_ESCAPE],
        variants: [
          { begin: /\b((\d+'([bhodBHOD]))[0-9xzXZa-fA-F_]+)/ },
          { begin: /\B(('([bhodBHOD]))[0-9xzXZa-fA-F_]+)/ },
          {
            // decimal
            begin: /\b[0-9][0-9_]*/,
            relevance: 0
          }
        ]
      },
      /* parameters to instances */
      {
        scope: "variable",
        variants: [
          { begin: "#\\((?!parameter).+\\)" },
          {
            begin: "\\.\\w+",
            relevance: 0
          }
        ]
      },
      {
        scope: "variable.constant",
        match: e.concat(/`/, e.either(...n))
      },
      {
        scope: "meta",
        begin: e.concat(/`/, e.either(...a)),
        end: /$|\/\/|\/\*/,
        returnEnd: !0,
        keywords: a
      }
    ]
  };
}
const voe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gte
}, Symbol.toStringTag, { value: "Module" }));
function Ute(t) {
  const e = "\\d(_|\\d)*", r = "[eE][-+]?" + e, n = e + "(\\." + e + ")?(" + r + ")?", a = "\\w+", o = "\\b(" + (e + "#" + a + "(\\." + a + ")?#(" + r + ")?") + "|" + n + ")";
  return {
    name: "VHDL",
    case_insensitive: !0,
    keywords: {
      keyword: [
        "abs",
        "access",
        "after",
        "alias",
        "all",
        "and",
        "architecture",
        "array",
        "assert",
        "assume",
        "assume_guarantee",
        "attribute",
        "begin",
        "block",
        "body",
        "buffer",
        "bus",
        "case",
        "component",
        "configuration",
        "constant",
        "context",
        "cover",
        "disconnect",
        "downto",
        "default",
        "else",
        "elsif",
        "end",
        "entity",
        "exit",
        "fairness",
        "file",
        "for",
        "force",
        "function",
        "generate",
        "generic",
        "group",
        "guarded",
        "if",
        "impure",
        "in",
        "inertial",
        "inout",
        "is",
        "label",
        "library",
        "linkage",
        "literal",
        "loop",
        "map",
        "mod",
        "nand",
        "new",
        "next",
        "nor",
        "not",
        "null",
        "of",
        "on",
        "open",
        "or",
        "others",
        "out",
        "package",
        "parameter",
        "port",
        "postponed",
        "procedure",
        "process",
        "property",
        "protected",
        "pure",
        "range",
        "record",
        "register",
        "reject",
        "release",
        "rem",
        "report",
        "restrict",
        "restrict_guarantee",
        "return",
        "rol",
        "ror",
        "select",
        "sequence",
        "severity",
        "shared",
        "signal",
        "sla",
        "sll",
        "sra",
        "srl",
        "strong",
        "subtype",
        "then",
        "to",
        "transport",
        "type",
        "unaffected",
        "units",
        "until",
        "use",
        "variable",
        "view",
        "vmode",
        "vprop",
        "vunit",
        "wait",
        "when",
        "while",
        "with",
        "xnor",
        "xor"
      ],
      built_in: [
        "boolean",
        "bit",
        "character",
        "integer",
        "time",
        "delay_length",
        "natural",
        "positive",
        "string",
        "bit_vector",
        "file_open_kind",
        "file_open_status",
        "std_logic",
        "std_logic_vector",
        "unsigned",
        "signed",
        "boolean_vector",
        "integer_vector",
        "std_ulogic",
        "std_ulogic_vector",
        "unresolved_unsigned",
        "u_unsigned",
        "unresolved_signed",
        "u_signed",
        "real_vector",
        "time_vector"
      ],
      literal: [
        // severity_level
        "false",
        "true",
        "note",
        "warning",
        "error",
        "failure",
        // textio
        "line",
        "text",
        "side",
        "width"
      ]
    },
    illegal: /\{/,
    contains: [
      t.C_BLOCK_COMMENT_MODE,
      // VHDL-2008 block commenting.
      t.COMMENT("--", "$"),
      t.QUOTE_STRING_MODE,
      {
        className: "number",
        begin: o,
        relevance: 0
      },
      {
        className: "string",
        begin: "'(U|X|0|1|Z|W|L|H|-)'",
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        className: "symbol",
        begin: "'[A-Za-z](_?[A-Za-z0-9])*",
        contains: [t.BACKSLASH_ESCAPE]
      }
    ]
  };
}
const moe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ute
}, Symbol.toStringTag, { value: "Module" }));
function zte(t) {
  return {
    name: "Vim Script",
    keywords: {
      $pattern: /[!#@\w]+/,
      keyword: (
        // express version except: ! & * < = > !! # @ @@
        "N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank"
      ),
      built_in: (
        // built in func
        "synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv complete_check add getwinposx getqflist getwinposy screencol clearmatches empty extend getcmdpos mzeval garbagecollect setreg ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable shiftwidth max sinh isdirectory synID system inputrestore winline atan visualmode inputlist tabpagewinnr round getregtype mapcheck hasmapto histdel argidx findfile sha256 exists toupper getcmdline taglist string getmatches bufnr strftime winwidth bufexists strtrans tabpagebuflist setcmdpos remote_read printf setloclist getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval resolve libcallnr foldclosedend reverse filter has_key bufname str2float strlen setline getcharmod setbufvar index searchpos shellescape undofile foldclosed setqflist buflisted strchars str2nr virtcol floor remove undotree remote_expr winheight gettabwinvar reltime cursor tabpagenr finddir localtime acos getloclist search tanh matchend rename gettabvar strdisplaywidth type abs py3eval setwinvar tolower wildmenumode log10 spellsuggest bufloaded synconcealed nextnonblank server2client complete settabwinvar executable input wincol setmatches getftype hlID inputsave searchpair or screenrow line settabvar histadd deepcopy strpart remote_peek and eval getftime submatch screenchar winsaveview matchadd mkdir screenattr getfontname libcall reltimestr getfsize winnr invert pow getbufline byte2line soundfold repeat fnameescape tagfiles sin strwidth spellbadword trunc maparg log lispindent hostname setpos globpath remote_foreground getchar synIDattr fnamemodify cscope_connection stridx winbufnr indent min complete_add nr2char searchpairpos inputdialog values matchlist items hlexists strridx browsedir expand fmod pathshorten line2byte argc count getwinvar glob foldtextresult getreg foreground cosh matchdelete has char2nr simplify histget searchdecl iconv winrestcmd pumvisible writefile foldlevel haslocaldir keys cos matchstr foldtext histnr tan tempname getcwd byteidx getbufvar islocked escape eventhandler remote_send serverlist winrestview synstack pyeval prevnonblank readfile cindent filereadable changenr exp"
      )
    },
    illegal: /;/,
    contains: [
      t.NUMBER_MODE,
      {
        className: "string",
        begin: "'",
        end: "'",
        illegal: "\\n"
      },
      /*
            A double quote can start either a string or a line comment. Strings are
            ended before the end of a line by another double quote and can contain
            escaped double-quotes and post-escaped line breaks.
      
            Also, any double quote at the beginning of a line is a comment but we
            don't handle that properly at the moment: any double quote inside will
            turn them into a string. Handling it properly will require a smarter
            parser.
            */
      {
        className: "string",
        begin: /"(\\"|\n\\|[^"\n])*"/
      },
      t.COMMENT('"', "$"),
      {
        className: "variable",
        begin: /[bwtglsav]:[\w\d_]+/
      },
      {
        begin: [
          /\b(?:function|function!)/,
          /\s+/,
          t.IDENT_RE
        ],
        className: {
          1: "keyword",
          3: "title"
        },
        end: "$",
        relevance: 0,
        contains: [
          {
            className: "params",
            begin: "\\(",
            end: "\\)"
          }
        ]
      },
      {
        className: "symbol",
        begin: /<[\w-]+>/
      }
    ]
  };
}
const _oe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zte
}, Symbol.toStringTag, { value: "Module" }));
function Vte(t) {
  t.regex;
  const e = t.COMMENT(/\(;/, /;\)/);
  e.contains.push("self");
  const r = t.COMMENT(/;;/, /$/), n = [
    "anyfunc",
    "block",
    "br",
    "br_if",
    "br_table",
    "call",
    "call_indirect",
    "data",
    "drop",
    "elem",
    "else",
    "end",
    "export",
    "func",
    "global.get",
    "global.set",
    "local.get",
    "local.set",
    "local.tee",
    "get_global",
    "get_local",
    "global",
    "if",
    "import",
    "local",
    "loop",
    "memory",
    "memory.grow",
    "memory.size",
    "module",
    "mut",
    "nop",
    "offset",
    "param",
    "result",
    "return",
    "select",
    "set_global",
    "set_local",
    "start",
    "table",
    "tee_local",
    "then",
    "type",
    "unreachable"
  ], a = {
    begin: [
      /(?:func|call|call_indirect)/,
      /\s+/,
      /\$[^\s)]+/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    }
  }, i = {
    className: "variable",
    begin: /\$[\w_]+/
  }, o = {
    match: /(\((?!;)|\))+/,
    className: "punctuation",
    relevance: 0
  }, s = {
    className: "number",
    relevance: 0,
    // borrowed from Prism, TODO: split out into variants
    match: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/
  }, l = {
    // look-ahead prevents us from gobbling up opcodes
    match: /(i32|i64|f32|f64)(?!\.)/,
    className: "type"
  }, u = {
    className: "keyword",
    // borrowed from Prism, TODO: split out into variants
    match: /\b(f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))\b/
  };
  return {
    name: "WebAssembly",
    keywords: {
      $pattern: /[\w.]+/,
      keyword: n
    },
    contains: [
      r,
      e,
      {
        match: [
          /(?:offset|align)/,
          /\s*/,
          /=/
        ],
        className: {
          1: "keyword",
          3: "operator"
        }
      },
      i,
      o,
      a,
      t.QUOTE_STRING_MODE,
      l,
      u,
      s
    ]
  };
}
const yoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Vte
}, Symbol.toStringTag, { value: "Module" }));
function $te(t) {
  const e = t.regex, r = /[a-zA-Z]\w*/, n = [
    "as",
    "break",
    "class",
    "construct",
    "continue",
    "else",
    "for",
    "foreign",
    "if",
    "import",
    "in",
    "is",
    "return",
    "static",
    "var",
    "while"
  ], a = [
    "true",
    "false",
    "null"
  ], i = [
    "this",
    "super"
  ], o = [
    "Bool",
    "Class",
    "Fiber",
    "Fn",
    "List",
    "Map",
    "Null",
    "Num",
    "Object",
    "Range",
    "Sequence",
    "String",
    "System"
  ], s = [
    "-",
    "~",
    /\*/,
    "%",
    /\.\.\./,
    /\.\./,
    /\+/,
    "<<",
    ">>",
    ">=",
    "<=",
    "<",
    ">",
    /\^/,
    /!=/,
    /!/,
    /\bis\b/,
    "==",
    "&&",
    "&",
    /\|\|/,
    /\|/,
    /\?:/,
    "="
  ], l = {
    relevance: 0,
    match: e.concat(/\b(?!(if|while|for|else|super)\b)/, r, /(?=\s*[({])/),
    className: "title.function"
  }, u = {
    match: e.concat(
      e.either(
        e.concat(/\b(?!(if|while|for|else|super)\b)/, r),
        e.either(...s)
      ),
      /(?=\s*\([^)]+\)\s*\{)/
    ),
    className: "title.function",
    starts: { contains: [
      {
        begin: /\(/,
        end: /\)/,
        contains: [
          {
            relevance: 0,
            scope: "params",
            match: r
          }
        ]
      }
    ] }
  }, c = {
    variants: [
      { match: [
        /class\s+/,
        r,
        /\s+is\s+/,
        r
      ] },
      { match: [
        /class\s+/,
        r
      ] }
    ],
    scope: {
      2: "title.class",
      4: "title.class.inherited"
    },
    keywords: n
  }, d = {
    relevance: 0,
    match: e.either(...s),
    className: "operator"
  }, p = {
    className: "string",
    begin: /"""/,
    end: /"""/
  }, f = {
    className: "property",
    begin: e.concat(/\./, e.lookahead(r)),
    end: r,
    excludeBegin: !0,
    relevance: 0
  }, h = {
    relevance: 0,
    match: e.concat(/\b_/, r),
    scope: "variable"
  }, g = {
    relevance: 0,
    match: /\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,
    scope: "title.class",
    keywords: { _: o }
  }, v = t.C_NUMBER_MODE, m = {
    match: [
      r,
      /\s*/,
      /=/,
      /\s*/,
      /\(/,
      r,
      /\)\s*\{/
    ],
    scope: {
      1: "title.function",
      3: "operator",
      6: "params"
    }
  }, _ = t.COMMENT(
    /\/\*\*/,
    /\*\//,
    { contains: [
      {
        match: /@[a-z]+/,
        scope: "doctag"
      },
      "self"
    ] }
  ), y = {
    scope: "subst",
    begin: /%\(/,
    end: /\)/,
    contains: [
      v,
      g,
      l,
      h,
      d
    ]
  }, b = {
    scope: "string",
    begin: /"/,
    end: /"/,
    contains: [
      y,
      {
        scope: "char.escape",
        variants: [
          { match: /\\\\|\\["0%abefnrtv]/ },
          { match: /\\x[0-9A-F]{2}/ },
          { match: /\\u[0-9A-F]{4}/ },
          { match: /\\U[0-9A-F]{8}/ }
        ]
      }
    ]
  };
  y.contains.push(b);
  const S = [
    ...n,
    ...i,
    ...a
  ], E = {
    relevance: 0,
    match: e.concat(
      "\\b(?!",
      S.join("|"),
      "\\b)",
      /[a-zA-Z_]\w*(?:[?!]|\b)/
    ),
    className: "variable"
  };
  return {
    name: "Wren",
    keywords: {
      keyword: n,
      "variable.language": i,
      literal: a
    },
    contains: [
      {
        // scope: "meta",
        scope: "comment",
        variants: [
          {
            begin: [
              /#!?/,
              /[A-Za-z_]+(?=\()/
            ],
            beginScope: {
              // 2: "attr"
            },
            keywords: { literal: a },
            contains: [
              // NUMBER,
              // VARIABLE
            ],
            end: /\)/
          },
          {
            begin: [
              /#!?/,
              /[A-Za-z_]+/
            ],
            beginScope: {
              // 2: "attr"
            },
            end: /$/
          }
        ]
      },
      v,
      b,
      p,
      _,
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      g,
      c,
      m,
      u,
      l,
      d,
      h,
      f,
      E
    ]
  };
}
const boe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $te
}, Symbol.toStringTag, { value: "Module" }));
function Hte(t) {
  return {
    name: "Intel x86 Assembly",
    case_insensitive: !0,
    keywords: {
      $pattern: "[.%]?" + t.IDENT_RE,
      keyword: "lock rep repe repz repne repnz xaquire xrelease bnd nobnd aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63",
      built_in: (
        // Instruction pointer
        "ip eip rip al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 cs ds es fs gs ss st st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0 k1 k2 k3 k4 k5 k6 k7 bnd0 bnd1 bnd2 bnd3 cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d r0h r1h r2h r3h r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l db dw dd dq dt ddq do dy dz resb resw resd resq rest resdq reso resy resz incbin equ times byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr"
      ),
      meta: "%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif %if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep %endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment .nolist __FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ __UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend align alignb sectalign daz nodaz up down zero default option assume public bits use16 use32 use64 default section segment absolute extern global common cpu float __utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ __float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ __Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__"
    },
    contains: [
      t.COMMENT(
        ";",
        "$",
        { relevance: 0 }
      ),
      {
        className: "number",
        variants: [
          // Float number and x87 BCD
          {
            begin: "\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|(0[Xx])?[0-9][0-9_]*(\\.[0-9_]*)?(?:[pP](?:[+-]?[0-9_]+)?)?)\\b",
            relevance: 0
          },
          // Hex number in $
          {
            begin: "\\$[0-9][0-9A-Fa-f]*",
            relevance: 0
          },
          // Number in H,D,T,Q,O,B,Y suffix
          { begin: "\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b" },
          // Number in X,D,T,Q,O,B,Y prefix
          { begin: "\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b" }
        ]
      },
      // Double quote string
      t.QUOTE_STRING_MODE,
      {
        className: "string",
        variants: [
          // Single-quoted string
          {
            begin: "'",
            end: "[^\\\\]'"
          },
          // Backquoted string
          {
            begin: "`",
            end: "[^\\\\]`"
          }
        ],
        relevance: 0
      },
      {
        className: "symbol",
        variants: [
          // Global label and local label
          { begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)" },
          // Macro-local label
          { begin: "^\\s*%%[A-Za-z0-9_$#@~.?]*:" }
        ],
        relevance: 0
      },
      // Macro parameter
      {
        className: "subst",
        begin: "%[0-9]+",
        relevance: 0
      },
      // Macro parameter
      {
        className: "subst",
        begin: "%!S+",
        relevance: 0
      },
      {
        className: "meta",
        begin: /^\s*\.[\w_-]+/
      }
    ]
  };
}
const Soe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Hte
}, Symbol.toStringTag, { value: "Module" }));
function Wte(t) {
  const e = [
    "if",
    "then",
    "else",
    "do",
    "while",
    "until",
    "for",
    "loop",
    "import",
    "with",
    "is",
    "as",
    "where",
    "when",
    "by",
    "data",
    "constant",
    "integer",
    "real",
    "text",
    "name",
    "boolean",
    "symbol",
    "infix",
    "prefix",
    "postfix",
    "block",
    "tree"
  ], r = [
    "in",
    "mod",
    "rem",
    "and",
    "or",
    "xor",
    "not",
    "abs",
    "sign",
    "floor",
    "ceil",
    "sqrt",
    "sin",
    "cos",
    "tan",
    "asin",
    "acos",
    "atan",
    "exp",
    "expm1",
    "log",
    "log2",
    "log10",
    "log1p",
    "pi",
    "at",
    "text_length",
    "text_range",
    "text_find",
    "text_replace",
    "contains",
    "page",
    "slide",
    "basic_slide",
    "title_slide",
    "title",
    "subtitle",
    "fade_in",
    "fade_out",
    "fade_at",
    "clear_color",
    "color",
    "line_color",
    "line_width",
    "texture_wrap",
    "texture_transform",
    "texture",
    "scale_?x",
    "scale_?y",
    "scale_?z?",
    "translate_?x",
    "translate_?y",
    "translate_?z?",
    "rotate_?x",
    "rotate_?y",
    "rotate_?z?",
    "rectangle",
    "circle",
    "ellipse",
    "sphere",
    "path",
    "line_to",
    "move_to",
    "quad_to",
    "curve_to",
    "theme",
    "background",
    "contents",
    "locally",
    "time",
    "mouse_?x",
    "mouse_?y",
    "mouse_buttons"
  ], n = [
    "ObjectLoader",
    "Animate",
    "MovieCredits",
    "Slides",
    "Filters",
    "Shading",
    "Materials",
    "LensFlare",
    "Mapping",
    "VLCAudioVideo",
    "StereoDecoder",
    "PointCloud",
    "NetworkAccess",
    "RemoteControl",
    "RegExp",
    "ChromaKey",
    "Snowfall",
    "NodeJS",
    "Speech",
    "Charts"
  ], i = {
    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,
    keyword: e,
    literal: [
      "true",
      "false",
      "nil"
    ],
    built_in: r.concat(n)
  }, o = {
    className: "string",
    begin: '"',
    end: '"',
    illegal: "\\n"
  }, s = {
    className: "string",
    begin: "'",
    end: "'",
    illegal: "\\n"
  }, l = {
    className: "string",
    begin: "<<",
    end: ">>"
  }, u = {
    className: "number",
    begin: "[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?"
  }, c = {
    beginKeywords: "import",
    end: "$",
    keywords: i,
    contains: [o]
  }, d = {
    className: "function",
    begin: /[a-z][^\n]*->/,
    returnBegin: !0,
    end: /->/,
    contains: [
      t.inherit(t.TITLE_MODE, { starts: {
        endsWithParent: !0,
        keywords: i
      } })
    ]
  };
  return {
    name: "XL",
    aliases: ["tao"],
    keywords: i,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.C_BLOCK_COMMENT_MODE,
      o,
      s,
      l,
      d,
      c,
      u,
      t.NUMBER_MODE
    ]
  };
}
const Eoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Wte
}, Symbol.toStringTag, { value: "Module" }));
function qte(t) {
  const e = t.regex, r = e.concat(/[\p{L}_]/u, e.optional(/[\p{L}0-9_.-]*:/u), /[\p{L}0-9_.-]*/u), n = /[\p{L}0-9._:-]+/u, a = {
    className: "symbol",
    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/
  }, i = {
    begin: /\s/,
    contains: [
      {
        className: "keyword",
        begin: /#?[a-z_][a-z1-9_-]+/,
        illegal: /\n/
      }
    ]
  }, o = t.inherit(i, {
    begin: /\(/,
    end: /\)/
  }), s = t.inherit(t.APOS_STRING_MODE, { className: "string" }), l = t.inherit(t.QUOTE_STRING_MODE, { className: "string" }), u = {
    endsWithParent: !0,
    illegal: /</,
    relevance: 0,
    contains: [
      {
        className: "attr",
        begin: n,
        relevance: 0
      },
      {
        begin: /=\s*/,
        relevance: 0,
        contains: [
          {
            className: "string",
            endsParent: !0,
            variants: [
              {
                begin: /"/,
                end: /"/,
                contains: [a]
              },
              {
                begin: /'/,
                end: /'/,
                contains: [a]
              },
              { begin: /[^\s"'=<>`]+/ }
            ]
          }
        ]
      }
    ]
  };
  return {
    name: "HTML, XML",
    aliases: [
      "html",
      "xhtml",
      "rss",
      "atom",
      "xjb",
      "xsd",
      "xsl",
      "plist",
      "wsf",
      "svg"
    ],
    case_insensitive: !0,
    unicodeRegex: !0,
    contains: [
      {
        className: "meta",
        begin: /<![a-z]/,
        end: />/,
        relevance: 10,
        contains: [
          i,
          l,
          s,
          o,
          {
            begin: /\[/,
            end: /\]/,
            contains: [
              {
                className: "meta",
                begin: /<![a-z]/,
                end: />/,
                contains: [
                  i,
                  o,
                  l,
                  s
                ]
              }
            ]
          }
        ]
      },
      t.COMMENT(
        /<!--/,
        /-->/,
        { relevance: 10 }
      ),
      {
        begin: /<!\[CDATA\[/,
        end: /\]\]>/,
        relevance: 10
      },
      a,
      // xml processing instructions
      {
        className: "meta",
        end: /\?>/,
        variants: [
          {
            begin: /<\?xml/,
            relevance: 10,
            contains: [
              l
            ]
          },
          {
            begin: /<\?[a-z][a-z0-9]+/
          }
        ]
      },
      {
        className: "tag",
        /*
        The lookahead pattern (?=...) ensures that 'begin' only matches
        '<style' as a single word, followed by a whitespace or an
        ending bracket.
        */
        begin: /<style(?=\s|>)/,
        end: />/,
        keywords: { name: "style" },
        contains: [u],
        starts: {
          end: /<\/style>/,
          returnEnd: !0,
          subLanguage: [
            "css",
            "xml"
          ]
        }
      },
      {
        className: "tag",
        // See the comment in the <style tag about the lookahead pattern
        begin: /<script(?=\s|>)/,
        end: />/,
        keywords: { name: "script" },
        contains: [u],
        starts: {
          end: /<\/script>/,
          returnEnd: !0,
          subLanguage: [
            "javascript",
            "handlebars",
            "xml"
          ]
        }
      },
      // we need this for now for jSX
      {
        className: "tag",
        begin: /<>|<\/>/
      },
      // open tag
      {
        className: "tag",
        begin: e.concat(
          /</,
          e.lookahead(e.concat(
            r,
            // <tag/>
            // <tag>
            // <tag ...
            e.either(/\/>/, />/, /\s/)
          ))
        ),
        end: /\/?>/,
        contains: [
          {
            className: "name",
            begin: r,
            relevance: 0,
            starts: u
          }
        ]
      },
      // close tag
      {
        className: "tag",
        begin: e.concat(
          /<\//,
          e.lookahead(e.concat(
            r,
            />/
          ))
        ),
        contains: [
          {
            className: "name",
            begin: r,
            relevance: 0
          },
          {
            begin: />/,
            relevance: 0,
            endsParent: !0
          }
        ]
      }
    ]
  };
}
const Toe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qte
}, Symbol.toStringTag, { value: "Module" }));
function Yte(t) {
  return {
    name: "XQuery",
    aliases: [
      "xpath",
      "xq",
      "xqm"
    ],
    case_insensitive: !1,
    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,
    keywords: {
      $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,
      keyword: [
        "module",
        "schema",
        "namespace",
        "boundary-space",
        "preserve",
        "no-preserve",
        "strip",
        "default",
        "collation",
        "base-uri",
        "ordering",
        "context",
        "decimal-format",
        "decimal-separator",
        "copy-namespaces",
        "empty-sequence",
        "except",
        "exponent-separator",
        "external",
        "grouping-separator",
        "inherit",
        "no-inherit",
        "lax",
        "minus-sign",
        "per-mille",
        "percent",
        "schema-attribute",
        "schema-element",
        "strict",
        "unordered",
        "zero-digit",
        "declare",
        "import",
        "option",
        "function",
        "validate",
        "variable",
        "for",
        "at",
        "in",
        "let",
        "where",
        "order",
        "group",
        "by",
        "return",
        "if",
        "then",
        "else",
        "tumbling",
        "sliding",
        "window",
        "start",
        "when",
        "only",
        "end",
        "previous",
        "next",
        "stable",
        "ascending",
        "descending",
        "allowing",
        "empty",
        "greatest",
        "least",
        "some",
        "every",
        "satisfies",
        "switch",
        "case",
        "typeswitch",
        "try",
        "catch",
        "and",
        "or",
        "to",
        "union",
        "intersect",
        "instance",
        "of",
        "treat",
        "as",
        "castable",
        "cast",
        "map",
        "array",
        "delete",
        "insert",
        "into",
        "replace",
        "value",
        "rename",
        "copy",
        "modify",
        "update"
      ],
      type: [
        "item",
        "document-node",
        "node",
        "attribute",
        "document",
        "element",
        "comment",
        "namespace",
        "namespace-node",
        "processing-instruction",
        "text",
        "construction",
        "xs:anyAtomicType",
        "xs:untypedAtomic",
        "xs:duration",
        "xs:time",
        "xs:decimal",
        "xs:float",
        "xs:double",
        "xs:gYearMonth",
        "xs:gYear",
        "xs:gMonthDay",
        "xs:gMonth",
        "xs:gDay",
        "xs:boolean",
        "xs:base64Binary",
        "xs:hexBinary",
        "xs:anyURI",
        "xs:QName",
        "xs:NOTATION",
        "xs:dateTime",
        "xs:dateTimeStamp",
        "xs:date",
        "xs:string",
        "xs:normalizedString",
        "xs:token",
        "xs:language",
        "xs:NMTOKEN",
        "xs:Name",
        "xs:NCName",
        "xs:ID",
        "xs:IDREF",
        "xs:ENTITY",
        "xs:integer",
        "xs:nonPositiveInteger",
        "xs:negativeInteger",
        "xs:long",
        "xs:int",
        "xs:short",
        "xs:byte",
        "xs:nonNegativeInteger",
        "xs:unisignedLong",
        "xs:unsignedInt",
        "xs:unsignedShort",
        "xs:unsignedByte",
        "xs:positiveInteger",
        "xs:yearMonthDuration",
        "xs:dayTimeDuration"
      ],
      literal: [
        "eq",
        "ne",
        "lt",
        "le",
        "gt",
        "ge",
        "is",
        "self::",
        "child::",
        "descendant::",
        "descendant-or-self::",
        "attribute::",
        "following::",
        "following-sibling::",
        "parent::",
        "ancestor::",
        "ancestor-or-self::",
        "preceding::",
        "preceding-sibling::",
        "NaN"
      ]
    },
    contains: [
      {
        className: "variable",
        begin: /[$][\w\-:]+/
      },
      {
        className: "built_in",
        variants: [
          {
            begin: /\barray:/,
            end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\b/
          },
          {
            begin: /\bmap:/,
            end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\b/
          },
          {
            begin: /\bmath:/,
            end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\b/
          },
          {
            begin: /\bop:/,
            end: /\(/,
            excludeEnd: !0
          },
          {
            begin: /\bfn:/,
            end: /\(/,
            excludeEnd: !0
          },
          // do not highlight inbuilt strings as variable or xml element names
          { begin: /[^</$:'"-]\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\b/ },
          {
            begin: /\blocal:/,
            end: /\(/,
            excludeEnd: !0
          },
          {
            begin: /\bzip:/,
            end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\b/
          },
          {
            begin: /\b(?:util|db|functx|app|xdmp|xmldb):/,
            end: /\(/,
            excludeEnd: !0
          }
        ]
      },
      {
        className: "string",
        variants: [
          {
            begin: /"/,
            end: /"/,
            contains: [
              {
                begin: /""/,
                relevance: 0
              }
            ]
          },
          {
            begin: /'/,
            end: /'/,
            contains: [
              {
                begin: /''/,
                relevance: 0
              }
            ]
          }
        ]
      },
      {
        className: "number",
        begin: /(\b0[0-7_]+)|(\b0x[0-9a-fA-F_]+)|(\b[1-9][0-9_]*(\.[0-9_]+)?)|[0_]\b/,
        relevance: 0
      },
      {
        className: "comment",
        begin: /\(:/,
        end: /:\)/,
        relevance: 10,
        contains: [
          {
            className: "doctag",
            begin: /@\w+/
          }
        ]
      },
      {
        className: "meta",
        begin: /%[\w\-:]+/
      },
      {
        className: "title",
        begin: /\bxquery version "[13]\.[01]"\s?(?:encoding ".+")?/,
        end: /;/
      },
      {
        beginKeywords: "element attribute comment document processing-instruction",
        end: /\{/,
        excludeEnd: !0
      },
      {
        begin: /<([\w._:-]+)(\s+\S*=('|").*('|"))?>/,
        end: /(\/[\w._:-]+>)/,
        subLanguage: "xml",
        contains: [
          {
            begin: /\{/,
            end: /\}/,
            subLanguage: "xquery"
          },
          "self"
        ]
      }
    ]
  };
}
const xoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Yte
}, Symbol.toStringTag, { value: "Module" }));
function Kte(t) {
  const e = "true false yes no null", r = "[\\w#;/?:@&=+$,.~*'()[\\]]+", n = {
    className: "attr",
    variants: [
      // added brackets support and special char support
      { begin: /[\w*@][\w*@ :()\./-]*:(?=[ \t]|$)/ },
      {
        // double quoted keys - with brackets and special char support
        begin: /"[\w*@][\w*@ :()\./-]*":(?=[ \t]|$)/
      },
      {
        // single quoted keys - with brackets and special char support
        begin: /'[\w*@][\w*@ :()\./-]*':(?=[ \t]|$)/
      }
    ]
  }, a = {
    className: "template-variable",
    variants: [
      {
        // jinja templates Ansible
        begin: /\{\{/,
        end: /\}\}/
      },
      {
        // Ruby i18n
        begin: /%\{/,
        end: /\}/
      }
    ]
  }, i = {
    className: "string",
    relevance: 0,
    begin: /'/,
    end: /'/,
    contains: [
      {
        match: /''/,
        scope: "char.escape",
        relevance: 0
      }
    ]
  }, o = {
    className: "string",
    relevance: 0,
    variants: [
      {
        begin: /"/,
        end: /"/
      },
      { begin: /\S+/ }
    ],
    contains: [
      t.BACKSLASH_ESCAPE,
      a
    ]
  }, s = t.inherit(o, { variants: [
    {
      begin: /'/,
      end: /'/,
      contains: [
        {
          begin: /''/,
          relevance: 0
        }
      ]
    },
    {
      begin: /"/,
      end: /"/
    },
    { begin: /[^\s,{}[\]]+/ }
  ] }), p = {
    className: "number",
    begin: "\\b" + "[0-9]{4}(-[0-9][0-9]){0,2}" + "([Tt \\t][0-9][0-9]?(:[0-9][0-9]){2})?" + "(\\.[0-9]*)?" + "([ \\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?" + "\\b"
  }, f = {
    end: ",",
    endsWithParent: !0,
    excludeEnd: !0,
    keywords: e,
    relevance: 0
  }, h = {
    begin: /\{/,
    end: /\}/,
    contains: [f],
    illegal: "\\n",
    relevance: 0
  }, g = {
    begin: "\\[",
    end: "\\]",
    contains: [f],
    illegal: "\\n",
    relevance: 0
  }, v = [
    n,
    {
      className: "meta",
      begin: "^---\\s*$",
      relevance: 10
    },
    {
      // multi line string
      // Blocks start with a | or > followed by a newline
      //
      // Indentation of subsequent lines must be the same to
      // be considered part of the block
      className: "string",
      begin: "[\\|>]([1-9]?[+-])?[ ]*\\n( +)[^ ][^\\n]*\\n(\\2[^\\n]+\\n?)*"
    },
    {
      // Ruby/Rails erb
      begin: "<%[%=-]?",
      end: "[%-]?%>",
      subLanguage: "ruby",
      excludeBegin: !0,
      excludeEnd: !0,
      relevance: 0
    },
    {
      // named tags
      className: "type",
      begin: "!\\w+!" + r
    },
    // https://yaml.org/spec/1.2/spec.html#id2784064
    {
      // verbatim tags
      className: "type",
      begin: "!<" + r + ">"
    },
    {
      // primary tags
      className: "type",
      begin: "!" + r
    },
    {
      // secondary tags
      className: "type",
      begin: "!!" + r
    },
    {
      // fragment id &ref
      className: "meta",
      begin: "&" + t.UNDERSCORE_IDENT_RE + "$"
    },
    {
      // fragment reference *ref
      className: "meta",
      begin: "\\*" + t.UNDERSCORE_IDENT_RE + "$"
    },
    {
      // array listing
      className: "bullet",
      // TODO: remove |$ hack when we have proper look-ahead support
      begin: "-(?=[ ]|$)",
      relevance: 0
    },
    t.HASH_COMMENT_MODE,
    {
      beginKeywords: e,
      keywords: { literal: e }
    },
    p,
    // numbers are any valid C-style number that
    // sit isolated from other words
    {
      className: "number",
      begin: t.C_NUMBER_RE + "\\b",
      relevance: 0
    },
    h,
    g,
    i,
    o
  ], m = [...v];
  return m.pop(), m.push(s), f.contains = m, {
    name: "YAML",
    case_insensitive: !0,
    aliases: ["yml"],
    contains: v
  };
}
const Coe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Kte
}, Symbol.toStringTag, { value: "Module" }));
function Zte(t) {
  const e = {
    className: "string",
    contains: [t.BACKSLASH_ESCAPE],
    variants: [
      t.inherit(t.APOS_STRING_MODE, { illegal: null }),
      t.inherit(t.QUOTE_STRING_MODE, { illegal: null })
    ]
  }, r = t.UNDERSCORE_TITLE_MODE, n = { variants: [
    t.BINARY_NUMBER_MODE,
    t.C_NUMBER_MODE
  ] }, a = (
    // classes and objects
    "namespace class interface use extends function return abstract final public protected private static deprecated throw try catch Exception echo empty isset instanceof unset let var new const self require if else elseif switch case default do while loop for continue break likely unlikely __LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ array boolean float double integer object resource string char long unsigned bool int uint ulong uchar true false null undefined"
  );
  return {
    name: "Zephir",
    aliases: ["zep"],
    keywords: a,
    contains: [
      t.C_LINE_COMMENT_MODE,
      t.COMMENT(
        /\/\*/,
        /\*\//,
        { contains: [
          {
            className: "doctag",
            begin: /@[A-Za-z]+/
          }
        ] }
      ),
      {
        className: "string",
        begin: /<<<['"]?\w+['"]?$/,
        end: /^\w+;/,
        contains: [t.BACKSLASH_ESCAPE]
      },
      {
        // swallow composed identifiers to avoid parsing them as keywords
        begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
      },
      {
        className: "function",
        beginKeywords: "function fn",
        end: /[;{]/,
        excludeEnd: !0,
        illegal: /\$|\[|%/,
        contains: [
          r,
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            keywords: a,
            contains: [
              "self",
              t.C_BLOCK_COMMENT_MODE,
              e,
              n
            ]
          }
        ]
      },
      {
        className: "class",
        beginKeywords: "class interface",
        end: /\{/,
        excludeEnd: !0,
        illegal: /[:($"]/,
        contains: [
          { beginKeywords: "extends implements" },
          r
        ]
      },
      {
        beginKeywords: "namespace",
        end: /;/,
        illegal: /[.']/,
        contains: [r]
      },
      {
        beginKeywords: "use",
        end: /;/,
        contains: [r]
      },
      {
        begin: /=>/
        // No markup, just a relevance booster
      },
      e,
      n
    ]
  };
}
const Aoe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zte
}, Symbol.toStringTag, { value: "Module" }));
export {
  rne as $,
  Bre as A,
  Fre as B,
  wH as C,
  Gre as D,
  cW as E,
  Ure as F,
  zre as G,
  cre as H,
  Vre as I,
  $re as J,
  Gf as K,
  Hre as L,
  Wre as M,
  qre as N,
  Yre as O,
  Kre as P,
  Zre as Q,
  Xre as R,
  Qre as S,
  JZ as T,
  lX as U,
  jre as V,
  CX as W,
  MX as X,
  Jre as Y,
  ene as Z,
  tne as _,
  kt as a,
  Jne as a$,
  pre as a0,
  jte as a1,
  nre as a2,
  VL as a3,
  lre as a4,
  _P as a5,
  Td as a6,
  en as a7,
  ore as a8,
  oP as a9,
  Ane as aA,
  wne as aB,
  Dne as aC,
  Mne as aD,
  Ine as aE,
  Nne as aF,
  Rne as aG,
  One as aH,
  Lne as aI,
  Pne as aJ,
  kne as aK,
  Bne as aL,
  Fne as aM,
  Gne as aN,
  Une as aO,
  zne as aP,
  Vne as aQ,
  $ne as aR,
  Hne as aS,
  Wne as aT,
  qne as aU,
  Yne as aV,
  Kne as aW,
  Zne as aX,
  Xne as aY,
  Qne as aZ,
  jne as a_,
  sre as aa,
  Qte as ab,
  dre as ac,
  nne as ad,
  ane as ae,
  ine as af,
  one as ag,
  sne as ah,
  lne as ai,
  une as aj,
  cne as ak,
  dne as al,
  pne as am,
  fne as an,
  hne as ao,
  gne as ap,
  vne as aq,
  mne as ar,
  _ne as as,
  yne as at,
  bne as au,
  Sne as av,
  Ene as aw,
  Tne as ax,
  xne as ay,
  Cne as az,
  fre as b,
  uie as b$,
  eae as b0,
  tae as b1,
  rae as b2,
  nae as b3,
  aae as b4,
  iae as b5,
  oae as b6,
  sae as b7,
  lae as b8,
  uae as b9,
  kae as bA,
  Bae as bB,
  Fae as bC,
  Gae as bD,
  Uae as bE,
  zae as bF,
  Vae as bG,
  $ae as bH,
  Hae as bI,
  Wae as bJ,
  qae as bK,
  Yae as bL,
  Kae as bM,
  Zae as bN,
  Xae as bO,
  Qae as bP,
  jae as bQ,
  Jae as bR,
  eie as bS,
  tie as bT,
  rie as bU,
  nie as bV,
  aie as bW,
  iie as bX,
  oie as bY,
  sie as bZ,
  lie as b_,
  cae as ba,
  dae as bb,
  pae as bc,
  fae as bd,
  hae as be,
  gae as bf,
  vae as bg,
  mae as bh,
  _ae as bi,
  yae as bj,
  bae as bk,
  Sae as bl,
  Eae as bm,
  Tae as bn,
  xae as bo,
  Cae as bp,
  Aae as bq,
  wae as br,
  Dae as bs,
  Mae as bt,
  Iae as bu,
  Nae as bv,
  Rae as bw,
  Oae as bx,
  Lae as by,
  Pae as bz,
  gre as c,
  yoe as c$,
  cie as c0,
  die as c1,
  pie as c2,
  fie as c3,
  hie as c4,
  gie as c5,
  vie as c6,
  mie as c7,
  _ie as c8,
  yie as c9,
  qie as cA,
  Yie as cB,
  Kie as cC,
  Zie as cD,
  Xie as cE,
  Qie as cF,
  jie as cG,
  Jie as cH,
  eoe as cI,
  toe as cJ,
  roe as cK,
  noe as cL,
  aoe as cM,
  ioe as cN,
  ooe as cO,
  soe as cP,
  loe as cQ,
  uoe as cR,
  coe as cS,
  doe as cT,
  poe as cU,
  foe as cV,
  hoe as cW,
  goe as cX,
  voe as cY,
  moe as cZ,
  _oe as c_,
  bie as ca,
  Sie as cb,
  Eie as cc,
  Tie as cd,
  xie as ce,
  Cie as cf,
  Aie as cg,
  wie as ch,
  Die as ci,
  Mie as cj,
  Iie as ck,
  Nie as cl,
  Rie as cm,
  Oie as cn,
  Lie as co,
  Pie as cp,
  kie as cq,
  Bie as cr,
  Fie as cs,
  Gie as ct,
  Uie as cu,
  zie as cv,
  Vie as cw,
  $ie as cx,
  Hie as cy,
  Wie as cz,
  vre as d,
  boe as d0,
  Soe as d1,
  Eoe as d2,
  Toe as d3,
  xoe as d4,
  Coe as d5,
  Aoe as d6,
  mre as e,
  _re as f,
  yre as g,
  bre as h,
  hre as i,
  Sre as j,
  Ere as k,
  Tre as l,
  xre as m,
  Cre as n,
  Are as o,
  wre as p,
  Dre as q,
  Mre as r,
  Ire as s,
  Nre as t,
  ure as u,
  Rre as v,
  Ore as w,
  Lre as x,
  Pre as y,
  kre as z
};
